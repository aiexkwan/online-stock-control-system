./app/admin/components/dashboard/widgets/__tests__/unified/UnifiedTableWidget.test.tsx:  DataTable: ({ data, columns, loading }: any) => (
./app/admin/components/dashboard/widgets/__tests__/unified/UnifiedTableWidget.test.tsx:              {columns.map((col: any, colIndex: number) => (
./app/admin/components/dashboard/widgets/__tests__/unified/UnifiedTableWidget.test.tsx:                {columns.map((col: any, colIndex: number) => (
./app/admin/components/dashboard/widgets/__tests__/unified/UnifiedChartWidget.test.tsx:  BarChart: ({ children }: any) => <div data-testid="bar-chart">{children}</div>,
./app/admin/components/dashboard/widgets/__tests__/unified/UnifiedChartWidget.test.tsx:  LineChart: ({ children }: any) => <div data-testid="line-chart">{children}</div>,
./app/admin/components/dashboard/widgets/__tests__/unified/UnifiedChartWidget.test.tsx:  PieChart: ({ children }: any) => <div data-testid="pie-chart">{children}</div>,
./app/admin/components/dashboard/widgets/__tests__/unified/UnifiedChartWidget.test.tsx:  Pie: ({ children }: any) => <div data-testid="pie">{children}</div>,
./app/admin/components/dashboard/widgets/__tests__/unified/UnifiedChartWidget.test.tsx:  AreaChart: ({ children }: any) => <div data-testid="area-chart">{children}</div>,
./app/admin/components/dashboard/widgets/__tests__/unified/UnifiedChartWidget.test.tsx:  ResponsiveContainer: ({ children }: any) => <div data-testid="responsive-container">{children}</div>,
./app/admin/__tests__/ssr-server-prefetch.test.ts:  let mockSupabase: any;
./app/admin/__tests__/ssr-integration.test.tsx:    div: ({ children, ...props }: any) => <div {...props}>{children}</div>,
./app/admin/__tests__/ssr-integration.test.tsx:    span: ({ children, ...props }: any) => <span {...props}>{children}</span>,
./app/admin/__tests__/ssr-integration.test.tsx:    button: ({ children, ...props }: any) => <button {...props}>{children}</button>,
./app/admin/__tests__/ssr-integration.test.tsx:    li: ({ children, ...props }: any) => <li {...props}>{children}</li>,
./app/admin/__tests__/ssr-integration.test.tsx:  AnimatePresence: ({ children }: any) => <>{children}</>,
./app/utils/__tests__/debounce.test.ts:      const debouncedGetValue = debounce(function(this: any) {
./app/hooks/__tests__/useStockTransfer.test.tsx:  let mockSupabase: any;
./app/hooks/__tests__/useStockTransfer.test.tsx:      let resolvePromise: any;
./app/hooks/__tests__/useAuth.test.ts:  let mockSupabaseClient: any;
./app/api/warehouse/summary/__tests__/route.test.ts:  let mockSupabase: any;
./app/print-grnlabel/hooks/useGrnLabelBusinessV3.tsx:                hasFailures: anyFailure,
./app/print-grnlabel/hooks/useGrnLabelBusinessV3.tsx:                hasWarnings: anyFailure,
./app/services/__tests__/transactionLog.service.test.ts:      const createMockQueryChain = (responseData: any) => {
./app/services/__tests__/transactionLog.service.test.ts:          then: (onFulfilled: any, onRejected: any) => queryPromise.then(onFulfilled, onRejected),
./app/services/__tests__/transactionLog.service.test.ts:          catch: (onRejected: any) => queryPromise.catch(onRejected),
./app/services/__tests__/transactionLog.service.test.ts:          finally: (onFinally: any) => queryPromise.finally(onFinally),
./app/services/__tests__/transactionLog.service.test.ts:          then: (onFulfilled: any, onRejected: any) => queryPromise.then(onFulfilled, onRejected),
./app/services/__tests__/transactionLog.service.test.ts:          catch: (onRejected: any) => queryPromise.catch(onRejected),
./app/services/__tests__/transactionLog.service.test.ts:          finally: (onFinally: any) => queryPromise.finally(onFinally),
./app/services/__tests__/transactionLog.service.test.ts:          then: (onFulfilled: any, onRejected: any) => queryPromise.then(onFulfilled, onRejected),
./app/services/__tests__/transactionLog.service.test.ts:          catch: (onRejected: any) => queryPromise.catch(onRejected),
./app/services/__tests__/transactionLog.service.test.ts:          finally: (onFinally: any) => queryPromise.finally(onFinally),
./node_modules/jest-matcher-utils/node_modules/pretty-format/build/index.d.ts:    val: any,
./node_modules/jest-matcher-utils/node_modules/pretty-format/build/index.d.ts:declare type Test = (arg0: any) => boolean;
./node_modules/fast-safe-stringify/index.d.ts:  value: any,
./node_modules/fast-safe-stringify/index.d.ts:  replacer?: (key: string, value: any) => any,
./node_modules/fast-safe-stringify/index.d.ts:    value: any,
./node_modules/fast-safe-stringify/index.d.ts:    replacer?: (key: string, value: any) => any,
./node_modules/fast-safe-stringify/index.d.ts:    value: any,
./node_modules/fast-safe-stringify/index.d.ts:    replacer?: (key: string, value: any) => any,
./node_modules/tapable/tapable.d.ts:	call?: (...args: any[]) => void;
./node_modules/tapable/tapable.d.ts:	loop?: (...args: any[]) => void;
./node_modules/tapable/tapable.d.ts:type HookFactory<H> = (key: any, hook?: H) => H;
./node_modules/tapable/tapable.d.ts:	get(key: any): H | undefined;
./node_modules/tapable/tapable.d.ts:	for(key: any): H;
./node_modules/agentkeepalive/index.d.ts:  [key: string]: any;
./node_modules/zod/dist/types/v4/locales/tr.d.ts:export declare const parsedType: (data: any) => string;
./node_modules/zod/dist/types/v4/locales/en.d.ts:export declare const parsedType: (data: any) => string;
./node_modules/zod/dist/types/v4/core/errors.d.ts:}> : any;
./node_modules/zod/dist/types/v4/core/core.d.ts:        def: any;
./node_modules/zod/dist/types/v4/core/core.d.ts:        [k: string]: any;
./node_modules/zod/dist/types/v4/core/core.d.ts:        input: any;
./node_modules/zod/dist/types/v4/core/core.d.ts:        output: any;
./node_modules/zod/dist/types/v4/core/schemas.d.ts:    constr: new (def: any) => $ZodType;
./node_modules/zod/dist/types/v4/core/util.d.ts:export type BuiltIn = (((...args: any[]) => any) | (new (...args: any[]) => any)) | {
./node_modules/zod/dist/types/v4/core/util.d.ts:export type AnyFunc = (...args: any[]) => any;
./node_modules/zod/dist/types/v4/core/util.d.ts:export declare function assert<T>(_: any): asserts _ is T;
./node_modules/zod/dist/types/v4/core/util.d.ts:export declare function jsonStringifyReplacer(_: string, value: any): any;
./node_modules/zod/dist/types/v4/core/util.d.ts:export declare function nullish(input: any): boolean;
./node_modules/zod/dist/types/v4/core/util.d.ts:export declare function assignProp<T extends object, K extends PropertyKey>(target: T, prop: K, value: K extends keyof T ? T[K] : any): void;
./node_modules/zod/dist/types/v4/core/util.d.ts:export declare function getElementAtPath(obj: any, path: (string | number)[] | null | undefined): any;
./node_modules/zod/dist/types/v4/core/util.d.ts:export declare function isObject(data: any): data is Record<PropertyKey, unknown>;
./node_modules/zod/dist/types/v4/core/util.d.ts:export declare function isPlainObject(o: any): o is Record<PropertyKey, unknown>;
./node_modules/zod/dist/types/v4/core/util.d.ts:export declare function numKeys(data: any): number;
./node_modules/zod/dist/types/v4/core/util.d.ts:export declare const getParsedType: (data: any) => ParsedTypes;
./node_modules/zod/dist/types/v4/core/util.d.ts:export declare function stringifyPrimitive(value: any): string;
./node_modules/zod/dist/types/v4/core/util.d.ts:export declare function pick(schema: schemas.$ZodObject, mask: Record<string, unknown>): any;
./node_modules/zod/dist/types/v4/core/util.d.ts:export declare function omit(schema: schemas.$ZodObject, mask: object): any;
./node_modules/zod/dist/types/v4/core/util.d.ts:export declare function extend(schema: schemas.$ZodObject, shape: schemas.$ZodShape): any;
./node_modules/zod/dist/types/v4/core/util.d.ts:export declare function merge(a: schemas.$ZodObject, b: schemas.$ZodObject): any;
./node_modules/zod/dist/types/v4/core/util.d.ts:export declare function partial(Class: SchemaClass<schemas.$ZodOptional> | null, schema: schemas.$ZodObject, mask: object | undefined): any;
./node_modules/zod/dist/types/v4/core/util.d.ts:export declare function required(Class: SchemaClass<schemas.$ZodNonOptional>, schema: schemas.$ZodObject, mask: object | undefined): any;
./node_modules/zod/dist/types/v4/core/util.d.ts:export declare function getSizableOrigin(input: any): "set" | "map" | "file" | "unknown";
./node_modules/zod/dist/types/v4/core/util.d.ts:export declare function getLengthableOrigin(input: any): "array" | "string" | "unknown";
./node_modules/zod/dist/types/v4/core/util.d.ts:export declare function issue(_iss: string, input: any, inst: any): errors.$ZodRawIssue;
./node_modules/zod/dist/types/v4/core/util.d.ts:    constructor(..._args: any[]);
./node_modules/zod/dist/types/v4/mini/schemas.d.ts:    constructor(..._args: any[]);
./node_modules/zod/dist/types/v3/types.d.ts:type BuiltIn = (((...args: any[]) => any) | (new (...args: any[]) => any)) | {
./node_modules/zod/dist/types/v3/types.d.ts:export declare function custom<T>(check?: (data: any) => any, _params?: string | CustomParams | ((input: any) => CustomParams),
./node_modules/zod/dist/types/v3/types.d.ts:    constructor(..._: any[]);
./node_modules/zod/dist/types/v3/ZodError.d.ts:        [k: string]: any;
./node_modules/zod/dist/types/v3/ZodError.d.ts:export declare const quotelessJson: (obj: any) => string;
./node_modules/zod/dist/types/v3/ZodError.d.ts:    data: any;
./node_modules/zod/dist/types/v3/tests/Mocker.d.ts:    pick: (...args: any[]) => any;
./node_modules/zod/dist/types/v3/helpers/parseUtil.d.ts:    data: any;
./node_modules/zod/dist/types/v3/helpers/parseUtil.d.ts:    readonly data: any;
./node_modules/zod/dist/types/v3/helpers/parseUtil.d.ts:    data: any;
./node_modules/zod/dist/types/v3/helpers/parseUtil.d.ts:    data: any;
./node_modules/zod/dist/types/v3/helpers/util.d.ts:    export const getValidEnumValues: (obj: any) => any[];
./node_modules/zod/dist/types/v3/helpers/util.d.ts:    export const objectValues: (obj: any) => any[];
./node_modules/zod/dist/types/v3/helpers/util.d.ts:    export const jsonStringifyReplacer: (_: string, value: any) => any;
./node_modules/zod/dist/types/v3/helpers/util.d.ts:export declare const getParsedType: (data: any) => ZodParsedType;
./node_modules/styled-jsx/macro.d.ts:      ...args: any[]
./node_modules/styled-jsx/style.d.ts:  export default function JSXStyle(props: any): null
./node_modules/styled-jsx/css.d.ts:  function css(chunks: TemplateStringsArray, ...args: any[]): JSX.Element
./node_modules/styled-jsx/css.d.ts:      ...args: any[]
./node_modules/styled-jsx/css.d.ts:      ...args: any[]
./node_modules/styled-jsx/index.d.ts:    add(props: any): void
./node_modules/styled-jsx/index.d.ts:    remove(props: any): void
./node_modules/@types/signature_pad/index.d.ts:    toDataURL: (type?: string, encoderOptions?: any) => string;
./node_modules/@types/d3-shape/index.d.ts:    (this: This, d: Datum, ...args: any[]): string | null;
./node_modules/@types/d3-shape/index.d.ts:    (this: This, d: Datum, ...args: any[]): void;
./node_modules/@types/d3-shape/index.d.ts:    centroid(d: Datum, ...args: any[]): [number, number];
./node_modules/@types/d3-shape/index.d.ts:    innerRadius(): (this: This, d: Datum, ...args: any[]) => number;
./node_modules/@types/d3-shape/index.d.ts:    innerRadius(radius: (this: This, d: Datum, ...args: any[]) => number): this;
./node_modules/@types/d3-shape/index.d.ts:    outerRadius(): (this: This, d: Datum, ...args: any[]) => number;
./node_modules/@types/d3-shape/index.d.ts:    outerRadius(radius: (this: This, d: Datum, ...args: any[]) => number): this;
./node_modules/@types/d3-shape/index.d.ts:    cornerRadius(): (this: This, d: Datum, ...args: any[]) => number;
./node_modules/@types/d3-shape/index.d.ts:    cornerRadius(radius: (this: This, d: Datum, ...args: any[]) => number): this;
./node_modules/@types/d3-shape/index.d.ts:    startAngle(): (this: This, d: Datum, ...args: any[]) => number;
./node_modules/@types/d3-shape/index.d.ts:    startAngle(angle: (this: This, d: Datum, ...args: any[]) => number): this;
./node_modules/@types/d3-shape/index.d.ts:    endAngle(): (this: This, d: Datum, ...args: any[]) => number;
./node_modules/@types/d3-shape/index.d.ts:    endAngle(angle: (this: This, d: Datum, ...args: any[]) => number): this;
./node_modules/@types/d3-shape/index.d.ts:    padAngle(): (this: This, d: Datum, ...args: any[]) => number | undefined;
./node_modules/@types/d3-shape/index.d.ts:    padAngle(angle: (this: This, d: Datum, ...args: any[]) => number | undefined): this;
./node_modules/@types/d3-shape/index.d.ts:    padRadius(): ((this: This, d: Datum, ...args: any[]) => number) | null;
./node_modules/@types/d3-shape/index.d.ts:    padRadius(radius: null | number | ((this: This, d: Datum, ...args: any[]) => number)): this;
./node_modules/@types/d3-shape/index.d.ts:    (this: This, data: Datum[], ...args: any[]): Array<PieArcDatum<Datum>>;
./node_modules/@types/d3-shape/index.d.ts:    startAngle(): (this: This, data: Datum[], ...args: any[]) => number;
./node_modules/@types/d3-shape/index.d.ts:    startAngle(angle: (this: This, data: Datum[], ...args: any[]) => number): this;
./node_modules/@types/d3-shape/index.d.ts:    endAngle(): (this: This, data: Datum[], ...args: any[]) => number;
./node_modules/@types/d3-shape/index.d.ts:    endAngle(angle: (this: This, data: Datum[], ...args: any[]) => number): this;
./node_modules/@types/d3-shape/index.d.ts:    padAngle(): (this: This, data: Datum[], ...args: any[]) => number;
./node_modules/@types/d3-shape/index.d.ts:    padAngle(angle: (this: This, data: Datum[], ...args: any[]) => number): this;
./node_modules/@types/d3-shape/index.d.ts:    (this: This, d: LinkDatum, ...args: any[]): string | null;
./node_modules/@types/d3-shape/index.d.ts:    (this: This, d: LinkDatum, ...args: any[]): void;
./node_modules/@types/d3-shape/index.d.ts:    source(): (this: This, d: LinkDatum, ...args: any[]) => NodeDatum;
./node_modules/@types/d3-shape/index.d.ts:    source(source: (this: This, d: LinkDatum, ...args: any[]) => NodeDatum): this;
./node_modules/@types/d3-shape/index.d.ts:    target(): (this: This, d: LinkDatum, ...args: any[]) => NodeDatum;
./node_modules/@types/d3-shape/index.d.ts:    target(target: (this: This, d: LinkDatum, ...args: any[]) => NodeDatum): this;
./node_modules/@types/d3-shape/index.d.ts:    x(): (this: This, node: NodeDatum, ...args: any[]) => number;
./node_modules/@types/d3-shape/index.d.ts:    x(x: (this: This, node: NodeDatum, ...args: any[]) => number): this;
./node_modules/@types/d3-shape/index.d.ts:    y(): (this: This, node: NodeDatum, ...args: any[]) => number;
./node_modules/@types/d3-shape/index.d.ts:    y(y: (this: This, node: NodeDatum, ...args: any[]) => number): this;
./node_modules/@types/d3-shape/index.d.ts:    (this: This, d: LinkDatum, ...args: any[]): string | null;
./node_modules/@types/d3-shape/index.d.ts:    (this: This, d: LinkDatum, ...args: any[]): void;
./node_modules/@types/d3-shape/index.d.ts:    source(): (this: This, d: LinkDatum, ...args: any[]) => NodeDatum;
./node_modules/@types/d3-shape/index.d.ts:    source(source: (this: This, d: LinkDatum, ...args: any[]) => NodeDatum): this;
./node_modules/@types/d3-shape/index.d.ts:    target(): (this: This, d: LinkDatum, ...args: any[]) => NodeDatum;
./node_modules/@types/d3-shape/index.d.ts:    target(target: (this: This, d: LinkDatum, ...args: any[]) => NodeDatum): this;
./node_modules/@types/d3-shape/index.d.ts:    angle(): (this: This, node: NodeDatum, ...args: any[]) => number;
./node_modules/@types/d3-shape/index.d.ts:    angle(angle: (this: This, node: NodeDatum, ...args: any[]) => number): this;
./node_modules/@types/d3-shape/index.d.ts:    radius(): (this: This, node: NodeDatum, ...args: any[]) => number;
./node_modules/@types/d3-shape/index.d.ts:    radius(radius: (this: This, node: NodeDatum, ...args: any[]) => number): this;
./node_modules/@types/d3-shape/index.d.ts:    (this: This, d?: Datum, ...args: any[]): string | null;
./node_modules/@types/d3-shape/index.d.ts:    (this: This, d?: Datum, ...args: any[]): void;
./node_modules/@types/d3-shape/index.d.ts:    size(): (this: This, d: Datum, ...args: any[]) => number;
./node_modules/@types/d3-shape/index.d.ts:    size(size: (this: This, d: Datum, ...args: any[]) => number): this;
./node_modules/@types/d3-shape/index.d.ts:    type(): (this: This, d: Datum, ...args: any[]) => SymbolType;
./node_modules/@types/d3-shape/index.d.ts:    type(type: (this: This, d: Datum, ...args: any[]) => SymbolType): this;
./node_modules/@types/d3-shape/index.d.ts:    type?: SymbolType | ((this: any, d: Datum, ...args: any[]) => SymbolType),
./node_modules/@types/d3-shape/index.d.ts:    size?: number | ((this: any, d: Datum, ...args: any[]) => number),
./node_modules/@types/d3-shape/index.d.ts:    type?: SymbolType | ((this: This, d: Datum, ...args: any[]) => SymbolType),
./node_modules/@types/d3-shape/index.d.ts:    size?: number | ((this: This, d: Datum, ...args: any[]) => number),
./node_modules/@types/d3-shape/index.d.ts:    (data: Iterable<Datum>, ...args: any[]): Array<Series<Datum, Key>>;
./node_modules/@types/d3-shape/index.d.ts:    keys(): (this: This, data: Datum[], ...args: any[]) => Key[];
./node_modules/@types/d3-shape/index.d.ts:    keys(keys: Iterable<Key> | ((this: This, data: Datum[], ...args: any[]) => Key[])): this;
./node_modules/@types/lodash/fp/convert.d.ts:    (func: object, options?: ConvertOptions): any;
./node_modules/@types/lodash/fp/convert.d.ts:    (name: string, func: (...args: any[]) => any, options?: ConvertOptions): any;
./node_modules/@types/lodash/fp.d.ts:        <TFunc extends (...args: any[]) => any>(func: TFunc): LodashAfter1x1<TFunc>;
./node_modules/@types/lodash/fp.d.ts:        <TFunc extends (...args: any[]) => any>(func: TFunc, n: number): TFunc;
./node_modules/@types/lodash/fp.d.ts:    type LodashAfter1x1<TFunc extends (...args: any[]) => any> = (n: number) => TFunc;
./node_modules/@types/lodash/fp.d.ts:    type LodashAfter1x2 = <TFunc extends (...args: any[]) => any>(func: TFunc) => TFunc;
./node_modules/@types/lodash/fp.d.ts:    type LodashApply = <TResult>(func: (...args: any[]) => TResult) => (...args: any[]) => TResult;
./node_modules/@types/lodash/fp.d.ts:        (n: lodash.__, func: (...args: any[]) => any): LodashAry1x2;
./node_modules/@types/lodash/fp.d.ts:        (n: number, func: (...args: any[]) => any): (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashAry1x1 = (func: (...args: any[]) => any) => (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashAry1x2 = (n: number) => (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:        (object: readonly any[]): any;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.AssignCustomizer, args: readonly any[]): any;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.AssignCustomizer, args: readonly any[]): any;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, value: any): LodashSet1x2;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, value: any): LodashSet1x3;
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(path: lodash.__, value: any, object: T): LodashSet1x6<T>;
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(path: lodash.PropertyPath, value: any, object: T): T;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, value: any, object: object): LodashSet2x6;
./node_modules/@types/lodash/fp.d.ts:        <TResult>(path: lodash.PropertyPath, value: any, object: object): TResult;
./node_modules/@types/lodash/fp.d.ts:        (value: any): LodashSet1x3;
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(value: any, object: T): T;
./node_modules/@types/lodash/fp.d.ts:        <TResult>(value: any, object: object): TResult;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, value: any): LodashSet1x6<T>;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, value: any): T;
./node_modules/@types/lodash/fp.d.ts:    type LodashSet1x5<T> = (value: any) => T;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, value: any): LodashSet2x6;
./node_modules/@types/lodash/fp.d.ts:        <TResult>(path: lodash.PropertyPath, value: any): TResult;
./node_modules/@types/lodash/fp.d.ts:    type LodashSet2x5 = <TResult>(value: any) => TResult;
./node_modules/@types/lodash/fp.d.ts:    type LodashAttempt = <TResult>(func: (...args: any[]) => TResult) => TResult | Error;
./node_modules/@types/lodash/fp.d.ts:        <TFunc extends (...args: any[]) => any>(func: TFunc): LodashBefore1x1<TFunc>;
./node_modules/@types/lodash/fp.d.ts:        <TFunc extends (...args: any[]) => any>(func: TFunc, n: number): TFunc;
./node_modules/@types/lodash/fp.d.ts:    type LodashBefore1x1<TFunc extends (...args: any[]) => any> = (n: number) => TFunc;
./node_modules/@types/lodash/fp.d.ts:    type LodashBefore1x2 = <TFunc extends (...args: any[]) => any>(func: TFunc) => TFunc;
./node_modules/@types/lodash/fp.d.ts:        (func: (...args: any[]) => any): LodashBind1x1;
./node_modules/@types/lodash/fp.d.ts:        (func: lodash.__, thisArg: any): LodashBind1x2;
./node_modules/@types/lodash/fp.d.ts:        (func: (...args: any[]) => any, thisArg: any): (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashBind1x1 = (thisArg: any) => (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashBind1x2 = (func: (...args: any[]) => any) => (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:        (object: object, key: string): (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashBindKey1x1 = (key: string) => (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashBindKey1x2 = (object: object) => (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:        <T>(customizer: lodash.CloneDeepWithCustomizer<T>, value: T): any;
./node_modules/@types/lodash/fp.d.ts:        (...func: Array<lodash.Many<(...args: any[]) => any>>): (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:        (func: (...args: any[]) => any): (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:        (arity: lodash.__, func: (...args: any[]) => any): LodashCurryN6x2;
./node_modules/@types/lodash/fp.d.ts:        (arity: number, func: (...args: any[]) => any): (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:        (func: (...args: any[]) => any): (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashCurryN6x2 = (arity: number) => (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:        (func: (...args: any[]) => any): (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:        (arity: lodash.__, func: (...args: any[]) => any): LodashCurryRightN6x2;
./node_modules/@types/lodash/fp.d.ts:        (arity: number, func: (...args: any[]) => any): (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:        (func: (...args: any[]) => any): (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashCurryRightN6x2 = (arity: number) => (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:        <T extends (...args: any) => any>(wait: lodash.__, func: T): LodashDebounce1x2<T>;
./node_modules/@types/lodash/fp.d.ts:        <T extends (...args: any) => any>(wait: number, func: T): lodash.DebouncedFunc<T>;
./node_modules/@types/lodash/fp.d.ts:    type LodashDebounce1x1 = <T extends (...args: any) => any>(func: T) => lodash.DebouncedFunc<T>;
./node_modules/@types/lodash/fp.d.ts:    type LodashDebounce1x2<T extends (...args: any) => any> = (wait: number) => lodash.DebouncedFunc<T>;
./node_modules/@types/lodash/fp.d.ts:        (object: readonly any[]): any;
./node_modules/@types/lodash/fp.d.ts:        (sources: any): LodashDefaultsDeep1x1;
./node_modules/@types/lodash/fp.d.ts:        (sources: lodash.__, object: any): LodashDefaultsDeep1x2;
./node_modules/@types/lodash/fp.d.ts:        (sources: any, object: any): any;
./node_modules/@types/lodash/fp.d.ts:    type LodashDefaultsDeep1x1 = (object: any) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashDefaultsDeep1x2 = (sources: any) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashDefer = (func: (...args: any[]) => any, ...args: any[]) => number;
./node_modules/@types/lodash/fp.d.ts:        (wait: lodash.__, func: (...args: any[]) => any): LodashDelay1x2;
./node_modules/@types/lodash/fp.d.ts:        (wait: number, func: (...args: any[]) => any): number;
./node_modules/@types/lodash/fp.d.ts:    type LodashDelay1x1 = (func: (...args: any[]) => any) => number;
./node_modules/@types/lodash/fp.d.ts:        (value: any): LodashEq1x1;
./node_modules/@types/lodash/fp.d.ts:        (value: lodash.__, other: any): LodashEq1x2;
./node_modules/@types/lodash/fp.d.ts:        (value: any, other: any): boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashEq1x1 = (other: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashEq1x2 = (value: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:        (value: any): LodashIsEqual1x1;
./node_modules/@types/lodash/fp.d.ts:        (value: lodash.__, other: any): LodashIsEqual1x2;
./node_modules/@types/lodash/fp.d.ts:        (value: any, other: any): boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsEqual1x1 = (other: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsEqual1x2 = (value: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.AssignCustomizer, args: readonly any[]): any;
./node_modules/@types/lodash/fp.d.ts:        (iteratee: string, collection: object | null | undefined): any[];
./node_modules/@types/lodash/fp.d.ts:        (iteratee: string): any[];
./node_modules/@types/lodash/fp.d.ts:        (iteratee: string, collection: object | null | undefined): any[];
./node_modules/@types/lodash/fp.d.ts:        (iteratee: string): any[];
./node_modules/@types/lodash/fp.d.ts:        (iteratee: string, depth: number, collection: object | null | undefined): any[];
./node_modules/@types/lodash/fp.d.ts:        (iteratee: string, collection: object | null | undefined): any[];
./node_modules/@types/lodash/fp.d.ts:        (depth: number, collection: object | null | undefined): any[];
./node_modules/@types/lodash/fp.d.ts:        (iteratee: string, depth: number): any[];
./node_modules/@types/lodash/fp.d.ts:        (iteratee: string): any[];
./node_modules/@types/lodash/fp.d.ts:    type LodashFlip = <T extends (...args: any) => any>(func: T) => T;
./node_modules/@types/lodash/fp.d.ts:        <A extends any[], R1, R2, R3, R4, R5, R6, R7>(f1: (...args: A) => R1, f2: (a: R1) => R2, f3: (a: R2) => R3, f4: (a: R3) => R4, f5: (a: R4) => R5, f6: (a: R5) => R6, f7: (a: R6) => R7, ...func: Array<lodash.Many<(a: any) => any>>): (...args: A) => any;
./node_modules/@types/lodash/fp.d.ts:        (...func: Array<lodash.Many<(...args: any[]) => any>>): (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashFunctions = (object: any) => string[];
./node_modules/@types/lodash/fp.d.ts:    type LodashFunctionsIn = (object: any) => string[];
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, object: any): LodashGet12x2;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, object: any): any;
./node_modules/@types/lodash/fp.d.ts:        (object: any): any;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any): LodashGetOr7x1;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any, path: lodash.PropertyPath): LodashGetOr7x3;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: lodash.__, path: lodash.__, object: any): LodashGetOr7x4;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any, path: lodash.__, object: any): LodashGetOr7x5;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: lodash.__, path: lodash.PropertyPath, object: any): LodashGetOr7x6;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any, path: lodash.PropertyPath, object: any): any;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any): LodashGetOr7x3;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: lodash.__, object: any): LodashGetOr7x6;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any, object: any): any;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, object: any): LodashGetOr7x5;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, object: any): any;
./node_modules/@types/lodash/fp.d.ts:    type LodashGetOr7x3 = (object: any) => any;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any): LodashGetOr7x5;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any, path: lodash.PropertyPath): any;
./node_modules/@types/lodash/fp.d.ts:    type LodashGetOr7x6 = (defaultValue: any) => any;
./node_modules/@types/lodash/fp.d.ts:        (value: any): LodashGt1x1;
./node_modules/@types/lodash/fp.d.ts:        (value: lodash.__, other: any): LodashGt1x2;
./node_modules/@types/lodash/fp.d.ts:        (value: any, other: any): boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashGt1x1 = (other: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashGt1x2 = (value: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:        (value: any): LodashGte1x1;
./node_modules/@types/lodash/fp.d.ts:        (value: lodash.__, other: any): LodashGte1x2;
./node_modules/@types/lodash/fp.d.ts:        (value: any, other: any): boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashGte1x1 = (other: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashGte1x2 = (value: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, object: any): LodashInvoke1x2;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, object: any): any;
./node_modules/@types/lodash/fp.d.ts:    type LodashInvoke1x1 = (object: any) => any;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, args: lodash.__, object: any): LodashInvokeArgs1x4;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, args: lodash.__, object: any): LodashInvokeArgs1x5;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, args: readonly any[], object: any): LodashInvokeArgs1x6;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, args: readonly any[], object: any): any;
./node_modules/@types/lodash/fp.d.ts:        (args: lodash.__, object: any): LodashInvokeArgs1x5;
./node_modules/@types/lodash/fp.d.ts:        (args: readonly any[], object: any): any;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, object: any): LodashInvokeArgs1x6;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, object: any): any;
./node_modules/@types/lodash/fp.d.ts:    type LodashInvokeArgs1x3 = (object: any) => any;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, args: readonly any[]): any;
./node_modules/@types/lodash/fp.d.ts:        (methodName: string, args: readonly any[], collection: object | null | undefined): any[];
./node_modules/@types/lodash/fp.d.ts:        <TResult>(method: (...args: any[]) => TResult): LodashInvokeArgsMap2x1<TResult>;
./node_modules/@types/lodash/fp.d.ts:        <TResult>(method: (...args: any[]) => TResult, args: readonly any[]): LodashInvokeArgsMap2x3<TResult>;
./node_modules/@types/lodash/fp.d.ts:        <TResult>(method: (...args: any[]) => TResult, args: lodash.__, collection: object | null | undefined): LodashInvokeArgsMap2x5<TResult>;
./node_modules/@types/lodash/fp.d.ts:        <TResult>(method: (...args: any[]) => TResult, args: readonly any[], collection: object | null | undefined): TResult[];
./node_modules/@types/lodash/fp.d.ts:        (args: readonly any[], collection: object | null | undefined): any[];
./node_modules/@types/lodash/fp.d.ts:        (methodName: string, collection: object | null | undefined): any[];
./node_modules/@types/lodash/fp.d.ts:        <TResult>(method: (...args: any[]) => TResult): LodashInvokeArgsMap2x3<TResult>;
./node_modules/@types/lodash/fp.d.ts:        <TResult>(method: (...args: any[]) => TResult, collection: object | null | undefined): TResult[];
./node_modules/@types/lodash/fp.d.ts:        (methodName: string, args: readonly any[]): any[];
./node_modules/@types/lodash/fp.d.ts:        <TResult>(method: (...args: any[]) => TResult): LodashInvokeArgsMap2x5<TResult>;
./node_modules/@types/lodash/fp.d.ts:        <TResult>(method: (...args: any[]) => TResult, args: readonly any[]): TResult[];
./node_modules/@types/lodash/fp.d.ts:        (methodName: string): any[];
./node_modules/@types/lodash/fp.d.ts:        <TResult>(method: (...args: any[]) => TResult): TResult[];
./node_modules/@types/lodash/fp.d.ts:        (methodName: string, collection: object | null | undefined): any[];
./node_modules/@types/lodash/fp.d.ts:        <TResult>(method: (...args: any[]) => TResult): LodashInvokeMap2x1<TResult>;
./node_modules/@types/lodash/fp.d.ts:        <TResult>(method: (...args: any[]) => TResult, collection: object | null | undefined): TResult[];
./node_modules/@types/lodash/fp.d.ts:        (methodName: string): any[];
./node_modules/@types/lodash/fp.d.ts:        <TResult>(method: (...args: any[]) => TResult): TResult[];
./node_modules/@types/lodash/fp.d.ts:    type LodashIsArguments = (value: any) => value is IArguments;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsArray = (value: any) => value is any[];
./node_modules/@types/lodash/fp.d.ts:    type LodashIsArrayBuffer = (value: any) => value is ArrayBuffer;
./node_modules/@types/lodash/fp.d.ts:        <T extends { __lodashAnyHack: any }>(t: T): boolean;
./node_modules/@types/lodash/fp.d.ts:        (value: ((...args: any[]) => any) | null | undefined): value is never;
./node_modules/@types/lodash/fp.d.ts:        (value: any): value is { length: number };
./node_modules/@types/lodash/fp.d.ts:        <T extends { __lodashAnyHack: any }>(value: T): boolean;
./node_modules/@types/lodash/fp.d.ts:        (value: ((...args: any[]) => any) | lodash.FunctionBase | string | boolean | number | null | undefined): value is never;
./node_modules/@types/lodash/fp.d.ts:        (value: any): value is object & { length: number };
./node_modules/@types/lodash/fp.d.ts:    type LodashIsBoolean = (value: any) => value is boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsBuffer = (value: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsDate = (value: any) => value is Date;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsElement = (value: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:        <T extends { __trapAny: any }>(value: T): boolean;
./node_modules/@types/lodash/fp.d.ts:        (value: any[] | null | undefined): boolean;
./node_modules/@types/lodash/fp.d.ts:        (value?: any): boolean;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.__, value: any): LodashIsEqualWith1x2;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.IsEqualCustomizer, value: any): LodashIsEqualWith1x3;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.__, value: lodash.__, other: any): LodashIsEqualWith1x4;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.IsEqualCustomizer, value: lodash.__, other: any): LodashIsEqualWith1x5;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.__, value: any, other: any): LodashIsEqualWith1x6;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.IsEqualCustomizer, value: any, other: any): boolean;
./node_modules/@types/lodash/fp.d.ts:        (value: any): LodashIsEqualWith1x3;
./node_modules/@types/lodash/fp.d.ts:        (value: lodash.__, other: any): LodashIsEqualWith1x5;
./node_modules/@types/lodash/fp.d.ts:        (value: any, other: any): boolean;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.__, other: any): LodashIsEqualWith1x6;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.IsEqualCustomizer, other: any): boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsEqualWith1x3 = (other: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.__, value: any): LodashIsEqualWith1x6;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.IsEqualCustomizer, value: any): boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsEqualWith1x5 = (value: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsError = (value: any) => value is Error;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsFinite = (value: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsFunction = (value: any) => value is (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsInteger = (value: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsLength = (value: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsMap = (value: any) => value is Map<any, any>;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsNaN = (value: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsNative = (value: any) => value is (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsNil = (value: any) => value is null | undefined;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsNull = (value: any) => value is null;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsNumber = (value: any) => value is number;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsObject = (value: any) => value is object;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsObjectLike = (value: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsPlainObject = (value: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsRegExp = (value: any) => value is RegExp;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsSafeInteger = (value: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsSet = (value: any) => value is Set<any>;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsString = (value: any) => value is string;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsSymbol = (value: any) => value is symbol;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsTypedArray = (value: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsUndefined = (value: any) => value is undefined;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsWeakMap = (value: any) => value is WeakMap<object, any>;
./node_modules/@types/lodash/fp.d.ts:    type LodashIsWeakSet = (value: any) => value is WeakSet<object>;
./node_modules/@types/lodash/fp.d.ts:        <TFunction extends (...args: any[]) => any>(func: TFunction): TFunction;
./node_modules/@types/lodash/fp.d.ts:        (func: string | object): (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashOver = <TResult>(iteratees: lodash.Many<(...args: any[]) => TResult>) => (...args: any[]) => TResult[];
./node_modules/@types/lodash/fp.d.ts:    type LodashKeys = (object: any) => string[];
./node_modules/@types/lodash/fp.d.ts:    type LodashKeysIn = (object: any) => string[];
./node_modules/@types/lodash/fp.d.ts:        (value: any): LodashLt1x1;
./node_modules/@types/lodash/fp.d.ts:        (value: lodash.__, other: any): LodashLt1x2;
./node_modules/@types/lodash/fp.d.ts:        (value: any, other: any): boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashLt1x1 = (other: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashLt1x2 = (value: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:        (value: any): LodashLte1x1;
./node_modules/@types/lodash/fp.d.ts:        (value: lodash.__, other: any): LodashLte1x2;
./node_modules/@types/lodash/fp.d.ts:        (value: any, other: any): boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashLte1x1 = (other: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashLte1x2 = (value: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:        <T>(iteratee: string, collection: lodash.Dictionary<T> | lodash.NumericDictionary<T> | null | undefined): any[];
./node_modules/@types/lodash/fp.d.ts:        (iteratee: string): any[];
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(iteratee: string, obj: T | null | undefined): { [P in keyof T]: any };
./node_modules/@types/lodash/fp.d.ts:        (iteratee: string): { [P in keyof T]: any };
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(obj: T | null | undefined): { [P in keyof T]: any };
./node_modules/@types/lodash/fp.d.ts:        <T>(path: lodash.PropertyPath, srcValue: T): (value: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashMatchesProperty1x1 = <T>(srcValue: T) => (value: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashMatchesProperty1x2 = (path: lodash.PropertyPath) => (value: any) => boolean;
./node_modules/@types/lodash/fp.d.ts:    type LodashMemoize = <T extends (...args: any) => any>(func: T) => T & lodash.MemoizedFunction;
./node_modules/@types/lodash/fp.d.ts:        (object: readonly any[]): any;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.MergeWithCustomizer, args: readonly any[]): any;
./node_modules/@types/lodash/fp.d.ts:    type LodashMethod = (path: lodash.PropertyPath) => (object: any) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashNoop = (...args: any[]) => void;
./node_modules/@types/lodash/fp.d.ts:    type LodashNthArg = (n: number) => (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashOnce = <T extends (...args: any) => any>(func: T) => T;
./node_modules/@types/lodash/fp.d.ts:        (func: (...args: any[]) => any): LodashOverArgs1x1;
./node_modules/@types/lodash/fp.d.ts:        (func: lodash.__, transforms: lodash.Many<(...args: any[]) => any>): LodashOverArgs1x2;
./node_modules/@types/lodash/fp.d.ts:        (func: (...args: any[]) => any, transforms: lodash.Many<(...args: any[]) => any>): (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashOverArgs1x1 = (transforms: lodash.Many<(...args: any[]) => any>) => (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashOverArgs1x2 = (func: (...args: any[]) => any) => (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:        (func: (...args: any[]) => any): LodashPartialRight27x1;
./node_modules/@types/lodash/fp.d.ts:        (func: (...args: any[]) => any, args: readonly any[]): (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashPartialRight27x1 = (args: readonly any[]) => (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashPartialRight27x2 = (func: (...args: any[]) => any) => (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, object: any): LodashPath12x2;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, object: any): any;
./node_modules/@types/lodash/fp.d.ts:        (object: any): any;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any): LodashPathOr7x1;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any, path: lodash.PropertyPath): LodashPathOr7x3;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: lodash.__, path: lodash.__, object: any): LodashPathOr7x4;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any, path: lodash.__, object: any): LodashPathOr7x5;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: lodash.__, path: lodash.PropertyPath, object: any): LodashPathOr7x6;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any, path: lodash.PropertyPath, object: any): any;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any): LodashPathOr7x3;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: lodash.__, object: any): LodashPathOr7x6;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any, object: any): any;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, object: any): LodashPathOr7x5;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, object: any): any;
./node_modules/@types/lodash/fp.d.ts:    type LodashPathOr7x3 = (object: any) => any;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any): LodashPathOr7x5;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any, path: lodash.PropertyPath): any;
./node_modules/@types/lodash/fp.d.ts:    type LodashPathOr7x6 = (defaultValue: any) => any;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, object: any): LodashProp12x2;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, object: any): any;
./node_modules/@types/lodash/fp.d.ts:        (object: any): any;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, object: any): LodashProperty12x2;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, object: any): any;
./node_modules/@types/lodash/fp.d.ts:        (object: any): any;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, object: any): LodashPropertyOf12x2;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, object: any): any;
./node_modules/@types/lodash/fp.d.ts:        (object: any): any;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any): LodashPropOr7x1;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any, path: lodash.PropertyPath): LodashPropOr7x3;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: lodash.__, path: lodash.__, object: any): LodashPropOr7x4;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any, path: lodash.__, object: any): LodashPropOr7x5;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: lodash.__, path: lodash.PropertyPath, object: any): LodashPropOr7x6;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any, path: lodash.PropertyPath, object: any): any;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any): LodashPropOr7x3;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: lodash.__, object: any): LodashPropOr7x6;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any, object: any): any;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, object: any): LodashPropOr7x5;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, object: any): any;
./node_modules/@types/lodash/fp.d.ts:    type LodashPropOr7x3 = (object: any) => any;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any): LodashPropOr7x5;
./node_modules/@types/lodash/fp.d.ts:        (defaultValue: any, path: lodash.PropertyPath): any;
./node_modules/@types/lodash/fp.d.ts:    type LodashPropOr7x6 = (defaultValue: any) => any;
./node_modules/@types/lodash/fp.d.ts:        (indexes: lodash.__, func: (...args: any[]) => any): LodashRearg1x2;
./node_modules/@types/lodash/fp.d.ts:        (indexes: lodash.Many<number>, func: (...args: any[]) => any): (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashRearg1x1 = (func: (...args: any[]) => any) => (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashRearg1x2 = (indexes: lodash.Many<number>) => (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashRest = (func: (...args: any[]) => any) => (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:        (start: lodash.__, func: (...args: any[]) => any): LodashRestFrom1x2;
./node_modules/@types/lodash/fp.d.ts:        (start: number, func: (...args: any[]) => any): (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashRestFrom1x1 = (func: (...args: any[]) => any) => (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashRestFrom1x2 = (start: number) => (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, object: any): LodashResult1x2;
./node_modules/@types/lodash/fp.d.ts:        <TResult>(path: lodash.PropertyPath, object: any): TResult;
./node_modules/@types/lodash/fp.d.ts:    type LodashResult1x1 = <TResult>(object: any) => TResult;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.__, path: lodash.__, value: any): LodashSetWith1x4;
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(customizer: lodash.SetWithCustomizer<T>, path: lodash.__, value: any): LodashSetWith1x5<T>;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.__, path: lodash.PropertyPath, value: any): LodashSetWith1x6;
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(customizer: lodash.SetWithCustomizer<T>, path: lodash.PropertyPath, value: any): LodashSetWith1x7<T>;
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(customizer: lodash.__, path: lodash.__, value: any, object: T): LodashSetWith1x12<T>;
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(customizer: lodash.SetWithCustomizer<T>, path: lodash.__, value: any, object: T): LodashSetWith1x13<T>;
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(customizer: lodash.__, path: lodash.PropertyPath, value: any, object: T): LodashSetWith1x14<T>;
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(customizer: lodash.SetWithCustomizer<T>, path: lodash.PropertyPath, value: any, object: T): T;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, value: any): LodashSetWith1x5<T>;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, value: any): LodashSetWith1x7<T>;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, value: any, object: T): LodashSetWith1x13<T>;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, value: any, object: T): T;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.__, value: any): LodashSetWith1x6;
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(customizer: lodash.SetWithCustomizer<T>, value: any): LodashSetWith1x7<T>;
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(customizer: lodash.__, value: any, object: T): LodashSetWith1x14<T>;
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(customizer: lodash.SetWithCustomizer<T>, value: any, object: T): T;
./node_modules/@types/lodash/fp.d.ts:        (value: any): LodashSetWith1x7<T>;
./node_modules/@types/lodash/fp.d.ts:        (value: any, object: T): T;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.__, path: lodash.__, value: any): LodashSetWith1x12<T>;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.SetWithCustomizer<T>, path: lodash.__, value: any): LodashSetWith1x13<T>;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.__, path: lodash.PropertyPath, value: any): LodashSetWith1x14<T>;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.SetWithCustomizer<T>, path: lodash.PropertyPath, value: any): T;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, value: any): LodashSetWith1x13<T>;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, value: any): T;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.__, value: any): LodashSetWith1x14<T>;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.SetWithCustomizer<T>, value: any): T;
./node_modules/@types/lodash/fp.d.ts:    type LodashSetWith1x11<T> = (value: any) => T;
./node_modules/@types/lodash/fp.d.ts:    type LodashSpread = <TResult>(func: (...args: any[]) => TResult) => (...args: any[]) => TResult;
./node_modules/@types/lodash/fp.d.ts:        <TResult>(start: lodash.__, func: (...args: any[]) => TResult): LodashSpreadFrom1x2<TResult>;
./node_modules/@types/lodash/fp.d.ts:        <TResult>(start: number, func: (...args: any[]) => TResult): (...args: any[]) => TResult;
./node_modules/@types/lodash/fp.d.ts:    type LodashSpreadFrom1x1 = <TResult>(func: (...args: any[]) => TResult) => (...args: any[]) => TResult;
./node_modules/@types/lodash/fp.d.ts:    type LodashSpreadFrom1x2<TResult> = (start: number) => (...args: any[]) => TResult;
./node_modules/@types/lodash/fp.d.ts:        <T extends (...args: any) => any>(wait: lodash.__, func: T): LodashThrottle1x2<T>;
./node_modules/@types/lodash/fp.d.ts:        <T extends (...args: any) => any>(wait: number, func: T): lodash.DebouncedFuncLeading<T>;
./node_modules/@types/lodash/fp.d.ts:    type LodashThrottle1x1 = <T extends (...args: any) => any>(func: T) => lodash.DebouncedFuncLeading<T>;
./node_modules/@types/lodash/fp.d.ts:    type LodashThrottle1x2<T extends (...args: any) => any> = (wait: number) => lodash.DebouncedFuncLeading<T>;
./node_modules/@types/lodash/fp.d.ts:        (): any[];
./node_modules/@types/lodash/fp.d.ts:    type LodashToFinite = (value: any) => number;
./node_modules/@types/lodash/fp.d.ts:    type LodashToInteger = (value: any) => number;
./node_modules/@types/lodash/fp.d.ts:    type LodashToLength = (value: any) => number;
./node_modules/@types/lodash/fp.d.ts:    type LodashToNumber = (value: any) => number;
./node_modules/@types/lodash/fp.d.ts:    type LodashToPath = (value: any) => string[];
./node_modules/@types/lodash/fp.d.ts:    type LodashToPlainObject = (value: any) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashToSafeInteger = (value: any) => number;
./node_modules/@types/lodash/fp.d.ts:    type LodashToString = (value: any) => string;
./node_modules/@types/lodash/fp.d.ts:    type LodashUnapply = (func: (...args: any[]) => any) => (...args: any[]) => any;
./node_modules/@types/lodash/fp.d.ts:    type LodashUnary = <T, TResult>(func: (arg1: T, ...args: any[]) => TResult) => (arg1: T) => TResult;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, updater: (value: any) => any): LodashUpdate1x2;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, updater: (value: any) => any): LodashUpdate1x3;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, updater: (value: any) => any, object: object): LodashUpdate1x6;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, updater: (value: any) => any, object: object): any;
./node_modules/@types/lodash/fp.d.ts:        (updater: (value: any) => any): LodashUpdate1x3;
./node_modules/@types/lodash/fp.d.ts:        (updater: (value: any) => any, object: object): any;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, object: object): any;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, updater: (value: any) => any): LodashUpdate1x6;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, updater: (value: any) => any): any;
./node_modules/@types/lodash/fp.d.ts:    type LodashUpdate1x5 = (updater: (value: any) => any) => any;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.__, path: lodash.__, updater: (oldValue: any) => any): LodashUpdateWith1x4;
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(customizer: lodash.SetWithCustomizer<T>, path: lodash.__, updater: (oldValue: any) => any): LodashUpdateWith1x5<T>;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.__, path: lodash.PropertyPath, updater: (oldValue: any) => any): LodashUpdateWith1x6;
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(customizer: lodash.SetWithCustomizer<T>, path: lodash.PropertyPath, updater: (oldValue: any) => any): LodashUpdateWith1x7<T>;
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(customizer: lodash.__, path: lodash.__, updater: (oldValue: any) => any, object: T): LodashUpdateWith1x12<T>;
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(customizer: lodash.SetWithCustomizer<T>, path: lodash.__, updater: (oldValue: any) => any, object: T): LodashUpdateWith1x13<T>;
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(customizer: lodash.__, path: lodash.PropertyPath, updater: (oldValue: any) => any, object: T): LodashUpdateWith1x14<T>;
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(customizer: lodash.SetWithCustomizer<T>, path: lodash.PropertyPath, updater: (oldValue: any) => any, object: T): T;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, updater: (oldValue: any) => any): LodashUpdateWith1x5<T>;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, updater: (oldValue: any) => any): LodashUpdateWith1x7<T>;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, updater: (oldValue: any) => any, object: T): LodashUpdateWith1x13<T>;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, updater: (oldValue: any) => any, object: T): T;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.__, updater: (oldValue: any) => any): LodashUpdateWith1x6;
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(customizer: lodash.SetWithCustomizer<T>, updater: (oldValue: any) => any): LodashUpdateWith1x7<T>;
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(customizer: lodash.__, updater: (oldValue: any) => any, object: T): LodashUpdateWith1x14<T>;
./node_modules/@types/lodash/fp.d.ts:        <T extends object>(customizer: lodash.SetWithCustomizer<T>, updater: (oldValue: any) => any, object: T): T;
./node_modules/@types/lodash/fp.d.ts:        (updater: (oldValue: any) => any): LodashUpdateWith1x7<T>;
./node_modules/@types/lodash/fp.d.ts:        (updater: (oldValue: any) => any, object: T): T;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.__, path: lodash.__, updater: (oldValue: any) => any): LodashUpdateWith1x12<T>;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.SetWithCustomizer<T>, path: lodash.__, updater: (oldValue: any) => any): LodashUpdateWith1x13<T>;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.__, path: lodash.PropertyPath, updater: (oldValue: any) => any): LodashUpdateWith1x14<T>;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.SetWithCustomizer<T>, path: lodash.PropertyPath, updater: (oldValue: any) => any): T;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.__, updater: (oldValue: any) => any): LodashUpdateWith1x13<T>;
./node_modules/@types/lodash/fp.d.ts:        (path: lodash.PropertyPath, updater: (oldValue: any) => any): T;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.__, updater: (oldValue: any) => any): LodashUpdateWith1x14<T>;
./node_modules/@types/lodash/fp.d.ts:        (customizer: lodash.SetWithCustomizer<T>, updater: (oldValue: any) => any): T;
./node_modules/@types/lodash/fp.d.ts:    type LodashUpdateWith1x11<T> = (updater: (oldValue: any) => any) => T;
./node_modules/@types/lodash/fp.d.ts:        (object: any): any[];
./node_modules/@types/lodash/common/function.d.ts:        after<TFunc extends (...args: any[]) => any>(n: number, func: TFunc): TFunc;
./node_modules/@types/lodash/common/function.d.ts:        after<TFunc extends (...args: any[]) => any>(func: TFunc): Function<TFunc>;
./node_modules/@types/lodash/common/function.d.ts:        after<TFunc extends (...args: any[]) => any>(func: TFunc): FunctionChain<TFunc>;
./node_modules/@types/lodash/common/function.d.ts:        ary(func: (...args: any[]) => any, n?: number): (...args: any[]) => any;
./node_modules/@types/lodash/common/function.d.ts:    interface Function<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:        ary(n?: number): Function<(...args: any[]) => any>;
./node_modules/@types/lodash/common/function.d.ts:    interface FunctionChain<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:        ary(n?: number): FunctionChain<(...args: any[]) => any>;
./node_modules/@types/lodash/common/function.d.ts:        before<TFunc extends (...args: any[]) => any>(n: number, func: TFunc): TFunc;
./node_modules/@types/lodash/common/function.d.ts:        before<TFunc extends (...args: any[]) => any>(func: TFunc): Function<TFunc>;
./node_modules/@types/lodash/common/function.d.ts:        before<TFunc extends (...args: any[]) => any>(func: TFunc): FunctionChain<TFunc>;
./node_modules/@types/lodash/common/function.d.ts:        (func: (...args: any[]) => any, thisArg: any, ...partials: any[]): (...args: any[]) => any;
./node_modules/@types/lodash/common/function.d.ts:        bind(thisArg: any, ...partials: any[]): Function<(...args: any[]) => any>;
./node_modules/@types/lodash/common/function.d.ts:        bind(thisArg: any, ...partials: any[]): FunctionChain<(...args: any[]) => any>;
./node_modules/@types/lodash/common/function.d.ts:        (object: object, key: string, ...partials: any[]): (...args: any[]) => any;
./node_modules/@types/lodash/common/function.d.ts:        bindKey(key: string, ...partials: any[]): Function<(...args: any[]) => any>;
./node_modules/@types/lodash/common/function.d.ts:        bindKey(key: string, ...partials: any[]): FunctionChain<(...args: any[]) => any>;
./node_modules/@types/lodash/common/function.d.ts:        (func: (...args: any[]) => any, arity?: number): (...args: any[]) => any;
./node_modules/@types/lodash/common/function.d.ts:    interface Function<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:            Function<(...args: any[]) => any>;
./node_modules/@types/lodash/common/function.d.ts:    interface FunctionChain<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:            FunctionChain<(...args: any[]) => any>;
./node_modules/@types/lodash/common/function.d.ts:        (func: (...args: any[]) => any, arity?: number): (...args: any[]) => any;
./node_modules/@types/lodash/common/function.d.ts:    interface Function<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:            Function<(...args: any[]) => any>;
./node_modules/@types/lodash/common/function.d.ts:    interface FunctionChain<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:            FunctionChain<(...args: any[]) => any>;
./node_modules/@types/lodash/common/function.d.ts:    interface DebouncedFunc<T extends (...args: any[]) => any> {
./node_modules/@types/lodash/common/function.d.ts:    interface DebouncedFuncLeading<T extends (...args: any[]) => any> extends DebouncedFunc<T> {
./node_modules/@types/lodash/common/function.d.ts:        debounce<T extends (...args: any) => any>(func: T, wait: number | undefined, options: DebounceSettingsLeading): DebouncedFuncLeading<T>;
./node_modules/@types/lodash/common/function.d.ts:        debounce<T extends (...args: any) => any>(func: T, wait?: number, options?: DebounceSettings): DebouncedFunc<T>;
./node_modules/@types/lodash/common/function.d.ts:    interface Function<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:        ): T extends (...args: any[]) => any ? Function<DebouncedFuncLeading<T>> : never;
./node_modules/@types/lodash/common/function.d.ts:        ): T extends (...args: any[]) => any ? Function<DebouncedFunc<T>> : never;
./node_modules/@types/lodash/common/function.d.ts:    interface FunctionChain<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:        ): T extends (...args: any[]) => any ? FunctionChain<DebouncedFuncLeading<T>> : never;
./node_modules/@types/lodash/common/function.d.ts:        ): T extends (...args: any[]) => any ? FunctionChain<DebouncedFunc<T>> : never;
./node_modules/@types/lodash/common/function.d.ts:        defer(func: (...args: any[]) => any, ...args: any[]): number;
./node_modules/@types/lodash/common/function.d.ts:        defer(...args: any[]): Primitive<number>;
./node_modules/@types/lodash/common/function.d.ts:        defer(...args: any[]): PrimitiveChain<number>;
./node_modules/@types/lodash/common/function.d.ts:        delay(func: (...args: any[]) => any, wait: number, ...args: any[]): number;
./node_modules/@types/lodash/common/function.d.ts:        delay(wait: number, ...args: any[]): Primitive<number>;
./node_modules/@types/lodash/common/function.d.ts:        delay(wait: number, ...args: any[]): PrimitiveChain<number>;
./node_modules/@types/lodash/common/function.d.ts:        flip<T extends (...args: any) => any>(func: T): T;
./node_modules/@types/lodash/common/function.d.ts:    interface Function<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:    interface FunctionChain<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:            <T extends (...args: any) => any>(func: T, resolver?: (...args: Parameters<T>) => any): T & MemoizedFunction;
./node_modules/@types/lodash/common/function.d.ts:    interface Function<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:        memoize(resolver?: (...args: any[]) => any): Function<T & MemoizedFunction>;
./node_modules/@types/lodash/common/function.d.ts:    interface FunctionChain<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:        memoize(resolver?: (...args: any[]) => any): FunctionChain<T & MemoizedFunction>;
./node_modules/@types/lodash/common/function.d.ts:    interface Function<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:    interface FunctionChain<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:        once<T extends (...args: any) => any>(func: T): T;
./node_modules/@types/lodash/common/function.d.ts:    interface Function<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:    interface FunctionChain<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:        overArgs(func: (...args: any[]) => any, ...transforms: Array<Many<(...args: any[]) => any>>): (...args: any[]) => any;
./node_modules/@types/lodash/common/function.d.ts:    interface Function<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:        overArgs(...transforms: Array<Many<(...args: any[]) => any>>): Function<(...args: any[]) => any>;
./node_modules/@types/lodash/common/function.d.ts:    interface FunctionChain<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:        overArgs(...transforms: Array<Many<(...args: any[]) => any>>): FunctionChain<(...args: any[]) => any>;
./node_modules/@types/lodash/common/function.d.ts:    interface Function<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:        partial(): Function<T extends (...ts: any[]) => any ? T : any>;
./node_modules/@types/lodash/common/function.d.ts:    interface FunctionChain<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:        partial(): FunctionChain<T extends (...ts: any[]) => any ? T : any>;
./node_modules/@types/lodash/common/function.d.ts:        (func: (...args: any[]) => any, ...args: any[]): (...args: any[]) => any;
./node_modules/@types/lodash/common/function.d.ts:    interface Function<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:            T extends Function2<infer T1, T2, infer R> ? Function1<T1, R> : any
./node_modules/@types/lodash/common/function.d.ts:        partialRight<TS extends any[]>(...ts: TS): Function<T extends (...args: TS) => infer R ? () => R : any>;
./node_modules/@types/lodash/common/function.d.ts:        partialRight(): Function<T extends (...ts: any[]) => any ? T : any>;
./node_modules/@types/lodash/common/function.d.ts:    interface FunctionChain<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:            T extends Function2<infer T1, T2, infer R> ? Function1<T1, R> : any
./node_modules/@types/lodash/common/function.d.ts:        partialRight<TS extends any[]>(...ts: TS): FunctionChain<T extends (...args: TS) => infer R ? () => R : any>;
./node_modules/@types/lodash/common/function.d.ts:        partialRight(): FunctionChain<T extends (...ts: any[]) => any ? T : any>;
./node_modules/@types/lodash/common/function.d.ts:        rearg(func: (...args: any[]) => any, ...indexes: Array<Many<number>>): (...args: any[]) => any;
./node_modules/@types/lodash/common/function.d.ts:    interface Function<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:        rearg(...indexes: Array<Many<number>>): Function<(...args: any[]) => any>;
./node_modules/@types/lodash/common/function.d.ts:    interface FunctionChain<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:        rearg(...indexes: Array<Many<number>>): FunctionChain<(...args: any[]) => any>;
./node_modules/@types/lodash/common/function.d.ts:        rest(func: (...args: any[]) => any, start?: number): (...args: any[]) => any;
./node_modules/@types/lodash/common/function.d.ts:    interface Function<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:        rest(start?: number): Function<(...args: any[]) => any>;
./node_modules/@types/lodash/common/function.d.ts:    interface FunctionChain<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:        rest(start?: number): FunctionChain<(...args: any[]) => any>;
./node_modules/@types/lodash/common/function.d.ts:        spread<TResult>(func: (...args: any[]) => TResult, start?: number): (...args: any[]) => TResult;
./node_modules/@types/lodash/common/function.d.ts:    interface Function<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:        spread(start?: number): Function<(...args: any[]) => ReturnType<T>>;
./node_modules/@types/lodash/common/function.d.ts:    interface FunctionChain<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:        spread(start?: number): FunctionChain<(...args: any[]) => ReturnType<T>>;
./node_modules/@types/lodash/common/function.d.ts:        throttle<T extends (...args: any) => any>(func: T, wait?: number, options?: ThrottleSettingsLeading): DebouncedFuncLeading<T>;
./node_modules/@types/lodash/common/function.d.ts:        throttle<T extends (...args: any) => any>(func: T, wait?: number, options?: ThrottleSettings): DebouncedFunc<T>;
./node_modules/@types/lodash/common/function.d.ts:    interface Function<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:        ): T extends (...args: any[]) => any ? Function<DebouncedFuncLeading<T>> : never;
./node_modules/@types/lodash/common/function.d.ts:        ): T extends (...args: any[]) => any ? Function<DebouncedFunc<T>> : never;
./node_modules/@types/lodash/common/function.d.ts:    interface FunctionChain<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:        ): T extends (...args: any[]) => any ? FunctionChain<DebouncedFuncLeading<T>> : never;
./node_modules/@types/lodash/common/function.d.ts:        ): T extends (...args: any[]) => any ? FunctionChain<DebouncedFunc<T>> : never;
./node_modules/@types/lodash/common/function.d.ts:        unary<T, TResult>(func: (arg1: T, ...args: any[]) => TResult): (arg1: T) => TResult;
./node_modules/@types/lodash/common/function.d.ts:    interface Function<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/function.d.ts:    interface FunctionChain<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/common.d.ts:        T extends { __trapAny: any } ? Collection<any> & Function<any> & Object<any> & Primitive<any> & String :
./node_modules/@types/lodash/common/common.d.ts:        T extends (...args: any) => any ? Function<T> :
./node_modules/@types/lodash/common/common.d.ts:        T extends { __trapAny: any } ? CollectionChain<any> & FunctionChain<any> & ObjectChain<any> & PrimitiveChain<any> & StringChain :
./node_modules/@types/lodash/common/common.d.ts:        T extends (...args: any) => any ? FunctionChain<T> :
./node_modules/@types/lodash/common/common.d.ts:        <TrapAny extends { __trapAny: any }>(value: TrapAny): Collection<any> & Function<any> & Object<any> & Primitive<any> & String;
./node_modules/@types/lodash/common/common.d.ts:        <T extends (...args: any) => any>(value: T): Function<T>;
./node_modules/@types/lodash/common/common.d.ts:        delete(key: any): boolean;
./node_modules/@types/lodash/common/common.d.ts:        get(key: any): any;
./node_modules/@types/lodash/common/common.d.ts:        has(key: any): boolean;
./node_modules/@types/lodash/common/common.d.ts:        set(key: any, value: any): this;
./node_modules/@types/lodash/common/common.d.ts:    interface Function<T extends (...args: any) => any> extends LoDashImplicitWrapper<T> {
./node_modules/@types/lodash/common/common.d.ts:    interface FunctionChain<T extends (...args: any) => any> extends LoDashExplicitWrapper<T> {
./node_modules/@types/lodash/common/common.d.ts:    type MemoVoidIterator<T, TResult> = (prev: TResult, curr: T, indexOrKey: any, list: T[]) => void;
./node_modules/@types/lodash/common/common.d.ts:    type MemoIterator<T, TResult> = (prev: TResult, curr: T, indexOrKey: any, list: T[]) => TResult;
./node_modules/@types/lodash/common/array.d.ts:        fill<T>(array: any[] | null | undefined, value: T): T[];
./node_modules/@types/lodash/common/array.d.ts:        fromPairs(): Object<Dictionary<T extends [PropertyName, infer U] ? U : any>>;
./node_modules/@types/lodash/common/array.d.ts:        fromPairs(): ObjectChain<Dictionary<T extends [PropertyName, infer U] ? U : any>>;
./node_modules/@types/lodash/common/string.d.ts:    type ReplaceFunction = (match: string, ...args: any[]) => string;
./node_modules/@types/lodash/common/object.d.ts:        assign(object: any, ...otherArgs: any[]): any;
./node_modules/@types/lodash/common/object.d.ts:        assign(...otherArgs: any[]): Object<any>;
./node_modules/@types/lodash/common/object.d.ts:        assign(...otherArgs: any[]): ObjectChain<any>;
./node_modules/@types/lodash/common/object.d.ts:        assignIn<TResult>(object: any, ...otherArgs: any[]): TResult;
./node_modules/@types/lodash/common/object.d.ts:        assignIn<TResult>(...otherArgs: any[]): Object<TResult>;
./node_modules/@types/lodash/common/object.d.ts:        assignIn(...otherArgs: any[]): ObjectChain<any>;
./node_modules/@types/lodash/common/object.d.ts:    type AssignCustomizer = (objectValue: any, sourceValue: any, key?: string, object?: {}, source?: {}) => any;
./node_modules/@types/lodash/common/object.d.ts:        assignInWith<TResult>(object: any, ...otherArgs: any[]): TResult;
./node_modules/@types/lodash/common/object.d.ts:        assignInWith<TResult>(...otherArgs: any[]): Object<TResult>;
./node_modules/@types/lodash/common/object.d.ts:        assignInWith(...otherArgs: any[]): ObjectChain<any>;
./node_modules/@types/lodash/common/object.d.ts:        assignWith<TResult>(object: any, ...otherArgs: any[]): TResult;
./node_modules/@types/lodash/common/object.d.ts:        assignWith<TResult>(...otherArgs: any[]): Object<TResult>;
./node_modules/@types/lodash/common/object.d.ts:        assignWith(...otherArgs: any[]): ObjectChain<any>;
./node_modules/@types/lodash/common/object.d.ts:        defaults(object: any, ...sources: any[]): any;
./node_modules/@types/lodash/common/object.d.ts:        defaults(...sources: any[]): Object<any>;
./node_modules/@types/lodash/common/object.d.ts:        defaults(...sources: any[]): ObjectChain<any>;
./node_modules/@types/lodash/common/object.d.ts:        defaultsDeep(object: any, ...sources: any[]): any;
./node_modules/@types/lodash/common/object.d.ts:        defaultsDeep(...sources: any[]): Object<any>;
./node_modules/@types/lodash/common/object.d.ts:        defaultsDeep(...sources: any[]): ObjectChain<any>;
./node_modules/@types/lodash/common/object.d.ts:        extend<TResult>(object: any, ...otherArgs: any[]): TResult;
./node_modules/@types/lodash/common/object.d.ts:        extend(...otherArgs: any[]): Object<any>;
./node_modules/@types/lodash/common/object.d.ts:        extend(...otherArgs: any[]): ObjectChain<any>;
./node_modules/@types/lodash/common/object.d.ts:        extendWith<TResult>(object: any, ...otherArgs: any[]): TResult;
./node_modules/@types/lodash/common/object.d.ts:        extendWith(...otherArgs: any[]): Object<any>;
./node_modules/@types/lodash/common/object.d.ts:        extendWith(...otherArgs: any[]): ObjectChain<any>;
./node_modules/@types/lodash/common/object.d.ts:        functions(object: any): string[];
./node_modules/@types/lodash/common/object.d.ts:        functionsIn<T extends {}>(object: any): string[];
./node_modules/@types/lodash/common/object.d.ts:         get(object: any, path: PropertyPath, defaultValue?: any): any;
./node_modules/@types/lodash/common/object.d.ts:        get(path: PropertyPath, defaultValue?: any): any;
./node_modules/@types/lodash/common/object.d.ts:        get(path: PropertyPath, defaultValue?: any): LoDashExplicitWrapper<any>;
./node_modules/@types/lodash/common/object.d.ts:        invoke(object: any, path: PropertyPath, ...args: any[]): any;
./node_modules/@types/lodash/common/object.d.ts:        invoke(path: PropertyPath, ...args: any[]): any;
./node_modules/@types/lodash/common/object.d.ts:        invoke(path: PropertyPath, ...args: any[]): LoDashExplicitWrapper<any>;
./node_modules/@types/lodash/common/object.d.ts:        keys(object?: any): string[];
./node_modules/@types/lodash/common/object.d.ts:        keysIn(object?: any): string[];
./node_modules/@types/lodash/common/object.d.ts:        mapValues<T extends object>(obj: T | null | undefined, iteratee: string): { [P in keyof T]: any };
./node_modules/@types/lodash/common/object.d.ts:        mapValues(iteratee: string): Object<{ [P in keyof T]: any }>;
./node_modules/@types/lodash/common/object.d.ts:        mapValues(iteratee: string): ObjectChain<{ [P in keyof T]: any }>;
./node_modules/@types/lodash/common/object.d.ts:        merge(object: any, ...otherArgs: any[]): any;
./node_modules/@types/lodash/common/object.d.ts:        merge(...otherArgs: any[]): Object<any>;
./node_modules/@types/lodash/common/object.d.ts:        merge(...otherArgs: any[]): ObjectChain<any>;
./node_modules/@types/lodash/common/object.d.ts:    type MergeWithCustomizer = { bivariantHack(value: any, srcValue: any, key: string, object: any, source: any, stack: any): any; }["bivariantHack"];
./node_modules/@types/lodash/common/object.d.ts:        mergeWith(object: any, ...otherArgs: any[]): any;
./node_modules/@types/lodash/common/object.d.ts:        mergeWith(...otherArgs: any[]): Object<any>;
./node_modules/@types/lodash/common/object.d.ts:        mergeWith(...otherArgs: any[]): ObjectChain<any>;
./node_modules/@types/lodash/common/object.d.ts:        result<TResult>(object: any, path: PropertyPath, defaultValue?: TResult | ((...args: any[]) => TResult)): TResult;
./node_modules/@types/lodash/common/object.d.ts:        result<TResult>(path: PropertyPath, defaultValue?: TResult | ((...args: any[]) => TResult)): TResult;
./node_modules/@types/lodash/common/object.d.ts:        result<TResult>(path: PropertyPath, defaultValue?: TResult | ((...args: any[]) => TResult)): ExpChain<TResult>;
./node_modules/@types/lodash/common/object.d.ts:        set<T extends object>(object: T, path: PropertyPath, value: any): T;
./node_modules/@types/lodash/common/object.d.ts:        set<TResult>(object: object, path: PropertyPath, value: any): TResult;
./node_modules/@types/lodash/common/object.d.ts:        set(path: PropertyPath, value: any): this;
./node_modules/@types/lodash/common/object.d.ts:        set<TResult>(path: PropertyPath, value: any): ImpChain<TResult>;
./node_modules/@types/lodash/common/object.d.ts:        set(path: PropertyPath, value: any): this;
./node_modules/@types/lodash/common/object.d.ts:        set<TResult>(path: PropertyPath, value: any): ExpChain<TResult>;
./node_modules/@types/lodash/common/object.d.ts:    type SetWithCustomizer<T> = (nsValue: any, key: string, nsObject: T) => any;
./node_modules/@types/lodash/common/object.d.ts:        setWith<T extends object>(object: T, path: PropertyPath, value: any, customizer?: SetWithCustomizer<T>): T;
./node_modules/@types/lodash/common/object.d.ts:        setWith<T extends object, TResult>(object: T, path: PropertyPath, value: any, customizer?: SetWithCustomizer<T>): TResult;
./node_modules/@types/lodash/common/object.d.ts:        setWith(path: PropertyPath, value: any, customizer?: SetWithCustomizer<TValue>): this;
./node_modules/@types/lodash/common/object.d.ts:        setWith<TResult>(path: PropertyPath, value: any, customizer?: SetWithCustomizer<TValue>): ImpChain<TResult>;
./node_modules/@types/lodash/common/object.d.ts:        setWith(path: PropertyPath, value: any, customizer?: SetWithCustomizer<TValue>): this;
./node_modules/@types/lodash/common/object.d.ts:        setWith<TResult>(path: PropertyPath, value: any, customizer?: SetWithCustomizer<TValue>): ExpChain<TResult>;
./node_modules/@types/lodash/common/object.d.ts:        toPairs(): Collection<[string, TValue extends Dictionary<infer U> ? U : TValue extends NumericDictionary<infer V> ? V : any]>;
./node_modules/@types/lodash/common/object.d.ts:        toPairs(): CollectionChain<[string, TValue extends Dictionary<infer U> ? U : TValue extends NumericDictionary<infer V> ? V : any]>;
./node_modules/@types/lodash/common/object.d.ts:        toPairsIn(): Collection<[string, TValue extends Dictionary<infer U> ? U : TValue extends NumericDictionary<infer V> ? V : any]>;
./node_modules/@types/lodash/common/object.d.ts:        toPairsIn(): CollectionChain<[string, TValue extends Dictionary<infer U> ? U : TValue extends NumericDictionary<infer V> ? V : any]>;
./node_modules/@types/lodash/common/object.d.ts:        transform(object: any[]): any[];
./node_modules/@types/lodash/common/object.d.ts:        unset(object: any, path: PropertyPath): boolean;
./node_modules/@types/lodash/common/object.d.ts:        update(object: object, path: PropertyPath, updater: (value: any) => any): any;
./node_modules/@types/lodash/common/object.d.ts:        update(path: PropertyPath, updater: (value: any) => any): Object<any>;
./node_modules/@types/lodash/common/object.d.ts:        update(path: PropertyPath, updater: (value: any) => any): ObjectChain<any>;
./node_modules/@types/lodash/common/object.d.ts:        updateWith<T extends object>(object: T, path: PropertyPath, updater: (oldValue: any) => any, customizer?: SetWithCustomizer<T>): T;
./node_modules/@types/lodash/common/object.d.ts:        updateWith<T extends object, TResult>(object: T, path: PropertyPath, updater: (oldValue: any) => any, customizer?: SetWithCustomizer<T>): TResult;
./node_modules/@types/lodash/common/object.d.ts:        updateWith(path: PropertyPath, updater: (oldValue: any) => any, customizer?: SetWithCustomizer<T>): this;
./node_modules/@types/lodash/common/object.d.ts:        updateWith<TResult>(path: PropertyPath, updater: (oldValue: any) => any, customizer?: SetWithCustomizer<T>): Object<TResult>;
./node_modules/@types/lodash/common/object.d.ts:        updateWith(path: PropertyPath, updater: (oldValue: any) => any, customizer?: SetWithCustomizer<T>): this;
./node_modules/@types/lodash/common/object.d.ts:        updateWith<TResult>(path: PropertyPath, updater: (oldValue: any) => any, customizer?: SetWithCustomizer<T>): ObjectChain<TResult>;
./node_modules/@types/lodash/common/object.d.ts:        values(object: any): any[];
./node_modules/@types/lodash/common/lang.d.ts:    interface Function<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/lang.d.ts:    interface FunctionChain<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/lang.d.ts:        cloneDeepWith(customizer: CloneDeepWithCustomizer<TValue>): any;
./node_modules/@types/lodash/common/lang.d.ts:    type CloneDeepWithCustomizer<TObject> = (value: any, key: number | string | undefined, object: TObject | undefined, stack: any) => any;
./node_modules/@types/lodash/common/lang.d.ts:        cloneDeepWith<T>(value: T, customizer: CloneDeepWithCustomizer<T>): any;
./node_modules/@types/lodash/common/lang.d.ts:    type CloneWithCustomizer<TValue, TResult> = (value: TValue, key: number | string | undefined, object: any, stack: any) => TResult;
./node_modules/@types/lodash/common/lang.d.ts:        eq(value: any, other: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        eq(other: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        eq(other: any): PrimitiveChain<boolean>;
./node_modules/@types/lodash/common/lang.d.ts:        gt(value: any, other: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        gt(other: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        gt(other: any): PrimitiveChain<boolean>;
./node_modules/@types/lodash/common/lang.d.ts:        gte(value: any, other: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        gte(other: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        gte(other: any): PrimitiveChain<boolean>;
./node_modules/@types/lodash/common/lang.d.ts:        isArguments(value?: any): value is IArguments;
./node_modules/@types/lodash/common/lang.d.ts:        isArray(value?: any): value is any[];
./node_modules/@types/lodash/common/lang.d.ts:        isArray<T>(value?: any): value is any[];
./node_modules/@types/lodash/common/lang.d.ts:        isArrayBuffer(value?: any): value is ArrayBuffer;
./node_modules/@types/lodash/common/lang.d.ts:        isArrayLike<T extends { __lodashAnyHack: any }>(t: T): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        isArrayLike(value: ((...args: any[]) => any) | null | undefined): value is never;
./node_modules/@types/lodash/common/lang.d.ts:        isArrayLike(value: any): value is { length: number };
./node_modules/@types/lodash/common/lang.d.ts:        isArrayLikeObject<T extends { __lodashAnyHack: any }>(value: T): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        isArrayLikeObject(value: ((...args: any[]) => any) | FunctionBase | string | boolean | number | null | undefined): value is never;
./node_modules/@types/lodash/common/lang.d.ts:        isArrayLikeObject(value: any): value is object & { length: number };
./node_modules/@types/lodash/common/lang.d.ts:        isBoolean(value?: any): value is boolean;
./node_modules/@types/lodash/common/lang.d.ts:        isBuffer(value?: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        isDate(value?: any): value is Date;
./node_modules/@types/lodash/common/lang.d.ts:        isElement(value?: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        isEmpty<T extends { __trapAny: any }>(value?: T): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        isEmpty(value?: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        isEqual(value: any, other: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        isEqual(other: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        isEqual(other: any): PrimitiveChain<boolean>;
./node_modules/@types/lodash/common/lang.d.ts:    type IsEqualCustomizer = (value: any, other: any, indexOrKey: PropertyName | undefined, parent: any, otherParent: any, stack: any) => boolean | undefined;
./node_modules/@types/lodash/common/lang.d.ts:        isEqualWith(value: any, other: any, customizer?: IsEqualCustomizer): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        isEqualWith(other: any, customizer?: IsEqualCustomizer): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        isEqualWith(other: any, customizer?: IsEqualCustomizer): PrimitiveChain<boolean>;
./node_modules/@types/lodash/common/lang.d.ts:        isError(value: any): value is Error;
./node_modules/@types/lodash/common/lang.d.ts:        isFinite(value?: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        isFunction(value: any): value is (...args: any[]) => any;
./node_modules/@types/lodash/common/lang.d.ts:        isInteger(value?: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        isLength(value?: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        isMap(value?: any): value is Map<any, any>;
./node_modules/@types/lodash/common/lang.d.ts:    type isMatchWithCustomizer = (value: any, other: any, indexOrKey: PropertyName, object: object, source: object) => boolean | undefined;
./node_modules/@types/lodash/common/lang.d.ts:        isNaN(value?: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        isNative(value: any): value is (...args: any[]) => any;
./node_modules/@types/lodash/common/lang.d.ts:        isNil(value: any): value is null | undefined;
./node_modules/@types/lodash/common/lang.d.ts:        isNull(value: any): value is null;
./node_modules/@types/lodash/common/lang.d.ts:        isNumber(value?: any): value is number;
./node_modules/@types/lodash/common/lang.d.ts:        isObject(value?: any): value is object;
./node_modules/@types/lodash/common/lang.d.ts:        isObjectLike(value?: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        isPlainObject(value?: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        isRegExp(value?: any): value is RegExp;
./node_modules/@types/lodash/common/lang.d.ts:        isSafeInteger(value: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        isSet(value?: any): value is Set<any>;
./node_modules/@types/lodash/common/lang.d.ts:        isString(value?: any): value is string;
./node_modules/@types/lodash/common/lang.d.ts:        isSymbol(value: any): value is symbol;
./node_modules/@types/lodash/common/lang.d.ts:        isTypedArray(value: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        isUndefined(value: any): value is undefined;
./node_modules/@types/lodash/common/lang.d.ts:        isWeakMap(value?: any): value is WeakMap<object, any>;
./node_modules/@types/lodash/common/lang.d.ts:        isWeakSet(value?: any): value is WeakSet<object>;
./node_modules/@types/lodash/common/lang.d.ts:        lt(value: any, other: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        lt(other: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        lt(other: any): PrimitiveChain<boolean>;
./node_modules/@types/lodash/common/lang.d.ts:        lte(value: any, other: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        lte(other: any): boolean;
./node_modules/@types/lodash/common/lang.d.ts:        lte(other: any): PrimitiveChain<boolean>;
./node_modules/@types/lodash/common/lang.d.ts:        toArray(): any[];
./node_modules/@types/lodash/common/lang.d.ts:        toFinite(value: any): number;
./node_modules/@types/lodash/common/lang.d.ts:        toInteger(value: any): number;
./node_modules/@types/lodash/common/lang.d.ts:        toLength(value: any): number;
./node_modules/@types/lodash/common/lang.d.ts:        toNumber(value: any): number;
./node_modules/@types/lodash/common/lang.d.ts:        toPlainObject(value?: any): any;
./node_modules/@types/lodash/common/lang.d.ts:        toSafeInteger(value: any): number;
./node_modules/@types/lodash/common/lang.d.ts:        toString(value: any): string;
./node_modules/@types/lodash/common/seq.d.ts:        chain<TrapAny extends { __lodashAnyHack: any }>(value: TrapAny): CollectionChain<any> & FunctionChain<any> & ObjectChain<any> & PrimitiveChain<any> & StringChain;
./node_modules/@types/lodash/common/seq.d.ts:        chain<T extends (...args: any[]) => any>(value: T): FunctionChain<T>;
./node_modules/@types/lodash/common/seq.d.ts:    interface Function<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/collection.d.ts:        flatMap(collection: object | null | undefined): any[];
./node_modules/@types/lodash/common/collection.d.ts:        flatMap(collection: object | null | undefined, iteratee: string): any[];
./node_modules/@types/lodash/common/collection.d.ts:        flatMapDeep(collection: object | null | undefined, iteratee: string): any[];
./node_modules/@types/lodash/common/collection.d.ts:        flatMapDepth(collection: object | null | undefined, iteratee: string, depth?: number): any[];
./node_modules/@types/lodash/common/collection.d.ts:        invokeMap(collection: object | null | undefined, methodName: string, ...args: any[]): any[];
./node_modules/@types/lodash/common/collection.d.ts:        invokeMap<TResult>(collection: object | null | undefined, method: (...args: any[]) => TResult, ...args: any[]): TResult[];
./node_modules/@types/lodash/common/collection.d.ts:        invokeMap(methodName: string, ...args: any[]): Collection<any>;
./node_modules/@types/lodash/common/collection.d.ts:        invokeMap<TResult>(method: (...args: any[]) => TResult, ...args: any[]): Collection<TResult>;
./node_modules/@types/lodash/common/collection.d.ts:        invokeMap(methodName: string, ...args: any[]): CollectionChain<any>;
./node_modules/@types/lodash/common/collection.d.ts:        invokeMap<TResult>(method: (...args: any[]) => TResult, ...args: any[]): CollectionChain<TResult>;
./node_modules/@types/lodash/common/collection.d.ts:        map<T>(collection: Dictionary<T> | NumericDictionary<T> | null | undefined, iteratee?: string): any[];
./node_modules/@types/lodash/common/util.d.ts:        attempt<TResult>(func: (...args: any[]) => TResult, ...args: any[]): TResult | Error;
./node_modules/@types/lodash/common/util.d.ts:        attempt<TResult>(...args: any[]): TResult | Error;
./node_modules/@types/lodash/common/util.d.ts:        attempt<TResult>(...args: any[]): ExpChain<TResult | Error>;
./node_modules/@types/lodash/common/util.d.ts:        [P in keyof T]: T[P] extends (arg: infer A) => any ? A : any
./node_modules/@types/lodash/common/util.d.ts:        flow<A extends any[], R1, R2, R3, R4, R5, R6, R7>(f1: (...args: A) => R1, f2: (a: R1) => R2, f3: (a: R2) => R3, f4: (a: R3) => R4, f5: (a: R4) => R5, f6: (a: R5) => R6, f7: (a: R6) => R7, ...func: Array<Many<(a: any) => any>>): (...args: A) => any;
./node_modules/@types/lodash/common/util.d.ts:        flow(...func: Array<Many<(...args: any[]) => any>>): (...args: any[]) => any;
./node_modules/@types/lodash/common/util.d.ts:    interface Function<T extends (...arg: any) => any> {
./node_modules/@types/lodash/common/util.d.ts:        flow<R2, R3, R4, R5, R6, R7>(f2: (a: ReturnType<T>) => R2, f3: (a: R2) => R3, f4: (a: R3) => R4, f5: (a: R4) => R5, f6: (a: R5) => R6, f7: (a: R6) => R7, ...func: Array<Many<(a: any) => any>>): Function<(...args: Parameters<T>) => any>;
./node_modules/@types/lodash/common/util.d.ts:        flow(...func: Array<Many<(...args: any[]) => any>>): Function<(...args: any[]) => any>;
./node_modules/@types/lodash/common/util.d.ts:        flow<R2, R3, R4, R5, R6, R7>(f2: (a: ReturnType<T>) => R2, f3: (a: R2) => R3, f4: (a: R3) => R4, f5: (a: R4) => R5, f6: (a: R5) => R6, f7: (a: R6) => R7, ...func: Array<Many<(a: any) => any>>): FunctionChain<(...args: Parameters<T>) => any>;
./node_modules/@types/lodash/common/util.d.ts:        flow(...func: Array<Many<(...args: any[]) => any>>): FunctionChain<(...args: any[]) => any>;
./node_modules/@types/lodash/common/util.d.ts:        flowRight(...func: Array<Many<(...args: any[]) => any>>): (...args: any[]) => any;
./node_modules/@types/lodash/common/util.d.ts:        flowRight(...func: Array<Many<(...args: any[]) => any>>): Function<(...args: any[]) => any>;
./node_modules/@types/lodash/common/util.d.ts:        flowRight(...func: Array<Many<(...args: any[]) => any>>): FunctionChain<(...args: any[]) => any>;
./node_modules/@types/lodash/common/util.d.ts:        iteratee<TFunction extends (...args: any[]) => any>(func: TFunction): TFunction;
./node_modules/@types/lodash/common/util.d.ts:        iteratee(func: symbol | number | string | object): (...args: any[]) => any;
./node_modules/@types/lodash/common/util.d.ts:    interface Function<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/util.d.ts:    interface FunctionChain<T extends (...args: any) => any> {
./node_modules/@types/lodash/common/util.d.ts:        matches<T>(source: T): (value: any) => boolean;
./node_modules/@types/lodash/common/util.d.ts:        matchesProperty<T>(path: PropertyPath, srcValue: T): (value: any) => boolean;
./node_modules/@types/lodash/common/util.d.ts:        matchesProperty<SrcValue>(srcValue: SrcValue): Function<(value: any) => boolean>;
./node_modules/@types/lodash/common/util.d.ts:        matchesProperty<SrcValue>(srcValue: SrcValue): FunctionChain<(value: any) => boolean>;
./node_modules/@types/lodash/common/util.d.ts:        method(path: PropertyPath, ...args: any[]): (object: any) => any;
./node_modules/@types/lodash/common/util.d.ts:        method(...args: any[]): Function<(object: any) => any>;
./node_modules/@types/lodash/common/util.d.ts:        method(...args: any[]): FunctionChain<(object: any) => any>;
./node_modules/@types/lodash/common/util.d.ts:        methodOf(object: object, ...args: any[]): (path: PropertyPath) => any;
./node_modules/@types/lodash/common/util.d.ts:        methodOf(...args: any[]): LoDashImplicitWrapper<(path: PropertyPath) => any>;
./node_modules/@types/lodash/common/util.d.ts:        methodOf(...args: any[]): LoDashExplicitWrapper<(path: PropertyPath) => any>;
./node_modules/@types/lodash/common/util.d.ts:        mixin<TObject>(object: TObject, source: Dictionary<(...args: any[]) => any>, options?: MixinOptions): TObject;
./node_modules/@types/lodash/common/util.d.ts:        mixin<TResult>(source: Dictionary<(...args: any[]) => any>, options?: MixinOptions): LoDashStatic;
./node_modules/@types/lodash/common/util.d.ts:        mixin(source: Dictionary<(...args: any[]) => any>, options?: MixinOptions): this;
./node_modules/@types/lodash/common/util.d.ts:        mixin(source: Dictionary<(...args: any[]) => any>, options?: MixinOptions): this;
./node_modules/@types/lodash/common/util.d.ts:        noop(...args: any[]): void;
./node_modules/@types/lodash/common/util.d.ts:        noop(...args: any[]): void;
./node_modules/@types/lodash/common/util.d.ts:        noop(...args: any[]): PrimitiveChain<undefined>;
./node_modules/@types/lodash/common/util.d.ts:        nthArg(n?: number): (...args: any[]) => any;
./node_modules/@types/lodash/common/util.d.ts:        nthArg(): Function<(...args: any[]) => any>;
./node_modules/@types/lodash/common/util.d.ts:        nthArg(): FunctionChain<(...args: any[]) => any>;
./node_modules/@types/lodash/common/util.d.ts:        over<TResult>(...iteratees: Array<Many<(...args: any[]) => TResult>>): (...args: any[]) => TResult[];
./node_modules/@types/lodash/common/util.d.ts:        over<TResult>(...iteratees: Array<Many<(...args: any[]) => TResult>>): Function<(...args: any[]) => TResult[]>;
./node_modules/@types/lodash/common/util.d.ts:        over<TResult>(...iteratees: Array<Many<(...args: any[]) => TResult>>): Function<(...args: any[]) => Array<ReturnType<T> | TResult>>;
./node_modules/@types/lodash/common/util.d.ts:        over<TResult>(...iteratees: Array<Many<(...args: any[]) => TResult>>): FunctionChain<(...args: any[]) => TResult[]>;
./node_modules/@types/lodash/common/util.d.ts:        over<TResult>(...iteratees: Array<Many<(...args: any[]) => TResult>>): FunctionChain<(...args: any[]) => Array<ReturnType<T> | TResult>>;
./node_modules/@types/lodash/common/util.d.ts:        stubArray(): any[];
./node_modules/@types/lodash/common/util.d.ts:        stubArray(): any[];
./node_modules/@types/lodash/common/util.d.ts:        stubObject(): any;
./node_modules/@types/lodash/common/util.d.ts:        stubObject(): any;
./node_modules/@types/lodash/common/util.d.ts:        toPath(value: any): string[];
./node_modules/@types/d3-array/index.d.ts: * Administrivia: anything with a valueOf(): number method is comparable, so we allow it in numeric operations
./node_modules/@types/papaparse/index.d.ts:    parse(input: string, baseIndex: number, ignoreLastRow: boolean): any;
./node_modules/@types/papaparse/index.d.ts:    transform?(value: string, field: string | number): any;
./node_modules/@types/papaparse/index.d.ts:    quotes?: boolean | boolean[] | ((value: any, columnIndex: number) => boolean) | undefined;
./node_modules/@types/node-fetch/index.d.ts:    constructor(body?: any, opts?: { size?: number | undefined; timeout?: number | undefined });
./node_modules/@types/node-fetch/externals.d.ts:    reason: any;
./node_modules/@types/node-fetch/externals.d.ts:        listener: (this: AbortSignal, event: any) => any,
./node_modules/@types/node-fetch/externals.d.ts:        listener: (this: AbortSignal, event: any) => any,
./node_modules/@types/node-fetch/externals.d.ts:    dispatchEvent: (event: any) => boolean;
./node_modules/@types/node-fetch/externals.d.ts:    onabort: null | ((this: AbortSignal, event: any) => any);
./node_modules/@types/chai/index.d.ts:            value?: any;
./node_modules/@types/chai/index.d.ts:            new(...args: any[]): T;
./node_modules/@types/chai/index.d.ts:            new(...args: any[]): Error;
./node_modules/@types/chai/index.d.ts:                method: (...args: any[]) => void,
./node_modules/@types/chai/index.d.ts:                method: (...args: any[]) => void,
./node_modules/@types/chai/index.d.ts:            overwriteProperty(ctx: object, name: string, getter: (this: AssertionStatic, _super: any) => any): void;
./node_modules/@types/chai/index.d.ts:            flag(obj: object, key: string, value?: any): any;
./node_modules/@types/chai/index.d.ts:            getActual(obj: object, args: AssertionArgs): any;
./node_modules/@types/chai/index.d.ts:            getMessage(obj: any, args: AssertionArgs): string;
./node_modules/@types/chai/index.d.ts:            inspect(obj: any, showHidden?: boolean, depth?: number, colors?: boolean): string;
./node_modules/@types/chai/index.d.ts:            (val: any, message?: string): Assertion;
./node_modules/@types/chai/index.d.ts:            fail(actual: any, expected: any, message?: string, operator?: Operator): never;
./node_modules/@types/chai/index.d.ts:            _obj: any;
./node_modules/@types/chai/index.d.ts:            new(target: any, message?: string, ssfi?: Function, lockSsfi?: boolean): Assertion;
./node_modules/@types/chai/index.d.ts:            addMethod(name: string, method: (this: AssertionStatic, ...args: any[]) => any): void;
./node_modules/@types/chai/index.d.ts:                method: (this: AssertionStatic, ...args: any[]) => void,
./node_modules/@types/chai/index.d.ts:            overwriteProperty(name: string, getter: (this: AssertionStatic, _super: any) => any): void;
./node_modules/@types/chai/index.d.ts:            overwriteMethod(name: string, method: (this: AssertionStatic, ...args: any[]) => any): void;
./node_modules/@types/chai/index.d.ts:                method: (this: AssertionStatic, ...args: any[]) => void,
./node_modules/@types/chai/index.d.ts:            equal(value1: any, value2: any, message?: string): void;
./node_modules/@types/chai/index.d.ts:            exist(value: any, message?: string): void;
./node_modules/@types/chai/index.d.ts:            fail(actual: any, expected: any, message?: string, operator?: Operator): never;
./node_modules/@types/chai/index.d.ts:            (constructor: any, message?: string): Assertion;
./node_modules/@types/chai/index.d.ts:            (value: any, message?: string): Assertion;
./node_modules/@types/chai/index.d.ts:            (expected: any): Assertion;
./node_modules/@types/chai/index.d.ts:            (name: string | symbol, value: any, message?: string): Assertion;
./node_modules/@types/chai/index.d.ts:            (value: any, message?: string): Assertion;
./node_modules/@types/chai/index.d.ts:            (expression: any, message?: string): asserts expression;
./node_modules/@types/chai/index.d.ts:            containSubset(val: any, exp: any, msg?: string): void;
./node_modules/@types/chai/index.d.ts:            containsSubset(val: any, exp: any, msg?: string): void;
./node_modules/@types/chai/index.d.ts:            doesNotContainSubset(val: any, exp: any, msg?: string): void;
./node_modules/@types/chai/index.d.ts:            nestedInclude(haystack: any, needle: any, message?: string): void;
./node_modules/@types/chai/index.d.ts:            notNestedInclude(haystack: any, needle: any, message?: string): void;
./node_modules/@types/chai/index.d.ts:            deepNestedInclude(haystack: any, needle: any, message?: string): void;
./node_modules/@types/chai/index.d.ts:            notDeepNestedInclude(haystack: any, needle: any, message?: string): void;
./node_modules/@types/chai/index.d.ts:            ownInclude(haystack: any, needle: any, message?: string): void;
./node_modules/@types/chai/index.d.ts:            notOwnInclude(haystack: any, needle: any, message?: string): void;
./node_modules/@types/chai/index.d.ts:            deepOwnInclude(haystack: any, needle: any, message?: string): void;
./node_modules/@types/chai/index.d.ts:            notDeepOwnInclude(haystack: any, needle: any, message?: string): void;
./node_modules/@types/chai/index.d.ts:            notMatch(expected: any, regexp: RegExp, message?: string): void;
./node_modules/@types/chai/index.d.ts:            throw(fn: () => void, errMsgMatcher?: RegExp | string, ignored?: any, message?: string): void;
./node_modules/@types/chai/index.d.ts:            throws(fn: () => void, errMsgMatcher?: RegExp | string, ignored?: any, message?: string): void;
./node_modules/@types/chai/index.d.ts:            Throw(fn: () => void, errMsgMatcher?: RegExp | string, ignored?: any, message?: string): void;
./node_modules/@types/chai/index.d.ts:            doesNotThrow(fn: () => void, errMsgMatcher?: RegExp | string, ignored?: any, message?: string): void;
./node_modules/@types/chai/index.d.ts:            hasAnyKeys<T>(object: T, keys: Array<Object | string> | { [key: string]: any }, message?: string): void;
./node_modules/@types/chai/index.d.ts:            hasAllKeys<T>(object: T, keys: Array<Object | string> | { [key: string]: any }, message?: string): void;
./node_modules/@types/chai/index.d.ts:                keys: Array<Object | string> | { [key: string]: any },
./node_modules/@types/chai/index.d.ts:                keys: Array<Object | string> | { [key: string]: any },
./node_modules/@types/chai/index.d.ts:                keys: Array<Object | string> | { [key: string]: any },
./node_modules/@types/chai/index.d.ts:            hasAnyDeepKeys<T>(object: T, keys: Array<Object | string> | { [key: string]: any }, message?: string): void;
./node_modules/@types/chai/index.d.ts:            hasAllDeepKeys<T>(object: T, keys: Array<Object | string> | { [key: string]: any }, message?: string): void;
./node_modules/@types/chai/index.d.ts:                keys: Array<Object | string> | { [key: string]: any },
./node_modules/@types/chai/index.d.ts:                keys: Array<Object | string> | { [key: string]: any },
./node_modules/@types/chai/index.d.ts:                keys: Array<Object | string> | { [key: string]: any },
./node_modules/@types/chai/index.d.ts:            nestedPropertyVal<T>(object: T, property: string, value: any, message?: string): void;
./node_modules/@types/chai/index.d.ts:            notNestedPropertyVal<T>(object: T, property: string, value: any, message?: string): void;
./node_modules/@types/chai/index.d.ts:            deepNestedPropertyVal<T>(object: T, property: string, value: any, message?: string): void;
./node_modules/@types/chai/index.d.ts:            notDeepNestedPropertyVal<T>(object: T, property: string, value: any, message?: string): void;
./node_modules/@types/chai/index.d.ts:            constructor(message: string, _props?: any, ssf?: Function);
./node_modules/@types/resolve/index.d.ts:    [key: string]: any;
./node_modules/@types/resolve/index.d.ts:        package?: any;
./node_modules/@types/yargs-parser/index.d.ts:        [argName: string]: any;
./node_modules/@types/yargs-parser/index.d.ts:        coerce?: { [key: string]: (arg: any) => any } | undefined;
./node_modules/@types/yargs-parser/index.d.ts:        default?: { [key: string]: any } | undefined;
./node_modules/@types/phoenix/index.d.ts:    receive(status: PushStatus, callback: (response?: any) => any): this;
./node_modules/@types/phoenix/index.d.ts:    onClose(callback: (payload: any, ref: any, joinRef: any) => void | Promise<void>): number;
./node_modules/@types/phoenix/index.d.ts:    onError(callback: (reason?: any) => void | Promise<void>): number;
./node_modules/@types/phoenix/index.d.ts:    onMessage(event: string, payload: any, ref: any): any;
./node_modules/@types/phoenix/index.d.ts:    on(event: string, callback: (response?: any) => void | Promise<void>): number;
./node_modules/@types/phoenix/index.d.ts:    encode: (payload: object, callback: (encoded: any) => void | Promise<void>) => void;
./node_modules/@types/phoenix/index.d.ts:    decode: (payload: string, callback: (decoded: any) => void | Promise<void>) => void;
./node_modules/@types/phoenix/index.d.ts:    logger: (kind: string, message: string, data: any) => void;
./node_modules/@types/phoenix/index.d.ts:    connect(params?: any): void;
./node_modules/@types/phoenix/index.d.ts:    log(kind: string, message: string, data: any): void;
./node_modules/@types/phoenix/index.d.ts:    send(body: any): void;
./node_modules/@types/phoenix/index.d.ts:    close(code?: any, reason?: any): void;
./node_modules/@types/phoenix/index.d.ts:        body: any,
./node_modules/@types/phoenix/index.d.ts:        ontimeout?: any,
./node_modules/@types/phoenix/index.d.ts:        callback?: (response?: any) => void | Promise<void>,
./node_modules/@types/phoenix/index.d.ts:        req: any,
./node_modules/@types/phoenix/index.d.ts:        body: any,
./node_modules/@types/phoenix/index.d.ts:        ontimeout?: any,
./node_modules/@types/phoenix/index.d.ts:        callback?: (response?: any) => void | Promise<void>,
./node_modules/@types/phoenix/index.d.ts:        req: any,
./node_modules/@types/phoenix/index.d.ts:        body: any,
./node_modules/@types/phoenix/index.d.ts:        ontimeout?: any,
./node_modules/@types/phoenix/index.d.ts:        callback?: (response?: any) => void | Promise<void>,
./node_modules/@types/phoenix/index.d.ts:    static serialize(obj: any, parentKey: string): string;
./node_modules/@types/phoenix/index.d.ts:    static appendParams(url: string, params: any): string;
./node_modules/@types/phoenix/index.d.ts:    list<T = any>(chooser?: (key: string, presence: any) => T): T[];
./node_modules/@types/phoenix/index.d.ts:    ): any;
./node_modules/@types/phoenix/index.d.ts:    ): any;
./node_modules/@types/phoenix/index.d.ts:    static list<T = any>(presences: object, chooser?: (key: string, presence: any) => T): T[];
./node_modules/@types/phoenix/index.d.ts:export type PresenceOnJoinCallback = (key?: string, currentPresence?: any, newPresence?: any) => void;
./node_modules/@types/phoenix/index.d.ts:export type PresenceOnLeaveCallback = (key?: string, currentPresence?: any, newPresence?: any) => void;
./node_modules/@types/d3-interpolate/index.d.ts:export function interpolate(a: any, b: null): (t: number) => null;
./node_modules/@types/d3-interpolate/index.d.ts:export function interpolate(a: any, b: boolean): (t: number) => boolean;
./node_modules/@types/d3-interpolate/index.d.ts:export function interpolate<U extends any[]>(a: any[], b: U): (t: number) => U;
./node_modules/@types/d3-interpolate/index.d.ts:export function interpolate<U extends object>(a: any, b: U): (t: number) => U;
./node_modules/@types/d3-interpolate/index.d.ts:export function interpolateArray<A extends any[]>(a: any[], b: A): ArrayInterpolator<A>;
./node_modules/@types/d3-interpolate/index.d.ts:export function interpolateObject<U extends object>(a: any, b: U): (t: number) => U;
./node_modules/@types/d3-interpolate/index.d.ts:    interpolate: (a: any[], b: A) => ArrayInterpolator<A>,
./node_modules/@types/raf/index.d.ts:    polyfill: (globalObject?: any) => void;
./node_modules/@types/qrcode/index.d.ts:    canvas: any,
./node_modules/@types/qrcode/index.d.ts:export function toCanvas(canvas: any, text: string | QRCodeSegment[], options?: QRCodeRenderersOptions): Promise<void>;
./node_modules/@types/qrcode/index.d.ts:    canvas: any,
./node_modules/@types/istanbul-lib-report/index.d.ts:    data: any;
./node_modules/@types/istanbul-lib-report/index.d.ts:    openTag(name: string, attrs?: any): void;
./node_modules/@types/istanbul-lib-report/index.d.ts:    inlineTag(name: string, attrs?: any, content?: string): void;
./node_modules/@types/istanbul-lib-report/index.d.ts:    visit(visitor: Visitor, state: any): void;
./node_modules/@types/istanbul-lib-report/index.d.ts:    visit(visitor: Visitor<ReportNode>, state: any): void;
./node_modules/@types/istanbul-lib-report/index.d.ts:    onStart(root: N, state: any): void;
./node_modules/@types/istanbul-lib-report/index.d.ts:    onSummary(root: N, state: any): void;
./node_modules/@types/istanbul-lib-report/index.d.ts:    onDetail(root: N, state: any): void;
./node_modules/@types/istanbul-lib-report/index.d.ts:    onSummaryEnd(root: N, state: any): void;
./node_modules/@types/istanbul-lib-report/index.d.ts:    onEnd(root: N, state: any): void;
./node_modules/@types/istanbul-lib-report/index.d.ts:    visit(visitor: Partial<Visitor<N>>, state: any): void;
./node_modules/@types/jsdom/base.d.ts:        [key: string]: any;
./node_modules/@types/react-dom/test-utils/index.d.ts:    new(props: any): any;
./node_modules/@types/react-dom/test-utils/index.d.ts:    render(element: ReactElement, context?: any): void;
./node_modules/@types/react-dom/test-utils/index.d.ts:export function isElement(element: any): boolean;
./node_modules/@types/jest-axe/node_modules/axe-core/typings/axe-core/axe-core-tests.ts:var context: any = document;
./node_modules/@types/jest-axe/node_modules/axe-core/typings/axe-core/axe-core-tests.ts:var $fixture: any = {};
./node_modules/@types/jest-axe/node_modules/axe-core/typings/axe-core/axe-core-tests.ts:axe.run().then(function(done: any) {
./node_modules/@types/jest-axe/node_modules/axe-core/typings/axe-core/axe-core-tests.ts:	run: (data: any, callback: Function) => {
./node_modules/@types/jest-axe/node_modules/axe-core/typings/axe-core/axe-core-tests.ts:			callback: (data: any, callback: Function) => {
./node_modules/@types/jest-axe/node_modules/axe-core/axe.d.ts:		data: any;
./node_modules/@types/jest-axe/node_modules/axe-core/axe.d.ts:		options?: any;
./node_modules/@types/jest-axe/node_modules/axe-core/axe.d.ts:		run(...args: any[]): any;
./node_modules/@types/jest-axe/node_modules/axe-core/axe.d.ts:			callback(...args: any[]): void;
./node_modules/@types/jest-axe/node_modules/axe-core/axe.d.ts:	let plugins: any;
./node_modules/@types/babel__traverse/index.d.ts:    (parent: Node, opts?: TraverseOptions, scope?: Scope, state?: any, parentPath?: NodePath): void;
./node_modules/@types/babel__traverse/index.d.ts:        state?: any,
./node_modules/@types/babel__traverse/index.d.ts:        states?: any[],
./node_modules/@types/babel__traverse/index.d.ts:            stateKey: any,
./node_modules/@types/babel__traverse/index.d.ts:    traverse(node: Node | Node[], opts?: TraverseOptions, state?: any): void;
./node_modules/@types/babel__traverse/index.d.ts:    setData(key: string, val: any): any;
./node_modules/@types/babel__traverse/index.d.ts:    getData(key: string): any;
./node_modules/@types/babel__traverse/index.d.ts:    value: any;
./node_modules/@types/babel__traverse/index.d.ts:    setValue(value: any): void;
./node_modules/@types/babel__traverse/index.d.ts:    state: any;
./node_modules/@types/babel__traverse/index.d.ts:    opts: any; // exploded TraverseOptions
./node_modules/@types/babel__traverse/index.d.ts:    setData(key: string | symbol, val: any): any;
./node_modules/@types/babel__traverse/index.d.ts:    getData(key: string | symbol, def?: any): any;
./node_modules/@types/babel__traverse/index.d.ts:    set(key: string, node: any): void;
./node_modules/@types/babel__traverse/index.d.ts:        value: any;
./node_modules/@types/babel__traverse/index.d.ts:    equals(key: string, value: any): boolean;
./node_modules/@types/babel__traverse/index.d.ts:    // equals(key: keyof T, value: any): boolean;
./node_modules/@types/babel__traverse/index.d.ts:    addHelper(name: string): any;
./node_modules/@types/babel__traverse/index.d.ts:    addHelper(name: string): any;
./node_modules/@types/pdf-parse/index.d.ts:        info: any;
./node_modules/@types/pdf-parse/index.d.ts:        metadata: any;
./node_modules/@types/pdf-parse/index.d.ts:        pagerender?: ((pageData: any) => string | Promise<string>) | undefined;
./node_modules/@types/prop-types/index.d.ts:        | ((props: any) => any)
./node_modules/@types/prop-types/index.d.ts:        | (new(props: any) => any);
./node_modules/@types/prop-types/index.d.ts:            props: { [key: string]: any },
./node_modules/@types/prop-types/index.d.ts:    type InferType<V> = V extends Validator<infer T> ? T : any;
./node_modules/@types/prop-types/index.d.ts:    const func: Requireable<(...args: any[]) => any>;
./node_modules/@types/prop-types/index.d.ts:    function instanceOf<T>(expectedClass: new(...args: any[]) => T): Requireable<T>;
./node_modules/@types/prop-types/index.d.ts:        typeSpecs: any,
./node_modules/@types/prop-types/index.d.ts:        values: any,
./node_modules/@types/yargs/index.d.ts:            func: (arg: any) => V,
./node_modules/@types/yargs/index.d.ts:            func: (arg: any) => V,
./node_modules/@types/yargs/index.d.ts:        coerce<O extends { [key: string]: (arg: any) => any }>(
./node_modules/@types/yargs/index.d.ts:        default<D extends { [key: string]: any }>(defaults: D, description?: string): Argv<Omit<T, keyof D> & D>;
./node_modules/@types/yargs/index.d.ts:        onFinishCommand(func: (result: any) => void): Argv<T>;
./node_modules/@types/yargs/index.d.ts:        visit?: ((commandObject: any, pathToFile?: string, filename?: string) => any) | undefined;
./node_modules/@types/yargs/index.d.ts:        coerce?: ((arg: any) => any) | undefined;
./node_modules/@types/yargs/index.d.ts:        default?: any;
./node_modules/@types/yargs/index.d.ts:        coerce?: ((arg: any) => any) | undefined;
./node_modules/@types/yargs/index.d.ts:        default?: any;
./node_modules/@types/yargs/index.d.ts:        O extends ({ coerce: (arg: any) => infer T }) ? IsRequiredOrHasDefault<O> extends true ? T : T | undefined
./node_modules/@types/yargs/index.d.ts:    type SyncCompletionFunction = (current: string, argv: any) => string[];
./node_modules/@types/yargs/index.d.ts:        argv: any,
./node_modules/@types/yargs/index.d.ts:    type PromiseCompletionFunction = (current: string, argv: any) => Promise<string[]>;
./node_modules/@types/yargs/index.d.ts:        argv: any,
./node_modules/@types/yargs/index.d.ts:    type BuilderArguments<T extends (...args: any) => R, R = ReturnType<T>> = R extends Argv<infer X>
./node_modules/@types/eslint/use-at-your-own-risk.d.ts:            configArrayFactory?: any;
./node_modules/@types/eslint/use-at-your-own-risk.d.ts:            extensions?: any;
./node_modules/@types/eslint/use-at-your-own-risk.d.ts:    isTargetPath(filePath: string, providedConfig?: any): boolean;
./node_modules/@types/eslint/use-at-your-own-risk.d.ts:    ): IterableIterator<{ config: any; filePath: string; ignored: boolean }>;
./node_modules/@types/eslint/index.d.ts:        | { type: "TDZ"; node: any; parent: null }
./node_modules/@types/eslint/index.d.ts:        options: any[];
./node_modules/@types/eslint/index.d.ts:        settings: { [name: string]: any };
./node_modules/@types/eslint/index.d.ts:        settings?: { [name: string]: any } | undefined;
./node_modules/@types/eslint/index.d.ts:            [key: string]: any;
./node_modules/@types/eslint/index.d.ts:        [key: string]: any;
./node_modules/@types/eslint/index.d.ts:            parse(text: string, options?: any): unknown;
./node_modules/@types/eslint/index.d.ts:            parseForESLint(text: string, options?: any): Omit<ESLintParseResult, "ast" | "scopeManager"> & {
./node_modules/@types/eslint/index.d.ts:            | { parse(text: string, options?: any): AST.Program }
./node_modules/@types/eslint/index.d.ts:            | { parseForESLint(text: string, options?: any): ESLintParseResult }
./node_modules/@types/eslint/index.d.ts:    static describe: ((...args: any) => any) | null;
./node_modules/@types/eslint/index.d.ts:    static it: ((...args: any) => any) | null;
./node_modules/@types/eslint/index.d.ts:    static itOnly: ((...args: any) => any) | null;
./node_modules/@types/eslint/index.d.ts:        options?: any;
./node_modules/@types/eslint/index.d.ts:        settings?: { [name: string]: any } | undefined;
./node_modules/@types/eslint/index.d.ts:        data?: any;
./node_modules/@types/statuses/index.d.ts:type NonNumericAscii<S> = S extends `${NumericAscii}` ? never : any;
./node_modules/@types/node/compatibility/iterators.d.ts:        : any;
./node_modules/@types/node/domain.d.ts:        run<T>(fn: (...args: any[]) => T, ...args: any[]): T;
./node_modules/@types/node/globals.d.ts:type _Request = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").Request;
./node_modules/@types/node/globals.d.ts:type _Response = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").Response;
./node_modules/@types/node/globals.d.ts:type _FormData = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").FormData;
./node_modules/@types/node/globals.d.ts:type _Headers = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").Headers;
./node_modules/@types/node/globals.d.ts:type _MessageEvent = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").MessageEvent;
./node_modules/@types/node/globals.d.ts:type _RequestInit = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@types/node/globals.d.ts:type _ResponseInit = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@types/node/globals.d.ts:type _WebSocket = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").WebSocket;
./node_modules/@types/node/globals.d.ts:type _EventSource = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").EventSource;
./node_modules/@types/node/globals.d.ts:type _Storage = typeof globalThis extends { onabort: any } ? {} : {
./node_modules/@types/node/globals.d.ts:    [key: string]: any;
./node_modules/@types/node/globals.d.ts:type _DOMException = typeof globalThis extends { onmessage: any } ? {} : NodeDOMException;
./node_modules/@types/node/globals.d.ts:        prepareStackTrace(err: Error, stackTraces: NodeJS.CallSite[]): any;
./node_modules/@types/node/globals.d.ts:    var DOMException: typeof globalThis extends { onmessage: any; DOMException: infer T } ? T
./node_modules/@types/node/globals.d.ts:        abort(reason?: any): void;
./node_modules/@types/node/globals.d.ts:    var AbortController: typeof globalThis extends { onmessage: any; AbortController: infer T } ? T
./node_modules/@types/node/globals.d.ts:        readonly reason: any;
./node_modules/@types/node/globals.d.ts:    var AbortSignal: typeof globalThis extends { onmessage: any; AbortSignal: infer T } ? T
./node_modules/@types/node/globals.d.ts:            abort(reason?: any): AbortSignal;
./node_modules/@types/node/globals.d.ts:    var Storage: typeof globalThis extends { onabort: any; Storage: infer T } ? T
./node_modules/@types/node/globals.d.ts:        onmessage: any;
./node_modules/@types/node/globals.d.ts:        onmessage: any;
./node_modules/@types/node/globals.d.ts:        onmessage: any;
./node_modules/@types/node/globals.d.ts:        onmessage: any;
./node_modules/@types/node/globals.d.ts:        onmessage: any;
./node_modules/@types/node/globals.d.ts:    var WebSocket: typeof globalThis extends { onmessage: any; WebSocket: infer T } ? T
./node_modules/@types/node/globals.d.ts:    var EventSource: typeof globalThis extends { onmessage: any; EventSource: infer T } ? T
./node_modules/@types/node/tls.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/tls.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/tls.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/tls.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/tls.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/tls.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/tls.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/tls.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/tls.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/tls.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/tls.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/tls.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/tls.d.ts:        context: any;
./node_modules/@types/node/tty.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/tty.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/tty.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/tty.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/tty.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/tty.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/readline.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/readline.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/readline.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/readline.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/readline.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/readline.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/crypto.d.ts:            onmessage: any;
./node_modules/@types/node/events.d.ts:    type AnyRest = [...args: any[]];
./node_modules/@types/node/events.d.ts:    type Listener1<K, T> = Listener<K, T, (...args: any[]) => void>;
./node_modules/@types/node/buffer.d.ts:type _Blob = typeof globalThis extends { onmessage: any; Blob: any } ? {} : import("buffer").Blob;
./node_modules/@types/node/buffer.d.ts:type _File = typeof globalThis extends { onmessage: any; File: any } ? {} : import("buffer").File;
./node_modules/@types/node/buffer.d.ts:            isBuffer(obj: any): obj is Buffer;
./node_modules/@types/node/buffer.d.ts:        var Blob: typeof globalThis extends { onmessage: any; Blob: infer T } ? T
./node_modules/@types/node/buffer.d.ts:        var File: typeof globalThis extends { onmessage: any; File: infer T } ? T
./node_modules/@types/node/worker_threads.d.ts:    const workerData: any;
./node_modules/@types/node/worker_threads.d.ts:        postMessage(value: any, transferList?: readonly Transferable[]): void;
./node_modules/@types/node/worker_threads.d.ts:        addListener(event: "message", listener: (value: any) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        emit(event: "message", value: any): boolean;
./node_modules/@types/node/worker_threads.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/worker_threads.d.ts:        on(event: "message", listener: (value: any) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        once(event: "message", listener: (value: any) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        prependListener(event: "message", listener: (value: any) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: "message", listener: (value: any) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        removeListener(event: "message", listener: (value: any) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        off(event: "message", listener: (value: any) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        off(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        argv?: any[] | undefined;
./node_modules/@types/node/worker_threads.d.ts:        workerData?: any;
./node_modules/@types/node/worker_threads.d.ts:        postMessage(value: any, transferList?: readonly Transferable[]): void;
./node_modules/@types/node/worker_threads.d.ts:        postMessageToThread(threadId: number, value: any, timeout?: number): Promise<void>;
./node_modules/@types/node/worker_threads.d.ts:            value: any,
./node_modules/@types/node/worker_threads.d.ts:        addListener(event: "message", listener: (value: any) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        emit(event: "message", value: any): boolean;
./node_modules/@types/node/worker_threads.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/worker_threads.d.ts:        on(event: "message", listener: (value: any) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        once(event: "message", listener: (value: any) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        prependListener(event: "message", listener: (value: any) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: "message", listener: (value: any) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        removeListener(event: "message", listener: (value: any) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        off(event: "message", listener: (value: any) => void): this;
./node_modules/@types/node/worker_threads.d.ts:        off(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/worker_threads.d.ts:            message: any;
./node_modules/@types/node/worker_threads.d.ts:            onmessage: any;
./node_modules/@types/node/worker_threads.d.ts:            onmessage: any;
./node_modules/@types/node/worker_threads.d.ts:            onmessage: any;
./node_modules/@types/node/dom-events.d.ts:type __Event = typeof globalThis extends { onmessage: any } ? {} : Event;
./node_modules/@types/node/dom-events.d.ts:type __CustomEvent<T = any> = typeof globalThis extends { onmessage: any } ? {} : CustomEvent<T>;
./node_modules/@types/node/dom-events.d.ts:type __EventTarget = typeof globalThis extends { onmessage: any } ? {} : EventTarget;
./node_modules/@types/node/dom-events.d.ts:    var Event: typeof globalThis extends { onmessage: any; Event: infer T } ? T
./node_modules/@types/node/dom-events.d.ts:    var CustomEvent: typeof globalThis extends { onmessage: any; CustomEvent: infer T } ? T
./node_modules/@types/node/dom-events.d.ts:    var EventTarget: typeof globalThis extends { onmessage: any; EventTarget: infer T } ? T
./node_modules/@types/node/console.d.ts:            assert(value: any, message?: string, ...optionalParams: any[]): void;
./node_modules/@types/node/console.d.ts:            debug(message?: any, ...optionalParams: any[]): void;
./node_modules/@types/node/console.d.ts:            dir(obj: any, options?: InspectOptions): void;
./node_modules/@types/node/console.d.ts:            dirxml(...data: any[]): void;
./node_modules/@types/node/console.d.ts:            error(message?: any, ...optionalParams: any[]): void;
./node_modules/@types/node/console.d.ts:            group(...label: any[]): void;
./node_modules/@types/node/console.d.ts:            groupCollapsed(...label: any[]): void;
./node_modules/@types/node/console.d.ts:            info(message?: any, ...optionalParams: any[]): void;
./node_modules/@types/node/console.d.ts:            log(message?: any, ...optionalParams: any[]): void;
./node_modules/@types/node/console.d.ts:            table(tabularData: any, properties?: readonly string[]): void;
./node_modules/@types/node/console.d.ts:            timeLog(label?: string, ...data: any[]): void;
./node_modules/@types/node/console.d.ts:            trace(message?: any, ...optionalParams: any[]): void;
./node_modules/@types/node/console.d.ts:            warn(message?: any, ...optionalParams: any[]): void;
./node_modules/@types/node/async_hooks.d.ts:        static bind<Func extends (this: ThisArg, ...args: any[]) => any, ThisArg>(
./node_modules/@types/node/async_hooks.d.ts:        bind<Func extends (...args: any[]) => any>(fn: Func): Func;
./node_modules/@types/node/async_hooks.d.ts:            fn: (this: This, ...args: any[]) => Result,
./node_modules/@types/node/async_hooks.d.ts:            ...args: any[]
./node_modules/@types/node/async_hooks.d.ts:        static bind<Func extends (...args: any[]) => any>(fn: Func): Func;
./node_modules/@types/node/stream/web.d.ts:type _ByteLengthQueuingStrategy = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@types/node/stream/web.d.ts:type _CompressionStream = typeof globalThis extends { onmessage: any; ReportingObserver: any } ? {}
./node_modules/@types/node/stream/web.d.ts:type _CountQueuingStrategy = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@types/node/stream/web.d.ts:type _DecompressionStream = typeof globalThis extends { onmessage: any; ReportingObserver: any } ? {}
./node_modules/@types/node/stream/web.d.ts:type _ReadableByteStreamController = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@types/node/stream/web.d.ts:type _ReadableStream<R = any> = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@types/node/stream/web.d.ts:type _ReadableStreamBYOBReader = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@types/node/stream/web.d.ts:type _ReadableStreamBYOBRequest = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@types/node/stream/web.d.ts:type _ReadableStreamDefaultController<R = any> = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@types/node/stream/web.d.ts:type _ReadableStreamDefaultReader<R = any> = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@types/node/stream/web.d.ts:type _TextDecoderStream = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@types/node/stream/web.d.ts:type _TextEncoderStream = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@types/node/stream/web.d.ts:type _TransformStream<I = any, O = any> = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@types/node/stream/web.d.ts:type _TransformStreamDefaultController<O = any> = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@types/node/stream/web.d.ts:type _WritableStream<W = any> = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@types/node/stream/web.d.ts:type _WritableStreamDefaultController = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@types/node/stream/web.d.ts:type _WritableStreamDefaultWriter<W = any> = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@types/node/stream/web.d.ts:        cancel(reason?: any): Promise<void>;
./node_modules/@types/node/stream/web.d.ts:        (reason?: any): void | PromiseLike<void>;
./node_modules/@types/node/stream/web.d.ts:        (controller: WritableStreamDefaultController): any;
./node_modules/@types/node/stream/web.d.ts:        (reason?: any): void | PromiseLike<void>;
./node_modules/@types/node/stream/web.d.ts:        (controller: ReadableStreamController<R>): any;
./node_modules/@types/node/stream/web.d.ts:        (controller: TransformStreamDefaultController<O>): any;
./node_modules/@types/node/stream/web.d.ts:        (reason: any): void | PromiseLike<void>;
./node_modules/@types/node/stream/web.d.ts:        (reason: any): void | PromiseLike<void>;
./node_modules/@types/node/stream/web.d.ts:        cancel(reason?: any): Promise<void>;
./node_modules/@types/node/stream/web.d.ts:        error(error?: any): void;
./node_modules/@types/node/stream/web.d.ts:        error(e?: any): void;
./node_modules/@types/node/stream/web.d.ts:        error(reason?: any): void;
./node_modules/@types/node/stream/web.d.ts:        abort(reason?: any): Promise<void>;
./node_modules/@types/node/stream/web.d.ts:        abort(reason?: any): Promise<void>;
./node_modules/@types/node/stream/web.d.ts:        error(e?: any): void;
./node_modules/@types/node/stream/web.d.ts:        var ByteLengthQueuingStrategy: typeof globalThis extends { onmessage: any; ByteLengthQueuingStrategy: infer T }
./node_modules/@types/node/stream/web.d.ts:            onmessage: any;
./node_modules/@types/node/stream/web.d.ts:            ReportingObserver: any;
./node_modules/@types/node/stream/web.d.ts:            : typeof globalThis extends { onmessage: any; TransformStream: { prototype: infer T } } ? {
./node_modules/@types/node/stream/web.d.ts:        var CountQueuingStrategy: typeof globalThis extends { onmessage: any; CountQueuingStrategy: infer T } ? T
./node_modules/@types/node/stream/web.d.ts:            onmessage: any;
./node_modules/@types/node/stream/web.d.ts:            ReportingObserver: any;
./node_modules/@types/node/stream/web.d.ts:            : typeof globalThis extends { onmessage: any; TransformStream: { prototype: infer T } } ? {
./node_modules/@types/node/stream/web.d.ts:            { onmessage: any; ReadableByteStreamController: infer T } ? T
./node_modules/@types/node/stream/web.d.ts:        var ReadableStream: typeof globalThis extends { onmessage: any; ReadableStream: infer T } ? T
./node_modules/@types/node/stream/web.d.ts:        var ReadableStreamBYOBReader: typeof globalThis extends { onmessage: any; ReadableStreamBYOBReader: infer T }
./node_modules/@types/node/stream/web.d.ts:        var ReadableStreamBYOBRequest: typeof globalThis extends { onmessage: any; ReadableStreamBYOBRequest: infer T }
./node_modules/@types/node/stream/web.d.ts:            { onmessage: any; ReadableStreamDefaultController: infer T } ? T
./node_modules/@types/node/stream/web.d.ts:            { onmessage: any; ReadableStreamDefaultReader: infer T } ? T
./node_modules/@types/node/stream/web.d.ts:        var TextDecoderStream: typeof globalThis extends { onmessage: any; TextDecoderStream: infer T } ? T
./node_modules/@types/node/stream/web.d.ts:        var TextEncoderStream: typeof globalThis extends { onmessage: any; TextEncoderStream: infer T } ? T
./node_modules/@types/node/stream/web.d.ts:        var TransformStream: typeof globalThis extends { onmessage: any; TransformStream: infer T } ? T
./node_modules/@types/node/stream/web.d.ts:            { onmessage: any; TransformStreamDefaultController: infer T } ? T
./node_modules/@types/node/stream/web.d.ts:        var WritableStream: typeof globalThis extends { onmessage: any; WritableStream: infer T } ? T
./node_modules/@types/node/stream/web.d.ts:            { onmessage: any; WritableStreamDefaultController: infer T } ? T
./node_modules/@types/node/stream/web.d.ts:            { onmessage: any; WritableStreamDefaultWriter: infer T } ? T
./node_modules/@types/node/vm.d.ts:        runInContext(contextifiedObject: Context, options?: RunningScriptOptions): any;
./node_modules/@types/node/vm.d.ts:        ): any;
./node_modules/@types/node/vm.d.ts:        runInThisContext(options?: RunningScriptOptions): any;
./node_modules/@types/node/vm.d.ts:    function runInContext(code: string, contextifiedObject: Context, options?: RunningCodeOptions | string): any;
./node_modules/@types/node/vm.d.ts:    ): any;
./node_modules/@types/node/vm.d.ts:    function runInThisContext(code: string, options?: RunningCodeOptions | string): any;
./node_modules/@types/node/vm.d.ts:        error: any;
./node_modules/@types/node/vm.d.ts:        setExport(name: string, value: any): void;
./node_modules/@types/node/timers.d.ts:                _onImmediate(...args: any[]): void;
./node_modules/@types/node/timers.d.ts:                _onTimeout(...args: any[]): void;
./node_modules/@types/node/test.d.ts:        type TestFn = (t: TestContext, done: (result?: any) => void) => void | Promise<void>;
./node_modules/@types/node/test.d.ts:            addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/test.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/test.d.ts:            on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/test.d.ts:            once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/test.d.ts:            prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/test.d.ts:            prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/test.d.ts:            fileSnapshot(value: any, path: string, options?: AssertSnapshotOptions): void;
./node_modules/@types/node/test.d.ts:            snapshot(value: any, options?: AssertSnapshotOptions): void;
./node_modules/@types/node/test.d.ts:            [name: string]: (...args: any[]) => void;
./node_modules/@types/node/test.d.ts:            serializers?: ReadonlyArray<(value: any) => any> | undefined;
./node_modules/@types/node/test.d.ts:        type HookFn = (c: TestContext | SuiteContext, done: (result?: any) => void) => any;
./node_modules/@types/node/test.d.ts:        type TestContextHookFn = (t: TestContext, done: (result?: any) => void) => any;
./node_modules/@types/node/test.d.ts:            defaultExport?: any;
./node_modules/@types/node/test.d.ts:            fn<F extends Function = (...args: any[]) => undefined>(
./node_modules/@types/node/test.d.ts:            fn<F extends Function = (...args: any[]) => undefined, Implementation extends Function = F>(
./node_modules/@types/node/test.d.ts:            ReturnType = F extends (...args: any) => infer T ? T
./node_modules/@types/node/test.d.ts:                : F extends abstract new(...args: any) => infer T ? T
./node_modules/@types/node/test.d.ts:            target: F extends abstract new(...args: any) => any ? F : undefined;
./node_modules/@types/node/test.d.ts:            function register(name: string, fn: (this: TestContext, ...args: any[]) => void): void;
./node_modules/@types/node/test.d.ts:            function setDefaultSnapshotSerializers(serializers: ReadonlyArray<(value: any) => any>): void;
./node_modules/@types/node/test.d.ts:    interface ReporterConstructorWrapper<T extends new(...args: any[]) => Transform> {
./node_modules/@types/node/http.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http.d.ts:        emit(event: string, ...args: any[]): boolean;
./node_modules/@types/node/http.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/stream.d.ts:    type ComposeFnParam = (source: any) => void;
./node_modules/@types/node/stream.d.ts:            read(size?: number): any;
./node_modules/@types/node/stream.d.ts:            unshift(chunk: any, encoding?: BufferEncoding): void;
./node_modules/@types/node/stream.d.ts:            push(chunk: any, encoding?: BufferEncoding): boolean;
./node_modules/@types/node/stream.d.ts:            map(fn: (data: any, options?: Pick<ArrayOptions, "signal">) => any, options?: ArrayOptions): Readable;
./node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => boolean | Promise<boolean>,
./node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => void | Promise<void>,
./node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => boolean | Promise<boolean>,
./node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => data is T,
./node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => boolean | Promise<boolean>,
./node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => boolean | Promise<boolean>,
./node_modules/@types/node/stream.d.ts:            flatMap(fn: (data: any, options?: Pick<ArrayOptions, "signal">) => any, options?: ArrayOptions): Readable;
./node_modules/@types/node/stream.d.ts:                fn: (previous: any, data: any, options?: Pick<ArrayOptions, "signal">) => T,
./node_modules/@types/node/stream.d.ts:                fn: (previous: T, data: any, options?: Pick<ArrayOptions, "signal">) => T,
./node_modules/@types/node/stream.d.ts:            addListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@types/node/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/stream.d.ts:            emit(event: "data", chunk: any): boolean;
./node_modules/@types/node/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/stream.d.ts:            on(event: "data", listener: (chunk: any) => void): this;
./node_modules/@types/node/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/stream.d.ts:            once(event: "data", listener: (chunk: any) => void): this;
./node_modules/@types/node/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/stream.d.ts:            prependListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@types/node/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/stream.d.ts:            prependOnceListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@types/node/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/stream.d.ts:            removeListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@types/node/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/stream.d.ts:                chunk: any,
./node_modules/@types/node/stream.d.ts:                    chunk: any;
./node_modules/@types/node/stream.d.ts:            _write(chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;
./node_modules/@types/node/stream.d.ts:                    chunk: any;
./node_modules/@types/node/stream.d.ts:            write(chunk: any, callback?: (error: Error | null | undefined) => void): boolean;
./node_modules/@types/node/stream.d.ts:            write(chunk: any, encoding: BufferEncoding, callback?: (error: Error | null | undefined) => void): boolean;
./node_modules/@types/node/stream.d.ts:            end(chunk: any, cb?: () => void): this;
./node_modules/@types/node/stream.d.ts:            end(chunk: any, encoding: BufferEncoding, cb?: () => void): this;
./node_modules/@types/node/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/stream.d.ts:            addListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@types/node/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/stream.d.ts:            emit(event: "data", chunk: any): boolean;
./node_modules/@types/node/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/stream.d.ts:            on(event: "data", listener: (chunk: any) => void): this;
./node_modules/@types/node/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/stream.d.ts:            once(event: "data", listener: (chunk: any) => void): this;
./node_modules/@types/node/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/stream.d.ts:            prependListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@types/node/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/stream.d.ts:            prependOnceListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@types/node/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/stream.d.ts:            removeListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@types/node/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/stream.d.ts:        type TransformCallback = (error?: Error | null, data?: any) => void;
./node_modules/@types/node/stream.d.ts:            transform?(this: T, chunk: any, encoding: BufferEncoding, callback: TransformCallback): void;
./node_modules/@types/node/stream.d.ts:            _transform(chunk: any, encoding: BufferEncoding, callback: TransformCallback): void;
./node_modules/@types/node/stream.d.ts:                source: S extends (...args: any[]) => Iterable<infer ST> | AsyncIterable<infer ST> ? AsyncIterable<ST>
./node_modules/@types/node/inspector.d.ts:            value?: any;
./node_modules/@types/node/inspector.d.ts:            value?: any;
./node_modules/@types/node/inspector.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/inspector.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/inspector.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/inspector.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/inspector.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/inspector.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/inspector.d.ts:        debug(...data: any[]): void;
./node_modules/@types/node/inspector.d.ts:        error(...data: any[]): void;
./node_modules/@types/node/inspector.d.ts:        info(...data: any[]): void;
./node_modules/@types/node/inspector.d.ts:        log(...data: any[]): void;
./node_modules/@types/node/inspector.d.ts:        warn(...data: any[]): void;
./node_modules/@types/node/inspector.d.ts:        dir(...data: any[]): void;
./node_modules/@types/node/inspector.d.ts:        dirxml(...data: any[]): void;
./node_modules/@types/node/inspector.d.ts:        table(...data: any[]): void;
./node_modules/@types/node/inspector.d.ts:        trace(...data: any[]): void;
./node_modules/@types/node/inspector.d.ts:        group(...data: any[]): void;
./node_modules/@types/node/inspector.d.ts:        groupCollapsed(...data: any[]): void;
./node_modules/@types/node/inspector.d.ts:        groupEnd(...data: any[]): void;
./node_modules/@types/node/inspector.d.ts:        clear(...data: any[]): void;
./node_modules/@types/node/inspector.d.ts:        count(label?: any): void;
./node_modules/@types/node/inspector.d.ts:        countReset(label?: any): void;
./node_modules/@types/node/inspector.d.ts:        assert(value?: any, ...data: any[]): void;
./node_modules/@types/node/inspector.d.ts:        profile(label?: any): void;
./node_modules/@types/node/inspector.d.ts:        profileEnd(label?: any): void;
./node_modules/@types/node/inspector.d.ts:        time(label?: any): void;
./node_modules/@types/node/inspector.d.ts:        timeLog(label?: any): void;
./node_modules/@types/node/inspector.d.ts:        timeStamp(label?: any): void;
./node_modules/@types/node/inspector.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/inspector.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/inspector.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/inspector.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/inspector.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/inspector.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/v8.d.ts:        writeValue(val: any): boolean;
./node_modules/@types/node/v8.d.ts:        readValue(): any;
./node_modules/@types/node/v8.d.ts:    function serialize(value: any): Buffer;
./node_modules/@types/node/v8.d.ts:    function deserialize(buffer: NodeJS.ArrayBufferView): any;
./node_modules/@types/node/v8.d.ts:    type StartupSnapshotCallbackFn = (args: any) => any;
./node_modules/@types/node/v8.d.ts:        addSerializeCallback(callback: StartupSnapshotCallbackFn, data?: any): void;
./node_modules/@types/node/v8.d.ts:        addDeserializeCallback(callback: StartupSnapshotCallbackFn, data?: any): void;
./node_modules/@types/node/v8.d.ts:        setDeserializeMainFunction(callback: StartupSnapshotCallbackFn, data?: any): void;
./node_modules/@types/node/perf_hooks.d.ts:        toJSON(): any;
./node_modules/@types/node/perf_hooks.d.ts:        timerify<T extends (...params: any[]) => any>(fn: T, options?: TimerifyOptions): T;
./node_modules/@types/node/perf_hooks.d.ts:        toJSON(): any;
./node_modules/@types/node/perf_hooks.d.ts:        toJSON(): any;
./node_modules/@types/node/perf_hooks.d.ts:            onmessage: any;
./node_modules/@types/node/perf_hooks.d.ts:            onmessage: any;
./node_modules/@types/node/perf_hooks.d.ts:            onmessage: any;
./node_modules/@types/node/perf_hooks.d.ts:            onmessage: any;
./node_modules/@types/node/perf_hooks.d.ts:            onmessage: any;
./node_modules/@types/node/perf_hooks.d.ts:            onmessage: any;
./node_modules/@types/node/perf_hooks.d.ts:            onmessage: any;
./node_modules/@types/node/url.d.ts:            onmessage: any;
./node_modules/@types/node/url.d.ts:            onmessage: any;
./node_modules/@types/node/cluster.d.ts:        stdio?: any[] | undefined;
./node_modules/@types/node/cluster.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/cluster.d.ts:        addListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@types/node/cluster.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/cluster.d.ts:        emit(event: "message", message: any, handle: net.Socket | net.Server): boolean;
./node_modules/@types/node/cluster.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/cluster.d.ts:        on(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@types/node/cluster.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/cluster.d.ts:        once(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@types/node/cluster.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/cluster.d.ts:        prependListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@types/node/cluster.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/cluster.d.ts:        prependOnceListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@types/node/cluster.d.ts:        fork(env?: any): Worker;
./node_modules/@types/node/cluster.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/cluster.d.ts:            listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@types/node/cluster.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/cluster.d.ts:        emit(event: "message", worker: Worker, message: any, handle: net.Socket | net.Server): boolean;
./node_modules/@types/node/cluster.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/cluster.d.ts:        on(event: "message", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@types/node/cluster.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/cluster.d.ts:        once(event: "message", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@types/node/cluster.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/cluster.d.ts:            listener: (worker: Worker, message: any, handle?: net.Socket | net.Server) => void,
./node_modules/@types/node/cluster.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/cluster.d.ts:            listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@types/node/https.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/https.d.ts:        emit(event: string, ...args: any[]): boolean;
./node_modules/@types/node/https.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/https.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/https.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/https.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/assert.d.ts:            calls<Func extends (...args: any[]) => any>(fn?: Func, exact?: number): Func;
./node_modules/@types/node/fs.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/fs.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/fs.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/fs.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/fs.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/fs.d.ts:    type CustomEvents = { [Key in string & {} | symbol]: (...args: any[]) => void };
./node_modules/@types/node/fs.d.ts:        open?: (...args: any[]) => any;
./node_modules/@types/node/fs.d.ts:        close?: (...args: any[]) => any;
./node_modules/@types/node/fs.d.ts:        read: (...args: any[]) => any;
./node_modules/@types/node/fs.d.ts:        write: (...args: any[]) => any;
./node_modules/@types/node/fs.d.ts:        writev?: (...args: any[]) => any;
./node_modules/@types/node/repl.d.ts:        cb: (err: Error | null, result: any) => void,
./node_modules/@types/node/repl.d.ts:    type REPLWriter = (this: REPLServer, obj: any) => string;
./node_modules/@types/node/repl.d.ts:        readonly last: any;
./node_modules/@types/node/repl.d.ts:        readonly lastError: any;
./node_modules/@types/node/repl.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/repl.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/repl.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/repl.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/repl.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/repl.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/dgram.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/dgram.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/dgram.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/dgram.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/dgram.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/dgram.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/child_process.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/child_process.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/child_process.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/child_process.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/child_process.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/child_process.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/module.d.ts:            transferList?: any[] | undefined;
./node_modules/@types/node/module.d.ts:                exports: any;
./node_modules/@types/node/module.d.ts:                require(id: string): any;
./node_modules/@types/node/module.d.ts:                (id: string): any;
./node_modules/@types/node/process.d.ts:                    readonly cflags: any[];
./node_modules/@types/node/process.d.ts:                nextTick(callback: Function, ...args: any[]): void;
./node_modules/@types/node/process.d.ts:                    message: any,
./node_modules/@types/node/process.d.ts:                    sendHandle?: any,
./node_modules/@types/node/process.d.ts:                ref(maybeRefable: any): void;
./node_modules/@types/node/process.d.ts:                unref(maybeRefable: any): void;
./node_modules/@types/node/process.d.ts:                on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/process.d.ts:                once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/node/util.d.ts:    export function format(format?: any, ...param: any[]): string;
./node_modules/@types/node/util.d.ts:    export function formatWithOptions(inspectOptions: InspectOptions, format?: any, ...param: any[]): string;
./node_modules/@types/node/util.d.ts:    export function aborted(signal: AbortSignal, resource: any): Promise<void>;
./node_modules/@types/node/util.d.ts:    export function inspect(object: any, showHidden?: boolean, depth?: number | null, color?: boolean): string;
./node_modules/@types/node/util.d.ts:    export function inspect(object: any, options?: InspectOptions): string;
./node_modules/@types/node/util.d.ts:        fn: (callback: (err: any, result: TResult) => void) => void,
./node_modules/@types/node/util.d.ts:    export function promisify(fn: (callback: (err?: any) => void) => void): () => Promise<void>;
./node_modules/@types/node/util.d.ts:        fn: (arg1: T1, callback: (err: any, result: TResult) => void) => void,
./node_modules/@types/node/util.d.ts:    export function promisify<T1>(fn: (arg1: T1, callback: (err?: any) => void) => void): (arg1: T1) => Promise<void>;
./node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, callback: (err: any, result: TResult) => void) => void,
./node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, callback: (err?: any) => void) => void,
./node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, callback: (err: any, result: TResult) => void) => void,
./node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, callback: (err?: any) => void) => void,
./node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: (err: any, result: TResult) => void) => void,
./node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: (err?: any) => void) => void,
./node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: (err: any, result: TResult) => void) => void,
./node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: (err?: any) => void) => void,
./node_modules/@types/node/util.d.ts:            onmessage: any;
./node_modules/@types/node/util.d.ts:            onmessage: any;
./node_modules/@types/node/net.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/net.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/net.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/net.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/net.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/net.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/net.d.ts:        listen(handle: any, backlog?: number, listeningListener?: () => void): this;
./node_modules/@types/node/net.d.ts:        listen(handle: any, listeningListener?: () => void): this;
./node_modules/@types/node/net.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/net.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@types/node/net.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/net.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/net.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/node/net.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@types/exceljs/index.d.ts:	formulae: any[];
./node_modules/@types/exceljs/index.d.ts:	values: any[] | any;
./node_modules/@types/exceljs/index.d.ts:	splice(start: number, count: number, ...insert: any[]): void;
./node_modules/@types/exceljs/index.d.ts:	spliceColumns(start: number, count: number, ...insert: any[][]): void;
./node_modules/@types/exceljs/index.d.ts:	spliceRows(start: number, count: number, ...insert: any[][]): void;
./node_modules/@types/exceljs/index.d.ts:	addRow(data: any[] | any): Row;
./node_modules/@types/exceljs/index.d.ts:	addRows(rows: any[]): void;
./node_modules/@types/exceljs/index.d.ts:	map?(value: any, index: number): any;
./node_modules/@types/exceljs/index.d.ts:	function setValue(key: 'promise', promise: any): void;
./node_modules/@types/babel__core/index.d.ts:            callback: (path: NodePath, state: any) => void,
./node_modules/@types/babel__core/index.d.ts:        ) => (path: NodePath, state: any) => void)
./node_modules/@types/babel__core/index.d.ts:    manipulateOptions?(opts: any, parserOpts: any): void;
./node_modules/@types/babel__core/index.d.ts:    inherits?: any;
./node_modules/@types/babel__core/index.d.ts:    get(key: unknown): any;
./node_modules/@types/babel__core/index.d.ts:    value: object | ((...args: any[]) => any);
./node_modules/@types/babel__core/index.d.ts:export type PluginTarget = string | object | ((...args: any[]) => any);
./node_modules/@types/tough-cookie/index.d.ts:    toJSON(): { [key: string]: any };
./node_modules/@types/tough-cookie/index.d.ts:        [key: string]: any;
./node_modules/@types/react/ts5.0/index.d.ts:     * type SrcComponents = ElementType<{ src: any }>;
./node_modules/@types/react/ts5.0/index.d.ts:     * type SrcComponents = ElementType<{ src: any }, 'audio' | 'embed'>;
./node_modules/@types/react/ts5.0/index.d.ts:            deprecatedLegacyContext?: any,
./node_modules/@types/react/ts5.0/index.d.ts:            deprecatedLegacyContext?: any,
./node_modules/@types/react/ts5.0/index.d.ts:            | { new(props: any): Component<any> }
./node_modules/@types/react/ts5.0/index.d.ts:            | ((props: any, deprecatedLegacyContext?: any) => ReactElement | null)
./node_modules/@types/react/ts5.0/index.d.ts:        count(children: any): number;
./node_modules/@types/react/ts5.0/index.d.ts:        constructor(props: P, context: any);
./node_modules/@types/react/ts5.0/index.d.ts:            deprecatedLegacyContext?: any,
./node_modules/@types/react/ts5.0/index.d.ts:            deprecatedLegacyContext?: any,
./node_modules/@types/react/ts5.0/index.d.ts:            deprecatedLegacyContext?: any,
./node_modules/@types/react/ts5.0/index.d.ts:        new(props: P, deprecatedLegacyContext?: any): ClassicComponent<P, ComponentState>;
./node_modules/@types/react/ts5.0/index.d.ts:        & (new(props: P, deprecatedLegacyContext?: any) => T);
./node_modules/@types/react/ts5.0/index.d.ts:        shouldComponentUpdate?(nextProps: Readonly<P>, nextState: Readonly<S>, nextContext: any): boolean;
./node_modules/@types/react/ts5.0/index.d.ts:        (error: any) => Partial<S> | null;
./node_modules/@types/react/ts5.0/index.d.ts:        componentWillReceiveProps?(nextProps: Readonly<P>, nextContext: any): void;
./node_modules/@types/react/ts5.0/index.d.ts:        UNSAFE_componentWillReceiveProps?(nextProps: Readonly<P>, nextContext: any): void;
./node_modules/@types/react/ts5.0/index.d.ts:        componentWillUpdate?(nextProps: Readonly<P>, nextState: Readonly<S>, nextContext: any): void;
./node_modules/@types/react/ts5.0/index.d.ts:        UNSAFE_componentWillUpdate?(nextProps: Readonly<P>, nextState: Readonly<S>, nextContext: any): void;
./node_modules/@types/react/ts5.0/index.d.ts:            [key: string]: any;
./node_modules/@types/react/ts5.0/index.d.ts:        [propertyName: string]: any;
./node_modules/@types/react/ts5.0/index.d.ts:        : T extends ((props: infer P, legacyContext?: any) => ReactNode) ? PropsWithRef<P>
./node_modules/@types/react/ts5.0/index.d.ts:        inlist?: any;
./node_modules/@types/react/ts5.0/index.d.ts:        download?: any;
./node_modules/@types/react/ts5.0/index.d.ts:        download?: any;
./node_modules/@types/react/ts5.0/index.d.ts:        download?: any;
./node_modules/@types/react/ts5.0/index.d.ts:        count(children: any): number;
./node_modules/@types/react/index.d.ts:     * type SrcComponents = ElementType<{ src: any }>;
./node_modules/@types/react/index.d.ts:     * type SrcComponents = ElementType<{ src: any }, 'audio' | 'embed'>;
./node_modules/@types/react/index.d.ts:            deprecatedLegacyContext?: any,
./node_modules/@types/react/index.d.ts:            deprecatedLegacyContext?: any,
./node_modules/@types/react/index.d.ts:            | { new(props: any): Component<any> }
./node_modules/@types/react/index.d.ts:            | ((props: any, deprecatedLegacyContext?: any) => ReactNode)
./node_modules/@types/react/index.d.ts:        count(children: any): number;
./node_modules/@types/react/index.d.ts:        constructor(props: P, context: any);
./node_modules/@types/react/index.d.ts:            deprecatedLegacyContext?: any,
./node_modules/@types/react/index.d.ts:            deprecatedLegacyContext?: any,
./node_modules/@types/react/index.d.ts:            deprecatedLegacyContext?: any,
./node_modules/@types/react/index.d.ts:        new(props: P, deprecatedLegacyContext?: any): ClassicComponent<P, ComponentState>;
./node_modules/@types/react/index.d.ts:        & (new(props: P, deprecatedLegacyContext?: any) => T);
./node_modules/@types/react/index.d.ts:        shouldComponentUpdate?(nextProps: Readonly<P>, nextState: Readonly<S>, nextContext: any): boolean;
./node_modules/@types/react/index.d.ts:        (error: any) => Partial<S> | null;
./node_modules/@types/react/index.d.ts:        componentWillReceiveProps?(nextProps: Readonly<P>, nextContext: any): void;
./node_modules/@types/react/index.d.ts:        UNSAFE_componentWillReceiveProps?(nextProps: Readonly<P>, nextContext: any): void;
./node_modules/@types/react/index.d.ts:        componentWillUpdate?(nextProps: Readonly<P>, nextState: Readonly<S>, nextContext: any): void;
./node_modules/@types/react/index.d.ts:        UNSAFE_componentWillUpdate?(nextProps: Readonly<P>, nextState: Readonly<S>, nextContext: any): void;
./node_modules/@types/react/index.d.ts:            [key: string]: any;
./node_modules/@types/react/index.d.ts:        [propertyName: string]: any;
./node_modules/@types/react/index.d.ts:        : T extends ((props: infer P, legacyContext?: any) => ReactNode) ? PropsWithRef<P>
./node_modules/@types/react/index.d.ts:        inlist?: any;
./node_modules/@types/react/index.d.ts:        download?: any;
./node_modules/@types/react/index.d.ts:        download?: any;
./node_modules/@types/react/index.d.ts:        download?: any;
./node_modules/@types/react/index.d.ts:        count(children: any): number;
./node_modules/@types/ws/index.d.ts:    ping(data?: any, mask?: boolean, cb?: (err: Error) => void): void;
./node_modules/@types/ws/index.d.ts:    pong(data?: any, mask?: boolean, cb?: (err: Error) => void): void;
./node_modules/@types/ws/index.d.ts:    on(event: string | symbol, listener: (this: WebSocket, ...args: any[]) => void): this;
./node_modules/@types/ws/index.d.ts:    once(event: string | symbol, listener: (this: WebSocket, ...args: any[]) => void): this;
./node_modules/@types/ws/index.d.ts:    off(event: string | symbol, listener: (this: WebSocket, ...args: any[]) => void): this;
./node_modules/@types/ws/index.d.ts:    addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/ws/index.d.ts:    removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/ws/index.d.ts:        error: any;
./node_modules/@types/ws/index.d.ts:        on(event: string | symbol, listener: (this: Server<T>, ...args: any[]) => void): this;
./node_modules/@types/ws/index.d.ts:        once(event: string | symbol, listener: (this: Server<T>, ...args: any[]) => void): this;
./node_modules/@types/ws/index.d.ts:        off(event: string | symbol, listener: (this: Server<T>, ...args: any[]) => void): this;
./node_modules/@types/ws/index.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/ws/index.d.ts:        removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@types/json-schema/index.d.ts:    [k: string]: any;
./node_modules/@types/json-schema/index.d.ts:    value: any,
./node_modules/@types/jest/node_modules/pretty-format/build/index.d.ts:    val: any,
./node_modules/@types/jest/node_modules/pretty-format/build/index.d.ts:declare type Test = (arg0: any) => boolean;
./node_modules/@types/jest/index.d.ts:    fallback: Array<T extends ReadonlyArray<infer U> ? U : any>;
./node_modules/@types/jest/index.d.ts:    function isMockFunction(fn: any): fn is Mock;
./node_modules/@types/jest/index.d.ts:    ): ConstructorProperties<Required<T>>[M] extends new(...args: any[]) => any ? SpyInstance<
./node_modules/@types/jest/index.d.ts:    type MockableFunction = (...args: any[]) => any;
./node_modules/@types/jest/index.d.ts:    type ConstructorReturnType<T> = T extends new(...args: any) => infer C ? C : any;
./node_modules/@types/jest/index.d.ts:    type MaybeMockedConstructor<T> = T extends new(...args: any[]) => infer R
./node_modules/@types/jest/index.d.ts:    type Constructor = new(...args: any[]) => any;
./node_modules/@types/jest/index.d.ts:    type Func = (...args: any[]) => any;
./node_modules/@types/jest/index.d.ts:    type FunctionProperties<T> = { [K in keyof T as T[K] extends (...args: any[]) => any ? K : never]: T[K] };
./node_modules/@types/jest/index.d.ts:        (...args: any[]): any;
./node_modules/@types/jest/index.d.ts:        fail(error?: string | { message: string }): any;
./node_modules/@types/jest/index.d.ts:            fn: (...args: any[]) => any,
./node_modules/@types/jest/index.d.ts:        (strings: TemplateStringsArray, ...placeholders: any[]): (
./node_modules/@types/jest/index.d.ts:            fn: (arg: any, done: DoneCallback) => any,
./node_modules/@types/jest/index.d.ts:    type EqualityTester = (a: any, b: any) => boolean | undefined;
./node_modules/@types/jest/index.d.ts:    type MatcherUtils = import("expect").MatcherUtils & { [other: string]: any };
./node_modules/@types/jest/index.d.ts:        received: any,
./node_modules/@types/jest/index.d.ts:        ...actual: any[]
./node_modules/@types/jest/index.d.ts:        arrayContaining<E = any>(arr: readonly E[]): any;
./node_modules/@types/jest/index.d.ts:        objectContaining<E = {}>(obj: E): any;
./node_modules/@types/jest/index.d.ts:        stringMatching(str: string | RegExp): any;
./node_modules/@types/jest/index.d.ts:        stringContaining(str: string): any;
./node_modules/@types/jest/index.d.ts:        anything(): any;
./node_modules/@types/jest/index.d.ts:        any(classType: any): any;
./node_modules/@types/jest/index.d.ts:        arrayContaining<E = any>(arr: readonly E[]): any;
./node_modules/@types/jest/index.d.ts:        closeTo(num: number, numDigits?: number): any;
./node_modules/@types/jest/index.d.ts:        objectContaining<E = {}>(obj: E): any;
./node_modules/@types/jest/index.d.ts:        stringMatching(str: string | RegExp): any;
./node_modules/@types/jest/index.d.ts:        stringContaining(str: string): any;
./node_modules/@types/jest/index.d.ts:        toMatchSnapshot<U extends { [P in keyof T]: any }>(propertyMatchers: Partial<U>, snapshotName?: string): R;
./node_modules/@types/jest/index.d.ts:        toMatchInlineSnapshot<U extends { [P in keyof T]: any }>(propertyMatchers: Partial<U>, snapshot?: string): R;
./node_modules/@types/jest/index.d.ts:        : ((...b: T) => void) extends (a: any, ...b: infer I) => void ? I
./node_modules/@types/jest/index.d.ts:    type CustomAsymmetricMatcher<TMatcher extends (...args: any[]) => any> = (
./node_modules/@types/jest/index.d.ts:    type CustomJestMatcher<TMatcher extends (...args: any[]) => any, TMatcherReturn> = (
./node_modules/@types/jest/index.d.ts:        new(...args: any[]): any;
./node_modules/@types/jest/index.d.ts:    type SpiedClass<T extends abstract new(...args: any) => any> = SpyInstance<
./node_modules/@types/jest/index.d.ts:        T extends abstract new(...args: any) => infer C ? C : never
./node_modules/@types/jest/index.d.ts:    type SpiedFunction<T extends (...args: any) => any> = SpyInstance<
./node_modules/@types/jest/index.d.ts:        T extends (this: infer C, ...args: any) => any ? C : never
./node_modules/@types/jest/index.d.ts:    type Spied<T extends (abstract new(...args: any) => any) | ((...args: any) => any)> = T extends abstract new(
./node_modules/@types/jest/index.d.ts:        ...args: any
./node_modules/@types/jest/index.d.ts:        : T extends (...args: any) => any ? SpiedFunction<T>
./node_modules/@types/jest/index.d.ts:    type MockedFunction<T extends (...args: any[]) => any> =
./node_modules/@types/jest/index.d.ts:            T extends (this: infer C, ...args: any[]) => any ? C : never
./node_modules/@types/jest/index.d.ts:            T extends new(...args: any[]) => infer C ? C : never
./node_modules/@types/jest/index.d.ts:            prototype: T extends { prototype: any } ? Mocked<T["prototype"]> : never;
./node_modules/@types/jest/index.d.ts:            [P in keyof T]: T[P] extends (this: infer C, ...args: any[]) => any
./node_modules/@types/jest/index.d.ts:        value: any;
./node_modules/@types/jest/index.d.ts:declare function fail(error?: any): never;
./node_modules/@types/jest/index.d.ts:    function any(aclass: any): Any;
./node_modules/@types/jest/index.d.ts:    function objectContaining(sample: any): ObjectContaining;
./node_modules/@types/jest/index.d.ts:    function createSpy(name?: string, originalFn?: (...args: any[]) => any): Spy;
./node_modules/@types/jest/index.d.ts:    function createSpyObj(baseName: string, methodNames: any[]): any;
./node_modules/@types/jest/index.d.ts:    function createSpyObj<T>(baseName: string, methodNames: any[]): T;
./node_modules/@types/jest/index.d.ts:    function pp(value: any): string;
./node_modules/@types/jest/index.d.ts:        new(expectedClass: any): any;
./node_modules/@types/jest/index.d.ts:        jasmineMatches(other: any): boolean;
./node_modules/@types/jest/index.d.ts:        new(sample: readonly any[]): any;
./node_modules/@types/jest/index.d.ts:        asymmetricMatch(other: any): boolean;
./node_modules/@types/jest/index.d.ts:        new(sample: any): any;
./node_modules/@types/jest/index.d.ts:        jasmineMatches(other: any, mismatchKeys: any[], mismatchValues: any[]): boolean;
./node_modules/@types/jest/index.d.ts:        (...params: any[]): any;
./node_modules/@types/jest/index.d.ts:        mostRecentCall: { args: any[] };
./node_modules/@types/jest/index.d.ts:        argsForCall: any[];
./node_modules/@types/jest/index.d.ts:        returnValue(val: any): Spy;
./node_modules/@types/jest/index.d.ts:        returnValues(...values: any[]): Spy;
./node_modules/@types/jest/index.d.ts:        callFake(fn: (...args: any[]) => any): Spy;
./node_modules/@types/jest/index.d.ts:        argsFor(index: number): any[];
./node_modules/@types/jest/index.d.ts:        allArgs(): any[];
./node_modules/@types/jest/index.d.ts:        object: any;
./node_modules/@types/jest/index.d.ts:        args: any[];
./node_modules/@types/jest/index.d.ts:        returnValue: any;
./node_modules/@types/jest/index.d.ts:        equals(a: any, b: any, customTesters?: CustomEqualityTester[]): boolean;
./node_modules/@types/jest/index.d.ts:        contains<T>(haystack: ArrayLike<T> | string, needle: any, customTesters?: CustomEqualityTester[]): boolean;
./node_modules/@types/jest/index.d.ts:        buildFailureMessage(matcherName: string, isNot: boolean, actual: any, ...expected: any[]): string;
./node_modules/@types/jest/index.d.ts:    type CustomEqualityTester = (first: any, second: any) => boolean;
./node_modules/@types/jest/index.d.ts:        compare<T>(actual: T, expected: T, ...args: any[]): CustomMatcherResult;
./node_modules/@types/jest/index.d.ts:        compare(actual: any, ...expected: any[]): CustomMatcherResult;
./node_modules/node-abort-controller/index.d.ts:  reason?: any;
./node_modules/node-abort-controller/index.d.ts:    listener: (this: AbortSignal, event: any) => any,
./node_modules/node-abort-controller/index.d.ts:    listener: (this: AbortSignal, event: any) => any,
./node_modules/node-abort-controller/index.d.ts:  dispatchEvent: (event: any) => boolean;
./node_modules/node-abort-controller/index.d.ts:  onabort: null | ((this: AbortSignal, event: any) => void);
./node_modules/node-abort-controller/index.d.ts:  static abort(reason?: any): AbortSignal;
./node_modules/node-abort-controller/index.d.ts:  abort(reason?: any): void;
./node_modules/pino-std-serializers/index.d.ts:  [key: string]: any;
./node_modules/pino-std-serializers/index.d.ts:  [key: number]: any;
./node_modules/@xtuc/long/index.d.ts:    static isLong(obj: any): obj is Long;
./node_modules/rate-limiter-flexible/lib/index.d.ts:        options?: { [key: string]: any }
./node_modules/rate-limiter-flexible/lib/index.d.ts:        options?: { [key: string]: any }
./node_modules/rate-limiter-flexible/lib/index.d.ts:        options?: { [key: string]: any }
./node_modules/rate-limiter-flexible/lib/index.d.ts:        options?: { [key: string]: any }
./node_modules/rate-limiter-flexible/lib/index.d.ts:        options?: { [key: string]: any }
./node_modules/rate-limiter-flexible/lib/index.d.ts:        options?: { [key: string]: any }
./node_modules/rate-limiter-flexible/lib/index.d.ts:        options?: { [key: string]: any }
./node_modules/rate-limiter-flexible/lib/index.d.ts:    storeClient: any;
./node_modules/rate-limiter-flexible/lib/index.d.ts:        [key: string]: any;
./node_modules/rate-limiter-flexible/lib/index.d.ts:    isBlackListed?(key: any): boolean;
./node_modules/rate-limiter-flexible/lib/index.d.ts:    isWhiteListed?(key: any): boolean;
./node_modules/rate-limiter-flexible/lib/index.d.ts:    constructor(pm2: any);
./node_modules/rate-limiter-flexible/lib/index.d.ts:    attrs: { [key: string]: any };
./node_modules/rate-limiter-flexible/lib/index.d.ts:    storeClient: any; // GlideClient | GlideClusterClient;
./node_modules/browserslist/error.d.ts:  constructor(message: any)
./node_modules/pino/test/types/pino.test-d.ts:const listener = (lvl: any, val: any, prevLvl: any, prevVal: any) => {
./node_modules/pino/pino.d.ts:    censor?: string | ((value: any, path: string[]) => any);
./node_modules/pino/pino.d.ts:    type SerializerFn = (value: any) => any;
./node_modules/pino/pino.d.ts:        write: (data: any) => void,
./node_modules/pino/pino.d.ts:        // TODO: why is this different from `obj: object` or `obj: any`?
./node_modules/pino/pino.d.ts:        <T extends object>(obj: T, msg?: string, ...args: any[]): void;
./node_modules/pino/pino.d.ts:        (obj: unknown, msg?: string, ...args: any[]): void;
./node_modules/pino/pino.d.ts:        (msg: string, ...args: any[]): void;
./node_modules/pino/pino.d.ts:         * Caution: any sort of formatted time will significantly slow down Pino's performance.
./node_modules/pino/pino.d.ts:        base?: { [key: string]: any } | null;
./node_modules/pino/pino.d.ts:        messages: any[];
./node_modules/web-streams-polyfill/dist/types/ts3.6/ponyfill.d.ts:    readonly reason?: any;
./node_modules/web-streams-polyfill/dist/types/ts3.6/ponyfill.d.ts:    get size(): (chunk: any) => 1;
./node_modules/web-streams-polyfill/dist/types/ts3.6/ponyfill.d.ts:    error(e?: any): void;
./node_modules/web-streams-polyfill/dist/types/ts3.6/ponyfill.d.ts:    cancel(reason?: any): Promise<void>;
./node_modules/web-streams-polyfill/dist/types/ts3.6/ponyfill.d.ts:    return(value?: any): Promise<IteratorResult<any>>;
./node_modules/web-streams-polyfill/dist/types/ts3.6/ponyfill.d.ts:    cancel(reason?: any): Promise<void>;
./node_modules/web-streams-polyfill/dist/types/ts3.6/ponyfill.d.ts:    error(e?: any): void;
./node_modules/web-streams-polyfill/dist/types/ts3.6/ponyfill.d.ts:    cancel(reason?: any): Promise<void>;
./node_modules/web-streams-polyfill/dist/types/ts3.6/ponyfill.d.ts:    cancel(reason?: any): Promise<void>;
./node_modules/web-streams-polyfill/dist/types/ts3.6/ponyfill.d.ts:export declare type TransformerCancelCallback = (reason: any) => void | PromiseLike<void>;
./node_modules/web-streams-polyfill/dist/types/ts3.6/ponyfill.d.ts:    error(reason?: any): void;
./node_modules/web-streams-polyfill/dist/types/ts3.6/ponyfill.d.ts:export declare type UnderlyingSinkAbortCallback = (reason: any) => void | PromiseLike<void>;
./node_modules/web-streams-polyfill/dist/types/ts3.6/ponyfill.d.ts:export declare type UnderlyingSourceCancelCallback = (reason: any) => void | PromiseLike<void>;
./node_modules/web-streams-polyfill/dist/types/ts3.6/ponyfill.d.ts:    abort(reason?: any): Promise<void>;
./node_modules/web-streams-polyfill/dist/types/ts3.6/ponyfill.d.ts:    get abortReason(): any;
./node_modules/web-streams-polyfill/dist/types/ts3.6/ponyfill.d.ts:    error(e?: any): void;
./node_modules/web-streams-polyfill/dist/types/ts3.6/ponyfill.d.ts:    abort(reason?: any): Promise<void>;
./node_modules/web-streams-polyfill/dist/types/ponyfill.d.ts:    readonly reason?: any;
./node_modules/web-streams-polyfill/dist/types/ponyfill.d.ts:    readonly size: (chunk: any) => 1;
./node_modules/web-streams-polyfill/dist/types/ponyfill.d.ts:    error(e?: any): void;
./node_modules/web-streams-polyfill/dist/types/ponyfill.d.ts:    cancel(reason?: any): Promise<void>;
./node_modules/web-streams-polyfill/dist/types/ponyfill.d.ts:    return(value?: any): Promise<IteratorResult<any>>;
./node_modules/web-streams-polyfill/dist/types/ponyfill.d.ts:    cancel(reason?: any): Promise<void>;
./node_modules/web-streams-polyfill/dist/types/ponyfill.d.ts:    error(e?: any): void;
./node_modules/web-streams-polyfill/dist/types/ponyfill.d.ts:    cancel(reason?: any): Promise<void>;
./node_modules/web-streams-polyfill/dist/types/ponyfill.d.ts:    cancel(reason?: any): Promise<void>;
./node_modules/web-streams-polyfill/dist/types/ponyfill.d.ts:export declare type TransformerCancelCallback = (reason: any) => void | PromiseLike<void>;
./node_modules/web-streams-polyfill/dist/types/ponyfill.d.ts:    error(reason?: any): void;
./node_modules/web-streams-polyfill/dist/types/ponyfill.d.ts:export declare type UnderlyingSinkAbortCallback = (reason: any) => void | PromiseLike<void>;
./node_modules/web-streams-polyfill/dist/types/ponyfill.d.ts:export declare type UnderlyingSourceCancelCallback = (reason: any) => void | PromiseLike<void>;
./node_modules/web-streams-polyfill/dist/types/ponyfill.d.ts:    abort(reason?: any): Promise<void>;
./node_modules/web-streams-polyfill/dist/types/ponyfill.d.ts:    readonly abortReason: any;
./node_modules/web-streams-polyfill/dist/types/ponyfill.d.ts:    error(e?: any): void;
./node_modules/web-streams-polyfill/dist/types/ponyfill.d.ts:    abort(reason?: any): Promise<void>;
./node_modules/next/image-types/global.d.ts:  const content: any
./node_modules/next/types/compiled.d.ts:  export let BasicEvaluatedExpression: any
./node_modules/next/types/compiled.d.ts:  export let GraphHelpers: any
./node_modules/next/types/compiled.d.ts:  export let sources: any
./node_modules/next/types/compiled.d.ts:  export let StringXor: any
./node_modules/next/types/compiled.d.ts:  export var webpack: any
./node_modules/next/types/compiled.d.ts:    constructor(...args: any[])
./node_modules/next/types/compiled.d.ts:    end(): any
./node_modules/next/dist/styled-jsx/types/macro.d.ts:      ...args: any[]
./node_modules/next/dist/styled-jsx/types/style.d.ts:  export default function JSXStyle(props: any): null
./node_modules/next/dist/styled-jsx/types/css.d.ts:  function css(chunks: TemplateStringsArray, ...args: any[]): JSX.Element
./node_modules/next/dist/styled-jsx/types/css.d.ts:      ...args: any[]
./node_modules/next/dist/styled-jsx/types/css.d.ts:      ...args: any[]
./node_modules/next/dist/styled-jsx/types/index.d.ts:    add(props: any): void
./node_modules/next/dist/styled-jsx/types/index.d.ts:    remove(props: any): void
./node_modules/next/dist/experimental/testmode/playwright/step.d.ts:    error?: any;
./node_modules/next/dist/trace/shared.d.ts:export declare const setGlobal: (key: any, val: any) => void;
./node_modules/next/dist/esm/build/swc/generated-wasm.d.ts:export function minifySync(s: string, opts: any): any
./node_modules/next/dist/esm/build/swc/generated-wasm.d.ts:export function minify(s: string, opts: any): Promise<any>
./node_modules/next/dist/esm/build/swc/generated-wasm.d.ts:export function transformSync(s: any, opts: any): any
./node_modules/next/dist/esm/build/swc/generated-wasm.d.ts:export function transform(s: any, opts: any): Promise<any>
./node_modules/next/dist/esm/build/swc/generated-wasm.d.ts:export function parseSync(s: string, opts: any): any
./node_modules/next/dist/esm/build/swc/generated-wasm.d.ts:export function parse(s: string, opts: any): Promise<any>
./node_modules/next/dist/esm/build/swc/generated-wasm.d.ts:export function mdxCompileSync(value: string, opts: any): any
./node_modules/next/dist/esm/build/swc/generated-wasm.d.ts:export function mdxCompile(value: string, opts: any): Promise<any>
./node_modules/next/dist/esm/build/swc/generated-native.d.ts:  func: (...args: any[]) => any
./node_modules/next/dist/esm/build/swc/generated-native.d.ts:  func: (...args: any[]) => any
./node_modules/next/dist/esm/build/swc/generated-native.d.ts:  func: (...args: any[]) => any
./node_modules/next/dist/esm/build/swc/generated-native.d.ts:  func: (...args: any[]) => any
./node_modules/next/dist/esm/build/swc/generated-native.d.ts:  func: (...args: any[]) => any
./node_modules/next/dist/esm/build/swc/generated-native.d.ts:  func: (...args: any[]) => any
./node_modules/next/dist/esm/build/swc/generated-native.d.ts:  title: any
./node_modules/next/dist/esm/build/swc/generated-native.d.ts:  description?: any
./node_modules/next/dist/esm/build/swc/generated-native.d.ts:  detail?: any
./node_modules/next/dist/esm/build/babel/loader/types.d.ts:  caller: any
./node_modules/next/dist/esm/build/babel/loader/types.d.ts:  sourceMaps?: any[]
./node_modules/next/dist/esm/build/babel/loader/types.d.ts:  overrides: any
./node_modules/next/dist/types.d.ts:    [key: string]: any;
./node_modules/next/dist/types.d.ts:    [key: string]: any;
./node_modules/next/dist/types.d.ts:export type InferGetStaticPropsType<T extends (args: any) => any> = Extract<Awaited<ReturnType<T>>, {
./node_modules/next/dist/types.d.ts:    props: any;
./node_modules/next/dist/types.d.ts:    [key: string]: any;
./node_modules/next/dist/types.d.ts:    [key: string]: any;
./node_modules/next/dist/types.d.ts:export type InferGetServerSidePropsType<T extends (args: any) => any> = Awaited<Extract<Awaited<ReturnType<T>>, {
./node_modules/next/dist/types.d.ts:    props: any;
./node_modules/next/dist/server/pipe-readable.d.ts:export declare function isAbortError(e: any): e is Error & {
./node_modules/next/dist/server/optimize-amp.d.ts:export default function optimize(html: string, config: any): Promise<string>;
./node_modules/next/dist/server/font-utils.d.ts:    ascent: any;
./node_modules/next/dist/server/font-utils.d.ts:    descent: any;
./node_modules/next/dist/server/font-utils.d.ts:    lineGap: any;
./node_modules/next/dist/server/render.d.ts:        [key: string]: any;
./node_modules/next/dist/server/render.d.ts:        [key: string]: any;
./node_modules/next/dist/server/render.d.ts:    optimizeCss: any;
./node_modules/next/dist/server/render.d.ts:    nextScriptWorkers: any;
./node_modules/next/dist/server/render.d.ts:    digest: any;
./node_modules/next/dist/server/web/spec-extension/adapters/headers.d.ts:    append(...args: any[]): void;
./node_modules/next/dist/server/web/spec-extension/adapters/headers.d.ts:    set(...args: any[]): void;
./node_modules/next/dist/server/web/spec-extension/adapters/headers.d.ts:    delete(...args: any[]): void;
./node_modules/next/dist/server/web/spec-extension/adapters/headers.d.ts:    forEach(callbackfn: (value: string, name: string, parent: Headers) => void, thisArg?: any): void;
./node_modules/next/dist/server/web/spec-extension/adapters/reflect.d.ts:    static get<T extends object>(target: T, prop: string | symbol, receiver: unknown): any;
./node_modules/next/dist/server/web/spec-extension/adapters/reflect.d.ts:    static set<T extends object>(target: T, prop: string | symbol, value: any, receiver: any): boolean;
./node_modules/next/dist/server/web/spec-extension/unstable-cache.d.ts:type Callback = (...args: any[]) => Promise<any>;
./node_modules/next/dist/server/web/spec-extension/url-pattern.d.ts:declare const GlobalURLPattern: any;
./node_modules/next/dist/server/web/sandbox/sandbox.d.ts:    incrementalCache?: any;
./node_modules/next/dist/server/require-hook.d.ts:    'styled-jsx': any;
./node_modules/next/dist/server/typescript/rules/metadata.d.ts:    filterCompletionsAtPosition(fileName: string, position: number, _options: any, prior: tsModule.WithMetadata<tsModule.CompletionInfo>): tsModule.WithMetadata<tsModule.CompletionInfo>;
./node_modules/next/dist/server/request-meta.d.ts:    incrementalCache?: any;
./node_modules/next/dist/server/request-meta.d.ts:    onCacheEntry?: (cacheEntry: any, requestMeta: any) => Promise<boolean | void> | boolean | void;
./node_modules/next/dist/server/render-result.d.ts:    pageData?: any;
./node_modules/next/dist/server/app-render/create-flight-router-state-from-loader-tree.d.ts:export declare function createFlightRouterStateFromLoaderTree([segment, parallelRoutes, { layout }]: LoaderTree, getDynamicParamFromSegment: GetDynamicParamFromSegment, searchParams: any, rootLayoutIncluded?: boolean): FlightRouterState;
./node_modules/next/dist/server/app-render/collect-segment-data.d.ts:export declare function collectSegmentData(shouldAssumePartialData: boolean, fullPageDataBuffer: Buffer, staleTime: number, clientModules: ManifestNode, serverConsumerManifest: any, fallbackRouteParams: FallbackRouteParams | null): Promise<Map<string, Buffer>>;
./node_modules/next/dist/server/app-render/postponed-state.d.ts:export declare function getPostponedFromState(state: PostponedState): any;
./node_modules/next/dist/server/app-render/action-handler.d.ts:    formState?: any;
./node_modules/next/dist/server/app-render/encryption.d.ts:export declare const encryptActionBoundArgs: (actionId: string, ...args: any[]) => Promise<string>;
./node_modules/next/dist/server/app-render/create-error-handler.d.ts:export declare function isUserLandError(err: any): boolean;
./node_modules/next/dist/server/app-render/interop-default.d.ts:export declare function interopDefault(mod: any): any;
./node_modules/next/dist/server/route-modules/app-page/module.d.ts:    'react-rsc': any;
./node_modules/next/dist/server/route-modules/app-page/module.d.ts:    'react-ssr': any;
./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/entrypoints.d.ts:declare let ReactServerDOMTurbopackClientEdge: any, ReactServerDOMWebpackClientEdge: any;
./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/entrypoints.d.ts:declare let ReactServerDOMTurbopackServerEdge: any, ReactServerDOMWebpackServerEdge: any;
./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/entrypoints.d.ts:declare let ReactServerDOMTurbopackServerNode: any, ReactServerDOMWebpackServerNode: any;
./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/entrypoints.d.ts:declare let ReactServerDOMTurbopackStaticEdge: any, ReactServerDOMWebpackStaticEdge: any;
./node_modules/next/dist/server/route-modules/route-module.d.ts:    static readonly sharedModules: any;
./node_modules/next/dist/server/utils.d.ts:type AnyFunc<T> = (this: T, ...args: any) => any;
./node_modules/next/dist/server/config-shared.d.ts:        babel: any;
./node_modules/next/dist/server/config-shared.d.ts:    webpack: any;
./node_modules/next/dist/server/config-shared.d.ts:    config: any, context: WebpackConfigContext): any;
./node_modules/next/dist/server/config-shared.d.ts:        optimizer?: any;
./node_modules/next/dist/server/config-shared.d.ts:        [key: string]: any;
./node_modules/next/dist/server/config-shared.d.ts:        [key: string]: any;
./node_modules/next/dist/server/config-shared.d.ts:        [key: string]: any;
./node_modules/next/dist/server/config-shared.d.ts:export declare function normalizeConfig(phase: string, config: any): Promise<any>;
./node_modules/next/dist/server/web-server.d.ts:            serverActionsManifest?: any;
./node_modules/next/dist/server/web-server.d.ts:        incrementalCacheHandler?: any;
./node_modules/next/dist/server/web-server.d.ts:        version: any;
./node_modules/next/dist/server/route-matcher-providers/helpers/manifest-loaders/node-manifest-loader.d.ts:    static require(id: string): any;
./node_modules/next/dist/server/lib/trace/tracer.d.ts:    wrap<T = (...args: Array<any>) => any>(type: SpanTypes, options: (...args: any[]) => TracerSpanOptions, fn: T): T;
./node_modules/next/dist/server/lib/trace/tracer.d.ts:    wrap<T = (...args: Array<any>) => any>(type: SpanTypes, options: (...args: any[]) => TracerSpanOptions, fn: T): T;
./node_modules/next/dist/server/lib/app-dir-module.d.ts:    mod: any;
./node_modules/next/dist/server/lib/router-utils/is-postpone.d.ts:export declare function isPostpone(error: any): boolean;
./node_modules/next/dist/server/lib/router-utils/proxy-request.d.ts:export declare function proxyRequest(req: IncomingMessage, res: ServerResponse | Duplex, parsedUrl: NextUrlWithParsedQuery, upgradeHead?: Buffer, reqBody?: any, proxyTimeout?: number | null): Promise<boolean>;
./node_modules/next/dist/server/lib/router-utils/setup-dev-bundler.d.ts:export declare function propagateServerField(opts: SetupOpts, field: PropagateToWorkersField, args: any): Promise<void>;
./node_modules/next/dist/server/lib/render-server.d.ts:export declare function propagateServerField(dir: string, field: PropagateToWorkersField, value: any): Promise<void>;
./node_modules/next/dist/server/lib/render-server.d.ts:    serverFields?: any;
./node_modules/next/dist/server/lib/render-server.d.ts:    server?: any;
./node_modules/next/dist/server/lib/dev-bundler-service.d.ts:        opts: any;
./node_modules/next/dist/server/lib/patch-fetch.d.ts:export declare function validateTags(tags: any[], description: string): string[];
./node_modules/next/dist/server/load-default-error-components.d.ts:    serverActionsManifest?: any;
./node_modules/next/dist/server/load-default-error-components.d.ts:    ComponentMod: any;
./node_modules/next/dist/server/dev/hot-middleware.d.ts:    publish(payload: any): void;
./node_modules/next/dist/server/dev/static-paths-worker.d.ts:        [key: string]: any;
./node_modules/next/dist/server/dev/static-paths-worker.d.ts:        [key: string]: any;
./node_modules/next/dist/server/dev/hot-reloader-types.d.ts:    data: any;
./node_modules/next/dist/server/dev/turbopack-utils.d.ts:    propagateServerField: (field: PropagateToWorkersField, args: any) => Promise<void>;
./node_modules/next/dist/server/dev/next-dev-server.d.ts:        [key: string]: any;
./node_modules/next/dist/server/use-cache/use-cache-wrapper.d.ts:export declare function cache(kind: string, id: string, boundArgsLength: number, originalFn: (...args: unknown[]) => Promise<unknown>): (...args: any[]) => Promise<unknown>;
./node_modules/next/dist/server/response-cache/web.d.ts:        incrementalCache: any;
./node_modules/next/dist/server/base-server.d.ts:    protected abstract handleUpgrade(req: ServerRequest, socket: any, head?: any): Promise<void>;
./node_modules/next/dist/server/load-components.d.ts:    serverActionsManifest?: any;
./node_modules/next/dist/server/api-utils/node/api-resolver.d.ts:export declare function apiResolver(req: IncomingMessage, res: ServerResponse, query: any, resolverModule: any, apiContext: ApiContext, propagateError: boolean, dev?: boolean, page?: string, onError?: ServerOnInstrumentationRequestError): Promise<void>;
./node_modules/next/dist/server/api-utils/index.d.ts:export declare function wrapApiHandler<T extends (...args: any[]) => any>(page: string, handler: T): T;
./node_modules/next/dist/compiled/@edge-runtime/primitives/fetch.d.ts:  static json(data: any, init?: ResponseInit): Response
./node_modules/next/dist/compiled/@edge-runtime/primitives/index.d.ts:  cancel(reason?: any): Promise<void>
./node_modules/next/dist/compiled/@next/font/dist/google/validate-google-font-function-call.d.ts:export declare function validateGoogleFontFunctionCall(functionName: string, fontFunctionArgument: any): FontOptions;
./node_modules/next/dist/compiled/@next/font/dist/google/get-fallback-font-override-metrics.d.ts:    fallbackFont: any;
./node_modules/next/dist/compiled/@next/font/dist/local/validate-local-font-function-call.d.ts:export declare function validateLocalFontFunctionCall(functionName: string, fontData: any): FontOptions;
./node_modules/next/dist/compiled/@vercel/og/og.d.ts:export default function render(satori: any, resvg: any, opts: any, defaultFonts: any, element: any): Promise<Uint8Array>;
./node_modules/next/dist/compiled/@vercel/og/emoji/index.d.ts:    twemoji: (code: any) => string;
./node_modules/next/dist/compiled/@vercel/og/emoji/index.d.ts:    fluent: (code: any) => string;
./node_modules/next/dist/compiled/@vercel/og/emoji/index.d.ts:    fluentFlat: (code: any) => string;
./node_modules/next/dist/compiled/@vercel/og/satori/index.d.ts:declare type NotImplemented = (...args: any) => unknown;
./node_modules/next/dist/shared/lib/html-context.shared-runtime.d.ts:    headTags: any[];
./node_modules/next/dist/shared/lib/html-context.shared-runtime.d.ts:        beforeInteractive?: any[];
./node_modules/next/dist/shared/lib/html-context.shared-runtime.d.ts:        worker?: any[];
./node_modules/next/dist/shared/lib/html-context.shared-runtime.d.ts:    optimizeCss?: any;
./node_modules/next/dist/shared/lib/is-plain-object.d.ts:export declare function getObjectClassLabel(value: any): string;
./node_modules/next/dist/shared/lib/is-plain-object.d.ts:export declare function isPlainObject(value: any): boolean;
./node_modules/next/dist/shared/lib/loadable.shared-runtime.d.ts:declare function Loadable(opts: any): React.ForwardRefExoticComponent<Omit<any, "ref"> & React.RefAttributes<unknown>>;
./node_modules/next/dist/shared/lib/get-rspack.d.ts:export declare function getRspackCore(): any;
./node_modules/next/dist/shared/lib/get-rspack.d.ts:export declare function getRspackReactRefresh(): any;
./node_modules/next/dist/shared/lib/dynamic.d.ts:    webpack?(): any;
./node_modules/next/dist/shared/lib/lazy-dynamic/loadable.d.ts:    (props: any): import("react/jsx-runtime").JSX.Element;
./node_modules/next/dist/shared/lib/utils.d.ts:    [name: string]: any;
./node_modules/next/dist/shared/lib/utils.d.ts:    [k: string]: any;
./node_modules/next/dist/shared/lib/utils.d.ts:        [key: string]: any;
./node_modules/next/dist/shared/lib/utils.d.ts:    scriptLoader?: any[];
./node_modules/next/dist/shared/lib/utils.d.ts:    body: any;
./node_modules/next/dist/shared/lib/utils.d.ts:export declare function execOnce<T extends (...args: any[]) => ReturnType<T>>(fn: T): T;
./node_modules/next/dist/shared/lib/utils.d.ts:    writeFile(f: string, d: any): Promise<void>;
./node_modules/next/dist/shared/lib/runtime-config.external.d.ts:export declare function setConfig(configValue: any): void;
./node_modules/next/dist/shared/lib/side-effect.d.ts:    headManager: any;
./node_modules/next/dist/shared/lib/head-manager-context.shared-runtime.d.ts:    updateHead?: (state: any) => void;
./node_modules/next/dist/shared/lib/head-manager-context.shared-runtime.d.ts:    mountedInstances?: any;
./node_modules/next/dist/shared/lib/head-manager-context.shared-runtime.d.ts:    updateScripts?: (state: any) => void;
./node_modules/next/dist/shared/lib/head-manager-context.shared-runtime.d.ts:    scripts?: any;
./node_modules/next/dist/shared/lib/mitt.d.ts:type Handler = (...evts: any[]) => void;
./node_modules/next/dist/shared/lib/mitt.d.ts:    emit(type: T, ...evts: any[]): void;
./node_modules/next/dist/shared/lib/router/router.d.ts:    error?: any;
./node_modules/next/dist/shared/lib/router/router.d.ts:        initialProps: any;
./node_modules/next/dist/shared/lib/router/router.d.ts:        pageLoader: any;
./node_modules/next/dist/shared/lib/router/router.d.ts:        code?: any;
./node_modules/next/dist/lib/detached-promise.d.ts:    readonly reject: (reason: any) => void;
./node_modules/next/dist/lib/client-and-server-references.d.ts:export declare function isClientReference(mod: any): boolean;
./node_modules/next/dist/lib/try-to-parse-path.d.ts:    error?: any;
./node_modules/next/dist/lib/worker.d.ts:        onRestart?: (method: string, args: any[], attempts: number) => void;
./node_modules/next/dist/lib/interop-default.d.ts:export declare function interopDefault(mod: any): any;
./node_modules/next/dist/lib/eslint/runLintCheck.d.ts:    eslintOptions: any;
./node_modules/next/dist/lib/eslint/runLintCheck.d.ts:    eslintOptions?: any;
./node_modules/next/dist/lib/eslint/hasEslintConfiguration.d.ts:    eslintConfig: any;
./node_modules/next/dist/lib/eslint/writeDefaultConfig.d.ts:export declare function writeDefaultConfig(baseDir: string, { exists, emptyEslintrc, emptyPkgJsonConfig }: ConfigAvailable, selectedConfig: any, eslintrcFile: string | null, pkgJsonPath: string | null, packageJsonConfig: {
./node_modules/next/dist/lib/eslint/writeDefaultConfig.d.ts:    eslintConfig: any;
./node_modules/next/dist/lib/pretty-bytes.d.ts:export default function prettyBytes(number: number, options?: any): string;
./node_modules/next/dist/lib/install-dependencies.d.ts:export declare function installDependencies(baseDir: string, deps: any, dev?: boolean): Promise<void>;
./node_modules/next/dist/lib/coalesced-function.d.ts:export declare function withCoalescedInvoke<F extends (...args: any) => any>(func: F): (key: string, args: Parameters<F>) => Promise<CoalescedInvoke<UnwrapPromise<ReturnType<F>>>>;
./node_modules/next/dist/lib/metadata/types/icons.d.ts:    icon: any[] | undefined;
./node_modules/next/dist/lib/metadata/types/icons.d.ts:    apple: any[] | undefined;
./node_modules/next/dist/lib/metadata/types/icons.d.ts:    openGraph: any[] | undefined;
./node_modules/next/dist/lib/metadata/types/icons.d.ts:    twitter: any[] | undefined;
./node_modules/next/dist/lib/metadata/resolvers/resolve-url.d.ts:declare function isStringOrURL(icon: any): icon is string | URL;
./node_modules/next/dist/lib/metadata/get-metadata-route.d.ts:export declare function fillMetadataSegment(segment: string, params: any, lastSegment: string): string;
./node_modules/next/dist/lib/is-serializable-props.d.ts:export declare function isSerializableProps(page: string, method: string, input: any): true;
./node_modules/next/dist/telemetry/post-telemetry-payload.d.ts:export declare function postNextTelemetryPayload(payload: Payload, signal?: any): any;
./node_modules/next/dist/telemetry/storage.d.ts:    value?: any;
./node_modules/next/dist/telemetry/storage.d.ts:    reason?: any;
./node_modules/next/dist/build/next-config-ts/require-hook.d.ts:export declare function requireFromString(code: string, filename: string): any;
./node_modules/next/dist/build/analysis/extract-const-value.d.ts:export declare function extractExportedConstValue(module: Module, exportedName: string): any;
./node_modules/next/dist/build/webpack-config.d.ts:    jsConfig: any;
./node_modules/next/dist/build/spinner.d.ts:export default function createSpinner(text: string, options?: ora.Options, logFn?: (...data: any[]) => void): (ora.Ora & {
./node_modules/next/dist/build/output/log.d.ts:export declare function wait(...message: any[]): void;
./node_modules/next/dist/build/output/log.d.ts:export declare function error(...message: any[]): void;
./node_modules/next/dist/build/output/log.d.ts:export declare function warn(...message: any[]): void;
./node_modules/next/dist/build/output/log.d.ts:export declare function ready(...message: any[]): void;
./node_modules/next/dist/build/output/log.d.ts:export declare function info(...message: any[]): void;
./node_modules/next/dist/build/output/log.d.ts:export declare function event(...message: any[]): void;
./node_modules/next/dist/build/output/log.d.ts:export declare function trace(...message: any[]): void;
./node_modules/next/dist/build/output/log.d.ts:export declare function warnOnce(...message: any[]): void;
./node_modules/next/dist/build/webpack-build/impl.d.ts:    pluginState: any;
./node_modules/next/dist/build/swc/generated-wasm.d.ts:export function minifySync(s: string, opts: any): any
./node_modules/next/dist/build/swc/generated-wasm.d.ts:export function minify(s: string, opts: any): Promise<any>
./node_modules/next/dist/build/swc/generated-wasm.d.ts:export function transformSync(s: any, opts: any): any
./node_modules/next/dist/build/swc/generated-wasm.d.ts:export function transform(s: any, opts: any): Promise<any>
./node_modules/next/dist/build/swc/generated-wasm.d.ts:export function parseSync(s: string, opts: any): any
./node_modules/next/dist/build/swc/generated-wasm.d.ts:export function parse(s: string, opts: any): Promise<any>
./node_modules/next/dist/build/swc/generated-wasm.d.ts:export function mdxCompileSync(value: string, opts: any): any
./node_modules/next/dist/build/swc/generated-wasm.d.ts:export function mdxCompile(value: string, opts: any): Promise<any>
./node_modules/next/dist/build/swc/options.d.ts:export declare function getParserOptions({ filename, jsConfig, ...rest }: any): any;
./node_modules/next/dist/build/swc/options.d.ts:    jsConfig: any;
./node_modules/next/dist/build/swc/options.d.ts:        parser: any;
./node_modules/next/dist/build/swc/options.d.ts:            plugins: any[][];
./node_modules/next/dist/build/swc/options.d.ts:                importSource: any;
./node_modules/next/dist/build/swc/options.d.ts:        paths?: any;
./node_modules/next/dist/build/swc/options.d.ts:        useLightningcss: any;
./node_modules/next/dist/build/swc/options.d.ts:    jsConfig: any;
./node_modules/next/dist/build/swc/options.d.ts:}): any;
./node_modules/next/dist/build/swc/types.d.ts:        nextBuild?: any;
./node_modules/next/dist/build/swc/types.d.ts:        compile(src: string, options: any): any;
./node_modules/next/dist/build/swc/types.d.ts:        compileSync(src: string, options: any): any;
./node_modules/next/dist/build/swc/types.d.ts:    minify(src: string, options: any): Promise<any>;
./node_modules/next/dist/build/swc/types.d.ts:    minifySync(src: string, options: any): any;
./node_modules/next/dist/build/swc/types.d.ts:    transform(src: string, options: any): Promise<any>;
./node_modules/next/dist/build/swc/types.d.ts:    transformSync(src: string, options: any): any;
./node_modules/next/dist/build/swc/types.d.ts:    parse(src: string, options: any): Promise<string>;
./node_modules/next/dist/build/swc/types.d.ts:            transform(transformOptions: any): Promise<any>;
./node_modules/next/dist/build/swc/types.d.ts:            transformStyleAttr(transformAttrOptions: any): Promise<any>;
./node_modules/next/dist/build/swc/generated-native.d.ts:  func: (...args: any[]) => any
./node_modules/next/dist/build/swc/generated-native.d.ts:  func: (...args: any[]) => any
./node_modules/next/dist/build/swc/generated-native.d.ts:  func: (...args: any[]) => any
./node_modules/next/dist/build/swc/generated-native.d.ts:  func: (...args: any[]) => any
./node_modules/next/dist/build/swc/generated-native.d.ts:  func: (...args: any[]) => any
./node_modules/next/dist/build/swc/generated-native.d.ts:  func: (...args: any[]) => any
./node_modules/next/dist/build/swc/generated-native.d.ts:  title: any
./node_modules/next/dist/build/swc/generated-native.d.ts:  description?: any
./node_modules/next/dist/build/swc/generated-native.d.ts:  detail?: any
./node_modules/next/dist/build/swc/jest-transformer.d.ts:    jsConfig: any;
./node_modules/next/dist/build/swc/index.d.ts:export declare function transform(src: string, options?: any): Promise<any>;
./node_modules/next/dist/build/swc/index.d.ts:export declare function transformSync(src: string, options?: any): any;
./node_modules/next/dist/build/swc/index.d.ts:export declare function minify(src: string, options: any): Promise<{
./node_modules/next/dist/build/swc/index.d.ts:    map: any;
./node_modules/next/dist/build/swc/index.d.ts:export declare function parse(src: string, options: any): Promise<any>;
./node_modules/next/dist/build/webpack/config/blocks/css/loaders/next-font.d.ts:export declare function getNextFontLoader(ctx: ConfigurationContext, postcss: any, fontLoaderPath: string): webpack.RuleSetUseItem[];
./node_modules/next/dist/build/webpack/config/blocks/css/loaders/getCssModuleLocalIdent.d.ts:export declare function getCssModuleLocalIdent(context: webpack.LoaderContext<{}>, _: any, exportName: string, options: object): any;
./node_modules/next/dist/build/webpack/config/blocks/css/loaders/global.d.ts:export declare function getGlobalCssLoader(ctx: ConfigurationContext, postcss: any, preProcessors?: readonly webpack.RuleSetUseItem[]): webpack.RuleSetUseItem[];
./node_modules/next/dist/build/webpack/config/blocks/css/loaders/modules.d.ts:export declare function getCssModuleLoader(ctx: ConfigurationContext, postcss: any, preProcessors?: readonly webpack.RuleSetUseItem[]): webpack.RuleSetUseItem[];
./node_modules/next/dist/build/webpack/config/blocks/css/loaders/file-resolve.d.ts:export declare function cssFileResolve(url: string, _resourcePath: string, urlImports: any): boolean;
./node_modules/next/dist/build/webpack/config/utils.d.ts:    sassOptions: any;
./node_modules/next/dist/build/webpack/config/index.d.ts:    sassOptions: any;
./node_modules/next/dist/build/webpack/plugins/nextjs-require-cache-hot-reloader.d.ts:    prevAssets: any;
./node_modules/next/dist/build/webpack/plugins/profiling-plugin.d.ts:    compiler: any;
./node_modules/next/dist/build/webpack/plugins/profiling-plugin.d.ts:    apply(compiler: any): void;
./node_modules/next/dist/build/webpack/plugins/profiling-plugin.d.ts:    traceHookPair(spanName: string | (() => string), startHook: any, stopHook: any, { parentSpan, attrs, onStart, onStop, }?: {
./node_modules/next/dist/build/webpack/plugins/profiling-plugin.d.ts:        parentSpan?: (...params: any[]) => Span;
./node_modules/next/dist/build/webpack/plugins/profiling-plugin.d.ts:        attrs?: any;
./node_modules/next/dist/build/webpack/plugins/profiling-plugin.d.ts:        onStart?: (span: Span, ...params: any[]) => void;
./node_modules/next/dist/build/webpack/plugins/profiling-plugin.d.ts:        onStop?: (span: Span, ...params: any[]) => void;
./node_modules/next/dist/build/webpack/plugins/profiling-plugin.d.ts:    traceTopLevelHooks(compiler: any): void;
./node_modules/next/dist/build/webpack/plugins/profiling-plugin.d.ts:    traceCompilationHooks(compiler: any): void;
./node_modules/next/dist/build/webpack/plugins/minify-webpack-plugin/src/index.d.ts:    optimize(compiler: any, compilation: Compilation, assets: any, cache: CacheFacade, { SourceMapSource, RawSource, }: {
./node_modules/next/dist/build/webpack/plugins/minify-webpack-plugin/src/index.d.ts:    apply(compiler: any): void;
./node_modules/next/dist/build/webpack/plugins/next-trace-entrypoints-plugin.d.ts:    tapfinishModules(compilation: webpack.Compilation, traceEntrypointsPluginSpan: Span, doResolve: (request: string, parent: string, job: import('@vercel/nft/out/node-file-trace').Job, isEsmRequested: boolean) => Promise<string>, readlink: any, stat: any): void;
./node_modules/next/dist/build/webpack/plugins/middleware-plugin.d.ts:    contextInfo: any;
./node_modules/next/dist/build/webpack/plugins/rspack-profiling-plugin.d.ts:    apply(compiler: any): void;
./node_modules/next/dist/build/webpack/plugins/flight-client-entry-plugin.d.ts:        resolvedModule: any;
./node_modules/next/dist/build/webpack/plugins/app-build-manifest-plugin.d.ts:    apply(compiler: any): void;
./node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/parseNotFoundError.d.ts:export declare function getNotFoundError(compilation: webpack.Compilation, input: any, fileName: string, module: any): Promise<any>;
./node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/parseNotFoundError.d.ts:export declare function getImageError(compilation: any, input: any, err: Error): Promise<SimpleWebpackError | false>;
./node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/webpackModuleError.d.ts:export declare function getModuleBuildError(compiler: webpack.Compiler, compilation: webpack.Compilation, input: any): Promise<SimpleWebpackError | false>;
./node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/parseNextAppLoaderError.d.ts:export declare function getNextAppLoaderError(err: Error, module: any, compiler: webpack.Compiler): SimpleWebpackError | false;
./node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/getModuleTrace.d.ts:export declare function formatModuleTrace(compiler: webpack.Compiler, moduleTrace: any[]): {
./node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/getModuleTrace.d.ts:export declare function getModuleTrace(module: any, compilation: webpack.Compilation, compiler: webpack.Compiler): {
./node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/getModuleTrace.d.ts:    moduleTrace: any[];
./node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/parseNextInvalidImportError.d.ts:export declare function getNextInvalidImportError(err: Error, module: any, compilation: webpack.Compilation, compiler: webpack.Compiler): SimpleWebpackError | false;
./node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/parseNextFontError.d.ts:export declare function getNextFontError(err: Error, module: any): SimpleWebpackError | false;
./node_modules/next/dist/build/webpack/plugins/rspack-flight-client-entry-plugin.d.ts:    plugin: any;
./node_modules/next/dist/build/webpack/plugins/pages-manifest-plugin.d.ts:    createAssets(compilation: any): Promise<void>;
./node_modules/next/dist/build/webpack/plugins/build-manifest-plugin.d.ts:}, compiler?: any, compilation?: any): string | undefined;
./node_modules/next/dist/build/webpack/plugins/build-manifest-plugin.d.ts:export declare function getEntrypointFiles(entrypoint: any): string[];
./node_modules/next/dist/build/webpack/plugins/build-manifest-plugin.d.ts:    createAssets(compiler: any, compilation: any): void;
./node_modules/next/dist/build/webpack/plugins/css-minimizer-plugin.d.ts:    optimizeAsset(file: string, asset: any): Promise<sources.RawSource | sources.SourceMapSource>;
./node_modules/next/dist/build/webpack/plugins/react-loadable-plugin.d.ts:    createAssets(compiler: any, compilation: any): void;
./node_modules/next/dist/build/webpack/utils.d.ts:export declare function traverseModules(compilation: Compilation, callback: (mod: any, chunk: Chunk, chunkGroup: (typeof compilation.chunkGroups)[0], modId: string | null) => any, filterChunkGroup?: (chunkGroup: ChunkGroup) => boolean): void;
./node_modules/next/dist/build/webpack/utils.d.ts:export declare function forEachEntryModule(compilation: any, callback: ({ name, entryModule }: {
./node_modules/next/dist/build/webpack/utils.d.ts:    entryModule: any;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/plugins/postcss-import-parser.d.ts:    (options?: any): {
./node_modules/next/dist/build/webpack/loaders/css-loader/src/plugins/postcss-import-parser.d.ts:        prepare(result: any): {
./node_modules/next/dist/build/webpack/loaders/css-loader/src/plugins/postcss-import-parser.d.ts:                import(atRule: any): void;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/plugins/postcss-icss-parser.d.ts:    (options?: any): {
./node_modules/next/dist/build/webpack/loaders/css-loader/src/plugins/postcss-icss-parser.d.ts:        OnceExit(root: any): Promise<void>;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/plugins/postcss-url-parser.d.ts:    (options?: any): {
./node_modules/next/dist/build/webpack/loaders/css-loader/src/plugins/postcss-url-parser.d.ts:        prepare(result: any): {
./node_modules/next/dist/build/webpack/loaders/css-loader/src/plugins/postcss-url-parser.d.ts:            Declaration(declaration: any): void;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.d.ts:declare function cssWithMappingToString(item: any, useSourceMap: any): any;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.d.ts:declare function toComment(sourceMap: any): string;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/CssSyntaxError.d.ts:    stack: any;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/CssSyntaxError.d.ts:    constructor(error: any);
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:declare function requestify(url: string, rootContext: string): any;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:declare function getFilter(filter: any, resourcePath: string): (...args: any[]) => any;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:declare function shouldUseImportPlugin(options: any): any;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:declare function shouldUseURLPlugin(options: any): any;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:declare function shouldUseModulesPlugins(options: any): boolean;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:declare function shouldUseIcssPlugin(options: any): boolean;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:declare function getModulesPlugins(options: any, loaderContext: any, meta: any): any[];
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:declare function normalizeSourceMap(map: any, resourcePath: string): any;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:declare function getPreRequester({ loaders, loaderIndex }: any): (number: any) => any;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:declare function getImportCode(imports: any, options: any): string;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:declare function normalizeSourceMapForRuntime(map: any, loaderContext: any): string;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:    map: any;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:    css: any;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:}, api: any, replacements: any, options: {
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:        namedExport: any;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:    sourceMap: any;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:}, loaderContext: any): string;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:declare function getExportCode(exports: any, replacements: any, options: {
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:        namedExport: any;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:        exportLocalsConvention: any;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:        exportOnlyLocals: any;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:    esModule: any;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/utils.d.ts:declare function resolveRequests(resolve: (arg0: any, arg1: any) => Promise<any>, context: any, possibleRequests: any[]): Promise<any>;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/camelcase.d.ts:declare const camelCase: (input: string | string[], options?: any) => string;
./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.d.ts:export default function loader(this: any, content: string, map: any, meta: any): Promise<void>;
./node_modules/next/dist/build/webpack/loaders/next-font-loader/index.d.ts:export default function nextFontLoader(this: any): Promise<any>;
./node_modules/next/dist/build/webpack/loaders/next-font-loader/postcss-next-font.d.ts:            name: any;
./node_modules/next/dist/build/webpack/loaders/next-font-loader/postcss-next-font.d.ts:            value: any;
./node_modules/next/dist/build/webpack/loaders/next-font-loader/postcss-next-font.d.ts:        Once(root: any): void;
./node_modules/next/dist/build/webpack/loaders/next-middleware-asset-loader.d.ts:export default function MiddlewareAssetLoader(this: any, source: Buffer): string;
./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.d.ts:declare const getTargetElement: (target: any) => any;
./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.d.ts:declare const stylesInDom: any;
./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.d.ts:declare function getIndexByIdentifier(identifier: any): number;
./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.d.ts:declare function modulesToDom(list: any, options: any): string[];
./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.d.ts:declare function insertStyleElement(options: any): HTMLStyleElement;
./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.d.ts:declare function removeStyleElement(style: any): false | undefined;
./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.d.ts:declare const replaceText: (index: any, replacement: any) => any;
./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.d.ts:declare function applyToSingletonTag(style: any, index: any, remove: any, obj: any): void;
./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.d.ts:declare function applyToTag(style: any, _options: any, obj: any): void;
./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.d.ts:declare let singleton: any;
./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.d.ts:declare function addStyle(obj: any, options: any): (newObj: any) => void;
./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoLinkTag.d.ts:declare const getTarget: (target: any) => any;
./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/isEqualLocals.d.ts:declare function isEqualLocals(a: any, b: any, isNamedExport: any): boolean;
./node_modules/next/dist/build/webpack/loaders/lightningcss-loader/src/codegen.d.ts:export declare function getImportCode(imports: CssImport[], options: any): string;
./node_modules/next/dist/build/webpack/loaders/lightningcss-loader/src/codegen.d.ts:    map: any;
./node_modules/next/dist/build/webpack/loaders/lightningcss-loader/src/codegen.d.ts:    css: any;
./node_modules/next/dist/build/webpack/loaders/lightningcss-loader/src/codegen.d.ts:}, api: ApiParam[], replacements: ApiReplacement[], options: any, loaderContext: LoaderContext<any>): string;
./node_modules/next/dist/build/webpack/loaders/lightningcss-loader/src/codegen.d.ts:export declare function getExportCode(exports: CssExport[], replacements: ApiReplacement[], options: any): string;
./node_modules/next/dist/build/webpack/loaders/lightningcss-loader/src/utils.d.ts:    key: any;
./node_modules/next/dist/build/webpack/loaders/lightningcss-loader/src/minify.d.ts:    constructor(opts?: any);
./node_modules/next/dist/build/webpack/loaders/modularize-import-loader.d.ts:export default function transformSource(this: any): string;
./node_modules/next/dist/build/webpack/loaders/resolve-url-loader/lib/join-function.d.ts:    debug?: any | boolean;
./node_modules/next/dist/build/webpack/loaders/resolve-url-loader/lib/join-function.d.ts:baseOrIteratorOrAbsent: any) => any) & ("" | {
./node_modules/next/dist/build/webpack/loaders/resolve-url-loader/lib/value-processor.d.ts:declare function valueProcessor(filename: any, options: any): (
./node_modules/next/dist/build/webpack/loaders/resolve-url-loader/lib/value-processor.d.ts:candidate: any) => string;
./node_modules/next/dist/build/webpack/loaders/resolve-url-loader/lib/postcss.d.ts:export default function process(postcss: any, sourceFile: any, sourceContent: any, params: any): any;
./node_modules/next/dist/build/webpack/loaders/resolve-url-loader/lib/file-protocol.d.ts:export declare function prepend(candidate: any): any;
./node_modules/next/dist/build/webpack/loaders/resolve-url-loader/lib/file-protocol.d.ts:export declare function remove(candidate: any): any;
./node_modules/next/dist/build/webpack/loaders/resolve-url-loader/index.d.ts:export default function resolveUrlLoader(this: any,
./node_modules/next/dist/build/webpack/loaders/resolve-url-loader/index.d.ts:sourceMap: any): Promise<void>;
./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.d.ts:export declare function ensureServerEntryExports(actions: any[]): void;
./node_modules/next/dist/build/webpack/loaders/next-flight-loader/index.d.ts:export default function transformSource(this: LoaderContext<undefined>, source: string, sourceMap: any): void;
./node_modules/next/dist/build/webpack/loaders/next-swc-loader.d.ts:    jsConfig: any;
./node_modules/next/dist/build/webpack/loaders/next-swc-loader.d.ts:export declare function pitch(this: any): void;
./node_modules/next/dist/build/webpack/loaders/next-swc-loader.d.ts:export default function swcLoader(this: any, inputSource: string, inputSourceMap: any): void;
./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.d.ts:declare function nextClientPagesLoader(this: any): any;
./node_modules/next/dist/build/webpack/loaders/next-invalid-import-error-loader.d.ts:export default function nextInvalidImportErrorLoader(this: any): void;
./node_modules/next/dist/build/webpack/loaders/next-image-loader/blur.d.ts:        traceFn(fn: Function): any;
./node_modules/next/dist/build/webpack/loaders/next-image-loader/blur.d.ts:        traceAsyncFn(fn: Function): any;
./node_modules/next/dist/build/webpack/loaders/next-image-loader/index.d.ts:declare function nextImageLoader(this: any, content: Buffer): any;
./node_modules/next/dist/build/webpack/loaders/next-edge-ssr-loader/render.d.ts:    appMod: any;
./node_modules/next/dist/build/webpack/loaders/next-edge-ssr-loader/render.d.ts:    pageMod: any;
./node_modules/next/dist/build/webpack/loaders/next-edge-ssr-loader/render.d.ts:    errorMod: any;
./node_modules/next/dist/build/webpack/loaders/next-edge-ssr-loader/render.d.ts:    error500Mod: any;
./node_modules/next/dist/build/webpack/loaders/next-edge-ssr-loader/render.d.ts:    renderToHTML?: any;
./node_modules/next/dist/build/webpack/loaders/next-edge-ssr-loader/render.d.ts:    serverActionsManifest?: any;
./node_modules/next/dist/build/webpack/loaders/next-edge-ssr-loader/render.d.ts:    incrementalCacheHandler?: any;
./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.d.ts:export default function middlewareLoader(this: any): Promise<string>;
./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/Error.d.ts:    stack: any;
./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/Error.d.ts:    constructor(error: any);
./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/utils.d.ts:declare function normalizeSourceMap(map: any, resourceContext: string): any;
./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/utils.d.ts:declare function normalizeSourceMapAfterPostcss(map: any, resourceContext: string): any;
./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/Warning.d.ts:    stack: any;
./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/Warning.d.ts:    constructor(warning: any);
./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.d.ts:export default function loader(this: any,
./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.d.ts:sourceMap: any, meta: any): Promise<void>;
./node_modules/next/dist/build/webpack/loaders/next-middleware-wasm-loader.d.ts:export default function MiddlewareWasmLoader(this: any, source: Buffer): string;
./node_modules/next/dist/build/babel/plugins/commonjs.d.ts:export default function CommonJSModulePlugin(...args: any): PluginObj;
./node_modules/next/dist/build/babel/loader/types.d.ts:  caller: any
./node_modules/next/dist/build/babel/loader/types.d.ts:  sourceMaps?: any[]
./node_modules/next/dist/build/babel/loader/types.d.ts:  overrides: any
./node_modules/next/dist/build/babel/loader/util.d.ts:export declare function consumeIterator(iter: Iterator<any>): any;
./node_modules/next/dist/build/babel/loader/transform.d.ts:export default function transform(this: NextJsLoaderContext, source: string, inputSourceMap: object | null | undefined, loaderOptions: any, filename: string, target: string, parentSpan: Span): Promise<{
./node_modules/next/dist/build/babel/preset.d.ts:    'preset-env'?: any;
./node_modules/next/dist/build/babel/preset.d.ts:    'preset-react'?: any;
./node_modules/next/dist/build/babel/preset.d.ts:    'class-properties'?: any;
./node_modules/next/dist/build/babel/preset.d.ts:    'transform-runtime'?: any;
./node_modules/next/dist/build/babel/preset.d.ts:    'preset-typescript'?: any;
./node_modules/next/dist/build/babel/preset.d.ts:declare const _default: (api: any, options?: NextBabelPresetOptions) => BabelPreset;
./node_modules/next/dist/build/utils.d.ts:    runtimeEnvConfig: any;
./node_modules/next/dist/build/utils.d.ts:    parentId?: any;
./node_modules/next/dist/build/utils.d.ts:    edgeInfo?: any;
./node_modules/next/dist/build/utils.d.ts:    runtimeEnvConfig: any;
./node_modules/next/dist/build/utils.d.ts:    runtimeEnvConfig: any;
./node_modules/next/dist/build/polyfills/object-assign.d.ts:    (target: object, ...sources: any[]): any;
./node_modules/next/dist/build/polyfills/object.assign/index.d.ts:    (target: object, ...sources: any[]): any;
./node_modules/next/dist/build/polyfills/object.assign/index.d.ts:    (target: object, ...sources: any[]): any;
./node_modules/next/dist/build/templates/edge-ssr.d.ts:export declare const ComponentMod: any;
./node_modules/next/dist/build/templates/app-page.d.ts:declare const pages: any;
./node_modules/next/dist/build/templates/edge-app-route.d.ts:export declare const ComponentMod: any;
./node_modules/next/dist/build/templates/edge-ssr-app.d.ts:export declare const ComponentMod: any;
./node_modules/next/dist/build/templates/helpers.d.ts:export declare function hoist(module: any, name: string): any;
./node_modules/next/dist/build/templates/pages-api.d.ts:declare const _default: any;
./node_modules/next/dist/build/templates/pages-api.d.ts:export declare const config: any;
./node_modules/next/dist/build/templates/pages.d.ts:declare const _default: any;
./node_modules/next/dist/build/templates/pages.d.ts:export declare const getStaticProps: any;
./node_modules/next/dist/build/templates/pages.d.ts:export declare const getStaticPaths: any;
./node_modules/next/dist/build/templates/pages.d.ts:export declare const getServerSideProps: any;
./node_modules/next/dist/build/templates/pages.d.ts:export declare const config: any;
./node_modules/next/dist/build/templates/pages.d.ts:export declare const reportWebVitals: any;
./node_modules/next/dist/build/templates/pages.d.ts:export declare const unstable_getStaticProps: any;
./node_modules/next/dist/build/templates/pages.d.ts:export declare const unstable_getStaticPaths: any;
./node_modules/next/dist/build/templates/pages.d.ts:export declare const unstable_getStaticParams: any;
./node_modules/next/dist/build/templates/pages.d.ts:export declare const unstable_getServerProps: any;
./node_modules/next/dist/build/templates/pages.d.ts:export declare const unstable_getServerSideProps: any;
./node_modules/next/dist/build/load-jsconfig.d.ts:export declare function parseJsonFile(filePath: string): any;
./node_modules/next/dist/build/handle-externals.d.ts:export declare function resolveExternal(dir: string, esmExternalsConfig: NextConfigComplete['experimental']['esmExternals'], context: string, request: string, isEsmRequested: boolean, getResolve: (options: ResolveOptions) => (resolveContext: string, resolveRequest: string) => Promise<[string | null, boolean]>, isLocalCallback?: (res: string) => any, baseResolveCheck?: boolean, esmResolveOptions?: any, nodeResolveOptions?: any, baseEsmResolveOptions?: any, baseResolveOptions?: any): Promise<{
./node_modules/next/dist/build/handle-externals.d.ts:    localRes: any;
./node_modules/next/dist/build/handle-externals.d.ts:}): (context: string, request: string, dependencyType: string, layer: WebpackLayerName | null, getResolve: (options: any) => (resolveContext: string, resolveRequest: string) => Promise<[string | null, boolean]>) => Promise<any>;
./node_modules/next/dist/export/types.d.ts:        [key: string]: any;
./node_modules/next/dist/export/types.d.ts:    optimizeCss: any;
./node_modules/next/dist/export/types.d.ts:    disableOptimizedLoading: any;
./node_modules/next/dist/client/script.d.ts:    onLoad?: (e: any) => void;
./node_modules/next/dist/client/script.d.ts:    onError?: (e: any) => void;
./node_modules/next/dist/client/next.d.ts:        next: any;
./node_modules/next/dist/client/components/globals/intercept-console-error.d.ts:    (...data: any[]): void;
./node_modules/next/dist/client/components/globals/intercept-console-error.d.ts:    (message?: any, ...optionalParams: any[]): void;
./node_modules/next/dist/client/components/router-reducer/ppr-navigations.d.ts:export declare function abortTask(task: SPANavigationTask, error: any): void;
./node_modules/next/dist/client/components/router-reducer/router-reducer-types.d.ts:    actionArgs: any[];
./node_modules/next/dist/client/components/router-reducer/router-reducer-types.d.ts:    resolve: (value: any) => void;
./node_modules/next/dist/client/components/router-reducer/router-reducer-types.d.ts:    reject: (reason?: any) => void;
./node_modules/next/dist/client/components/redirect-boundary.d.ts:    static getDerivedStateFromError(error: any): {
./node_modules/next/dist/client/components/react-dev-overlay/ui/storybook/with-shadow-portal.d.ts:export declare const withShadowPortal: (Story: any) => import("react/jsx-runtime").JSX.Element;
./node_modules/next/dist/client/components/react-dev-overlay/server/middleware-response.d.ts:    json(res: ServerResponse, data: any): void;
./node_modules/next/dist/client/components/react-dev-overlay/utils/format-webpack-messages.d.ts:export default function formatWebpackMessages(json: any, verbose?: boolean): any;
./node_modules/next/dist/client/components/react-dev-overlay/shared.d.ts:    debugInfo: any;
./node_modules/next/dist/client/components/react-dev-overlay/pages/hot-reloader-client.d.ts:    subscribeToHmrEvent(handler: any): void;
./node_modules/next/dist/client/components/react-dev-overlay/pages/hot-reloader-client.d.ts:export declare function performFullReload(err: any): void;
./node_modules/next/dist/client/components/error-boundary.d.ts:    error: any;
./node_modules/next/dist/client/components/error-boundary.d.ts:    error: any;
./node_modules/next/dist/client/components/errors/hydration-error-info.d.ts:export declare function storeHydrationErrorStateFromConsoleArgs(...args: any[]): void;
./node_modules/next/dist/client/components/errors/console-error.d.ts:export declare const isConsoleError: (error: any) => error is ConsoleError;
./node_modules/next/dist/client/components/errors/use-error-handler.d.ts:export declare function handleConsoleError(originError: unknown, consoleErrorArgs: any[]): void;
./node_modules/next/dist/client/app-call-server.d.ts:export declare function callServer(actionId: string, actionArgs: any[]): Promise<unknown>;
./node_modules/next/dist/client/route-loader.d.ts:        __REACT_LOADABLE_MANIFEST?: any;
./node_modules/next/dist/client/route-loader.d.ts:        __DYNAMIC_CSS_MANIFEST?: any;
./node_modules/next/dist/client/route-loader.d.ts:        __RSC_MANIFEST?: any;
./node_modules/next/dist/client/route-loader.d.ts:        __RSC_SERVER_MANIFEST?: any;
./node_modules/next/dist/client/route-loader.d.ts:        __NEXT_FONT_MANIFEST?: any;
./node_modules/next/dist/client/route-loader.d.ts:    exports: any;
./node_modules/next/dist/client/app-index.d.ts:type FlightSegment = [isBootStrap: 0] | [isNotBootstrap: 1, responsePartial: string] | [isFormState: 2, formState: any] | [isBinary: 3, responseBase64Partial: string];
./node_modules/next/dist/client/dev/hot-middleware-client.d.ts:    subscribeToHmrEvent(handler: any): void;
./node_modules/next/dist/client/index.d.ts:        __NEXT_P: any[];
./node_modules/next/dist/client/index.d.ts:    devClient?: any;
./node_modules/next/dist/client/page-loader.d.ts:    mod: any;
./node_modules/next/node_modules/postcss/lib/result.d.ts:    [others: string]: any
./node_modules/next/node_modules/postcss/lib/container.d.ts:    replaced: { (substring: string, ...args: any[]): string } | string
./node_modules/next/node_modules/postcss/lib/container.d.ts:    replaced: { (substring: string, ...args: any[]): string } | string
./node_modules/next/node_modules/postcss/lib/node.d.ts:  raws: any
./node_modules/next/font/index.d.ts:  data: any[]
./node_modules/next/font/index.d.ts:  loaderContext: any
./node_modules/duplexer2/node_modules/safe-buffer/index.d.ts:    toJSON(): { type: 'Buffer', data: any[] };
./node_modules/duplexer2/node_modules/safe-buffer/index.d.ts:    fill(value: any, offset?: number, end?: number): this;
./node_modules/duplexer2/node_modules/safe-buffer/index.d.ts:    constructor (array: any[]);
./node_modules/duplexer2/node_modules/safe-buffer/index.d.ts:    static from(array: any[]): Buffer;
./node_modules/duplexer2/node_modules/safe-buffer/index.d.ts:    static isBuffer(obj: any): obj is Buffer;
./node_modules/jiti/dist/plugins/babel-plugin-transform-import-meta.d.ts:export declare function TransformImportMetaPlugin(_ctx: any, opts: {
./node_modules/jiti/dist/plugins/import-meta-env.d.ts:export declare function importMetaEnvPlugin({ template, types }: any): PluginObj;
./node_modules/jiti/dist/types.d.ts:    [key: string]: any;
./node_modules/jiti/dist/types.d.ts:    error?: any;
./node_modules/jiti/dist/utils.d.ts:export declare function isObject(val: any): boolean;
./node_modules/jest-worker/build/index.d.ts:declare type FunctionLike = (...args: any) => unknown;
./node_modules/react-day-picker/dist/esm/types/props.d.ts:    onWeekNumberClick?: any;
./node_modules/react-day-picker/dist/cjs/types/props.d.ts:    onWeekNumberClick?: any;
./node_modules/react-day-picker/src/types/props.ts:  onWeekNumberClick?: any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A1): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A2): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A3): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A4): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A5): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A6): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A7): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A8): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A9): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A10): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A11): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A12): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A13): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A14): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A15): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A16): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A17): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A18): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A19): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A20): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A1): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A2): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A3): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A4): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A5): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A6): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A7): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A8): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A9): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A10): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A11): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A12): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A13): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A14): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A15): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A16): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A17): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A18): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A19): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A1): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A2): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A3): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A4): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A5): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A6): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A7): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A8): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A9): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A10): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A11): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A12): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A13): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A14): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A15): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A16): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A17): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A18): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A1): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A2): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A3): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A4): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A5): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A6): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A7): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A8): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A9): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A10): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A11): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A12): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A13): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A14): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A15): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A16): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A17): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A1): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A2): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A3): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A4): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A5): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A6): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A7): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A8): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A9): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A10): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A11): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A12): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A13): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A14): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A15): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A16): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A1): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A2): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A3): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A4): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A5): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A6): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A7): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A8): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A9): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A10): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A11): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A12): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A13): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A14): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A15): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A1): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A2): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A3): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A4): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A5): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A6): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A7): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A8): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A9): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A10): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A11): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A12): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A13): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A14): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A1): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A2): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A3): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A4): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A5): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A6): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A7): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A8): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A9): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A10): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A11): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A12): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A13): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A1): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A2): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A3): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A4): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A5): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A6): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A7): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A8): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A9): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A10): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A11): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A12): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A1): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A2): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A3): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A4): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A5): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A6): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A7): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A8): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A9): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A10): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A11): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A1): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A2): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A3): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A4): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A5): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A6): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A7): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A8): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A9): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A10): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A1): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A2): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A3): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A4): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A5): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A6): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A7): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A8): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A9): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A1): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A2): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A3): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A4): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A5): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A6): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A7): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A8): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A1): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A2): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A3): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A4): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A5): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A6): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A7): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A1): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A2): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A3): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A4): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A5): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A6): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A1): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A2): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A3): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A4): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A5): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A1): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A2): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A3): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A4): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A1): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A2): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A3): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A1): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A2): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:    (...args: infer A1): any;
./node_modules/@tootallnate/once/dist/overloaded-parameters.d.ts:} ? A1 : any;
./node_modules/@tootallnate/once/dist/types.d.ts:    addEventListener: (name: string, listener: (...args: any[]) => any) => void;
./node_modules/@tootallnate/once/dist/types.d.ts:    removeEventListener: (name: string, listener: (...args: any[]) => any) => void;
./node_modules/@tootallnate/quickjs-emscripten/dist/generated/emscripten-module.WASM_RELEASE_SYNC.d.ts:declare function QuickJSRaw(QuickJSRaw?: {}): any;
./node_modules/@tootallnate/quickjs-emscripten/dist/emscripten-types.d.ts:    cwrap(ident: string, returnType: Emscripten.ValueType | null, argTypes: Emscripten.ValueType[], opts?: Emscripten.CCallOpts): (...args: any[]) => any;
./node_modules/@tootallnate/quickjs-emscripten/dist/module-test.d.ts:    getFFI(): any;
./node_modules/@tootallnate/quickjs-emscripten/dist/debug.d.ts:    (...data: any[]): void;
./node_modules/@tootallnate/quickjs-emscripten/dist/debug.d.ts:    (message?: any, ...optionalParams: any[]): void;
./node_modules/@tootallnate/quickjs-emscripten/dist/context.d.ts:    throw(error: Error | QuickJSHandle): any;
./node_modules/@tootallnate/quickjs-emscripten/dist/context.d.ts:    dump(handle: QuickJSHandle): any;
./node_modules/tsconfig-paths/lib/filesystem.d.ts:    (packageJsonPath: string): any | undefined;
./node_modules/tsconfig-paths/lib/filesystem.d.ts:    (err?: Error, content?: any): void;
./node_modules/tsconfig-paths/lib/filesystem.d.ts:export declare function readJsonFromDiskSync(packageJsonPath: string): any | undefined;
./node_modules/tsconfig-paths/lib/filesystem.d.ts:export declare function readJsonFromDiskAsync(path: string, callback: (err?: Error, content?: any) => void): void;
./node_modules/tsconfig-paths/src/__tests__/config-loader.test.ts:      tsConfigLoader: (_: any) => ({
./node_modules/tsconfig-paths/src/__tests__/config-loader.test.ts:      tsConfigLoader: (_: any) => ({
./node_modules/tsconfig-paths/src/filesystem.ts:  (packageJsonPath: string): any | undefined;
./node_modules/tsconfig-paths/src/filesystem.ts:  (err?: Error, content?: any): void;
./node_modules/tsconfig-paths/src/filesystem.ts:export function readJsonFromDiskSync(packageJsonPath: string): any | undefined {
./node_modules/tsconfig-paths/src/filesystem.ts:  callback: (err?: Error, content?: any) => void
./node_modules/tsconfig-paths/src/register.ts:  Module._resolveFilename = function (request: string, _parent: any): string {
./node_modules/storybook/dist/server-errors.d.ts:    data?: any;
./node_modules/storybook/dist/types/index.d.ts:    state: any;
./node_modules/storybook/dist/types/index.d.ts:    [routeId: string]: any;
./node_modules/storybook/dist/types/index.d.ts:    data: any;
./node_modules/storybook/dist/types/index.d.ts:    error: any;
./node_modules/storybook/dist/types/index.d.ts:    context?: any;
./node_modules/storybook/dist/types/index.d.ts:    handle?: any;
./node_modules/storybook/dist/types/index.d.ts:    state?: any;
./node_modules/storybook/dist/types/index.d.ts:    send(event: ChannelEvent, options?: any): void;
./node_modules/storybook/dist/types/index.d.ts:    args: any[];
./node_modules/storybook/dist/types/index.d.ts:    (...args: any[]): void;
./node_modules/storybook/dist/types/index.d.ts:    emit(eventName: string, ...args: any): void;
./node_modules/storybook/dist/types/index.d.ts:    last(eventName: string): any;
./node_modules/storybook/dist/types/index.d.ts:    [key: string]: any;
./node_modules/storybook/dist/types/index.d.ts:    payload?: any;
./node_modules/storybook/dist/types/index.d.ts:    payload?: any;
./node_modules/storybook/dist/types/index.d.ts:    payload?: any;
./node_modules/storybook/dist/types/index.d.ts:        payload?: any;
./node_modules/storybook/dist/types/index.d.ts:        payload?: any;
./node_modules/storybook/dist/types/index.d.ts:    payload?: any;
./node_modules/storybook/dist/types/index.d.ts:    payload?: any;
./node_modules/storybook/dist/types/index.d.ts:    constructor(options: StoreOptions<State>, testUtils?: any);
./node_modules/storybook/dist/types/index.d.ts:        payload?: any;
./node_modules/storybook/dist/types/index.d.ts:        payload?: any;
./node_modules/storybook/dist/types/index.d.ts:    }>(options: StoreOptions<State>, testUtils?: any): MockUniversalStore<State, CustomEvent>;
./node_modules/storybook/dist/types/index.d.ts:    data?: any;
./node_modules/storybook/dist/types/index.d.ts:    emit(type: string, args?: any): void;
./node_modules/storybook/dist/types/index.d.ts:    apply(extension: 'framework', config?: {}, args?: any): Promise<Preset>;
./node_modules/storybook/dist/types/index.d.ts:    apply(extension: 'babel', config?: {}, args?: any): Promise<any>;
./node_modules/storybook/dist/types/index.d.ts:    apply(extension: 'swc', config?: {}, args?: any): Promise<any>;
./node_modules/storybook/dist/types/index.d.ts:    apply(extension: 'entries', config?: [], args?: any): Promise<unknown>;
./node_modules/storybook/dist/types/index.d.ts:    apply(extension: 'env', config?: {}, args?: any): Promise<any>;
./node_modules/storybook/dist/types/index.d.ts:    apply(extension: 'stories', config?: [], args?: any): Promise<StoriesEntry[]>;
./node_modules/storybook/dist/types/index.d.ts:    apply(extension: 'managerEntries', config: [], args?: any): Promise<string[]>;
./node_modules/storybook/dist/types/index.d.ts:    apply(extension: 'refs', config?: [], args?: any): Promise<StorybookConfigRaw['refs']>;
./node_modules/storybook/dist/types/index.d.ts:    apply(extension: 'core', config?: StorybookConfigRaw['core'], args?: any): Promise<NonNullable<StorybookConfigRaw['core']>>;
./node_modules/storybook/dist/types/index.d.ts:    apply(extension: 'docs', config?: StorybookConfigRaw['docs'], args?: any): Promise<NonNullable<StorybookConfigRaw['docs']>>;
./node_modules/storybook/dist/types/index.d.ts:    apply(extension: 'features', config?: StorybookConfigRaw['features'], args?: any): Promise<NonNullable<StorybookConfigRaw['features']>>;
./node_modules/storybook/dist/types/index.d.ts:    apply(extension: 'typescript', config?: StorybookConfigRaw['typescript'], args?: any): Promise<NonNullable<StorybookConfigRaw['typescript']>>;
./node_modules/storybook/dist/types/index.d.ts:    apply(extension: 'build', config?: StorybookConfigRaw['build'], args?: any): Promise<NonNullable<StorybookConfigRaw['build']>>;
./node_modules/storybook/dist/types/index.d.ts:    apply(extension: 'staticDirs', config?: StorybookConfigRaw['staticDirs'], args?: any): Promise<StorybookConfigRaw['staticDirs']>;
./node_modules/storybook/dist/types/index.d.ts:    preset: any;
./node_modules/storybook/dist/types/index.d.ts:    options: any;
./node_modules/storybook/dist/types/index.d.ts:    data?: any;
./node_modules/storybook/dist/types/index.d.ts:    error?: any;
./node_modules/storybook/dist/types/index.d.ts:    options?: any;
./node_modules/storybook/dist/types/index.d.ts:    babel?: any;
./node_modules/storybook/dist/types/index.d.ts:    swc?: any;
./node_modules/storybook/dist/types/index.d.ts:    babelDefault?: any;
./node_modules/storybook/dist/types/index.d.ts:        options?: any;
./node_modules/storybook/dist/types/index.d.ts:    renderLabel?: (item: API_BaseEntry, api: any) => any;
./node_modules/storybook/dist/types/index.d.ts:        [parameterName: string]: any;
./node_modules/storybook/dist/types/index.d.ts:        [parameterName: string]: any;
./node_modules/storybook/dist/types/index.d.ts:    [key: string]: any;
./node_modules/storybook/dist/types/index.d.ts:        [key: string]: any;
./node_modules/storybook/dist/types/index.d.ts:            [optionName: string]: any;
./node_modules/storybook/dist/types/index.d.ts:        [parameterName: string]: any;
./node_modules/storybook/dist/types/index.d.ts:        [k: string]: any;
./node_modules/storybook/dist/types/index.d.ts:    [key: string]: any;
./node_modules/storybook/dist/types/index.d.ts:    order?: any[];
./node_modules/storybook/dist/types/index.d.ts:    [key: string]: any;
./node_modules/storybook/dist/types/index.d.ts:    [key: string]: any;
./node_modules/storybook/dist/types/index.d.ts:    component: any;
./node_modules/storybook/dist/types/index.d.ts:    canvasElement: any;
./node_modules/storybook/dist/types/index.d.ts:        [key: string]: any;
./node_modules/storybook/dist/types/index.d.ts:type Addon_MakeDecoratorResult = (...args: any) => any;
./node_modules/storybook/dist/types/index.d.ts:    apply: (a: Addon_StoryApi<StoryFnReturnType>, b: any[]) => any;
./node_modules/storybook/dist/types/index.d.ts:type Addon_ClientApiReturnFn<StoryFnReturnType = unknown> = (...args: any[]) => Addon_StoryApi<StoryFnReturnType>;
./node_modules/storybook/dist/types/index.d.ts:    [key: string]: any;
./node_modules/storybook/dist/viewport/index.d.ts:    state: any;
./node_modules/storybook/dist/viewport/index.d.ts:    [routeId: string]: any;
./node_modules/storybook/dist/viewport/index.d.ts:    data: any;
./node_modules/storybook/dist/viewport/index.d.ts:    error: any;
./node_modules/storybook/dist/viewport/index.d.ts:    context?: any;
./node_modules/storybook/dist/viewport/index.d.ts:    handle?: any;
./node_modules/storybook/dist/preview-errors.d.ts:    data?: any;
./node_modules/storybook/dist/test/index.d.ts:    anything(): any;
./node_modules/storybook/dist/test/index.d.ts:    any(constructor: unknown): any;
./node_modules/storybook/dist/test/index.d.ts:  ...args: any[]
./node_modules/storybook/dist/test/index.d.ts:declare type Test = (arg0: any) => boolean;
./node_modules/storybook/dist/test/index.d.ts:    serialize: (val: any, config: Config$1, indentation: string, depth: number, refs: Refs, printer: Printer) => string;
./node_modules/storybook/dist/test/index.d.ts:  asyncWrapper(cb: (...args: any[]) => any): Promise<any>
./node_modules/storybook/dist/test/index.d.ts:  eventWrapper(cb: (...args: any[]) => any): void
./node_modules/storybook/dist/test/index.d.ts:type Procedure = (...args: any[]) => any;
./node_modules/storybook/dist/preview-api/index.d.ts:    memoizedState?: any;
./node_modules/storybook/dist/preview-api/index.d.ts:    deps?: any[] | undefined;
./node_modules/storybook/dist/preview-api/index.d.ts:type AbstractFunction = (...args: any[]) => any;
./node_modules/storybook/dist/preview-api/index.d.ts:declare function useMemo<T>(nextCreate: () => T, deps?: any[]): T;
./node_modules/storybook/dist/preview-api/index.d.ts:declare function useCallback<T>(callback: T, deps?: any[]): T;
./node_modules/storybook/dist/preview-api/index.d.ts:declare function useEffect(create: () => (() => void) | void, deps?: any[]): void;
./node_modules/storybook/dist/preview-api/index.d.ts:    (...args: any[]): void;
./node_modules/storybook/dist/preview-api/index.d.ts: * @returns {(...args: any[]) => void} A function to emit events to the Storybook channel.
./node_modules/storybook/dist/preview-api/index.d.ts:declare function useChannel(eventMap: EventMap, deps?: any[]): (eventName: string, ...args: any) => void;
./node_modules/storybook/dist/preview-api/index.d.ts:type MakeDecoratorResult = (...args: any) => any;
./node_modules/storybook/dist/preview-api/index.d.ts:    extend: any;
./node_modules/storybook/dist/preview-api/index.d.ts:            [x: string]: any;
./node_modules/storybook/dist/preview-api/index.d.ts:            T: any;
./node_modules/storybook/dist/preview-api/index.d.ts:            T: any;
./node_modules/storybook/dist/preview-api/index.d.ts:declare const combineArgs: (value: any, update: any) => Args;
./node_modules/storybook/dist/preview-api/index.d.ts:            [x: string]: any;
./node_modules/storybook/dist/preview-api/index.d.ts:            T: any;
./node_modules/storybook/dist/preview-api/index.d.ts:            T: any;
./node_modules/storybook/dist/preview-api/index.d.ts:        allArgs: any;
./node_modules/storybook/dist/preview-api/index.d.ts:        argsByTarget: any;
./node_modules/storybook/dist/preview-api/index.d.ts:        unmappedArgs: any;
./node_modules/storybook/dist/preview-api/index.d.ts:    renderToElement: (canvasElement: TRenderer['canvasElement'], renderStoryToElement?: any, options?: StoryRenderOptions) => Promise<void>;
./node_modules/storybook/dist/preview-api/index.d.ts:            [x: string]: any;
./node_modules/storybook/dist/preview-api/index.d.ts:            T: any;
./node_modules/storybook/dist/preview-api/index.d.ts:            T: any;
./node_modules/storybook/dist/preview-api/index.d.ts:    onUpdateQueryParams(queryParams: any): void;
./node_modules/storybook/dist/preview-api/index.d.ts:declare function simulatePageLoad($container: any): void;
./node_modules/storybook/dist/preview-api/index.d.ts:declare function getCoreAnnotations(): any[];
./node_modules/storybook/dist/csf/index.d.ts:	[x: string]: any
./node_modules/storybook/dist/csf/index.d.ts:	[x: number]: any
./node_modules/storybook/dist/csf/index.d.ts:	[x: symbol]: any
./node_modules/storybook/dist/csf/index.d.ts:    [name: string]: any;
./node_modules/storybook/dist/csf/index.d.ts:    eq: any;
./node_modules/storybook/dist/csf/index.d.ts:    neq: any;
./node_modules/storybook/dist/csf/index.d.ts:    [key: string]: any;
./node_modules/storybook/dist/csf/index.d.ts:        [key: string]: any;
./node_modules/storybook/dist/csf/index.d.ts:    defaultValue?: any;
./node_modules/storybook/dist/csf/index.d.ts:    [key: string]: any;
./node_modules/storybook/dist/csf/index.d.ts:    [name: string]: any;
./node_modules/storybook/dist/csf/index.d.ts:    [name: string]: any;
./node_modules/storybook/dist/csf/index.d.ts:    component: any;
./node_modules/storybook/dist/csf/index.d.ts:    storyResult: any;
./node_modules/storybook/dist/csf/index.d.ts:    canvasElement: any;
./node_modules/storybook/dist/csf/index.d.ts:        T: any;
./node_modules/storybook/dist/csf/index.d.ts:        T: any;
./node_modules/storybook/dist/csf/index.d.ts:    [key: string]: any;
./node_modules/storybook/dist/csf/index.d.ts:        T: any;
./node_modules/storybook/dist/cli/index.d.ts:declare function readFileAsJson(jsonPath: string, allowComments?: boolean): any;
./node_modules/storybook/dist/cli/index.d.ts:declare const normalizeExtends: (existingExtends: any) => string[];
./node_modules/storybook/dist/cli/index.d.ts:    export const getValidEnumValues: (obj: any) => any[];
./node_modules/storybook/dist/cli/index.d.ts:    export const objectValues: (obj: any) => any[];
./node_modules/storybook/dist/cli/index.d.ts:    export const jsonStringifyReplacer: (_: string, value: any) => any;
./node_modules/storybook/dist/cli/index.d.ts:        [k: string]: any;
./node_modules/storybook/dist/cli/index.d.ts:    data: any;
./node_modules/storybook/dist/cli/index.d.ts:    readonly data: any;
./node_modules/storybook/dist/cli/index.d.ts:    data: any;
./node_modules/storybook/dist/cli/index.d.ts:type BuiltIn = (((...args: any[]) => any) | (new (...args: any[]) => any)) | {
./node_modules/storybook/dist/core-events/index.d.ts:    eq: any;
./node_modules/storybook/dist/core-events/index.d.ts:    neq: any;
./node_modules/storybook/dist/core-events/index.d.ts:    [key: string]: any;
./node_modules/storybook/dist/core-events/index.d.ts:        [key: string]: any;
./node_modules/storybook/dist/core-events/index.d.ts:    defaultValue?: any;
./node_modules/storybook/dist/core-events/index.d.ts:    [key: string]: any;
./node_modules/storybook/dist/core-events/index.d.ts:    [name: string]: any;
./node_modules/storybook/dist/manager-api/index.d.ts:    loadAddons: (api: any) => void;
./node_modules/storybook/dist/manager-api/index.d.ts:type SetState = (a: any, b: any) => any;
./node_modules/storybook/dist/manager-api/index.d.ts:    getInitialState(base: State): any;
./node_modules/storybook/dist/manager-api/index.d.ts:type ModuleFn<APIType = unknown, StateType = unknown> = (m: ModuleArgs, options?: any) => {
./node_modules/storybook/dist/manager-api/index.d.ts:    emit: (type: string, ...args: any[]) => void;
./node_modules/storybook/dist/manager-api/index.d.ts:    setOptions: (options: any) => void;
./node_modules/storybook/dist/manager-api/index.d.ts:    action: (...args: any[]) => any;
./node_modules/storybook/dist/manager-api/index.d.ts:    [key: string]: any;
./node_modules/storybook/dist/manager-api/index.d.ts:declare const useChannel: (eventMap: API_EventMap, deps?: any[]) => (type: string, ...args: any[]) => void;
./node_modules/storybook/dist/manager-api/index.d.ts:    payload?: any;
./node_modules/storybook/dist/manager-api/index.d.ts:    payload?: any;
./node_modules/storybook/dist/manager-api/index.d.ts:    payload?: any;
./node_modules/storybook/dist/manager-api/index.d.ts:        payload?: any;
./node_modules/storybook/dist/manager-api/index.d.ts:        payload?: any;
./node_modules/storybook/dist/manager-api/index.d.ts:    payload?: any;
./node_modules/storybook/dist/manager-api/index.d.ts:    payload?: any;
./node_modules/storybook/dist/manager-api/index.d.ts:    constructor(options: StoreOptions<State>, testUtils?: any);
./node_modules/storybook/dist/manager-api/index.d.ts:        payload?: any;
./node_modules/storybook/dist/manager-api/index.d.ts:        payload?: any;
./node_modules/storybook/dist/manager-api/index.d.ts:    }>(options: StoreOptions<State>, testUtils?: any): MockUniversalStore<State, CustomEvent>;
./node_modules/storybook/dist/manager-api/index.d.ts:    data?: any;
./node_modules/storybook/dist/manager-api/index.d.ts:    state: any;
./node_modules/storybook/dist/manager-api/index.d.ts:    [routeId: string]: any;
./node_modules/storybook/dist/manager-api/index.d.ts:    data: any;
./node_modules/storybook/dist/manager-api/index.d.ts:    error: any;
./node_modules/storybook/dist/manager-api/index.d.ts:    context?: any;
./node_modules/storybook/dist/manager-api/index.d.ts:    handle?: any;
./node_modules/storybook/dist/babel/index.d.ts:declare function assertNode(node?: any): asserts node is Node$1;
./node_modules/storybook/dist/babel/index.d.ts:declare function assertNumberLiteral(node: any, opts: any): void;
./node_modules/storybook/dist/babel/index.d.ts:declare function assertRegexLiteral(node: any, opts: any): void;
./node_modules/storybook/dist/babel/index.d.ts:declare function assertRestProperty(node: any, opts: any): void;
./node_modules/storybook/dist/babel/index.d.ts:declare function assertSpreadProperty(node: any, opts: any): void;
./node_modules/storybook/dist/babel/index.d.ts:declare function assertModuleDeclaration(node: any, opts: any): void;
./node_modules/storybook/dist/babel/index.d.ts:declare function getType(val: any): "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function" | "array" | "null";
./node_modules/storybook/dist/babel/index.d.ts:    oneOf: any[];
./node_modules/storybook/dist/babel/index.d.ts:}, val: any) => void);
./node_modules/storybook/dist/babel/index.d.ts:declare function isNode(node: any): node is Node$1;
./node_modules/storybook/dist/babel/index.d.ts:declare function isNodesEquivalent<T extends Partial<Node$1>>(a: T, b: any): b is T;
./node_modules/storybook/dist/babel/index.d.ts:  [name: string]: any;
./node_modules/storybook/dist/babel/index.d.ts:    (parent: Node$1, opts?: TraverseOptions, scope?: Scope, state?: any, parentPath?: NodePath): void;
./node_modules/storybook/dist/babel/index.d.ts:        state?: any,
./node_modules/storybook/dist/babel/index.d.ts:        states?: any[],
./node_modules/storybook/dist/babel/index.d.ts:            stateKey: any,
./node_modules/storybook/dist/babel/index.d.ts:    traverse(node: Node$1 | Node$1[], opts?: TraverseOptions, state?: any): void;
./node_modules/storybook/dist/babel/index.d.ts:    setData(key: string, val: any): any;
./node_modules/storybook/dist/babel/index.d.ts:    getData(key: string): any;
./node_modules/storybook/dist/babel/index.d.ts:    value: any;
./node_modules/storybook/dist/babel/index.d.ts:    setValue(value: any): void;
./node_modules/storybook/dist/babel/index.d.ts:    state: any;
./node_modules/storybook/dist/babel/index.d.ts:    opts: any; // exploded TraverseOptions
./node_modules/storybook/dist/babel/index.d.ts:    setData(key: string | symbol, val: any): any;
./node_modules/storybook/dist/babel/index.d.ts:    getData(key: string | symbol, def?: any): any;
./node_modules/storybook/dist/babel/index.d.ts:    set(key: string, node: any): void;
./node_modules/storybook/dist/babel/index.d.ts:        value: any;
./node_modules/storybook/dist/babel/index.d.ts:    equals(key: string, value: any): boolean;
./node_modules/storybook/dist/babel/index.d.ts:    // equals(key: keyof T, value: any): boolean;
./node_modules/storybook/dist/babel/index.d.ts:    addHelper(name: string): any;
./node_modules/storybook/dist/babel/index.d.ts:    addHelper(name: string): any;
./node_modules/storybook/dist/babel/index.d.ts:            callback: (path: NodePath, state: any) => void,
./node_modules/storybook/dist/babel/index.d.ts:        ) => (path: NodePath, state: any) => void)
./node_modules/storybook/dist/babel/index.d.ts:    manipulateOptions?(opts: any, parserOpts: any): void;
./node_modules/storybook/dist/babel/index.d.ts:    inherits?: any;
./node_modules/storybook/dist/babel/index.d.ts:    get(key: unknown): any;
./node_modules/storybook/dist/babel/index.d.ts:    value: object | ((...args: any[]) => any);
./node_modules/storybook/dist/babel/index.d.ts:type PluginTarget = string | object | ((...args: any[]) => any);
./node_modules/storybook/dist/babel/index.d.ts:declare const BabelFileClass: any;
./node_modules/storybook/dist/instrumenter/index.d.ts:    args: any[];
./node_modules/storybook/dist/components/index.d.ts:    jsextra: any;
./node_modules/storybook/dist/components/index.d.ts:    jsx: any;
./node_modules/storybook/dist/components/index.d.ts:    json: any;
./node_modules/storybook/dist/components/index.d.ts:    yml: any;
./node_modules/storybook/dist/components/index.d.ts:    md: any;
./node_modules/storybook/dist/components/index.d.ts:    bash: any;
./node_modules/storybook/dist/components/index.d.ts:    css: any;
./node_modules/storybook/dist/components/index.d.ts:    html: any;
./node_modules/storybook/dist/components/index.d.ts:    tsx: any;
./node_modules/storybook/dist/components/index.d.ts:    typescript: any;
./node_modules/storybook/dist/components/index.d.ts:    graphql: any;
./node_modules/storybook/dist/components/index.d.ts:    rows: any[];
./node_modules/storybook/dist/components/index.d.ts:    customStyle?: any;
./node_modules/storybook/dist/components/index.d.ts:    lineNumberStyle?: any;
./node_modules/storybook/dist/components/index.d.ts:    style?: any;
./node_modules/storybook/dist/components/index.d.ts:    registerLanguage(name: string, func: any): void;
./node_modules/storybook/dist/components/index.d.ts:    registerLanguage(name: string, func: any): void;
./node_modules/storybook/dist/components/index.d.ts:    registerLanguage(name: string, func: any): void;
./node_modules/storybook/dist/components/index.d.ts:    [key: string]: any;
./node_modules/storybook/dist/components/index.d.ts:    addEventListener(type: any, listener: any, optionsOrUseCapture?: any): void;
./node_modules/storybook/dist/components/index.d.ts:    removeEventListener(type: any, listener: any, optionsOrUseCapture?: any): void;
./node_modules/storybook/dist/components/index.d.ts:        [key: string]: any;
./node_modules/storybook/dist/components/index.d.ts:    onClick?: (event: SyntheticEvent, ...args: any[]) => any;
./node_modules/storybook/dist/components/index.d.ts:type LinkWrapperType = (props: any) => ReactNode;
./node_modules/storybook/dist/components/index.d.ts:declare const interleaveSeparators: (list: any[]) => any;
./node_modules/storybook/dist/components/index.d.ts:    [x: string]: any;
./node_modules/storybook/dist/components/index.d.ts:    [x: string]: any;
./node_modules/storybook/dist/common/index.d.ts:declare const resolveAddonName: (configDir: string, name: string, options: any) => CoreCommon_ResolvedAddonPreset | CoreCommon_ResolvedAddonVirtual | undefined;
./node_modules/storybook/dist/common/index.d.ts:    content?: any;
./node_modules/storybook/dist/common/index.d.ts:    value?: any;
./node_modules/storybook/dist/common/index.d.ts:declare function interopRequireDefault(filePath: string): any;
./node_modules/storybook/dist/common/index.d.ts:declare function serverRequire(filePath: string | string[]): any;
./node_modules/storybook/dist/theming/create.d.ts:    [key: string]: any;
./node_modules/storybook/dist/theming/index.d.ts:    __emotion_styles: any;
./node_modules/storybook/dist/theming/index.d.ts:    [key: string]: any;
./node_modules/storybook/dist/theming/index.d.ts:    [key: string]: any;
./node_modules/storybook/dist/actions/index.d.ts:        args: any[];
./node_modules/storybook/dist/actions/index.d.ts:type HandlerFunction = (...args: any[]) => void;
./node_modules/storybook/dist/actions/index.d.ts:type DecoratorFunction = (args: any[]) => any[];
./node_modules/storybook/dist/core-server/index.d.ts:    printError?: (err: any) => void;
./node_modules/storybook/dist/core-server/index.d.ts:declare function build(options?: any, frameworkOptions?: any): Promise<void | {
./node_modules/storybook/dist/core-server/index.d.ts:    (packageJsonPath: string): any | undefined;
./node_modules/storybook/dist/core-server/index.d.ts:    sortStories(entries: StoryIndex['entries'], storySortParameter: any): Promise<Record<string, IndexEntry>>;
./node_modules/storybook/dist/core-server/index.d.ts:    payload?: any;
./node_modules/storybook/dist/core-server/index.d.ts:    payload?: any;
./node_modules/storybook/dist/core-server/index.d.ts:    payload?: any;
./node_modules/storybook/dist/core-server/index.d.ts:        payload?: any;
./node_modules/storybook/dist/core-server/index.d.ts:        payload?: any;
./node_modules/storybook/dist/core-server/index.d.ts:    payload?: any;
./node_modules/storybook/dist/core-server/index.d.ts:    payload?: any;
./node_modules/storybook/dist/core-server/index.d.ts:    constructor(options: StoreOptions<State>, testUtils?: any);
./node_modules/storybook/dist/core-server/index.d.ts:        payload?: any;
./node_modules/storybook/dist/core-server/index.d.ts:        payload?: any;
./node_modules/storybook/dist/core-server/index.d.ts:    }>(options: StoreOptions<State>, testUtils?: any): MockUniversalStore<State, CustomEvent>;
./node_modules/storybook/dist/core-server/index.d.ts:    data?: any;
./node_modules/storybook/dist/core-server/index.d.ts:    state: any;
./node_modules/storybook/dist/core-server/index.d.ts:    [routeId: string]: any;
./node_modules/storybook/dist/core-server/index.d.ts:    data: any;
./node_modules/storybook/dist/core-server/index.d.ts:    error: any;
./node_modules/storybook/dist/core-server/index.d.ts:    context?: any;
./node_modules/storybook/dist/core-server/index.d.ts:    handle?: any;
./node_modules/storybook/dist/docs-tools/index.d.ts:    sbType?: any;
./node_modules/storybook/dist/docs-tools/index.d.ts:    value?: any;
./node_modules/storybook/dist/docs-tools/index.d.ts:    value?: any;
./node_modules/storybook/dist/docs-tools/index.d.ts:    signature?: any;
./node_modules/storybook/dist/docs-tools/index.d.ts:    elements?: any[];
./node_modules/storybook/dist/docs-tools/index.d.ts:declare const str: (obj: any) => string;
./node_modules/storybook/dist/docs-tools/index.d.ts:declare function isValidDocgenSection(docgenSection: any): boolean;
./node_modules/storybook/dist/docs-tools/index.d.ts:declare function getDocgenSection(component: Component, section: string): any;
./node_modules/storybook/dist/docs-tools/index.d.ts:    type?: any;
./node_modules/storybook/dist/docs-tools/index.d.ts:    type?: any;
./node_modules/storybook/dist/docs-tools/index.d.ts:declare const extractComponentSectionArray: (docgenSection: any) => any;
./node_modules/storybook/dist/docs-tools/index.d.ts:declare const extractComponentSectionObject: (docgenSection: any) => (ExtractedProp | null)[];
./node_modules/storybook/dist/node-logger/index.d.ts:        (): any;
./node_modules/storybook/dist/node-logger/index.d.ts:        stream: any; // Defaults to process.stderr
./node_modules/storybook/dist/node-logger/index.d.ts:        log(level: LogLevels | string, prefix: string, message: any, ...args: any[]): void;
./node_modules/storybook/dist/node-logger/index.d.ts:        silly(prefix: string, message: any, ...args: any[]): void;
./node_modules/storybook/dist/node-logger/index.d.ts:        verbose(prefix: string, message: any, ...args: any[]): void;
./node_modules/storybook/dist/node-logger/index.d.ts:        info(prefix: string, message: any, ...args: any[]): void;
./node_modules/storybook/dist/node-logger/index.d.ts:        timing(prefix: string, message: any, ...args: any[]): void;
./node_modules/storybook/dist/node-logger/index.d.ts:        http(prefix: string, message: any, ...args: any[]): void;
./node_modules/storybook/dist/node-logger/index.d.ts:        notice(prefix: string, message: any, ...args: any[]): void;
./node_modules/storybook/dist/node-logger/index.d.ts:        warn(prefix: string, message: any, ...args: any[]): void;
./node_modules/storybook/dist/node-logger/index.d.ts:        error(prefix: string, message: any, ...args: any[]): void;
./node_modules/storybook/dist/node-logger/index.d.ts:        silent(prefix: string, message: any, ...args: any[]): void;
./node_modules/storybook/dist/node-logger/index.d.ts:        [key: string]: any;
./node_modules/storybook/dist/node-logger/index.d.ts:    debug: (...args: any[]) => void;
./node_modules/storybook/dist/node-logger/index.d.ts:    log: (...args: any[]) => void;
./node_modules/storybook/dist/telemetry/index.d.ts:    options: any;
./node_modules/storybook/dist/telemetry/index.d.ts:        options?: any;
./node_modules/storybook/dist/telemetry/index.d.ts:    [key: string]: any;
./node_modules/storybook/dist/telemetry/index.d.ts:declare function sanitizeError(error: Error, pathSeparator?: string): any;
./node_modules/storybook/dist/telemetry/index.d.ts:declare const getPrecedingUpgrade: (events?: any) => Promise<UpgradeSummary | undefined>;
./node_modules/storybook/dist/telemetry/index.d.ts:declare const addToGlobalContext: (key: string, value: any) => void;
./node_modules/storybook/dist/manager-errors.d.ts:    data?: any;
./node_modules/storybook/dist/csf-tools/index.d.ts:    map?: any;
./node_modules/storybook/dist/csf-tools/index.d.ts:    opts: any;
./node_modules/storybook/dist/csf-tools/index.d.ts:    hub: any;
./node_modules/storybook/dist/csf-tools/index.d.ts:    path: any;
./node_modules/storybook/dist/csf-tools/index.d.ts:    scope: any;
./node_modules/storybook/dist/csf-tools/index.d.ts:    inputSourceMap?: any;
./node_modules/storybook/dist/csf-tools/index.d.ts:    getSafeFieldValue(path: string[]): any;
./node_modules/storybook/dist/csf-tools/index.d.ts:    appendValueToArray(path: string[], value: any): void;
./node_modules/storybook/dist/csf-tools/index.d.ts:    valueToNode(value: any): types.Expression | undefined;
./node_modules/storybook/dist/csf-tools/index.d.ts:    setFieldValue(path: string[], value: any): void;
./node_modules/storybook/dist/channels/index.d.ts:    send(event: ChannelEvent, options?: any): void;
./node_modules/storybook/dist/channels/index.d.ts:    args: any[];
./node_modules/storybook/dist/channels/index.d.ts:    (...args: any[]): void;
./node_modules/storybook/dist/channels/index.d.ts:    emit(eventName: string, ...args: any): void;
./node_modules/storybook/dist/channels/index.d.ts:    last(eventName: string): any;
./node_modules/storybook/dist/channels/index.d.ts:    send(event: ChannelEvent, options?: any): Promise<any>;
./node_modules/storybook/dist/channels/index.d.ts:    send(event: any): void;
./node_modules/storybook/dist/client-logger/index.d.ts:type LoggingFn = (message: any, ...args: any[]) => void;
./node_modules/storybook/dist/client-logger/index.d.ts:    readonly trace: (message: any, ...rest: any[]) => void;
./node_modules/storybook/dist/client-logger/index.d.ts:    readonly debug: (message: any, ...rest: any[]) => void;
./node_modules/storybook/dist/client-logger/index.d.ts:    readonly info: (message: any, ...rest: any[]) => void;
./node_modules/storybook/dist/client-logger/index.d.ts:    readonly warn: (message: any, ...rest: any[]) => void;
./node_modules/storybook/dist/client-logger/index.d.ts:    readonly error: (message: any, ...rest: any[]) => void;
./node_modules/storybook/dist/client-logger/index.d.ts:    readonly log: (message: any, ...rest: any[]) => void;
./node_modules/storybook/dist/client-logger/index.d.ts:    (type: keyof typeof logger): (message: any, ...rest: any[]) => void;
./node_modules/storybook/dist/client-logger/index.d.ts:    trace: (message: any, ...rest: any[]) => void;
./node_modules/storybook/dist/client-logger/index.d.ts:    debug: (message: any, ...rest: any[]) => void;
./node_modules/storybook/dist/client-logger/index.d.ts:    info: (message: any, ...rest: any[]) => void;
./node_modules/storybook/dist/client-logger/index.d.ts:    warn: (message: any, ...rest: any[]) => void;
./node_modules/storybook/dist/client-logger/index.d.ts:    error: (message: any, ...rest: any[]) => void;
./node_modules/storybook/dist/client-logger/index.d.ts:    log: (message: any, ...rest: any[]) => void;
./node_modules/storybook/dist/client-logger/index.d.ts:declare const deprecate: (message: any, ...rest: any[]) => void;
./node_modules/storybook/dist/client-logger/index.d.ts:    trace: (message: any, ...args: any[]) => void;
./node_modules/storybook/dist/client-logger/index.d.ts:    debug: (message: any, ...args: any[]) => void;
./node_modules/storybook/dist/client-logger/index.d.ts:    info: (message: any, ...args: any[]) => void;
./node_modules/storybook/dist/client-logger/index.d.ts:    warn: (message: any, ...args: any[]) => void;
./node_modules/storybook/dist/client-logger/index.d.ts:    error: (message: any, ...args: any[]) => void;
./node_modules/storybook/dist/router/index.d.ts:    [key: string]: any;
./node_modules/storybook/dist/router/index.d.ts:declare const deepDiff: (value: any, update: any) => any;
./node_modules/storybook/dist/router/index.d.ts:    [key: string]: any;
./node_modules/storybook/dist/router/index.d.ts:declare const getMatch: (current: string, target: string | RegExp, startsWith?: any) => Match$1 | null;
./node_modules/storybook/dist/router/index.d.ts:    state: any;
./node_modules/storybook/dist/router/index.d.ts:    push(to: To, state?: any): void;
./node_modules/storybook/dist/router/index.d.ts:    replace(to: To, state?: any): void;
./node_modules/storybook/dist/router/index.d.ts:    [routeId: string]: any;
./node_modules/storybook/dist/router/index.d.ts:    data: any;
./node_modules/storybook/dist/router/index.d.ts:    error: any;
./node_modules/storybook/dist/router/index.d.ts:    context?: any;
./node_modules/storybook/dist/router/index.d.ts:    handle?: any;
./node_modules/storybook/dist/router/index.d.ts:    state?: any;
./node_modules/storybook/dist/router/index.d.ts:    push(to: To, state?: any, opts?: NavigateOptions$1): void;
./node_modules/storybook/dist/router/index.d.ts:    replace(to: To, state?: any, opts?: NavigateOptions$1): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/compatibility/iterators.d.ts:        : any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/domain.d.ts:        run<T>(fn: (...args: any[]) => T, ...args: any[]): T;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/globals.d.ts:type _Request = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").Request;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/globals.d.ts:type _Response = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").Response;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/globals.d.ts:type _FormData = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").FormData;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/globals.d.ts:type _Headers = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").Headers;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/globals.d.ts:type _MessageEvent = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").MessageEvent;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/globals.d.ts:type _RequestInit = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/globals.d.ts:type _ResponseInit = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/globals.d.ts:type _DOMException = typeof globalThis extends { onmessage: any } ? {} : NodeDOMException;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/globals.d.ts:        prepareStackTrace(err: Error, stackTraces: NodeJS.CallSite[]): any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/globals.d.ts:    var DOMException: typeof globalThis extends { onmessage: any; DOMException: infer T } ? T
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/globals.d.ts:        abort(reason?: any): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/globals.d.ts:    var AbortController: typeof globalThis extends { onmessage: any; AbortController: infer T } ? T
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/globals.d.ts:        readonly reason: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/globals.d.ts:    var AbortSignal: typeof globalThis extends { onmessage: any; AbortSignal: infer T } ? T
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/globals.d.ts:            abort(reason?: any): AbortSignal;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/globals.d.ts:        onmessage: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/globals.d.ts:        onmessage: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/globals.d.ts:        onmessage: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/globals.d.ts:        onmessage: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/globals.d.ts:        onmessage: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/tls.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/tls.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/tls.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/tls.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/tls.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/tls.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/tls.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/tls.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/tls.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/tls.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/tls.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/tls.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/tls.d.ts:        context: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/tty.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/tty.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/tty.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/tty.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/tty.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/tty.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/readline.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/readline.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/readline.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/readline.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/readline.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/readline.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/events.d.ts:        once(eventName: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/events.d.ts:            listener: (...args: any[]) => void,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/events.d.ts:        ): any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/events.d.ts:    type AnyRest = [...args: any[]];
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/events.d.ts:    type Listener1<K, T> = Listener<K, T, (...args: any[]) => void>;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/buffer.d.ts:type _Blob = typeof globalThis extends { onmessage: any; Blob: any } ? {} : import("buffer").Blob;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/buffer.d.ts:            isBuffer(obj: any): obj is Buffer;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/buffer.d.ts:        var Blob: typeof globalThis extends { onmessage: any; Blob: infer T } ? T
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:    const workerData: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        postMessage(value: any, transferList?: readonly Transferable[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        addListener(event: "message", listener: (value: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        emit(event: "message", value: any): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        on(event: "message", listener: (value: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        once(event: "message", listener: (value: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        prependListener(event: "message", listener: (value: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: "message", listener: (value: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        removeListener(event: "message", listener: (value: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        off(event: "message", listener: (value: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        off(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        argv?: any[] | undefined;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        workerData?: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        postMessage(value: any, transferList?: readonly Transferable[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        addListener(event: "message", listener: (value: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        emit(event: "message", value: any): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        on(event: "message", listener: (value: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        once(event: "message", listener: (value: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        prependListener(event: "message", listener: (value: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: "message", listener: (value: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        removeListener(event: "message", listener: (value: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        off(event: "message", listener: (value: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:        off(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:            message: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:            onmessage: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:            onmessage: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/worker_threads.d.ts:            onmessage: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/dom-events.d.ts:type __Event = typeof globalThis extends { onmessage: any } ? {} : Event;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/dom-events.d.ts:type __EventTarget = typeof globalThis extends { onmessage: any } ? {} : EventTarget;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/dom-events.d.ts:    var Event: typeof globalThis extends { onmessage: any; Event: infer T } ? T
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/dom-events.d.ts:    var EventTarget: typeof globalThis extends { onmessage: any; EventTarget: infer T } ? T
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/console.d.ts:            assert(value: any, message?: string, ...optionalParams: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/console.d.ts:            debug(message?: any, ...optionalParams: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/console.d.ts:            dir(obj: any, options?: InspectOptions): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/console.d.ts:            dirxml(...data: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/console.d.ts:            error(message?: any, ...optionalParams: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/console.d.ts:            group(...label: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/console.d.ts:            groupCollapsed(...label: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/console.d.ts:            info(message?: any, ...optionalParams: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/console.d.ts:            log(message?: any, ...optionalParams: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/console.d.ts:            table(tabularData: any, properties?: readonly string[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/console.d.ts:            timeLog(label?: string, ...data: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/console.d.ts:            trace(message?: any, ...optionalParams: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/console.d.ts:            warn(message?: any, ...optionalParams: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/async_hooks.d.ts:        static bind<Func extends (this: ThisArg, ...args: any[]) => any, ThisArg>(
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/async_hooks.d.ts:        bind<Func extends (...args: any[]) => any>(
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/async_hooks.d.ts:            fn: (this: This, ...args: any[]) => Result,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/async_hooks.d.ts:            ...args: any[]
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/async_hooks.d.ts:        static bind<Func extends (...args: any[]) => any>(fn: Func): Func & {
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:type _ByteLengthQueuingStrategy = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:type _CompressionStream = typeof globalThis extends { onmessage: any; ReportingObserver: any } ? {}
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:type _CountQueuingStrategy = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:type _DecompressionStream = typeof globalThis extends { onmessage: any; ReportingObserver: any } ? {}
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:type _ReadableByteStreamController = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:type _ReadableStream<R = any> = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:type _ReadableStreamBYOBReader = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:type _ReadableStreamBYOBRequest = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:type _ReadableStreamDefaultController<R = any> = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:type _ReadableStreamDefaultReader<R = any> = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:type _TextDecoderStream = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:type _TextEncoderStream = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:type _TransformStream<I = any, O = any> = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:type _TransformStreamDefaultController<O = any> = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:type _WritableStream<W = any> = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:type _WritableStreamDefaultController = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:type _WritableStreamDefaultWriter<W = any> = typeof globalThis extends { onmessage: any } ? {}
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        cancel(reason?: any): Promise<void>;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        (reason?: any): void | PromiseLike<void>;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        (controller: WritableStreamDefaultController): any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        (reason?: any): void | PromiseLike<void>;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        (controller: ReadableStreamController<R>): any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        (controller: TransformStreamDefaultController<O>): any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        (reason: any): void | PromiseLike<void>;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        cancel(reason?: any): Promise<void>;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        error(error?: any): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        error(e?: any): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        error(reason?: any): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        abort(reason?: any): Promise<void>;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        abort(reason?: any): Promise<void>;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        error(e?: any): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        var ByteLengthQueuingStrategy: typeof globalThis extends { onmessage: any; ByteLengthQueuingStrategy: infer T }
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:            onmessage: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:            ReportingObserver: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:            : typeof globalThis extends { onmessage: any; TransformStream: { prototype: infer T } } ? {
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        var CountQueuingStrategy: typeof globalThis extends { onmessage: any; CountQueuingStrategy: infer T } ? T
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:            onmessage: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:            ReportingObserver: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:            : typeof globalThis extends { onmessage: any; TransformStream: { prototype: infer T } } ? {
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:            { onmessage: any; ReadableByteStreamController: infer T } ? T
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        var ReadableStream: typeof globalThis extends { onmessage: any; ReadableStream: infer T } ? T
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        var ReadableStreamBYOBReader: typeof globalThis extends { onmessage: any; ReadableStreamBYOBReader: infer T }
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        var ReadableStreamBYOBRequest: typeof globalThis extends { onmessage: any; ReadableStreamBYOBRequest: infer T }
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:            { onmessage: any; ReadableStreamDefaultController: infer T } ? T
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:            { onmessage: any; ReadableStreamDefaultReader: infer T } ? T
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        var TextDecoderStream: typeof globalThis extends { onmessage: any; TextDecoderStream: infer T } ? T
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        var TextEncoderStream: typeof globalThis extends { onmessage: any; TextEncoderStream: infer T } ? T
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        var TransformStream: typeof globalThis extends { onmessage: any; TransformStream: infer T } ? T
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:            { onmessage: any; TransformStreamDefaultController: infer T } ? T
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:        var WritableStream: typeof globalThis extends { onmessage: any; WritableStream: infer T } ? T
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:            { onmessage: any; WritableStreamDefaultController: infer T } ? T
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream/web.d.ts:            { onmessage: any; WritableStreamDefaultWriter: infer T } ? T
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/vm.d.ts:        runInContext(contextifiedObject: Context, options?: RunningScriptOptions): any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/vm.d.ts:        runInNewContext(contextObject?: Context, options?: RunningScriptInNewContextOptions): any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/vm.d.ts:        runInThisContext(options?: RunningScriptOptions): any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/vm.d.ts:    function runInContext(code: string, contextifiedObject: Context, options?: RunningCodeOptions | string): any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/vm.d.ts:    ): any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/vm.d.ts:    function runInThisContext(code: string, options?: RunningCodeOptions | string): any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/vm.d.ts:        error: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/vm.d.ts:        setExport(name: string, value: any): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/timers.d.ts:                _onImmediate(...args: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/timers.d.ts:                _onTimeout(...args: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/test.d.ts:    type TestFn = (t: TestContext, done: (result?: any) => void) => any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/test.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/test.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/test.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/test.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/test.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/test.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/test.d.ts:    type HookFn = (c: TestContext | SuiteContext, done: (result?: any) => void) => any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/test.d.ts:    type TestContextHookFn = (t: TestContext, done: (result?: any) => void) => any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/test.d.ts:    type NoOpFunction = (...args: any[]) => undefined;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/test.d.ts:        ReturnType = F extends (...args: any) => infer T ? T
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/test.d.ts:            : F extends abstract new(...args: any) => infer T ? T
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/test.d.ts:        target: F extends abstract new(...args: any) => any ? F : undefined;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http.d.ts:        emit(event: string, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:    type ComposeFnParam = (source: any) => void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            read(size?: number): any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            unshift(chunk: any, encoding?: BufferEncoding): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            push(chunk: any, encoding?: BufferEncoding): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            map(fn: (data: any, options?: Pick<ArrayOptions, "signal">) => any, options?: ArrayOptions): Readable;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => boolean | Promise<boolean>,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => void | Promise<void>,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => boolean | Promise<boolean>,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => data is T,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => boolean | Promise<boolean>,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => boolean | Promise<boolean>,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            flatMap(fn: (data: any, options?: Pick<ArrayOptions, "signal">) => any, options?: ArrayOptions): Readable;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:                fn: (previous: any, data: any, options?: Pick<ArrayOptions, "signal">) => T,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:                fn: (previous: T, data: any, options?: Pick<ArrayOptions, "signal">) => T,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            addListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            emit(event: "data", chunk: any): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            on(event: "data", listener: (chunk: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            once(event: "data", listener: (chunk: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            prependListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            removeListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:                chunk: any,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:                    chunk: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            _write(chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:                    chunk: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            write(chunk: any, callback?: (error: Error | null | undefined) => void): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            write(chunk: any, encoding: BufferEncoding, callback?: (error: Error | null | undefined) => void): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            end(chunk: any, cb?: () => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            end(chunk: any, encoding: BufferEncoding, cb?: () => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            addListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            emit(event: "data", chunk: any): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            on(event: "data", listener: (chunk: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            once(event: "data", listener: (chunk: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            prependListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            removeListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:        type TransformCallback = (error?: Error | null, data?: any) => void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            transform?(this: T, chunk: any, encoding: BufferEncoding, callback: TransformCallback): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:            _transform(chunk: any, encoding: BufferEncoding, callback: TransformCallback): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/stream.d.ts:                source: S extends (...args: any[]) => Iterable<infer ST> | AsyncIterable<infer ST> ? AsyncIterable<ST>
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:            value?: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:            value?: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        debug(...data: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        error(...data: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        info(...data: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        log(...data: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        warn(...data: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        dir(...data: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        dirxml(...data: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        table(...data: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        trace(...data: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        group(...data: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        groupCollapsed(...data: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        groupEnd(...data: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        clear(...data: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        count(label?: any): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        countReset(label?: any): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        assert(value?: any, ...data: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        profile(label?: any): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        profileEnd(label?: any): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        time(label?: any): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        timeLog(label?: any): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/inspector.d.ts:        timeStamp(label?: any): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/v8.d.ts:        writeValue(val: any): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/v8.d.ts:        readValue(): any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/v8.d.ts:    function serialize(value: any): Buffer;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/v8.d.ts:    function deserialize(buffer: NodeJS.ArrayBufferView): any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/v8.d.ts:    type StartupSnapshotCallbackFn = (args: any) => any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/v8.d.ts:        addSerializeCallback(callback: StartupSnapshotCallbackFn, data?: any): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/v8.d.ts:        addDeserializeCallback(callback: StartupSnapshotCallbackFn, data?: any): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/v8.d.ts:        setDeserializeMainFunction(callback: StartupSnapshotCallbackFn, data?: any): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/perf_hooks.d.ts:        toJSON(): any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/perf_hooks.d.ts:        timerify<T extends (...params: any[]) => any>(fn: T, options?: TimerifyOptions): T;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/perf_hooks.d.ts:        toJSON(): any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/perf_hooks.d.ts:        toJSON(): any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/perf_hooks.d.ts:            onmessage: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/url.d.ts:            onmessage: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/url.d.ts:            onmessage: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        stdio?: any[] | undefined;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        addListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        emit(event: "message", message: any, handle: net.Socket | net.Server): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        on(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        once(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        prependListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        prependOnceListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        fork(env?: any): Worker;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:            listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        emit(event: "message", worker: Worker, message: any, handle: net.Socket | net.Server): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        on(event: "message", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        once(event: "message", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:            listener: (worker: Worker, message: any, handle?: net.Socket | net.Server) => void,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/cluster.d.ts:            listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/https.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/https.d.ts:        emit(event: string, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/https.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/https.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/https.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/https.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/assert.d.ts:            calls<Func extends (...args: any[]) => any>(fn: Func, exact?: number): Func;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/assert.d.ts:            calls<Func extends (...args: any[]) => any>(fn?: Func, exact?: number): Func | (() => void);
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/fs.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/fs.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/fs.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/fs.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/fs.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/fs.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/fs.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/fs.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/fs.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/fs.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/fs.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/fs.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/fs.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/fs.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/fs.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/fs.d.ts:        open?: (...args: any[]) => any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/fs.d.ts:        close?: (...args: any[]) => any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/fs.d.ts:        read: (...args: any[]) => any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/fs.d.ts:        write: (...args: any[]) => any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/fs.d.ts:        writev?: (...args: any[]) => any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/repl.d.ts:        cb: (err: Error | null, result: any) => void,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/repl.d.ts:    type REPLWriter = (this: REPLServer, obj: any) => string;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/repl.d.ts:        readonly last: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/repl.d.ts:        readonly lastError: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/repl.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/repl.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/repl.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/repl.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/repl.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/repl.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/dgram.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/dgram.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/dgram.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/dgram.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/dgram.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/dgram.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/child_process.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/child_process.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/child_process.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/child_process.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/child_process.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/child_process.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/module.d.ts:            transferList?: any[] | undefined;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/module.d.ts:    type ImportMetaDOMCompat = typeof globalThis extends { onmessage: any } ? {
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/module.d.ts:                exports: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/module.d.ts:                require(id: string): any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/module.d.ts:                (id: string): any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/process.d.ts:                    readonly cflags: any[];
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/process.d.ts:                nextTick(callback: Function, ...args: any[]): void;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/process.d.ts:                    message: any,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/process.d.ts:                    sendHandle?: any,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/process.d.ts:                on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/process.d.ts:                once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/util.d.ts:    export function format(format?: any, ...param: any[]): string;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/util.d.ts:    export function formatWithOptions(inspectOptions: InspectOptions, format?: any, ...param: any[]): string;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/util.d.ts:    export function aborted(signal: AbortSignal, resource: any): Promise<void>;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/util.d.ts:    export function inspect(object: any, showHidden?: boolean, depth?: number | null, color?: boolean): string;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/util.d.ts:    export function inspect(object: any, options?: InspectOptions): string;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/util.d.ts:        fn: (callback: (err: any, result: TResult) => void) => void,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/util.d.ts:    export function promisify(fn: (callback: (err?: any) => void) => void): () => Promise<void>;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, callback: (err: any, result: TResult) => void) => void,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/util.d.ts:    export function promisify<T1>(fn: (arg1: T1, callback: (err?: any) => void) => void): (arg1: T1) => Promise<void>;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, callback: (err: any, result: TResult) => void) => void,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, callback: (err?: any) => void) => void,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, callback: (err: any, result: TResult) => void) => void,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, callback: (err?: any) => void) => void,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: (err: any, result: TResult) => void) => void,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: (err?: any) => void) => void,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: (err: any, result: TResult) => void) => void,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: (err?: any) => void) => void,
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/util.d.ts:            onmessage: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/util.d.ts:            onmessage: any;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/net.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/net.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/net.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/net.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/net.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/net.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/net.d.ts:        listen(handle: any, backlog?: number, listeningListener?: () => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/net.d.ts:        listen(handle: any, listeningListener?: () => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/net.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/net.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/net.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/net.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/net.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/@types/node/net.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@anthropic-ai/sdk/node_modules/undici-types/websocket.d.ts:    data?: any,
./node_modules/@anthropic-ai/sdk/node_modules/undici-types/fetch.d.ts:  static json(data: any, init?: ResponseInit): Response
./node_modules/@anthropic-ai/sdk/node_modules/undici-types/webidl.d.ts:  [Key: string]: (...args: any[]) => unknown
./node_modules/@anthropic-ai/sdk/node_modules/undici-types/patch.d.ts: : any
./node_modules/@anthropic-ai/sdk/node_modules/undici-types/patch.d.ts:      listener: any,
./node_modules/@anthropic-ai/sdk/node_modules/undici-types/patch.d.ts:      options?: any,
./node_modules/@anthropic-ai/sdk/node_modules/undici-types/patch.d.ts:      listener: any,
./node_modules/@anthropic-ai/sdk/node_modules/undici-types/patch.d.ts:      options?: any | boolean,
./node_modules/@anthropic-ai/sdk/internal/stream-utils.d.ts:export declare function ReadableStreamToAsyncIterable<T>(stream: any): AsyncIterableIterator<T>;
./node_modules/@anthropic-ai/sdk/internal/decoders/line.d.ts:    textDecoder: any;
./node_modules/@anthropic-ai/sdk/core.d.ts:    then<TResult1 = WithRequestID<T>, TResult2 = never>(onfulfilled?: ((value: WithRequestID<T>) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
./node_modules/@anthropic-ai/sdk/core.d.ts:    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<WithRequestID<T> | TResult>;
./node_modules/@anthropic-ai/sdk/core.d.ts:    getAPIList<Item, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(path: string, Page: new (...args: any[]) => PageClass, opts?: RequestOptions<any>): PagePromise<PageClass, Item>;
./node_modules/@anthropic-ai/sdk/core.d.ts:export declare const castToError: (err: any) => Error;
./node_modules/@anthropic-ai/sdk/core.d.ts:export declare function debug(action: string, ...args: any[]): void;
./node_modules/@anthropic-ai/sdk/core.d.ts:export declare const isHeadersProtocol: (headers: any) => headers is HeadersProtocol;
./node_modules/@anthropic-ai/sdk/uploads.d.ts:export declare const isResponseLike: (value: any) => value is ResponseLike;
./node_modules/@anthropic-ai/sdk/uploads.d.ts:export declare const isFileLike: (value: any) => value is FileLike;
./node_modules/@anthropic-ai/sdk/uploads.d.ts:export declare const isBlobLike: (value: any) => value is BlobLike & {
./node_modules/@anthropic-ai/sdk/uploads.d.ts:export declare const isUploadable: (value: any) => value is Uploadable;
./node_modules/@anthropic-ai/sdk/uploads.d.ts:export declare const isMultipartBody: (body: any) => body is MultipartBody;
./node_modules/@anthropic-ai/sdk/_shims/registry.d.ts:    fetch: any;
./node_modules/@anthropic-ai/sdk/_shims/registry.d.ts:    Request: any;
./node_modules/@anthropic-ai/sdk/_shims/registry.d.ts:    Response: any;
./node_modules/@anthropic-ai/sdk/_shims/registry.d.ts:    Headers: any;
./node_modules/@anthropic-ai/sdk/_shims/registry.d.ts:    FormData: any;
./node_modules/@anthropic-ai/sdk/_shims/registry.d.ts:    Blob: any;
./node_modules/@anthropic-ai/sdk/_shims/registry.d.ts:    File: any;
./node_modules/@anthropic-ai/sdk/_shims/registry.d.ts:    ReadableStream: any;
./node_modules/@anthropic-ai/sdk/_shims/registry.d.ts:    isFsReadStream: (value: any) => boolean;
./node_modules/@anthropic-ai/sdk/_shims/MultipartBody.d.ts:    body: any;
./node_modules/@anthropic-ai/sdk/_shims/MultipartBody.d.ts:    constructor(body: any);
./node_modules/@anthropic-ai/sdk/_shims/auto/types.d.ts:  read(size?: number): any;
./node_modules/@anthropic-ai/sdk/_shims/web-types.d.ts:  read(size?: number): any;
./node_modules/@anthropic-ai/sdk/_shims/index.d.ts:export function getDefaultAgent(url: string): any;
./node_modules/@anthropic-ai/sdk/_shims/index.d.ts:export function isFsReadStream(value: any): value is FsReadStream;
./node_modules/@anthropic-ai/sdk/src/streaming.ts:      async pull(ctrl: any) {
./node_modules/@anthropic-ai/sdk/src/uploads.ts:export const isResponseLike = (value: any): value is ResponseLike =>
./node_modules/@anthropic-ai/sdk/src/uploads.ts:export const isFileLike = (value: any): value is FileLike =>
./node_modules/@anthropic-ai/sdk/src/uploads.ts:export const isBlobLike = (value: any): value is BlobLike & { arrayBuffer(): Promise<ArrayBuffer> } =>
./node_modules/@anthropic-ai/sdk/src/uploads.ts:export const isUploadable = (value: any): value is Uploadable => {
./node_modules/@anthropic-ai/sdk/src/uploads.ts:function propsForError(value: any): string {
./node_modules/@anthropic-ai/sdk/src/uploads.ts:function getName(value: any): string | undefined {
./node_modules/@anthropic-ai/sdk/src/uploads.ts:const isAsyncIterableIterator = (value: any): value is AsyncIterableIterator<unknown> =>
./node_modules/@anthropic-ai/sdk/src/uploads.ts:export const isMultipartBody = (body: any): body is MultipartBody =>
./node_modules/@anthropic-ai/sdk/src/internal/decoders/line.ts:  textDecoder: any; // TextDecoder found in browsers; not typed to avoid pulling in either "dom" or "node" types.
./node_modules/@anthropic-ai/sdk/src/internal/stream-utils.ts:export function ReadableStreamToAsyncIterable<T>(stream: any): AsyncIterableIterator<T> {
./node_modules/@anthropic-ai/sdk/src/core.ts:    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
./node_modules/@anthropic-ai/sdk/src/core.ts:    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
./node_modules/@anthropic-ai/sdk/src/core.ts:    Page: new (...args: any[]) => PageClass,
./node_modules/@anthropic-ai/sdk/src/core.ts:declare const Deno: any;
./node_modules/@anthropic-ai/sdk/src/core.ts:declare const EdgeRuntime: any;
./node_modules/@anthropic-ai/sdk/src/core.ts:export const castToError = (err: any): Error => {
./node_modules/@anthropic-ai/sdk/src/core.ts:export function debug(action: string, ...args: any[]) {
./node_modules/@anthropic-ai/sdk/src/core.ts:export const isHeadersProtocol = (headers: any): headers is HeadersProtocol => {
./node_modules/@anthropic-ai/sdk/src/lib/BetaMessageStream.ts:      listeners.forEach(({ listener }: any) => listener(...args));
./node_modules/@anthropic-ai/sdk/src/lib/MessageStream.ts:      listeners.forEach(({ listener }: any) => listener(...args));
./node_modules/@anthropic-ai/sdk/src/_shims/bun-runtime.ts:  function isFsReadStream(value: any): value is FsReadStream {
./node_modules/@anthropic-ai/sdk/src/_shims/auto/types.d.ts:  read(size?: number): any;
./node_modules/@anthropic-ai/sdk/src/_shims/web-types.d.ts:  read(size?: number): any;
./node_modules/@anthropic-ai/sdk/src/_shims/MultipartBody.ts:  constructor(public body: any) {}
./node_modules/@anthropic-ai/sdk/src/_shims/web-runtime.ts:    isFsReadStream: (value: any) => false,
./node_modules/@anthropic-ai/sdk/src/_shims/node-runtime.ts:async function fileFromPath(path: string, ...args: any[]): Promise<File> {
./node_modules/@anthropic-ai/sdk/src/_shims/node-runtime.ts:    isFsReadStream: (value: any): value is FsReadStream => value instanceof FsReadStream,
./node_modules/@anthropic-ai/sdk/src/_shims/registry.ts:  fetch: any;
./node_modules/@anthropic-ai/sdk/src/_shims/registry.ts:  Request: any;
./node_modules/@anthropic-ai/sdk/src/_shims/registry.ts:  Response: any;
./node_modules/@anthropic-ai/sdk/src/_shims/registry.ts:  Headers: any;
./node_modules/@anthropic-ai/sdk/src/_shims/registry.ts:  FormData: any;
./node_modules/@anthropic-ai/sdk/src/_shims/registry.ts:  Blob: any;
./node_modules/@anthropic-ai/sdk/src/_shims/registry.ts:  File: any;
./node_modules/@anthropic-ai/sdk/src/_shims/registry.ts:  ReadableStream: any;
./node_modules/@anthropic-ai/sdk/src/_shims/registry.ts:  isFsReadStream: (value: any) => boolean;
./node_modules/@anthropic-ai/sdk/src/_shims/index.d.ts:export function getDefaultAgent(url: string): any;
./node_modules/@anthropic-ai/sdk/src/_shims/index.d.ts:export function isFsReadStream(value: any): value is FsReadStream;
./node_modules/@anthropic-ai/sdk/src/error.ts:  private static makeMessage(status: number | undefined, error: any, message: string | undefined) {
./node_modules/proxy-agent/node_modules/lru-cache/index.d.ts:    fetchContext?: any
./node_modules/proxy-agent/node_modules/lru-cache/index.d.ts:    fetchContext?: any
./node_modules/proxy-agent/node_modules/lru-cache/index.d.ts:    context: any
./node_modules/yoga-layout/dist/src/wrapAssembly.d.ts:export default function wrapAssembly(lib: any): Yoga;
./node_modules/yoga-layout/src/wrapAssembly.ts:export default function wrapAssembly(lib: any): Yoga {
./node_modules/flatted/types/index.d.ts:export function parse(text: string, reviver?: (this: any, key: string, value: any) => any): any;
./node_modules/flatted/types/index.d.ts:export function stringify(value: any, replacer?: (string | number)[] | ((this: any, key: string, value: any) => any), space?: string | number | undefined): string;
./node_modules/flatted/types/index.d.ts:export function toJSON(value: any): any;
./node_modules/flatted/types/index.d.ts:export function fromJSON(value: any): any;
./node_modules/madge/node_modules/commander/typings/index.d.ts:    defaultValue?: any;
./node_modules/madge/node_modules/commander/typings/index.d.ts:    default(value: any, description?: string): this;
./node_modules/madge/node_modules/commander/typings/index.d.ts:    [key: string]: any;
./node_modules/madge/node_modules/commander/typings/index.d.ts:    action(fn: (...args: any[]) => void | Promise<void>): this;
./node_modules/madge/node_modules/commander/typings/index.d.ts:    on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/sucrase/dist/types/parser/traverser/base.d.ts:export declare function augmentError(error: any): any;
./node_modules/sucrase/node_modules/lru-cache/dist/esm/index.d.ts:        isBackgroundFetch: (p: any) => boolean;
./node_modules/sucrase/node_modules/lru-cache/dist/esm/index.d.ts:        backgroundFetch: (k: K, index: number | undefined, options: LRUCache.FetchOptions<K, V, FC>, context: any) => BackgroundFetch<V>;
./node_modules/sucrase/node_modules/lru-cache/dist/esm/index.d.ts:    forEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./node_modules/sucrase/node_modules/lru-cache/dist/esm/index.d.ts:    rforEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./node_modules/sucrase/node_modules/lru-cache/dist/commonjs/index.d.ts:        isBackgroundFetch: (p: any) => boolean;
./node_modules/sucrase/node_modules/lru-cache/dist/commonjs/index.d.ts:        backgroundFetch: (k: K, index: number | undefined, options: LRUCache.FetchOptions<K, V, FC>, context: any) => BackgroundFetch<V>;
./node_modules/sucrase/node_modules/lru-cache/dist/commonjs/index.d.ts:    forEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./node_modules/sucrase/node_modules/lru-cache/dist/commonjs/index.d.ts:    rforEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./node_modules/sucrase/node_modules/jackspeak/dist/esm/index.d.ts:export declare const isConfigOption: <T extends ConfigType, M extends boolean>(o: any, type: T, multi: M) => o is ConfigOptionBase<T, M>;
./node_modules/sucrase/node_modules/jackspeak/dist/commonjs/index.d.ts:export declare const isConfigOption: <T extends ConfigType, M extends boolean>(o: any, type: T, multi: M) => o is ConfigOptionBase<T, M>;
./node_modules/sucrase/node_modules/minimatch/dist/esm/index.d.ts:    debug(..._: any[]): void;
./node_modules/sucrase/node_modules/minimatch/dist/esm/ast.d.ts:    toJSON(): any[];
./node_modules/sucrase/node_modules/minimatch/dist/esm/assert-valid-pattern.d.ts:export declare const assertValidPattern: (pattern: any) => void;
./node_modules/sucrase/node_modules/minimatch/dist/commonjs/index.d.ts:    debug(..._: any[]): void;
./node_modules/sucrase/node_modules/minimatch/dist/commonjs/ast.d.ts:    toJSON(): any[];
./node_modules/sucrase/node_modules/minimatch/dist/commonjs/assert-valid-pattern.d.ts:export declare const assertValidPattern: (pattern: any) => void;
./node_modules/sucrase/node_modules/glob/dist/esm/walker.d.ts:    walkCB2(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./node_modules/sucrase/node_modules/glob/dist/esm/walker.d.ts:    walkCB2Sync(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./node_modules/sucrase/node_modules/glob/dist/commonjs/walker.d.ts:    walkCB2(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./node_modules/sucrase/node_modules/glob/dist/commonjs/walker.d.ts:    walkCB2Sync(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./node_modules/sucrase/node_modules/path-scurry/dist/esm/index.d.ts:        [k: string]: any;
./node_modules/sucrase/node_modules/path-scurry/dist/esm/index.d.ts:    [k: string]: any;
./node_modules/sucrase/node_modules/path-scurry/dist/esm/index.d.ts:        [k: string]: any;
./node_modules/sucrase/node_modules/path-scurry/dist/esm/index.d.ts:    [k: string]: any;
./node_modules/sucrase/node_modules/path-scurry/dist/commonjs/index.d.ts:        [k: string]: any;
./node_modules/sucrase/node_modules/path-scurry/dist/commonjs/index.d.ts:    [k: string]: any;
./node_modules/sucrase/node_modules/path-scurry/dist/commonjs/index.d.ts:        [k: string]: any;
./node_modules/sucrase/node_modules/path-scurry/dist/commonjs/index.d.ts:    [k: string]: any;
./node_modules/jspdf-autotable/dist/index.d.ts:	rect(x: number, y: number, width: number, height: number, fillStyle: "S" | "F" | "DF" | "FD"): any;
./node_modules/jspdf-autotable/dist/index.d.ts:	getDocument(): any;
./node_modules/jspdf-autotable/dist/index.d.ts:	addPage(): any;
./node_modules/@noble/hashes/crypto.d.ts:export declare const crypto: any;
./node_modules/@noble/hashes/esm/crypto.d.ts:export declare const crypto: any;
./node_modules/@noble/hashes/esm/utils.d.ts:export declare function aexists(instance: any, checkFinished?: boolean): void;
./node_modules/@noble/hashes/esm/utils.d.ts:export declare function aoutput(out: any, instance: any): void;
./node_modules/@noble/hashes/esm/utils.d.ts:    create: any;
./node_modules/@noble/hashes/esm/cryptoNode.d.ts:export declare const crypto: any;
./node_modules/@noble/hashes/utils.d.ts:export declare function aexists(instance: any, checkFinished?: boolean): void;
./node_modules/@noble/hashes/utils.d.ts:export declare function aoutput(out: any, instance: any): void;
./node_modules/@noble/hashes/utils.d.ts:    create: any;
./node_modules/@noble/hashes/cryptoNode.d.ts:export declare const crypto: any;
./node_modules/@noble/hashes/src/cryptoNode.ts:export const crypto: any =
./node_modules/@noble/hashes/src/utils.ts:export function aexists(instance: any, checkFinished = true): void {
./node_modules/@noble/hashes/src/utils.ts:export function aoutput(out: any, instance: any): void {
./node_modules/@noble/hashes/src/utils.ts:declare const TextEncoder: any;
./node_modules/@noble/hashes/src/utils.ts:declare const TextDecoder: any;
./node_modules/@noble/hashes/src/utils.ts:  create: any;
./node_modules/@noble/hashes/src/crypto.ts:export const crypto: any =
./node_modules/@noble/hashes/src/pbkdf2.ts:  let prfW: any; // Working copy
./node_modules/@noble/hashes/src/pbkdf2.ts:  let prfW: any; // Working copy
./node_modules/@noble/hashes/src/argon2.ts:  const merged: any = {
./node_modules/@tanstack/table-core/build/lib/core/table.d.ts:    renderFallbackValue: any;
./node_modules/@tanstack/table-core/build/lib/types.d.ts:export type AnyRender = (Comp: any, props: any) => any;
./node_modules/@tanstack/table-core/build/lib/features/ColumnFiltering.d.ts:    (row: Row<TData>, columnId: string, filterValue: any, addMeta: (meta: FilterMeta) => void): boolean;
./node_modules/@tanstack/table-core/build/lib/features/ColumnFiltering.d.ts:export type TransformFilterValueFn<TData extends RowData> = (value: any, column?: Column<TData, unknown>) => unknown;
./node_modules/@tanstack/table-core/build/lib/features/ColumnFiltering.d.ts:export type ColumnFilterAutoRemoveTestFn<TData extends RowData> = (value: any, column?: Column<TData, unknown>) => boolean;
./node_modules/@tanstack/table-core/build/lib/features/ColumnFiltering.d.ts:export declare function shouldAutoRemoveFilter<TData extends RowData>(filterFn?: FilterFn<TData>, value?: any, column?: Column<TData, unknown>): boolean;
./node_modules/@tanstack/table-core/build/lib/features/GlobalFiltering.d.ts:    globalFilter: any;
./node_modules/@tanstack/table-core/build/lib/utils.d.ts:    [TKey in keyof T]?: any;
./node_modules/@tanstack/table-core/build/lib/utils.d.ts:type AnyFunction = (...args: any) => any;
./node_modules/@tanstack/table-core/build/lib/utils.d.ts:export declare function isFunction<T extends AnyFunction>(d: any): d is T;
./node_modules/@tanstack/table-core/build/lib/utils.d.ts:export declare function isNumberArray(d: any): d is number[];
./node_modules/@tanstack/table-core/build/lib/utils.d.ts:    key: any;
./node_modules/@tanstack/table-core/build/lib/utils.d.ts:export declare function getMemoOptions(tableOptions: Partial<TableOptionsResolved<any>>, debugLevel: 'debugAll' | 'debugCells' | 'debugTable' | 'debugColumns' | 'debugRows' | 'debugHeaders', key: string, onChange?: (result: any) => void): {
./node_modules/@tanstack/table-core/build/lib/utils.d.ts:    onChange: ((result: any) => void) | undefined;
./node_modules/@tanstack/table-core/src/sortingFns.ts:function compareBasic(a: any, b: any) {
./node_modules/@tanstack/table-core/src/sortingFns.ts:function toString(a: any) {
./node_modules/@tanstack/table-core/src/core/table.ts:  renderFallbackValue: any
./node_modules/@tanstack/table-core/src/features/GlobalFiltering.ts:  globalFilter: any
./node_modules/@tanstack/table-core/src/features/ColumnFiltering.ts:    filterValue: any,
./node_modules/@tanstack/table-core/src/features/ColumnFiltering.ts:  value: any,
./node_modules/@tanstack/table-core/src/features/ColumnFiltering.ts:  value: any,
./node_modules/@tanstack/table-core/src/features/ColumnFiltering.ts:  value?: any,
./node_modules/@tanstack/table-core/src/utils.ts:export type Overwrite<T, U extends { [TKey in keyof T]?: any }> = Omit<
./node_modules/@tanstack/table-core/src/utils.ts:type AnyFunction = (...args: any) => any
./node_modules/@tanstack/table-core/src/utils.ts:export function isFunction<T extends AnyFunction>(d: any): d is T {
./node_modules/@tanstack/table-core/src/utils.ts:export function isNumberArray(d: any): d is number[] {
./node_modules/@tanstack/table-core/src/utils.ts:    key: any
./node_modules/@tanstack/table-core/src/utils.ts:  let deps: any[] = []
./node_modules/@tanstack/table-core/src/utils.ts:      newDeps.some((dep: any, index: number) => deps[index] !== dep)
./node_modules/@tanstack/table-core/src/utils.ts:  onChange?: (result: any) => void
./node_modules/@tanstack/table-core/src/types.ts:export type AnyRender = (Comp: any, props: any) => any
./node_modules/@tanstack/table-core/src/filterFns.ts:includesString.autoRemove = (val: any) => testFalsey(val)
./node_modules/@tanstack/table-core/src/filterFns.ts:includesStringSensitive.autoRemove = (val: any) => testFalsey(val)
./node_modules/@tanstack/table-core/src/filterFns.ts:equalsString.autoRemove = (val: any) => testFalsey(val)
./node_modules/@tanstack/table-core/src/filterFns.ts:arrIncludes.autoRemove = (val: any) => testFalsey(val)
./node_modules/@tanstack/table-core/src/filterFns.ts:arrIncludesAll.autoRemove = (val: any) => testFalsey(val) || !val?.length
./node_modules/@tanstack/table-core/src/filterFns.ts:arrIncludesSome.autoRemove = (val: any) => testFalsey(val) || !val?.length
./node_modules/@tanstack/table-core/src/filterFns.ts:equals.autoRemove = (val: any) => testFalsey(val)
./node_modules/@tanstack/table-core/src/filterFns.ts:weakEquals.autoRemove = (val: any) => testFalsey(val)
./node_modules/@tanstack/table-core/src/filterFns.ts:inNumberRange.autoRemove = (val: any) =>
./node_modules/@tanstack/table-core/src/filterFns.ts:function testFalsey(val: any) {
./node_modules/@tanstack/react-query/build/legacy/useSuspenseQueries.d.ts:    select?: (data: any) => infer TData;
./node_modules/@tanstack/react-query/build/legacy/useSuspenseQueries.d.ts:    queryFnData: any;
./node_modules/@tanstack/react-query/build/legacy/useSuspenseQueries.d.ts:    select?: (data: any) => infer TData;
./node_modules/@tanstack/react-query/build/legacy/useQueries.d.ts:    select?: (data: any) => infer TData;
./node_modules/@tanstack/react-query/build/legacy/useQueries.d.ts:    queryFnData: any;
./node_modules/@tanstack/react-query/build/legacy/useQueries.d.ts:    select?: (data: any) => infer TData;
./node_modules/@tanstack/react-query/build/modern/useSuspenseQueries.d.ts:    select?: (data: any) => infer TData;
./node_modules/@tanstack/react-query/build/modern/useSuspenseQueries.d.ts:    queryFnData: any;
./node_modules/@tanstack/react-query/build/modern/useSuspenseQueries.d.ts:    select?: (data: any) => infer TData;
./node_modules/@tanstack/react-query/build/modern/useQueries.d.ts:    select?: (data: any) => infer TData;
./node_modules/@tanstack/react-query/build/modern/useQueries.d.ts:    queryFnData: any;
./node_modules/@tanstack/react-query/build/modern/useQueries.d.ts:    select?: (data: any) => infer TData;
./node_modules/@tanstack/react-query/src/useQueries.ts:                    select?: (data: any) => infer TData
./node_modules/@tanstack/react-query/src/useQueries.ts:  T extends { queryFnData: any; error?: infer TError; data: infer TData }
./node_modules/@tanstack/react-query/src/useQueries.ts:                    select?: (data: any) => infer TData
./node_modules/@tanstack/react-query/src/useSuspenseQueries.ts:                    select?: (data: any) => infer TData
./node_modules/@tanstack/react-query/src/useSuspenseQueries.ts:  T extends { queryFnData: any; error?: infer TError; data: infer TData }
./node_modules/@tanstack/react-query/src/useSuspenseQueries.ts:                    select?: (data: any) => infer TData
./node_modules/@tanstack/react-query/src/useSuspenseQueries.ts:export function useSuspenseQueries(options: any, queryClient?: QueryClient) {
./node_modules/@tanstack/react-query/src/useSuspenseQueries.ts:      queries: options.queries.map((query: any) => {
./node_modules/@tanstack/virtual-core/dist/esm/utils.d.ts:export declare const debounce: (targetWindow: Window & typeof globalThis, fn: Function, ms: number) => (this: any, ...args: Array<any>) => void;
./node_modules/@tanstack/virtual-core/src/utils.ts:      newDeps.some((dep: any, index: number) => deps[index] !== dep)
./node_modules/@tanstack/virtual-core/src/utils.ts:  return function (this: any, ...args: Array<any>) {
./node_modules/@tanstack/react-table/src/index.tsx:function isClassComponent(component: any) {
./node_modules/@tanstack/react-table/src/index.tsx:function isExoticComponent(component: any) {
./node_modules/@tanstack/query-core/build/legacy/hydration-Cr-4Kky1.d.ts:    meta?: any;
./node_modules/@tanstack/query-core/build/legacy/hydration-Cr-4Kky1.d.ts:declare function isPlainObject(o: any): o is Object;
./node_modules/@tanstack/query-core/build/legacy/hydration-Cr-4Kky1.d.ts:declare function isCancelledError(value: any): value is CancelledError;
./node_modules/@tanstack/query-core/build/legacy/hydration-Cr-4Kky1.d.ts:    [dataTagSymbol]: any;
./node_modules/@tanstack/query-core/build/legacy/hydration-Cr-4Kky1.d.ts:    [dataTagErrorSymbol]: any;
./node_modules/@tanstack/query-core/build/legacy/hydration-Cr-4Kky1.d.ts:type TransformerFn = (data: any) => any;
./node_modules/@tanstack/query-core/build/modern/hydration-Cr-4Kky1.d.ts:    meta?: any;
./node_modules/@tanstack/query-core/build/modern/hydration-Cr-4Kky1.d.ts:declare function isPlainObject(o: any): o is Object;
./node_modules/@tanstack/query-core/build/modern/hydration-Cr-4Kky1.d.ts:declare function isCancelledError(value: any): value is CancelledError;
./node_modules/@tanstack/query-core/build/modern/hydration-Cr-4Kky1.d.ts:    [dataTagSymbol]: any;
./node_modules/@tanstack/query-core/build/modern/hydration-Cr-4Kky1.d.ts:    [dataTagErrorSymbol]: any;
./node_modules/@tanstack/query-core/build/modern/hydration-Cr-4Kky1.d.ts:type TransformerFn = (data: any) => any;
./node_modules/@tanstack/query-core/src/hydration.ts:type TransformerFn = (data: any) => any
./node_modules/@tanstack/query-core/src/hydration.ts:function defaultTransformerFn(data: any): any {
./node_modules/@tanstack/query-core/src/utils.ts:export function partialMatchKey(a: any, b: any): boolean {
./node_modules/@tanstack/query-core/src/utils.ts:export function replaceEqualDeep(a: any, b: any): any {
./node_modules/@tanstack/query-core/src/utils.ts:    const copy: any = array ? [] : {}
./node_modules/@tanstack/query-core/src/utils.ts:export function isPlainObject(o: any): o is Object {
./node_modules/@tanstack/query-core/src/utils.ts:function hasObjectPrototype(o: any): boolean {
./node_modules/@tanstack/query-core/src/retryer.ts:export function isCancelledError(value: any): value is CancelledError {
./node_modules/@tanstack/query-core/src/retryer.ts:  const resolve = (value: any) => {
./node_modules/@tanstack/query-core/src/retryer.ts:  const reject = (value: any) => {
./node_modules/@tanstack/query-core/src/retryer.ts:    let promiseOrValue: any
./node_modules/@tanstack/query-core/src/types.ts:  [dataTagSymbol]: any
./node_modules/@tanstack/query-core/src/types.ts:  [dataTagErrorSymbol]: any
./node_modules/@tanstack/query-core/src/query.ts:  meta?: any
./node_modules/@whatwg-node/node-fetch/typings/Blob.d.ts:export declare function hasBufferMethod(obj: any): obj is {
./node_modules/@whatwg-node/node-fetch/typings/Blob.d.ts:export declare function hasArrayBufferMethod(obj: any): obj is {
./node_modules/@whatwg-node/node-fetch/typings/Blob.d.ts:export declare function hasBytesMethod(obj: any): obj is {
./node_modules/@whatwg-node/node-fetch/typings/Blob.d.ts:export declare function hasTextMethod(obj: any): obj is {
./node_modules/@whatwg-node/node-fetch/typings/Blob.d.ts:export declare function hasSizeProperty(obj: any): obj is {
./node_modules/@whatwg-node/node-fetch/typings/Blob.d.ts:export declare function hasStreamMethod(obj: any): obj is {
./node_modules/@whatwg-node/node-fetch/typings/Blob.d.ts:    stream(): any;
./node_modules/@whatwg-node/node-fetch/typings/Blob.d.ts:export declare function hasBlobSignature(obj: any): obj is Blob;
./node_modules/@whatwg-node/node-fetch/typings/Blob.d.ts:export declare function isArrayBuffer(obj: any): obj is ArrayBuffer;
./node_modules/@whatwg-node/node-fetch/typings/Blob.d.ts:    _json: any;
./node_modules/@whatwg-node/node-fetch/typings/Blob.d.ts:    stream(): any;
./node_modules/@whatwg-node/node-fetch/typings/Blob.d.ts:    slice(): any;
./node_modules/@whatwg-node/node-fetch/typings/AbortError.d.ts:    constructor(reason?: any);
./node_modules/@whatwg-node/node-fetch/typings/Headers.d.ts:export declare function isHeadersLike(headers: any): headers is Headers;
./node_modules/@whatwg-node/node-fetch/typings/utils.d.ts:export declare function isArrayBufferView(obj: any): obj is ArrayBufferView;
./node_modules/@whatwg-node/node-fetch/typings/utils.d.ts:export declare function isNodeReadable(obj: any): obj is Readable;
./node_modules/@whatwg-node/node-fetch/typings/utils.d.ts:export declare function isIterable(value: any): value is Iterable<unknown>;
./node_modules/@whatwg-node/node-fetch/typings/utils.d.ts:export declare function safeWrite(chunk: any, stream: Writable, signal?: AbortSignal | undefined): Promise<any> | undefined;
./node_modules/@whatwg-node/node-fetch/typings/ReadableStream.d.ts:    cancel(reason?: any): Promise<void>;
./node_modules/@whatwg-node/node-fetch/typings/WritableStream.d.ts:    abort(reason: any): Promise<void>;
./node_modules/@whatwg-node/node-fetch/node_modules/@fastify/busboy/lib/main.d.ts:    addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@whatwg-node/node-fetch/node_modules/@fastify/busboy/lib/main.d.ts:    on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@whatwg-node/node-fetch/node_modules/@fastify/busboy/lib/main.d.ts:    once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@whatwg-node/node-fetch/node_modules/@fastify/busboy/lib/main.d.ts:    removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@whatwg-node/node-fetch/node_modules/@fastify/busboy/lib/main.d.ts:    off(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@whatwg-node/node-fetch/node_modules/@fastify/busboy/lib/main.d.ts:    prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@whatwg-node/node-fetch/node_modules/@fastify/busboy/lib/main.d.ts:    prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@whatwg-node/node-fetch/node_modules/@fastify/busboy/deps/dicer/lib/dicer.d.ts:    addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@whatwg-node/node-fetch/node_modules/@fastify/busboy/deps/dicer/lib/dicer.d.ts:    on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@whatwg-node/node-fetch/node_modules/@fastify/busboy/deps/dicer/lib/dicer.d.ts:    once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@whatwg-node/node-fetch/node_modules/@fastify/busboy/deps/dicer/lib/dicer.d.ts:    prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@whatwg-node/node-fetch/node_modules/@fastify/busboy/deps/dicer/lib/dicer.d.ts:    prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@whatwg-node/node-fetch/node_modules/@fastify/busboy/deps/dicer/lib/dicer.d.ts:    removeListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@whatwg-node/node-fetch/node_modules/@fastify/busboy/deps/dicer/lib/dicer.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@whatwg-node/node-fetch/node_modules/@fastify/busboy/deps/dicer/lib/dicer.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@whatwg-node/node-fetch/node_modules/@fastify/busboy/deps/dicer/lib/dicer.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@whatwg-node/node-fetch/node_modules/@fastify/busboy/deps/dicer/lib/dicer.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@whatwg-node/node-fetch/node_modules/@fastify/busboy/deps/dicer/lib/dicer.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@whatwg-node/node-fetch/node_modules/@fastify/busboy/deps/dicer/lib/dicer.d.ts:        removeListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@whatwg-node/promise-helpers/typings/index.d.ts:export declare function handleMaybePromise<TInput, TOutput>(inputFactory: () => MaybePromise<TInput>, outputSuccessFactory: (value: TInput) => MaybePromise<TOutput>, outputErrorFactory?: (err: any) => MaybePromise<TOutput>, finallyFactory?: () => MaybePromise<void>): MaybePromise<TOutput>;
./node_modules/@whatwg-node/promise-helpers/typings/index.d.ts:export declare function handleMaybePromise<TInput, TOutput>(inputFactory: () => MaybePromiseLike<TInput>, outputSuccessFactory: (value: TInput) => MaybePromiseLike<TOutput>, outputErrorFactory?: (err: any) => MaybePromiseLike<TOutput>, finallyFactory?: () => MaybePromiseLike<void>): MaybePromiseLike<TOutput>;
./node_modules/@whatwg-node/promise-helpers/typings/index.d.ts:    reject: (reason: any) => void;
./node_modules/@whatwg-node/promise-helpers/typings/index.d.ts:export declare function mapMaybePromise<TInput, TOutput>(input: MaybePromise<TInput>, onSuccess: (value: TInput) => MaybePromise<TOutput>, onError?: (err: any) => MaybePromise<TOutput>): MaybePromise<TOutput>;
./node_modules/@whatwg-node/promise-helpers/typings/index.d.ts:export declare function mapMaybePromise<TInput, TOutput>(input: MaybePromiseLike<TInput>, onSuccess: (value: TInput) => MaybePromiseLike<TOutput>, onError?: (err: any) => MaybePromiseLike<TOutput>): MaybePromiseLike<TOutput>;
./node_modules/@whatwg-node/promise-helpers/typings/index.d.ts:export declare function mapAsyncIterator<T, U>(iterator: AsyncIterable<T> | AsyncIterator<T>, onNext: (value: T) => MaybePromise<U>, onError?: any, onEnd?: () => MaybePromise<void>): AsyncIterableIterator<U>;
./node_modules/@whatwg-node/server/typings/uwebsockets.d.ts:    end(body?: any): void;
./node_modules/@whatwg-node/server/typings/uwebsockets.d.ts:    write(body: any): boolean;
./node_modules/@whatwg-node/server/typings/uwebsockets.d.ts:export declare function isUWSResponse(res: any): res is UWSResponse;
./node_modules/@whatwg-node/server/typings/plugins/useErrorHandling.d.ts:    details?: any | undefined;
./node_modules/@whatwg-node/server/typings/plugins/useErrorHandling.d.ts:    constructor(status: number | undefined, message: string, headers?: HeadersInit, details?: any | undefined);
./node_modules/@whatwg-node/server/typings/plugins/useErrorHandling.d.ts:export type ErrorHandler<TServerContext> = (e: any, request: Request, ctx: TServerContext) => MaybePromise<Response> | void;
./node_modules/@whatwg-node/server/typings/utils.d.ts:export declare function isAsyncIterable(body: any): body is AsyncIterable<any>;
./node_modules/@whatwg-node/server/typings/utils.d.ts:    body?: any | undefined;
./node_modules/@whatwg-node/server/typings/utils.d.ts:    headers?: any | undefined;
./node_modules/@whatwg-node/server/typings/utils.d.ts:    query?: any | undefined;
./node_modules/@whatwg-node/server/typings/utils.d.ts:    once?(event: string, listener: (...args: any[]) => void): void;
./node_modules/@whatwg-node/server/typings/utils.d.ts:export declare function isReadable(stream: any): stream is Readable;
./node_modules/@whatwg-node/server/typings/utils.d.ts:export declare function isNodeRequest(request: any): request is NodeRequest;
./node_modules/@whatwg-node/server/typings/utils.d.ts:export declare function isServerResponse(stream: any): stream is NodeResponse;
./node_modules/@whatwg-node/server/typings/utils.d.ts:export declare function isReadableStream(stream: any): stream is ReadableStream;
./node_modules/@whatwg-node/server/typings/utils.d.ts:export declare function isFetchEvent(event: any): event is FetchEvent;
./node_modules/@whatwg-node/server/typings/utils.d.ts:export declare function completeAssign(...args: any[]): any;
./node_modules/@whatwg-node/server/typings/utils.d.ts:export declare function handleErrorFromRequestHandler(error: any, ResponseCtor: typeof Response): Response;
./node_modules/@whatwg-node/fetch/dist/index.d.ts:    json(data: any, init?: ResponseInit): globalThis.Response;
./node_modules/@whatwg-node/disposablestack/typings/SupressedError.d.ts:    error: any;
./node_modules/@whatwg-node/disposablestack/typings/SupressedError.d.ts:    suppressed: any;
./node_modules/@whatwg-node/disposablestack/typings/SupressedError.d.ts:    constructor(error: any, suppressed: any, message?: string);
./node_modules/@whatwg-node/disposablestack/typings/utils.d.ts:export declare function isSyncDisposable(obj: any): obj is Disposable;
./node_modules/@whatwg-node/disposablestack/typings/utils.d.ts:export declare function isAsyncDisposable(obj: any): obj is AsyncDisposable;
./node_modules/playwright-core/types/types.d.ts:  evaluate<R>(pageFunction: PageFunction<void, R>, arg?: any): Promise<R>;
./node_modules/playwright-core/types/types.d.ts:  evaluateHandle<R>(pageFunction: PageFunction<void, R>, arg?: any): Promise<SmartHandle<R>>;
./node_modules/playwright-core/types/types.d.ts:  $eval<K extends keyof HTMLElementTagNameMap, R>(selector: K, pageFunction: PageFunctionOn<HTMLElementTagNameMap[K], void, R>, arg?: any): Promise<R>;
./node_modules/playwright-core/types/types.d.ts:  $eval<R, E extends SVGElement | HTMLElement = SVGElement | HTMLElement>(selector: string, pageFunction: PageFunctionOn<E, void, R>, arg?: any): Promise<R>;
./node_modules/playwright-core/types/types.d.ts:  $$eval<K extends keyof HTMLElementTagNameMap, R>(selector: K, pageFunction: PageFunctionOn<HTMLElementTagNameMap[K][], void, R>, arg?: any): Promise<R>;
./node_modules/playwright-core/types/types.d.ts:  $$eval<R, E extends SVGElement | HTMLElement = SVGElement | HTMLElement>(selector: string, pageFunction: PageFunctionOn<E[], void, R>, arg?: any): Promise<R>;
./node_modules/playwright-core/types/types.d.ts:  waitForFunction<R>(pageFunction: PageFunction<void, R>, arg?: any, options?: PageWaitForFunctionOptions): Promise<SmartHandle<R>>;
./node_modules/playwright-core/types/types.d.ts:  exposeBinding(name: string, playwrightBinding: (source: BindingSource, ...args: any[]) => any, options?: { handle?: boolean }): Promise<void>;
./node_modules/playwright-core/types/types.d.ts:  evaluate<R>(pageFunction: PageFunction<void, R>, arg?: any): Promise<R>;
./node_modules/playwright-core/types/types.d.ts:  evaluateHandle<R>(pageFunction: PageFunction<void, R>, arg?: any): Promise<SmartHandle<R>>;
./node_modules/playwright-core/types/types.d.ts:  $eval<K extends keyof HTMLElementTagNameMap, R>(selector: K, pageFunction: PageFunctionOn<HTMLElementTagNameMap[K], void, R>, arg?: any): Promise<R>;
./node_modules/playwright-core/types/types.d.ts:  $eval<R, E extends SVGElement | HTMLElement = SVGElement | HTMLElement>(selector: string, pageFunction: PageFunctionOn<E, void, R>, arg?: any): Promise<R>;
./node_modules/playwright-core/types/types.d.ts:  $$eval<K extends keyof HTMLElementTagNameMap, R>(selector: K, pageFunction: PageFunctionOn<HTMLElementTagNameMap[K][], void, R>, arg?: any): Promise<R>;
./node_modules/playwright-core/types/types.d.ts:  $$eval<R, E extends SVGElement | HTMLElement = SVGElement | HTMLElement>(selector: string, pageFunction: PageFunctionOn<E[], void, R>, arg?: any): Promise<R>;
./node_modules/playwright-core/types/types.d.ts:  waitForFunction<R>(pageFunction: PageFunction<void, R>, arg?: any, options?: PageWaitForFunctionOptions): Promise<SmartHandle<R>>;
./node_modules/playwright-core/types/types.d.ts:  exposeBinding(name: string, playwrightBinding: (source: BindingSource, ...args: any[]) => any, options?: { handle?: boolean }): Promise<void>;
./node_modules/playwright-core/types/types.d.ts:  evaluate<R>(pageFunction: PageFunction<void, R>, arg?: any): Promise<R>;
./node_modules/playwright-core/types/types.d.ts:  evaluateHandle<R>(pageFunction: PageFunction<void, R>, arg?: any): Promise<SmartHandle<R>>;
./node_modules/playwright-core/types/types.d.ts:  evaluate<R, O extends T = T>(pageFunction: PageFunctionOn<O, void, R>, arg?: any): Promise<R>;
./node_modules/playwright-core/types/types.d.ts:  evaluateHandle<R, O extends T = T>(pageFunction: PageFunctionOn<O, void, R>, arg?: any): Promise<SmartHandle<R>>;
./node_modules/playwright-core/types/types.d.ts:  $eval<K extends keyof HTMLElementTagNameMap, R>(selector: K, pageFunction: PageFunctionOn<HTMLElementTagNameMap[K], void, R>, arg?: any): Promise<R>;
./node_modules/playwright-core/types/types.d.ts:  $eval<R, E extends SVGElement | HTMLElement = SVGElement | HTMLElement>(selector: string, pageFunction: PageFunctionOn<E, void, R>, arg?: any): Promise<R>;
./node_modules/playwright-core/types/types.d.ts:  $$eval<K extends keyof HTMLElementTagNameMap, R>(selector: K, pageFunction: PageFunctionOn<HTMLElementTagNameMap[K][], void, R>, arg?: any): Promise<R>;
./node_modules/playwright-core/types/types.d.ts:  $$eval<R, E extends SVGElement | HTMLElement = SVGElement | HTMLElement>(selector: string, pageFunction: PageFunctionOn<E[], void, R>, arg?: any): Promise<R>;
./node_modules/playwright-core/types/types.d.ts:  evaluate<R>(pageFunction: PageFunctionOn<ElectronType, void, R>, arg?: any): Promise<R>;
./node_modules/playwright-core/types/types.d.ts:  evaluateHandle<R>(pageFunction: PageFunctionOn<ElectronType, void, R>, arg?: any): Promise<SmartHandle<R>>;
./node_modules/playwright-core/types/protocol.d.ts:      value?: any;
./node_modules/playwright-core/types/protocol.d.ts:      shape: any[];
./node_modules/playwright-core/types/protocol.d.ts:      marginShape: any[];
./node_modules/playwright-core/types/protocol.d.ts:      value?: any;
./node_modules/playwright-core/types/protocol.d.ts:      value?: any;
./node_modules/playwright-core/types/protocol.d.ts:      value?: any;
./node_modules/@jest/core/node_modules/pretty-format/build/index.d.ts:    val: any,
./node_modules/@jest/core/node_modules/pretty-format/build/index.d.ts:declare type Test = (arg0: any) => boolean;
./node_modules/@jest/expect-utils/build/index.d.ts:  object: any,
./node_modules/@jest/expect-utils/build/index.d.ts:  subset: any,
./node_modules/@jest/expect-utils/build/index.d.ts:  a: any,
./node_modules/@jest/expect-utils/build/index.d.ts:  b: any,
./node_modules/@jest/expect-utils/build/index.d.ts:  a: any,
./node_modules/@jest/expect-utils/build/index.d.ts:  b: any,
./node_modules/@jest/expect-utils/build/index.d.ts:export declare const typeEquality: (a: any, b: any) => boolean | undefined;
./node_modules/std-env/dist/index.d.ts:    [meta: string]: any;
./node_modules/abort-controller/dist/abort-controller.d.ts:    abort: any
./node_modules/abort-controller/dist/abort-controller.d.ts:    onabort: any
./node_modules/@envelop/instrumentation/typings/instrumentation.d.ts:export type GenericInstrumentation = Record<string, (payload: any, wrapped: () => MaybePromise<void>) => MaybePromise<void>>;
./node_modules/lru-cache/dist/esm/index.d.ts:        isBackgroundFetch: (p: any) => p is BackgroundFetch<V>;
./node_modules/lru-cache/dist/esm/index.d.ts:        backgroundFetch: (k: K, index: number | undefined, options: LRUCache.FetchOptions<K, V, FC>, context: any) => BackgroundFetch<V>;
./node_modules/lru-cache/dist/esm/index.d.ts:    forEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./node_modules/lru-cache/dist/esm/index.d.ts:    rforEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./node_modules/lru-cache/dist/commonjs/index.d.ts:        isBackgroundFetch: (p: any) => p is BackgroundFetch<V>;
./node_modules/lru-cache/dist/commonjs/index.d.ts:        backgroundFetch: (k: K, index: number | undefined, options: LRUCache.FetchOptions<K, V, FC>, context: any) => BackgroundFetch<V>;
./node_modules/lru-cache/dist/commonjs/index.d.ts:    forEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./node_modules/lru-cache/dist/commonjs/index.d.ts:    rforEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./node_modules/bl/node_modules/buffer/index.d.ts:    toJSON(): { type: 'Buffer', data: any[] };
./node_modules/bl/node_modules/buffer/index.d.ts:    fill(value: any, offset?: number, end?: number): this;
./node_modules/bl/node_modules/buffer/index.d.ts:    constructor (array: any[]);
./node_modules/bl/node_modules/buffer/index.d.ts:    static from(array: any[]): Buffer;
./node_modules/bl/node_modules/buffer/index.d.ts:    static isBuffer(obj: any): obj is Buffer;
./node_modules/type-fest/source/async-return-type.d.ts:type AsyncFunction = (...args: any[]) => Promise<unknown>;
./node_modules/type-fest/source/set-return-type.d.ts:export type SetReturnType<Fn extends (...args: any[]) => any, TypeToReturn> =
./node_modules/type-fest/source/readonly-deep.d.ts:export type ReadonlyDeep<T> = T extends Primitive | ((...arguments: any[]) => unknown)
./node_modules/type-fest/source/partial-deep.d.ts:	: T extends ((...arguments: any[]) => unknown)
./node_modules/type-fest/source/asyncify.d.ts:export type Asyncify<Fn extends (...args: any[]) => any> = SetReturnType<Fn, Promise<PromiseValue<ReturnType<Fn>>>>;
./node_modules/commander/typings/index.d.ts:    [key: string]: any; // options as properties
./node_modules/commander/typings/index.d.ts:    action(fn: (...args: any[]) => void | Promise<void>): Command;
./node_modules/commander/typings/index.d.ts:    option(flags: string, description?: string, fn?: ((arg1: any, arg2: any) => void) | RegExp, defaultValue?: any): Command;
./node_modules/commander/typings/index.d.ts:    option(flags: string, description?: string, defaultValue?: any): Command;
./node_modules/commander/typings/index.d.ts:    requiredOption(flags: string, description?: string, fn?: ((arg1: any, arg2: any) => void) | RegExp, defaultValue?: any): Command;
./node_modules/commander/typings/index.d.ts:    requiredOption(flags: string, description?: string, defaultValue?: any): Command;
./node_modules/commander/typings/index.d.ts:    opts(): { [key: string]: any };
./node_modules/chrome-trace-event/dist/trace-event.d.ts:    [otherData: string]: any;
./node_modules/chrome-trace-event/dist/trace-event.d.ts:    cat?: any;
./node_modules/chrome-trace-event/dist/trace-event.d.ts:    args?: any;
./node_modules/chrome-trace-event/dist/trace-event.d.ts:    [filedName: string]: any;
./node_modules/estree-walker/types/sync.d.ts:    should_skip: any;
./node_modules/estree-walker/types/sync.d.ts:    should_remove: any;
./node_modules/estree-walker/types/sync.d.ts:    replacement: any;
./node_modules/estree-walker/types/walker.d.ts:    replace(parent: any, prop: string, index: number, node: import("estree").BaseNode): void;
./node_modules/estree-walker/types/walker.d.ts:    remove(parent: any, prop: string, index: number): void;
./node_modules/estree-walker/types/async.d.ts:    should_skip: any;
./node_modules/estree-walker/types/async.d.ts:    should_remove: any;
./node_modules/estree-walker/types/async.d.ts:    replacement: any;
./node_modules/rimraf/dist/esm/opt-arg.d.ts:export declare const isRimrafOptions: (o: any) => o is RimrafOptions;
./node_modules/rimraf/dist/esm/opt-arg.d.ts:export declare const assertRimrafOptions: (o: any) => void;
./node_modules/rimraf/dist/commonjs/opt-arg.d.ts:export declare const isRimrafOptions: (o: any) => o is RimrafOptions;
./node_modules/rimraf/dist/commonjs/opt-arg.d.ts:export declare const assertRimrafOptions: (o: any) => void;
./node_modules/node-fetch/@types/index.d.ts:		thisArg?: any
./node_modules/node-fetch/@types/index.d.ts:	static json(data: any, init?: ResponseInit): Response;
./node_modules/@hookform/resolvers/zod/src/zod.ts:const isZodError = (error: any): error is ZodError =>
./node_modules/@hookform/resolvers/zod/src/zod.ts:    } catch (error: any) {
./node_modules/@hookform/resolvers/computed-types/dist/types.d.ts:export type Resolver = (schema: any) => <TFieldValues extends FieldValues, TContext>(values: TFieldValues, context: TContext | undefined, options: ResolverOptions<TFieldValues>) => Promise<ResolverResult<TFieldValues>>;
./node_modules/@hookform/resolvers/computed-types/src/computed-types.ts:const isValidationError = (error: any): error is ValidationError =>
./node_modules/@hookform/resolvers/computed-types/src/computed-types.ts:    } catch (error: any) {
./node_modules/@hookform/resolvers/computed-types/src/types.ts:  schema: any,
./node_modules/@hookform/resolvers/vine/src/vine.ts:    } catch (error: any) {
./node_modules/@hookform/resolvers/yup/src/yup.ts:    } catch (e: any) {
./node_modules/@hookform/resolvers/class-validator/dist/types.d.ts:    [_: string]: any;
./node_modules/@hookform/resolvers/class-validator/src/types.ts:export type Resolver = <T extends { [_: string]: any }>(
./node_modules/@hookform/resolvers/fluentvalidation-ts/src/fluentvalidation-ts.ts:      currentValue.forEach((item: any, index: number) => {
./node_modules/@hookform/resolvers/vest/src/__tests__/__fixtures__/data.ts:export const validationSuite = vest.create('form', (data: any = {}) => {
./node_modules/ip-address/src/ipv6.ts:function assert(condition: any): asserts condition {
./node_modules/fast-json-stable-stringify/index.d.ts:  function stringify(obj: any): string;
./node_modules/@angular-devkit/schematics-cli/schematic/files/src/my-other-schematic/index.ts:export default function (options: any): Rule {
./node_modules/@angular-devkit/schematics-cli/schematic/files/src/my-full-schematic/index.ts:export default function (options: any): Rule {
./node_modules/@angular-devkit/schematics-cli/schematic/files/src/my-schematic/index.ts:export function mySchematic(options: any): Rule {
./node_modules/@angular-devkit/schematics-cli/schematic/schema.d.ts:    [property: string]: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/@angular-devkit/core/src/utils/partially-ordered-set.d.ts:    forEach(callbackfn: (value: T, value2: T, set: PartiallyOrderedSet<T>) => void, thisArg?: any): void;
./node_modules/@angular-devkit/schematics-cli/node_modules/@angular-devkit/core/src/utils/lang.d.ts:export declare function isPromise(obj: any): obj is Promise<any>;
./node_modules/@angular-devkit/schematics-cli/node_modules/@angular-devkit/core/src/utils/literals.d.ts:    (template: TemplateStringsArray, ...substitutions: any[]): R;
./node_modules/@angular-devkit/schematics-cli/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function oneLine(strings: TemplateStringsArray, ...values: any[]): string;
./node_modules/@angular-devkit/schematics-cli/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function stripIndent(strings: TemplateStringsArray, ...values: any[]): string;
./node_modules/@angular-devkit/schematics-cli/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function stripIndents(strings: TemplateStringsArray, ...values: any[]): string;
./node_modules/@angular-devkit/schematics-cli/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function trimNewlines(strings: TemplateStringsArray, ...values: any[]): string;
./node_modules/@angular-devkit/schematics-cli/node_modules/chokidar/esm/handler.d.ts:    _watchWithNodeFs(path: string, listener: (path: string, newStats?: any) => void | Promise<void>): (() => void) | undefined;
./node_modules/@angular-devkit/schematics-cli/node_modules/chokidar/handler.d.ts:    _watchWithNodeFs(path: string, listener: (path: string, newStats?: any) => void | Promise<void>): (() => void) | undefined;
./node_modules/@angular-devkit/schematics-cli/node_modules/json-schema-traverse/index.d.ts:    [x: string]: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/readdirp/esm/index.d.ts:    parents: any[];
./node_modules/@angular-devkit/schematics-cli/node_modules/readdirp/index.d.ts:    parents: any[];
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/Subscription.d.ts:export declare function isSubscription(value: any): value is Subscription;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/operators/catchError.d.ts:export declare function catchError<T, O extends ObservableInput<any>>(selector: (err: any, caught: Observable<T>) => O): OperatorFunction<T, T | ObservedValueOf<O>>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/operators/share.d.ts:    resetOnError?: boolean | ((error: any) => ObservableInput<any>);
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/operators/every.d.ts:export declare function every<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/operators/partition.d.ts:export declare function partition<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): UnaryFunction<Observable<T>, [Observable<T>, Observable<T>]>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/operators/materialize.d.ts: * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/operators/tap.d.ts:export declare function tap<T>(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): MonoTypeOperatorFunction<T>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/operators/find.d.ts:export declare function createFind<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean, thisArg: any, emit: 'value' | 'index'): (source: Observable<T>, subscriber: Subscriber<any>) => void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/operators/OperatorSubscriber.d.ts:export declare function createOperatorSubscriber<T>(destination: Subscriber<any>, onNext?: (value: T) => void, onComplete?: () => void, onError?: (err: any) => void, onFinalize?: () => void): Subscriber<T>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/operators/OperatorSubscriber.d.ts:    constructor(destination: Subscriber<any>, onNext?: (value: T) => void, onComplete?: () => void, onError?: (err: any) => void, onFinalize?: (() => void) | undefined, shouldUnsubscribe?: (() => boolean) | undefined);
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/operators/joinAllInternals.d.ts:export declare function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R): import("../types").UnaryFunction<Observable<ObservableInput<T>>, unknown>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/operators/findIndex.d.ts:export declare function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/operators/retry.d.ts:    delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/isReadableStreamLike.d.ts:export declare function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/isPromise.d.ts:export declare function isPromise(value: any): value is PromiseLike<any>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popScheduler(args: any[]): SchedulerLike | undefined;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popNumber(args: any[], defaultValue: number): number;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/createErrorClass.d.ts:export declare function createErrorClass<T>(createImpl: (_super: any) => any): T;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/errorContext.d.ts:export declare function captureError(err: any): void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/not.d.ts:export declare function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/isFunction.d.ts:export declare function isFunction(value: any): value is (...args: any[]) => any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/isAsyncIterable.d.ts:export declare function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/throwUnobservableError.d.ts:export declare function createInvalidObservableTypeError(input: any): TypeError;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/lift.d.ts:export declare function hasLift(source: any): source is {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/isObservable.d.ts:export declare function isObservable(obj: any): obj is Observable<unknown>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/applyMixins.d.ts:export declare function applyMixins(derivedCtor: any, baseCtors: any[]): void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/reportUnhandledError.d.ts:export declare function reportUnhandledError(err: any): void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/isScheduler.d.ts:export declare function isScheduler(value: any): value is SchedulerLike;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/isArrayLike.d.ts:export declare const isArrayLike: <T>(x: any) => x is ArrayLike<T>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/createObject.d.ts:export declare function createObject(keys: string[], values: any[]): any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/isIterable.d.ts:export declare function isIterable(input: any): input is Iterable<any>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/isInteropObservable.d.ts:export declare function isInteropObservable(input: any): input is InteropObservable<any>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/isDate.d.ts:export declare function isValidDate(value: any): value is Date;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/UnsubscriptionError.d.ts:    readonly errors: any[];
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/util/UnsubscriptionError.d.ts:    new (errors: any[]): UnsubscriptionError;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/types.d.ts:    error: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/types.d.ts:    error?: (err: any) => void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/types.d.ts:    error: (err: any) => void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/types.d.ts:    error?: (err: any) => void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/types.d.ts:    error: (err: any) => void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/types.d.ts:export declare type Head<X extends readonly any[]> = ((...args: X) => any) extends (arg: infer U, ...rest: any[]) => any ? U : never;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/types.d.ts:export declare type Tail<X extends readonly any[]> = ((...args: X) => any) extends (arg: any, ...rest: infer U) => any ? U : never;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/config.d.ts:    onUnhandledError: ((err: any) => void) | null;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay?: number): TimerHandle;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay?: number): TimerHandle | undefined;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected _execute(state: T, delay: number): any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/scheduler/QueueAction.d.ts:    execute(state: T, delay: number): any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/scheduler/immediateProvider.d.ts:declare type SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/scheduler/intervalProvider.d.ts:declare type SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/scheduler/AsyncAction.d.ts:    execute(state: T, delay: number): any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/scheduler/AsyncAction.d.ts:    protected _execute(state: T, _delay: number): any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/scheduler/timeoutProvider.d.ts:declare type SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:export declare type observableToBeFn = (marbles: string, values?: any, errorValue?: any) => void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    assertDeepEqual: (actual: any, expected: any) => boolean | void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    constructor(assertDeepEqual: (actual: any, expected: any) => boolean | void);
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    }, error?: any): ColdObservable<T>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    }, error?: any): HotObservable<T>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:        toBe(marbles: string, values?: any, errorValue?: any): void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    static parseMarbles(marbles: string, values?: any, errorValue?: any, materializeInnerObservables?: boolean, runMode?: boolean): TestMessage[];
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/Operator.d.ts:    call(subscriber: Subscriber<R>, source: any): TeardownLogic;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/Notification.d.ts:    readonly error?: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/Notification.d.ts:    constructor(kind: 'E', value: undefined, error: any);
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/Notification.d.ts:    do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/Notification.d.ts:    do(next: (value: T) => void, error: (err: any) => void): void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/Notification.d.ts:    accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/Notification.d.ts:    accept(next: (value: T) => void, error: (err: any) => void): void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/Notification.d.ts:    static createError(err?: any): Notification<never> & ErrorNotification;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/observable/pairs.d.ts:export declare function pairs(n: number | bigint | boolean | ((...args: any[]) => any) | symbol, scheduler?: SchedulerLike): Observable<[never, never]>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/observable/bindCallback.d.ts:export declare function bindCallback(callbackFunc: (...args: any[]) => void, resultSelector: (...args: any[]) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/observable/bindCallbackInternals.d.ts:export declare function bindCallbackInternals(isNodeStyle: boolean, callbackFunc: any, resultSelector?: any, scheduler?: SchedulerLike): (...args: any[]) => Observable<unknown>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/observable/combineLatest.d.ts:export declare function combineLatestInit(observables: ObservableInput<any>[], scheduler?: SchedulerLike, valueTransform?: (values: any[]) => any): (subscriber: Subscriber<any>) => void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/observable/fromEventPattern.d.ts:export declare function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void): Observable<T>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/observable/fromEventPattern.d.ts:export declare function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare type NodeEventHandler = (...args: any[]) => void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:    on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:    off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<R>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string, resultSelector: (...args: any[]) => R): Observable<R>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<R>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string, resultSelector: (...args: any[]) => R): Observable<R>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<T, R>(target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>, eventName: string, resultSelector: (value: T, ...args: any[]) => R): Observable<R>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts: *   const error: any = new Error(`This is error number ${ ++errorCount }`);
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts:export declare function throwError(error: any): Observable<never>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts:export declare function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/observable/innerFrom.d.ts:export declare function fromInteropObservable<T>(obj: any): Observable<T>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/observable/bindNodeCallback.d.ts:export declare function bindNodeCallback(callbackFunc: (...args: any[]) => void, resultSelector: (...args: any[]) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/observable/bindNodeCallback.d.ts:export declare function bindNodeCallback<A extends readonly unknown[], R extends readonly unknown[]>(callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void, schedulerLike?: SchedulerLike): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/Observable.d.ts:    static create: (...args: any[]) => any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/Observable.d.ts:    subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/Subject.d.ts:    thrownError: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/Subject.d.ts:    static create: (...args: any[]) => any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/Subject.d.ts:    error(err: any): void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/Subject.d.ts:    error(err: any): void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    error(err?: any): void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    protected _error(err: any): void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    constructor(observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null, error?: ((e?: any) => void) | null, complete?: (() => void) | null);
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/ajax/errors.d.ts:    response: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    post<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    put<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    patch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/ajax/types.d.ts:    body?: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/ajax/types.d.ts:    body?: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/dist/types/internal/ajax/getXHRResponse.d.ts:export declare function getXHRResponse(xhr: XMLHttpRequest): any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/catchError.ts:  selector: (err: any, caught: Observable<T>) => O
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/catchError.ts:  selector: (err: any, caught: Observable<T>) => O
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/groupBy.ts:  elementOrOptions?: ((value: any) => any) | void | BasicGroupByOptions<K, T> | GroupByOptionsWithElement<K, R, T>,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/groupBy.ts:    let element: ((value: any) => any) | void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/groupBy.ts:      element = elementOrOptions as ((value: any) => any);
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/groupBy.ts:    const handleError = (err: any) => notify((consumer) => consumer.error(err));
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/groupBy.ts:      const result: any = new Observable<T>((groupSubscriber) => {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/joinAllInternals.ts:export function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/scanInternals.ts:    let state: any = seed;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/find.ts:  thisArg?: any
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/find.ts:  thisArg: any,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/filter.ts:export function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/windowTime.ts:export function windowTime<T>(windowTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, Observable<T>> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/share.ts:  resetOnError?: boolean | ((error: any) => ObservableInput<any>);
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/tap.ts:  error?: ((error: any) => void) | null,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/tap.ts:  error?: ((e: any) => void) | null,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/materialize.ts: * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/retry.ts:  delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/exhaustMap.ts:      source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b: any, ii: any) => resultSelector(a, b, i, ii)))));
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/map.ts:export function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/findIndex.ts:export function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/findIndex.ts:  thisArg?: any
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/every.ts:  thisArg: any
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/every.ts:  thisArg?: any
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/windowWhen.ts:    const handleError = (err: any) => {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/pluck.ts:    let currentProp: any = x;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/bufferTime.ts:export function bufferTime<T>(bufferTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, T[]> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/timeout.ts:    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/combineLatest.ts:export function combineLatest<T, R>(...args: (ObservableInput<any> | ((...values: any[]) => R))[]): OperatorFunction<T, unknown> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/windowToggle.ts:    const handleError = (err: any) => {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/race.ts:export function race<T>(...args: any[]): OperatorFunction<T, unknown> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:  onError?: (err: any) => void,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:    onError?: (err: any) => void,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:      ? function (this: OperatorSubscriber<T>, err: any) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/concat.ts:export function concat<T, R>(...args: any[]): OperatorFunction<T, R> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/reduce.ts:export function reduce<V, A>(accumulator: (acc: V | A, value: V, index: number) => A, seed?: any): OperatorFunction<V, V | A> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/window.ts:    const errorHandler = (err: any) => {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/mergeMap.ts:    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/partition.ts:  thisArg?: any
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/toArray.ts:const arrReducer = (arr: any[], value: any) => (arr.push(value), arr);
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/withLatestFrom.ts:export function withLatestFrom<T, R>(...inputs: any[]): OperatorFunction<T, R | any[]> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/withLatestFrom.ts:  const project = popResultSelector(inputs) as ((...args: any[]) => R) | undefined;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/operators/distinctUntilChanged.ts:function defaultCompare(a: any, b: any) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/EmptyError.ts:export const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/pipe.ts:    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/reportUnhandledError.ts:export function reportUnhandledError(err: any) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/isFunction.ts:export function isFunction(value: any): value is (...args: any[]) => any {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/isInteropObservable.ts:export function isInteropObservable(input: any): input is InteropObservable<any> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/isPromise.ts:export function isPromise(value: any): value is PromiseLike<any> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/isDate.ts:export function isValidDate(value: any): value is Date {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/isAsyncIterable.ts:export function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/args.ts:export function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/args.ts:export function popScheduler(args: any[]): SchedulerLike | undefined {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/args.ts:export function popNumber(args: any[], defaultValue: number): number {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/isReadableStreamLike.ts:export function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/throwUnobservableError.ts:export function createInvalidObservableTypeError(input: any) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/SequenceError.ts:    function SequenceErrorImpl(this: any, message: string) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/createErrorClass.ts:export function createErrorClass<T>(createImpl: (_super: any) => any): T {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/createErrorClass.ts:  const _super = (instance: any) => {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/not.ts:export function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/isArrayLike.ts:export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:  readonly errors: any[];
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:  new (errors: any[]): UnsubscriptionError;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/isScheduler.ts:export function isScheduler(value: any): value is SchedulerLike {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/errorContext.ts:let context: { errorThrown: boolean; error: any } | null = null;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/errorContext.ts:export function captureError(err: any) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts:    function ObjectUnsubscribedErrorImpl(this: any) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/Immediate.ts:const activeHandles: { [key: number]: any } = {};
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/applyMixins.ts:export function applyMixins(derivedCtor: any, baseCtors: any[]) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/lift.ts:export function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/createObject.ts:export function createObject(keys: string[], values: any[]) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/argsArgArrayOrObject.ts:function isPOJO(obj: any): obj is object {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts:    function ArgumentOutOfRangeErrorImpl(this: any) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/isIterable.ts:export function isIterable(input: any): input is Iterable<any> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/NotFoundError.ts:    function NotFoundErrorImpl(this: any, message: string) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/util/isObservable.ts:export function isObservable(obj: any): obj is Observable<unknown> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts:type SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:  public execute(state: T, delay: number): any {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:  protected _execute(state: T, _delay: number): any {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:    let errorValue: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts:    let error: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:    let error: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected _execute(state: T, delay: number): any {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts:    let error: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts:    let error: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/scheduler/QueueAction.ts:  public execute(state: T, delay: number): any {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/scheduler/intervalProvider.ts:type SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/scheduler/immediateProvider.ts:type SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  actual?: any[];
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  expected?: any[];
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/testing/TestScheduler.ts:export type observableToBeFn = (marbles: string, values?: any, errorValue?: any) => void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  constructor(public assertDeepEqual: (actual: any, expected: any) => boolean | void) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  createColdObservable<T = string>(marbles: string, values?: { [marble: string]: T }, error?: any): ColdObservable<T> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  createHotObservable<T = string>(marbles: string, values?: { [marble: string]: T }, error?: any): HotObservable<T> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/testing/TestScheduler.ts:      toBe(marbles: string, values?: any, errorValue?: any) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/testing/TestScheduler.ts:    values?: any,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/testing/TestScheduler.ts:    errorValue?: any,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/testing/TestScheduler.ts:        ? (x: any) => x
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/testing/TestScheduler.ts:        : (x: any) => {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/types.ts:  error: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/types.ts:  error?: (err: any) => void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/types.ts:  error: (err: any) => void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/types.ts:  error?: (err: any) => void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/types.ts:  error: (err: any) => void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/types.ts:export type Head<X extends readonly any[]> = ((...args: X) => any) extends (arg: infer U, ...rest: any[]) => any ? U : never;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/types.ts:export type Tail<X extends readonly any[]> = ((...args: X) => any) extends (arg: any, ...rest: infer U) => any ? U : never;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Operator.ts:  call(subscriber: Subscriber<R>, source: any): TeardownLogic;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Subscriber.ts:  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Subscriber.ts:  error(err?: any): void {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Subscriber.ts:  protected _error(err: any): void {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Subscriber.ts:function bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Subscriber.ts:  error(err: any): void {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Subscriber.ts:    error?: ((e?: any) => void) | null,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Subscriber.ts:      let context: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Subscriber.ts:function handleUnhandledError(error: any) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Subscriber.ts:function defaultErrorHandler(err: any) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Observable.ts:  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Observable.ts:  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Observable.ts:    error?: ((error: any) => void) | null,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Observable.ts:        (err: any) => reject(err),
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Observable.ts:function isObserver<T>(value: any): value is Observer<T> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Observable.ts:function isSubscriber<T>(value: any): value is Subscriber<T> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Notification.ts:  constructor(kind: 'E', value: undefined, error: any);
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Notification.ts:  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Notification.ts:  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Notification.ts:  do(next: (value: T) => void, error: (err: any) => void): void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Notification.ts:  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Notification.ts:  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Notification.ts:  accept(next: (value: T) => void, error: (err: any) => void): void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Notification.ts:  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Notification.ts:  static createError(err?: any) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Subject.ts:  thrownError: any = null;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Subject.ts:  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Subject.ts:  error(err: any) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Subject.ts:    const observable: any = new Observable<T>();
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Subject.ts:  error(err: any) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/NotificationFactories.ts:export function errorNotification(error: any): ErrorNotification {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/NotificationFactories.ts:export function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/connectable.ts:  const result: any = new Observable<T>((subscriber) => {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: any[]) => void,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  resultSelector: (...args: any[]) => any,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:): (...args: any[]) => Observable<any>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: [...any[], (err: any, ...res: any) => void]) => void,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  resultSelector?: ((...args: any[]) => any) | SchedulerLike,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:): (...args: any[]) => Observable<any> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/throwError.ts: *   const error: any = new Error(`This is error number ${ ++errorCount }`);
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(error: any): Observable<never>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  resultSelector?: (...args: any[]) => T
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(handler: Function): any} addHandler A function that takes
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(handler: Function, token?: any): void} [removeHandler] A function that
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(...args: any): T} [project] A function to
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  resultSelector?: (...args: any[]) => T
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:export type NodeEventHandler = (...args: any[]) => void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (...args: any[]) => R
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (...args: any[]) => R
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (value: T, ...args: any[]) => R
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:  target: any,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:  options?: EventListenerOptions | ((...args: any[]) => T),
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector?: (...args: any[]) => T
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:function toCommonHandlerRegistry(target: any, eventName: string) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isEventTarget(target: any): target is HasEventTargetAddRemove<any> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/zip.ts:                  const result: any = buffers.map((buffer) => buffer.shift()!);
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/innerFrom.ts:export function fromInteropObservable<T>(obj: any) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/innerFrom.ts:        (err: any) => subscriber.error(err)
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/forkJoin.ts:export function forkJoin(...args: any[]): Observable<any> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/bindCallback.ts:  callbackFunc: (...args: any[]) => void,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/bindCallback.ts:  resultSelector: (...args: any[]) => any,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/bindCallback.ts:): (...args: any[]) => Observable<any>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/bindCallback.ts:  callbackFunc: (...args: [...any[], (...res: any) => void]) => void,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/bindCallback.ts:  resultSelector?: ((...args: any[]) => any) | SchedulerLike,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/bindCallback.ts:): (...args: any[]) => Observable<unknown> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/combineLatest.ts:export function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/combineLatest.ts:  valueTransform: (values: any[]) => any = identity
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/pairs.ts:  n: number | bigint | boolean | ((...args: any[]) => any) | symbol,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/pairs.ts:export function pairs(obj: any, scheduler?: SchedulerLike) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/dom/WebSocketSubject.ts:  serializer: (value: any) => JSON.stringify(value),
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/dom/fetch.ts:    const handleError = (err: any) => {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  callbackFunc: any,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  resultSelector?: any,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:): (...args: any[]) => Observable<unknown> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:      return function (this: any, ...args: any[]) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:    return function (this: any, ...args: any[]) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  return function (this: any, ...args: any[]): Observable<any> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:            (...results: any[]) => {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/concat.ts:export function concat(...args: any[]): Observable<unknown> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/partition.ts:  predicate: (this: any, value: T, index: number) => boolean,
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/observable/partition.ts:  thisArg?: any
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Subscription.ts:    let errors: any[] | undefined;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/Subscription.ts:export function isSubscription(value: any): value is Subscription {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/config.ts:  onUnhandledError: ((err: any) => void) | null;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/ajax.ts:  post<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/ajax.ts:  put<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/ajax.ts:  patch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPost<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPut<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPatch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/ajax.ts:      const addProgressEvent = (target: any, type: string, direction: AjaxDirection) => {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/ajax.ts:        [LOADSTART, PROGRESS].forEach((type) => xhr.upload.addEventListener(type, (e: any) => progressSubscriber?.next?.(e)));
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function extractContentTypeAndMaybeSerializeBody(body: any, headers: Record<string, string>) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function toStringCheck(obj: any, name: string): boolean {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function isArrayBuffer(body: any): body is ArrayBuffer {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function isFile(body: any): body is File {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function isBlob(body: any): body is Blob {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function isArrayBufferView(body: any): body is ArrayBufferView {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function isFormData(body: any): body is FormData {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function isURLSearchParams(body: any): body is URLSearchParams {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function isReadableStream(body: any): body is ReadableStream {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/errors.ts:  response: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/errors.ts:    function AjaxErrorImpl(this: any, message: string, xhr: XMLHttpRequest, request: AjaxRequest) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/errors.ts:      let response: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/errors.ts:  function AjaxTimeoutErrorImpl(this: any, xhr: XMLHttpRequest, request: AjaxRequest) {
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/getXHRResponse.ts:        const ieXHR: any = xhr;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/getXHRResponse.ts:        const ieXHR: any = xhr;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/types.ts:  body?: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/rxjs/src/internal/ajax/types.ts:  body?: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/source-map/source-map.d.ts:    eachMapping(callback: (mapping: MappingItem) => void, context?: any, order?: number): void;
./node_modules/@angular-devkit/schematics-cli/node_modules/source-map/source-map.d.ts:    sourceContents: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/dist/vocabularies/validation/const.d.ts:    allowedValue: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/dist/vocabularies/validation/enum.d.ts:    allowedValues: any[];
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/dist/types/json-schema.d.ts:    [keyword: string]: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/dist/types/index.d.ts:        [K in T]: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/dist/types/index.d.ts:    (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T;
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/dist/types/index.d.ts:export type MacroKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaCxt) => AnySchema;
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/dist/types/index.d.ts:export type CompileKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaObjCxt) => DataValidateFunction;
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/dist/types/index.d.ts:    (schema: any, data: any, parentSchema?: AnySchemaObject, dataCxt?: DataValidationCxt): boolean | Promise<any>;
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/dist/types/index.d.ts:    schema: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/dist/core.d.ts:    [prop: string]: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/dist/compile/validate/index.d.ts:    schema: any;
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/lib/vocabularies/validation/const.ts:export type ConstError = ErrorObject<"const", {allowedValue: any}>
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/lib/vocabularies/validation/enum.ts:export type EnumError = ErrorObject<"enum", {allowedValues: any[]}, any[] | {$data: string}>
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/lib/types/json-schema.ts:  [keyword: string]: any
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/lib/types/index.ts:  parentData: {[K in T]: any} // object or array
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/lib/types/index.ts:  (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/lib/types/index.ts:  schema: any,
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/lib/types/index.ts:  schema: any,
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/lib/types/index.ts:    schema: any,
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/lib/types/index.ts:    data: any,
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/lib/types/index.ts:  schema: any // TODO
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/lib/core.ts:  [prop: string]: any
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/lib/core.ts:  cache?: any
./node_modules/@angular-devkit/schematics-cli/node_modules/ajv/lib/compile/validate/index.ts:  schema: any // keyword value in the schema
./node_modules/@angular-devkit/schematics-cli/blank/schema.d.ts:    [property: string]: any;
./node_modules/@angular-devkit/schematics/node_modules/@angular-devkit/core/src/utils/partially-ordered-set.d.ts:    forEach(callbackfn: (value: T, value2: T, set: PartiallyOrderedSet<T>) => void, thisArg?: any): void;
./node_modules/@angular-devkit/schematics/node_modules/@angular-devkit/core/src/utils/lang.d.ts:export declare function isPromise(obj: any): obj is Promise<any>;
./node_modules/@angular-devkit/schematics/node_modules/@angular-devkit/core/src/utils/literals.d.ts:    (template: TemplateStringsArray, ...substitutions: any[]): R;
./node_modules/@angular-devkit/schematics/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function oneLine(strings: TemplateStringsArray, ...values: any[]): string;
./node_modules/@angular-devkit/schematics/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function stripIndent(strings: TemplateStringsArray, ...values: any[]): string;
./node_modules/@angular-devkit/schematics/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function stripIndents(strings: TemplateStringsArray, ...values: any[]): string;
./node_modules/@angular-devkit/schematics/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function trimNewlines(strings: TemplateStringsArray, ...values: any[]): string;
./node_modules/@angular-devkit/schematics/node_modules/chokidar/esm/handler.d.ts:    _watchWithNodeFs(path: string, listener: (path: string, newStats?: any) => void | Promise<void>): (() => void) | undefined;
./node_modules/@angular-devkit/schematics/node_modules/chokidar/handler.d.ts:    _watchWithNodeFs(path: string, listener: (path: string, newStats?: any) => void | Promise<void>): (() => void) | undefined;
./node_modules/@angular-devkit/schematics/node_modules/json-schema-traverse/index.d.ts:    [x: string]: any;
./node_modules/@angular-devkit/schematics/node_modules/readdirp/esm/index.d.ts:    parents: any[];
./node_modules/@angular-devkit/schematics/node_modules/readdirp/index.d.ts:    parents: any[];
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subscription.d.ts:export declare function isSubscription(value: any): value is Subscription;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/catchError.d.ts:export declare function catchError<T, O extends ObservableInput<any>>(selector: (err: any, caught: Observable<T>) => O): OperatorFunction<T, T | ObservedValueOf<O>>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/share.d.ts:    resetOnError?: boolean | ((error: any) => ObservableInput<any>);
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/every.d.ts:export declare function every<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/partition.d.ts:export declare function partition<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): UnaryFunction<Observable<T>, [Observable<T>, Observable<T>]>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/materialize.d.ts: * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/tap.d.ts:export declare function tap<T>(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): MonoTypeOperatorFunction<T>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/find.d.ts:export declare function createFind<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean, thisArg: any, emit: 'value' | 'index'): (source: Observable<T>, subscriber: Subscriber<any>) => void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/OperatorSubscriber.d.ts:export declare function createOperatorSubscriber<T>(destination: Subscriber<any>, onNext?: (value: T) => void, onComplete?: () => void, onError?: (err: any) => void, onFinalize?: () => void): Subscriber<T>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/OperatorSubscriber.d.ts:    constructor(destination: Subscriber<any>, onNext?: (value: T) => void, onComplete?: () => void, onError?: (err: any) => void, onFinalize?: (() => void) | undefined, shouldUnsubscribe?: (() => boolean) | undefined);
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/joinAllInternals.d.ts:export declare function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R): import("../types").UnaryFunction<Observable<ObservableInput<T>>, unknown>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/findIndex.d.ts:export declare function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/retry.d.ts:    delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isReadableStreamLike.d.ts:export declare function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isPromise.d.ts:export declare function isPromise(value: any): value is PromiseLike<any>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popScheduler(args: any[]): SchedulerLike | undefined;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popNumber(args: any[], defaultValue: number): number;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/createErrorClass.d.ts:export declare function createErrorClass<T>(createImpl: (_super: any) => any): T;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/errorContext.d.ts:export declare function captureError(err: any): void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/not.d.ts:export declare function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isFunction.d.ts:export declare function isFunction(value: any): value is (...args: any[]) => any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isAsyncIterable.d.ts:export declare function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/throwUnobservableError.d.ts:export declare function createInvalidObservableTypeError(input: any): TypeError;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/lift.d.ts:export declare function hasLift(source: any): source is {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isObservable.d.ts:export declare function isObservable(obj: any): obj is Observable<unknown>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/applyMixins.d.ts:export declare function applyMixins(derivedCtor: any, baseCtors: any[]): void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/reportUnhandledError.d.ts:export declare function reportUnhandledError(err: any): void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isScheduler.d.ts:export declare function isScheduler(value: any): value is SchedulerLike;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isArrayLike.d.ts:export declare const isArrayLike: <T>(x: any) => x is ArrayLike<T>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/createObject.d.ts:export declare function createObject(keys: string[], values: any[]): any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isIterable.d.ts:export declare function isIterable(input: any): input is Iterable<any>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isInteropObservable.d.ts:export declare function isInteropObservable(input: any): input is InteropObservable<any>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isDate.d.ts:export declare function isValidDate(value: any): value is Date;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/UnsubscriptionError.d.ts:    readonly errors: any[];
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/UnsubscriptionError.d.ts:    new (errors: any[]): UnsubscriptionError;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:    error: any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:    error?: (err: any) => void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:    error: (err: any) => void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:    error?: (err: any) => void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:    error: (err: any) => void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:export declare type Head<X extends readonly any[]> = ((...args: X) => any) extends (arg: infer U, ...rest: any[]) => any ? U : never;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:export declare type Tail<X extends readonly any[]> = ((...args: X) => any) extends (arg: any, ...rest: infer U) => any ? U : never;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/config.d.ts:    onUnhandledError: ((err: any) => void) | null;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay?: number): TimerHandle;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay?: number): TimerHandle | undefined;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected _execute(state: T, delay: number): any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/QueueAction.d.ts:    execute(state: T, delay: number): any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/immediateProvider.d.ts:declare type SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/intervalProvider.d.ts:declare type SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/AsyncAction.d.ts:    execute(state: T, delay: number): any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/AsyncAction.d.ts:    protected _execute(state: T, _delay: number): any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/timeoutProvider.d.ts:declare type SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:export declare type observableToBeFn = (marbles: string, values?: any, errorValue?: any) => void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    assertDeepEqual: (actual: any, expected: any) => boolean | void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    constructor(assertDeepEqual: (actual: any, expected: any) => boolean | void);
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    }, error?: any): ColdObservable<T>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    }, error?: any): HotObservable<T>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:        toBe(marbles: string, values?: any, errorValue?: any): void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    static parseMarbles(marbles: string, values?: any, errorValue?: any, materializeInnerObservables?: boolean, runMode?: boolean): TestMessage[];
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Operator.d.ts:    call(subscriber: Subscriber<R>, source: any): TeardownLogic;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    readonly error?: any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    constructor(kind: 'E', value: undefined, error: any);
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    do(next: (value: T) => void, error: (err: any) => void): void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    accept(next: (value: T) => void, error: (err: any) => void): void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    static createError(err?: any): Notification<never> & ErrorNotification;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/pairs.d.ts:export declare function pairs(n: number | bigint | boolean | ((...args: any[]) => any) | symbol, scheduler?: SchedulerLike): Observable<[never, never]>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/bindCallback.d.ts:export declare function bindCallback(callbackFunc: (...args: any[]) => void, resultSelector: (...args: any[]) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/bindCallbackInternals.d.ts:export declare function bindCallbackInternals(isNodeStyle: boolean, callbackFunc: any, resultSelector?: any, scheduler?: SchedulerLike): (...args: any[]) => Observable<unknown>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/combineLatest.d.ts:export declare function combineLatestInit(observables: ObservableInput<any>[], scheduler?: SchedulerLike, valueTransform?: (values: any[]) => any): (subscriber: Subscriber<any>) => void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEventPattern.d.ts:export declare function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void): Observable<T>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEventPattern.d.ts:export declare function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare type NodeEventHandler = (...args: any[]) => void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:    on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:    off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<R>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string, resultSelector: (...args: any[]) => R): Observable<R>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<R>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string, resultSelector: (...args: any[]) => R): Observable<R>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<T, R>(target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>, eventName: string, resultSelector: (value: T, ...args: any[]) => R): Observable<R>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts: *   const error: any = new Error(`This is error number ${ ++errorCount }`);
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts:export declare function throwError(error: any): Observable<never>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts:export declare function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/innerFrom.d.ts:export declare function fromInteropObservable<T>(obj: any): Observable<T>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/bindNodeCallback.d.ts:export declare function bindNodeCallback(callbackFunc: (...args: any[]) => void, resultSelector: (...args: any[]) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/bindNodeCallback.d.ts:export declare function bindNodeCallback<A extends readonly unknown[], R extends readonly unknown[]>(callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void, schedulerLike?: SchedulerLike): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Observable.d.ts:    static create: (...args: any[]) => any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Observable.d.ts:    subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subject.d.ts:    thrownError: any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subject.d.ts:    static create: (...args: any[]) => any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subject.d.ts:    error(err: any): void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subject.d.ts:    error(err: any): void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    error(err?: any): void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    protected _error(err: any): void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    constructor(observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null, error?: ((e?: any) => void) | null, complete?: (() => void) | null);
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/ajax/errors.d.ts:    response: any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    post<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    put<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    patch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/ajax/types.d.ts:    body?: any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/ajax/types.d.ts:    body?: any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/ajax/getXHRResponse.d.ts:export declare function getXHRResponse(xhr: XMLHttpRequest): any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/catchError.ts:  selector: (err: any, caught: Observable<T>) => O
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/catchError.ts:  selector: (err: any, caught: Observable<T>) => O
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/groupBy.ts:  elementOrOptions?: ((value: any) => any) | void | BasicGroupByOptions<K, T> | GroupByOptionsWithElement<K, R, T>,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/groupBy.ts:    let element: ((value: any) => any) | void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/groupBy.ts:      element = elementOrOptions as ((value: any) => any);
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/groupBy.ts:    const handleError = (err: any) => notify((consumer) => consumer.error(err));
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/groupBy.ts:      const result: any = new Observable<T>((groupSubscriber) => {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/joinAllInternals.ts:export function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/scanInternals.ts:    let state: any = seed;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/find.ts:  thisArg?: any
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/find.ts:  thisArg: any,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/filter.ts:export function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/windowTime.ts:export function windowTime<T>(windowTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, Observable<T>> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/share.ts:  resetOnError?: boolean | ((error: any) => ObservableInput<any>);
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/tap.ts:  error?: ((error: any) => void) | null,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/tap.ts:  error?: ((e: any) => void) | null,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/materialize.ts: * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/retry.ts:  delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/exhaustMap.ts:      source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b: any, ii: any) => resultSelector(a, b, i, ii)))));
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/map.ts:export function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/findIndex.ts:export function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/findIndex.ts:  thisArg?: any
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/every.ts:  thisArg: any
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/every.ts:  thisArg?: any
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/windowWhen.ts:    const handleError = (err: any) => {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/pluck.ts:    let currentProp: any = x;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/bufferTime.ts:export function bufferTime<T>(bufferTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, T[]> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/timeout.ts:    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/combineLatest.ts:export function combineLatest<T, R>(...args: (ObservableInput<any> | ((...values: any[]) => R))[]): OperatorFunction<T, unknown> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/windowToggle.ts:    const handleError = (err: any) => {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/race.ts:export function race<T>(...args: any[]): OperatorFunction<T, unknown> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:  onError?: (err: any) => void,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:    onError?: (err: any) => void,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:      ? function (this: OperatorSubscriber<T>, err: any) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/concat.ts:export function concat<T, R>(...args: any[]): OperatorFunction<T, R> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/reduce.ts:export function reduce<V, A>(accumulator: (acc: V | A, value: V, index: number) => A, seed?: any): OperatorFunction<V, V | A> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/window.ts:    const errorHandler = (err: any) => {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/mergeMap.ts:    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/partition.ts:  thisArg?: any
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/toArray.ts:const arrReducer = (arr: any[], value: any) => (arr.push(value), arr);
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/withLatestFrom.ts:export function withLatestFrom<T, R>(...inputs: any[]): OperatorFunction<T, R | any[]> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/withLatestFrom.ts:  const project = popResultSelector(inputs) as ((...args: any[]) => R) | undefined;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/distinctUntilChanged.ts:function defaultCompare(a: any, b: any) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/EmptyError.ts:export const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/pipe.ts:    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/reportUnhandledError.ts:export function reportUnhandledError(err: any) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isFunction.ts:export function isFunction(value: any): value is (...args: any[]) => any {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isInteropObservable.ts:export function isInteropObservable(input: any): input is InteropObservable<any> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isPromise.ts:export function isPromise(value: any): value is PromiseLike<any> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isDate.ts:export function isValidDate(value: any): value is Date {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isAsyncIterable.ts:export function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/args.ts:export function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/args.ts:export function popScheduler(args: any[]): SchedulerLike | undefined {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/args.ts:export function popNumber(args: any[], defaultValue: number): number {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isReadableStreamLike.ts:export function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/throwUnobservableError.ts:export function createInvalidObservableTypeError(input: any) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/SequenceError.ts:    function SequenceErrorImpl(this: any, message: string) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/createErrorClass.ts:export function createErrorClass<T>(createImpl: (_super: any) => any): T {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/createErrorClass.ts:  const _super = (instance: any) => {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/not.ts:export function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isArrayLike.ts:export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:  readonly errors: any[];
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:  new (errors: any[]): UnsubscriptionError;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isScheduler.ts:export function isScheduler(value: any): value is SchedulerLike {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/errorContext.ts:let context: { errorThrown: boolean; error: any } | null = null;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/errorContext.ts:export function captureError(err: any) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts:    function ObjectUnsubscribedErrorImpl(this: any) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/Immediate.ts:const activeHandles: { [key: number]: any } = {};
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/applyMixins.ts:export function applyMixins(derivedCtor: any, baseCtors: any[]) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/lift.ts:export function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/createObject.ts:export function createObject(keys: string[], values: any[]) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/argsArgArrayOrObject.ts:function isPOJO(obj: any): obj is object {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts:    function ArgumentOutOfRangeErrorImpl(this: any) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isIterable.ts:export function isIterable(input: any): input is Iterable<any> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/NotFoundError.ts:    function NotFoundErrorImpl(this: any, message: string) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isObservable.ts:export function isObservable(obj: any): obj is Observable<unknown> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts:type SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:  public execute(state: T, delay: number): any {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:  protected _execute(state: T, _delay: number): any {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:    let errorValue: any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts:    let error: any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:    let error: any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected _execute(state: T, delay: number): any {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts:    let error: any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts:    let error: any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/QueueAction.ts:  public execute(state: T, delay: number): any {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/intervalProvider.ts:type SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/immediateProvider.ts:type SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  actual?: any[];
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  expected?: any[];
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:export type observableToBeFn = (marbles: string, values?: any, errorValue?: any) => void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  constructor(public assertDeepEqual: (actual: any, expected: any) => boolean | void) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  createColdObservable<T = string>(marbles: string, values?: { [marble: string]: T }, error?: any): ColdObservable<T> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  createHotObservable<T = string>(marbles: string, values?: { [marble: string]: T }, error?: any): HotObservable<T> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:      toBe(marbles: string, values?: any, errorValue?: any) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:    values?: any,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:    errorValue?: any,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:        ? (x: any) => x
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:        : (x: any) => {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/types.ts:  error: any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/types.ts:  error?: (err: any) => void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/types.ts:  error: (err: any) => void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/types.ts:  error?: (err: any) => void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/types.ts:  error: (err: any) => void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/types.ts:export type Head<X extends readonly any[]> = ((...args: X) => any) extends (arg: infer U, ...rest: any[]) => any ? U : never;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/types.ts:export type Tail<X extends readonly any[]> = ((...args: X) => any) extends (arg: any, ...rest: infer U) => any ? U : never;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Operator.ts:  call(subscriber: Subscriber<R>, source: any): TeardownLogic;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:  error(err?: any): void {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:  protected _error(err: any): void {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:function bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:  error(err: any): void {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:    error?: ((e?: any) => void) | null,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:      let context: any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:function handleUnhandledError(error: any) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:function defaultErrorHandler(err: any) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Observable.ts:  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Observable.ts:  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Observable.ts:    error?: ((error: any) => void) | null,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Observable.ts:        (err: any) => reject(err),
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Observable.ts:function isObserver<T>(value: any): value is Observer<T> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Observable.ts:function isSubscriber<T>(value: any): value is Subscriber<T> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  constructor(kind: 'E', value: undefined, error: any);
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  do(next: (value: T) => void, error: (err: any) => void): void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  accept(next: (value: T) => void, error: (err: any) => void): void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  static createError(err?: any) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subject.ts:  thrownError: any = null;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subject.ts:  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subject.ts:  error(err: any) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subject.ts:    const observable: any = new Observable<T>();
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subject.ts:  error(err: any) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/NotificationFactories.ts:export function errorNotification(error: any): ErrorNotification {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/NotificationFactories.ts:export function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/connectable.ts:  const result: any = new Observable<T>((subscriber) => {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: any[]) => void,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  resultSelector: (...args: any[]) => any,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:): (...args: any[]) => Observable<any>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: [...any[], (err: any, ...res: any) => void]) => void,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  resultSelector?: ((...args: any[]) => any) | SchedulerLike,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:): (...args: any[]) => Observable<any> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/throwError.ts: *   const error: any = new Error(`This is error number ${ ++errorCount }`);
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(error: any): Observable<never>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  resultSelector?: (...args: any[]) => T
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(handler: Function): any} addHandler A function that takes
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(handler: Function, token?: any): void} [removeHandler] A function that
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(...args: any): T} [project] A function to
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  resultSelector?: (...args: any[]) => T
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:export type NodeEventHandler = (...args: any[]) => void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (...args: any[]) => R
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (...args: any[]) => R
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (value: T, ...args: any[]) => R
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  target: any,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  options?: EventListenerOptions | ((...args: any[]) => T),
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector?: (...args: any[]) => T
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:function toCommonHandlerRegistry(target: any, eventName: string) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isEventTarget(target: any): target is HasEventTargetAddRemove<any> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/zip.ts:                  const result: any = buffers.map((buffer) => buffer.shift()!);
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/innerFrom.ts:export function fromInteropObservable<T>(obj: any) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/innerFrom.ts:        (err: any) => subscriber.error(err)
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/forkJoin.ts:export function forkJoin(...args: any[]): Observable<any> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:  callbackFunc: (...args: any[]) => void,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:  resultSelector: (...args: any[]) => any,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:): (...args: any[]) => Observable<any>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:  callbackFunc: (...args: [...any[], (...res: any) => void]) => void,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:  resultSelector?: ((...args: any[]) => any) | SchedulerLike,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:): (...args: any[]) => Observable<unknown> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/combineLatest.ts:export function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/combineLatest.ts:  valueTransform: (values: any[]) => any = identity
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/pairs.ts:  n: number | bigint | boolean | ((...args: any[]) => any) | symbol,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/pairs.ts:export function pairs(obj: any, scheduler?: SchedulerLike) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/dom/WebSocketSubject.ts:  serializer: (value: any) => JSON.stringify(value),
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/dom/fetch.ts:    const handleError = (err: any) => {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  callbackFunc: any,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  resultSelector?: any,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:): (...args: any[]) => Observable<unknown> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:      return function (this: any, ...args: any[]) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:    return function (this: any, ...args: any[]) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  return function (this: any, ...args: any[]): Observable<any> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:            (...results: any[]) => {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/concat.ts:export function concat(...args: any[]): Observable<unknown> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/partition.ts:  predicate: (this: any, value: T, index: number) => boolean,
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/partition.ts:  thisArg?: any
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscription.ts:    let errors: any[] | undefined;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscription.ts:export function isSubscription(value: any): value is Subscription {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/config.ts:  onUnhandledError: ((err: any) => void) | null;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:  post<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:  put<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:  patch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPost<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPut<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPatch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:      const addProgressEvent = (target: any, type: string, direction: AjaxDirection) => {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:        [LOADSTART, PROGRESS].forEach((type) => xhr.upload.addEventListener(type, (e: any) => progressSubscriber?.next?.(e)));
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function extractContentTypeAndMaybeSerializeBody(body: any, headers: Record<string, string>) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function toStringCheck(obj: any, name: string): boolean {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isArrayBuffer(body: any): body is ArrayBuffer {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isFile(body: any): body is File {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isBlob(body: any): body is Blob {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isArrayBufferView(body: any): body is ArrayBufferView {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isFormData(body: any): body is FormData {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isURLSearchParams(body: any): body is URLSearchParams {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isReadableStream(body: any): body is ReadableStream {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/errors.ts:  response: any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/errors.ts:    function AjaxErrorImpl(this: any, message: string, xhr: XMLHttpRequest, request: AjaxRequest) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/errors.ts:      let response: any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/errors.ts:  function AjaxTimeoutErrorImpl(this: any, xhr: XMLHttpRequest, request: AjaxRequest) {
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/getXHRResponse.ts:        const ieXHR: any = xhr;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/getXHRResponse.ts:        const ieXHR: any = xhr;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/types.ts:  body?: any;
./node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/types.ts:  body?: any;
./node_modules/@angular-devkit/schematics/node_modules/source-map/source-map.d.ts:    eachMapping(callback: (mapping: MappingItem) => void, context?: any, order?: number): void;
./node_modules/@angular-devkit/schematics/node_modules/source-map/source-map.d.ts:    sourceContents: any;
./node_modules/@angular-devkit/schematics/node_modules/ajv/dist/vocabularies/validation/const.d.ts:    allowedValue: any;
./node_modules/@angular-devkit/schematics/node_modules/ajv/dist/vocabularies/validation/enum.d.ts:    allowedValues: any[];
./node_modules/@angular-devkit/schematics/node_modules/ajv/dist/types/json-schema.d.ts:    [keyword: string]: any;
./node_modules/@angular-devkit/schematics/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./node_modules/@angular-devkit/schematics/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./node_modules/@angular-devkit/schematics/node_modules/ajv/dist/types/index.d.ts:        [K in T]: any;
./node_modules/@angular-devkit/schematics/node_modules/ajv/dist/types/index.d.ts:    (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T;
./node_modules/@angular-devkit/schematics/node_modules/ajv/dist/types/index.d.ts:export type MacroKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaCxt) => AnySchema;
./node_modules/@angular-devkit/schematics/node_modules/ajv/dist/types/index.d.ts:export type CompileKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaObjCxt) => DataValidateFunction;
./node_modules/@angular-devkit/schematics/node_modules/ajv/dist/types/index.d.ts:    (schema: any, data: any, parentSchema?: AnySchemaObject, dataCxt?: DataValidationCxt): boolean | Promise<any>;
./node_modules/@angular-devkit/schematics/node_modules/ajv/dist/types/index.d.ts:    schema: any;
./node_modules/@angular-devkit/schematics/node_modules/ajv/dist/core.d.ts:    [prop: string]: any;
./node_modules/@angular-devkit/schematics/node_modules/ajv/dist/compile/validate/index.d.ts:    schema: any;
./node_modules/@angular-devkit/schematics/node_modules/ajv/lib/vocabularies/validation/const.ts:export type ConstError = ErrorObject<"const", {allowedValue: any}>
./node_modules/@angular-devkit/schematics/node_modules/ajv/lib/vocabularies/validation/enum.ts:export type EnumError = ErrorObject<"enum", {allowedValues: any[]}, any[] | {$data: string}>
./node_modules/@angular-devkit/schematics/node_modules/ajv/lib/types/json-schema.ts:  [keyword: string]: any
./node_modules/@angular-devkit/schematics/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./node_modules/@angular-devkit/schematics/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./node_modules/@angular-devkit/schematics/node_modules/ajv/lib/types/index.ts:  parentData: {[K in T]: any} // object or array
./node_modules/@angular-devkit/schematics/node_modules/ajv/lib/types/index.ts:  (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T
./node_modules/@angular-devkit/schematics/node_modules/ajv/lib/types/index.ts:  schema: any,
./node_modules/@angular-devkit/schematics/node_modules/ajv/lib/types/index.ts:  schema: any,
./node_modules/@angular-devkit/schematics/node_modules/ajv/lib/types/index.ts:    schema: any,
./node_modules/@angular-devkit/schematics/node_modules/ajv/lib/types/index.ts:    data: any,
./node_modules/@angular-devkit/schematics/node_modules/ajv/lib/types/index.ts:  schema: any // TODO
./node_modules/@angular-devkit/schematics/node_modules/ajv/lib/core.ts:  [prop: string]: any
./node_modules/@angular-devkit/schematics/node_modules/ajv/lib/core.ts:  cache?: any
./node_modules/@angular-devkit/schematics/node_modules/ajv/lib/compile/validate/index.ts:  schema: any // keyword value in the schema
./node_modules/react-docgen-typescript/lib/__tests__/testUtils.d.ts:    value?: any;
./node_modules/react-docgen-typescript/lib/parser.d.ts:    defaultValue: any;
./node_modules/react-docgen-typescript/lib/parser.d.ts:    value?: any;
./node_modules/chromatic/dist/node.d.ts:		thisArg?: any
./node_modules/chromatic/dist/node.d.ts:    fetchBuffer(url: any, options: any): Promise<Buffer>;
./node_modules/chromatic/dist/node.d.ts:    export const getValidEnumValues: (obj: any) => any[];
./node_modules/chromatic/dist/node.d.ts:    export const objectValues: (obj: any) => any[];
./node_modules/chromatic/dist/node.d.ts:    export const jsonStringifyReplacer: (_: string, value: any) => any;
./node_modules/chromatic/dist/node.d.ts:        [k: string]: any;
./node_modules/chromatic/dist/node.d.ts:    data: any;
./node_modules/chromatic/dist/node.d.ts:    readonly data: any;
./node_modules/chromatic/dist/node.d.ts:    data: any;
./node_modules/chromatic/dist/node.d.ts:declare type BuiltIn = (((...args: any[]) => any) | (new (...args: any[]) => any)) | {
./node_modules/chromatic/dist/node.d.ts:type LogFunction = (...args: any[]) => void;
./node_modules/chromatic/dist/node.d.ts:    help: any;
./node_modules/moment/moment.d.ts:    [x: string]: any;
./node_modules/moment/moment.d.ts:    future: any;
./node_modules/moment/moment.d.ts:    past: any;
./node_modules/moment/moment.d.ts:    s: any;
./node_modules/moment/moment.d.ts:    ss: any;
./node_modules/moment/moment.d.ts:    m: any;
./node_modules/moment/moment.d.ts:    mm: any;
./node_modules/moment/moment.d.ts:    h: any;
./node_modules/moment/moment.d.ts:    hh: any;
./node_modules/moment/moment.d.ts:    d: any;
./node_modules/moment/moment.d.ts:    dd: any;
./node_modules/moment/moment.d.ts:    M: any;
./node_modules/moment/moment.d.ts:    MM: any;
./node_modules/moment/moment.d.ts:    y: any;
./node_modules/moment/moment.d.ts:    yy: any;
./node_modules/moment/moment.d.ts:    parsedDateParts: any[];
./node_modules/moment/moment.d.ts:    parsedDateParts?: any[];
./node_modules/moment/moment.d.ts:    __momentBuiltinFormatBrand: any;
./node_modules/moment/moment.d.ts:  export function isMoment(m: any): m is Moment;
./node_modules/moment/moment.d.ts:  export function isDate(m: any): m is Date;
./node_modules/moment/moment.d.ts:  export function isDuration(d: any): d is Duration;
./node_modules/moment/ts3.1-typings/moment.d.ts:    [x: string]: any;
./node_modules/moment/ts3.1-typings/moment.d.ts:    future: any;
./node_modules/moment/ts3.1-typings/moment.d.ts:    past: any;
./node_modules/moment/ts3.1-typings/moment.d.ts:    s: any;
./node_modules/moment/ts3.1-typings/moment.d.ts:    ss: any;
./node_modules/moment/ts3.1-typings/moment.d.ts:    m: any;
./node_modules/moment/ts3.1-typings/moment.d.ts:    mm: any;
./node_modules/moment/ts3.1-typings/moment.d.ts:    h: any;
./node_modules/moment/ts3.1-typings/moment.d.ts:    hh: any;
./node_modules/moment/ts3.1-typings/moment.d.ts:    d: any;
./node_modules/moment/ts3.1-typings/moment.d.ts:    dd: any;
./node_modules/moment/ts3.1-typings/moment.d.ts:    M: any;
./node_modules/moment/ts3.1-typings/moment.d.ts:    MM: any;
./node_modules/moment/ts3.1-typings/moment.d.ts:    y: any;
./node_modules/moment/ts3.1-typings/moment.d.ts:    yy: any;
./node_modules/moment/ts3.1-typings/moment.d.ts:    parsedDateParts: any[];
./node_modules/moment/ts3.1-typings/moment.d.ts:    parsedDateParts?: any[];
./node_modules/moment/ts3.1-typings/moment.d.ts:    __momentBuiltinFormatBrand: any;
./node_modules/moment/ts3.1-typings/moment.d.ts:  export function isMoment(m: any): m is Moment;
./node_modules/moment/ts3.1-typings/moment.d.ts:  export function isDate(m: any): m is Date;
./node_modules/moment/ts3.1-typings/moment.d.ts:  export function isDuration(d: any): d is Duration;
./node_modules/memfs/lib/volume.d.ts:export declare function toUnixTimestamp(time: any): any;
./node_modules/memfs/lib/volume.d.ts:    ReadStream: new (...args: any[]) => IReadStream;
./node_modules/memfs/lib/volume.d.ts:    WriteStream: new (...args: any[]) => IWriteStream;
./node_modules/memfs/lib/volume.d.ts:        Node: new (...args: any[]) => Node;
./node_modules/memfs/lib/volume.d.ts:        Link: new (...args: any[]) => Link;
./node_modules/memfs/lib/volume.d.ts:        File: new (...args: any[]) => File;
./node_modules/memfs/lib/volume.d.ts:    genRndStr(): any;
./node_modules/memfs/lib/volume.d.ts:    open(path: PathLike, flags: TFlags, /* ... */ callback: TCallback<number>): any;
./node_modules/memfs/lib/volume.d.ts:    open(path: PathLike, flags: TFlags, mode: TMode, callback: TCallback<number>): any;
./node_modules/memfs/lib/volume.d.ts:    readFile(id: TFileId, callback: TCallback<TDataOut>): any;
./node_modules/memfs/lib/volume.d.ts:    readFile(id: TFileId, options: IReadFileOptions | string, callback: TCallback<TDataOut>): any;
./node_modules/memfs/lib/volume.d.ts:    write(fd: number, buffer: Buffer | Uint8Array, callback: (...args: any[]) => void): any;
./node_modules/memfs/lib/volume.d.ts:    write(fd: number, buffer: Buffer | Uint8Array, offset: number, callback: (...args: any[]) => void): any;
./node_modules/memfs/lib/volume.d.ts:    write(fd: number, buffer: Buffer | Uint8Array, offset: number, length: number, callback: (...args: any[]) => void): any;
./node_modules/memfs/lib/volume.d.ts:    write(fd: number, buffer: Buffer | Uint8Array, offset: number, length: number, position: number, callback: (...args: any[]) => void): any;
./node_modules/memfs/lib/volume.d.ts:    write(fd: number, str: string, callback: (...args: any[]) => void): any;
./node_modules/memfs/lib/volume.d.ts:    write(fd: number, str: string, position: number, callback: (...args: any[]) => void): any;
./node_modules/memfs/lib/volume.d.ts:    write(fd: number, str: string, position: number, encoding: BufferEncoding, callback: (...args: any[]) => void): any;
./node_modules/memfs/lib/volume.d.ts:    writeFile(id: TFileId, data: TData, callback: TCallback<void>): any;
./node_modules/memfs/lib/volume.d.ts:    writeFile(id: TFileId, data: TData, options: IWriteFileOptions | string, callback: TCallback<void>): any;
./node_modules/memfs/lib/volume.d.ts:    copyFile(src: PathLike, dest: PathLike, callback: TCallback<void>): any;
./node_modules/memfs/lib/volume.d.ts:    copyFile(src: PathLike, dest: PathLike, flags: TFlagsCopy, callback: TCallback<void>): any;
./node_modules/memfs/lib/volume.d.ts:    symlink(target: PathLike, path: PathLike, callback: TCallback<void>): any;
./node_modules/memfs/lib/volume.d.ts:    symlink(target: PathLike, path: PathLike, type: symlink.Type, callback: TCallback<void>): any;
./node_modules/memfs/lib/volume.d.ts:    realpath(path: PathLike, callback: TCallback<TDataOut>): any;
./node_modules/memfs/lib/volume.d.ts:    realpath(path: PathLike, options: IRealpathOptions | string, callback: TCallback<TDataOut>): any;
./node_modules/memfs/lib/volume.d.ts:    access(path: PathLike, callback: TCallback<void>): any;
./node_modules/memfs/lib/volume.d.ts:    access(path: PathLike, mode: number, callback: TCallback<void>): any;
./node_modules/memfs/lib/volume.d.ts:    appendFile(id: TFileId, data: TData, callback: TCallback<void>): any;
./node_modules/memfs/lib/volume.d.ts:    appendFile(id: TFileId, data: TData, options: IAppendFileOptions | string, callback: TCallback<void>): any;
./node_modules/memfs/lib/volume.d.ts:    readdir(path: PathLike, callback: TCallback<TDataOut[] | Dirent[]>): any;
./node_modules/memfs/lib/volume.d.ts:    readdir(path: PathLike, options: IReaddirOptions | string, callback: TCallback<TDataOut[] | Dirent[]>): any;
./node_modules/memfs/lib/volume.d.ts:    readlink(path: PathLike, callback: TCallback<TDataOut>): any;
./node_modules/memfs/lib/volume.d.ts:    readlink(path: PathLike, options: IOptions, callback: TCallback<TDataOut>): any;
./node_modules/memfs/lib/volume.d.ts:    ftruncate(fd: number, callback: TCallback<void>): any;
./node_modules/memfs/lib/volume.d.ts:    ftruncate(fd: number, len: number, callback: TCallback<void>): any;
./node_modules/memfs/lib/volume.d.ts:    truncate(id: TFileId, callback: TCallback<void>): any;
./node_modules/memfs/lib/volume.d.ts:    truncate(id: TFileId, len: number, callback: TCallback<void>): any;
./node_modules/memfs/lib/volume.d.ts:    mkdir(path: PathLike, callback: TCallback<void>): any;
./node_modules/memfs/lib/volume.d.ts:    }), callback: TCallback<void>): any;
./node_modules/memfs/lib/volume.d.ts:    }, callback: TCallback<string>): any;
./node_modules/memfs/lib/volume.d.ts:    mkdir(path: PathLike, mode: TMode | IMkdirOptions, callback: TCallback<string>): any;
./node_modules/memfs/lib/volume.d.ts:    mkdirp(path: PathLike, callback: TCallback<string>): any;
./node_modules/memfs/lib/volume.d.ts:    mkdirp(path: PathLike, mode: TMode, callback: TCallback<string>): any;
./node_modules/memfs/lib/volume.d.ts:    mkdtemp(prefix: string, callback: TCallback<void>): any;
./node_modules/memfs/lib/volume.d.ts:    mkdtemp(prefix: string, options: IOptions, callback: TCallback<void>): any;
./node_modules/memfs/lib/volume.d.ts:    rmdir(path: PathLike, callback: TCallback<void>): any;
./node_modules/memfs/lib/volume.d.ts:    rmdir(path: PathLike, options: IRmdirOptions, callback: TCallback<void>): any;
./node_modules/memfs/lib/volume.d.ts:    timeoutRef?: any;
./node_modules/memfs/lib/volume.d.ts:    new (path: PathLike, options: IReadStreamOptions): any;
./node_modules/memfs/lib/volume.d.ts:    open(): any;
./node_modules/memfs/lib/volume.d.ts:    close(callback: TCallback<void>): any;
./node_modules/memfs/lib/volume.d.ts:    new (path: PathLike, options: IWriteStreamOptions): any;
./node_modules/memfs/lib/volume.d.ts:    open(): any;
./node_modules/memfs/lib/volume.d.ts:    close(): any;
./node_modules/memfs/lib/volume.d.ts:    _timer: any;
./node_modules/memfs/lib/internal/errors.d.ts:    generatedMessage: any;
./node_modules/memfs/lib/internal/errors.d.ts:    name: any;
./node_modules/memfs/lib/internal/errors.d.ts:    code: any;
./node_modules/memfs/lib/internal/errors.d.ts:    actual: any;
./node_modules/memfs/lib/internal/errors.d.ts:    expected: any;
./node_modules/memfs/lib/internal/errors.d.ts:    operator: any;
./node_modules/memfs/lib/internal/errors.d.ts:    constructor(options: any);
./node_modules/memfs/lib/internal/errors.d.ts:declare function message(key: any, args: any): any;
./node_modules/memfs/lib/internal/errors.d.ts:declare function E(sym: any, val: any): void;
./node_modules/memfs/lib/internal/errors.d.ts:    new (key: any, ...args: any[]): {
./node_modules/memfs/lib/internal/errors.d.ts:        [x: string]: any;
./node_modules/memfs/lib/internal/errors.d.ts:    [x: string]: any;
./node_modules/memfs/lib/internal/errors.d.ts:    new (key: any, ...args: any[]): {
./node_modules/memfs/lib/internal/errors.d.ts:        [x: string]: any;
./node_modules/memfs/lib/internal/errors.d.ts:    [x: string]: any;
./node_modules/memfs/lib/internal/errors.d.ts:    new (key: any, ...args: any[]): {
./node_modules/memfs/lib/internal/errors.d.ts:        [x: string]: any;
./node_modules/memfs/lib/internal/errors.d.ts:    [x: string]: any;
./node_modules/memfs/lib/setImmediate.d.ts:type TSetImmediate = (callback: (...args: any[]) => void, args?: any) => void;
./node_modules/memfs/lib/promises.d.ts:    FileHandle: any;
./node_modules/memfs/lib/process.d.ts:    nextTick: (callback: (...args: any[]) => void, ...args: any[]) => void;
./node_modules/memfs/lib/setTimeoutUnref.d.ts:export type TSetTimeout = (callback: (...args: any[]) => void, time?: number, args?: any[]) => any;
./node_modules/memfs/lib/setTimeoutUnref.d.ts:declare function setTimeoutUnref(callback: any, time?: any, args?: any): object;
./node_modules/memfs/lib/index.d.ts:    Stats: new (...args: any[]) => Stats;
./node_modules/memfs/lib/index.d.ts:    Dirent: new (...args: any[]) => Dirent;
./node_modules/memfs/lib/index.d.ts:    ReadStream: new (...args: any[]) => IReadStream;
./node_modules/memfs/lib/index.d.ts:    WriteStream: new (...args: any[]) => IWriteStream;
./node_modules/memfs/lib/index.d.ts:    _toUnixTimestamp: any;
./node_modules/memfs/lib/volume-localstorage.d.ts:    setItem(key: string, json: any): any;
./node_modules/memfs/lib/volume-localstorage.d.ts:    getItem(key: string): any;
./node_modules/memfs/lib/volume-localstorage.d.ts:    removeItem(key: string): any;
./node_modules/memfs/lib/volume-localstorage.d.ts:    constructor(obj: any);
./node_modules/memfs/lib/volume-localstorage.d.ts:    setItem(key: string, json: any): void;
./node_modules/memfs/lib/volume-localstorage.d.ts:    getItem(key: string): any;
./node_modules/memfs/lib/volume-localstorage.d.ts:export declare function createVolume(namespace: string, LS?: IStore | object): new (...args: any[]) => Volume;
./node_modules/call-bind-apply-helpers/index.d.ts:  T extends (this: any, ...args: any[]) => any,
./node_modules/call-bind-apply-helpers/index.d.ts:  const T extends (this: any, ...args: any[]) => any,
./node_modules/call-bind-apply-helpers/index.d.ts:  const T extends (this: any, ...args: any[]) => any,
./node_modules/decimal.js/decimal.d.ts:  static isDecimal(object: any): object is Decimal;
./node_modules/@nestjs/cli/node_modules/tsconfig-paths/lib/filesystem.d.ts:    (packageJsonPath: string): any | undefined;
./node_modules/@nestjs/cli/node_modules/tsconfig-paths/lib/filesystem.d.ts:    (err?: Error, content?: any): void;
./node_modules/@nestjs/cli/node_modules/tsconfig-paths/lib/filesystem.d.ts:export declare function readJsonFromDiskSync(packageJsonPath: string): any | undefined;
./node_modules/@nestjs/cli/node_modules/tsconfig-paths/lib/filesystem.d.ts:export declare function readJsonFromDiskAsync(path: string, callback: (err?: Error, content?: any) => void): void;
./node_modules/@nestjs/cli/node_modules/tsconfig-paths/src/filesystem.ts:  (packageJsonPath: string): any | undefined;
./node_modules/@nestjs/cli/node_modules/tsconfig-paths/src/filesystem.ts:  (err?: Error, content?: any): void;
./node_modules/@nestjs/cli/node_modules/tsconfig-paths/src/filesystem.ts:export function readJsonFromDiskSync(packageJsonPath: string): any | undefined {
./node_modules/@nestjs/cli/node_modules/tsconfig-paths/src/filesystem.ts:  callback: (err?: Error, content?: any) => void
./node_modules/@nestjs/cli/node_modules/tsconfig-paths/src/register.ts:  Module._resolveFilename = function (request: string, _parent: any): string {
./node_modules/@nestjs/cli/node_modules/@angular-devkit/core/src/utils/partially-ordered-set.d.ts:    forEach(callbackfn: (value: T, value2: T, set: PartiallyOrderedSet<T>) => void, thisArg?: any): void;
./node_modules/@nestjs/cli/node_modules/@angular-devkit/core/src/utils/lang.d.ts:export declare function isPromise(obj: any): obj is Promise<any>;
./node_modules/@nestjs/cli/node_modules/@angular-devkit/core/src/utils/literals.d.ts:    (template: TemplateStringsArray, ...substitutions: any[]): R;
./node_modules/@nestjs/cli/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function oneLine(strings: TemplateStringsArray, ...values: any[]): string;
./node_modules/@nestjs/cli/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function stripIndent(strings: TemplateStringsArray, ...values: any[]): string;
./node_modules/@nestjs/cli/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function stripIndents(strings: TemplateStringsArray, ...values: any[]): string;
./node_modules/@nestjs/cli/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function trimNewlines(strings: TemplateStringsArray, ...values: any[]): string;
./node_modules/@nestjs/cli/node_modules/chokidar/esm/handler.d.ts:    _watchWithNodeFs(path: string, listener: (path: string, newStats?: any) => void | Promise<void>): (() => void) | undefined;
./node_modules/@nestjs/cli/node_modules/chokidar/handler.d.ts:    _watchWithNodeFs(path: string, listener: (path: string, newStats?: any) => void | Promise<void>): (() => void) | undefined;
./node_modules/@nestjs/cli/node_modules/json-schema-traverse/index.d.ts:    [x: string]: any;
./node_modules/@nestjs/cli/node_modules/readdirp/esm/index.d.ts:    parents: any[];
./node_modules/@nestjs/cli/node_modules/readdirp/index.d.ts:    parents: any[];
./node_modules/@nestjs/cli/node_modules/minimatch/dist/esm/index.d.ts:    debug(..._: any[]): void;
./node_modules/@nestjs/cli/node_modules/minimatch/dist/esm/ast.d.ts:    toJSON(): any[];
./node_modules/@nestjs/cli/node_modules/minimatch/dist/esm/assert-valid-pattern.d.ts:export declare const assertValidPattern: (pattern: any) => void;
./node_modules/@nestjs/cli/node_modules/minimatch/dist/commonjs/index.d.ts:    debug(..._: any[]): void;
./node_modules/@nestjs/cli/node_modules/minimatch/dist/commonjs/ast.d.ts:    toJSON(): any[];
./node_modules/@nestjs/cli/node_modules/minimatch/dist/commonjs/assert-valid-pattern.d.ts:export declare const assertValidPattern: (pattern: any) => void;
./node_modules/@nestjs/cli/node_modules/json5/lib/parse.d.ts:    reviver?: ((this: any, key: string, value: any) => any) | null,
./node_modules/@nestjs/cli/node_modules/json5/lib/stringify.d.ts:        | ((this: any, key: string, value: any) => any)
./node_modules/@nestjs/cli/node_modules/json5/lib/stringify.d.ts:    value: any,
./node_modules/@nestjs/cli/node_modules/json5/lib/stringify.d.ts:    replacer?: ((this: any, key: string, value: any) => any) | null,
./node_modules/@nestjs/cli/node_modules/json5/lib/stringify.d.ts:    value: any,
./node_modules/@nestjs/cli/node_modules/json5/lib/stringify.d.ts:declare function stringify(value: any, options: StringifyOptions): string
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/Subscription.d.ts:export declare function isSubscription(value: any): value is Subscription;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/operators/catchError.d.ts:export declare function catchError<T, O extends ObservableInput<any>>(selector: (err: any, caught: Observable<T>) => O): OperatorFunction<T, T | ObservedValueOf<O>>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/operators/share.d.ts:    resetOnError?: boolean | ((error: any) => ObservableInput<any>);
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/operators/every.d.ts:export declare function every<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/operators/partition.d.ts:export declare function partition<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): UnaryFunction<Observable<T>, [Observable<T>, Observable<T>]>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/operators/materialize.d.ts: * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/operators/tap.d.ts:export declare function tap<T>(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): MonoTypeOperatorFunction<T>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/operators/find.d.ts:export declare function createFind<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean, thisArg: any, emit: 'value' | 'index'): (source: Observable<T>, subscriber: Subscriber<any>) => void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/operators/OperatorSubscriber.d.ts:export declare function createOperatorSubscriber<T>(destination: Subscriber<any>, onNext?: (value: T) => void, onComplete?: () => void, onError?: (err: any) => void, onFinalize?: () => void): Subscriber<T>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/operators/OperatorSubscriber.d.ts:    constructor(destination: Subscriber<any>, onNext?: (value: T) => void, onComplete?: () => void, onError?: (err: any) => void, onFinalize?: (() => void) | undefined, shouldUnsubscribe?: (() => boolean) | undefined);
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/operators/joinAllInternals.d.ts:export declare function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R): import("../types").UnaryFunction<Observable<ObservableInput<T>>, unknown>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/operators/findIndex.d.ts:export declare function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/operators/retry.d.ts:    delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/isReadableStreamLike.d.ts:export declare function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/isPromise.d.ts:export declare function isPromise(value: any): value is PromiseLike<any>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popScheduler(args: any[]): SchedulerLike | undefined;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popNumber(args: any[], defaultValue: number): number;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/createErrorClass.d.ts:export declare function createErrorClass<T>(createImpl: (_super: any) => any): T;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/errorContext.d.ts:export declare function captureError(err: any): void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/not.d.ts:export declare function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/isFunction.d.ts:export declare function isFunction(value: any): value is (...args: any[]) => any;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/isAsyncIterable.d.ts:export declare function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/throwUnobservableError.d.ts:export declare function createInvalidObservableTypeError(input: any): TypeError;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/lift.d.ts:export declare function hasLift(source: any): source is {
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/isObservable.d.ts:export declare function isObservable(obj: any): obj is Observable<unknown>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/applyMixins.d.ts:export declare function applyMixins(derivedCtor: any, baseCtors: any[]): void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/reportUnhandledError.d.ts:export declare function reportUnhandledError(err: any): void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/isScheduler.d.ts:export declare function isScheduler(value: any): value is SchedulerLike;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/isArrayLike.d.ts:export declare const isArrayLike: <T>(x: any) => x is ArrayLike<T>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/createObject.d.ts:export declare function createObject(keys: string[], values: any[]): any;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/isIterable.d.ts:export declare function isIterable(input: any): input is Iterable<any>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/isInteropObservable.d.ts:export declare function isInteropObservable(input: any): input is InteropObservable<any>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/isDate.d.ts:export declare function isValidDate(value: any): value is Date;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/UnsubscriptionError.d.ts:    readonly errors: any[];
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/util/UnsubscriptionError.d.ts:    new (errors: any[]): UnsubscriptionError;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/types.d.ts:    error: any;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/types.d.ts:    error?: (err: any) => void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/types.d.ts:    error: (err: any) => void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/types.d.ts:    error?: (err: any) => void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/types.d.ts:    error: (err: any) => void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/types.d.ts:export declare type Head<X extends readonly any[]> = ((...args: X) => any) extends (arg: infer U, ...rest: any[]) => any ? U : never;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/types.d.ts:export declare type Tail<X extends readonly any[]> = ((...args: X) => any) extends (arg: any, ...rest: infer U) => any ? U : never;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/config.d.ts:    onUnhandledError: ((err: any) => void) | null;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay?: number): TimerHandle;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay?: number): TimerHandle | undefined;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected _execute(state: T, delay: number): any;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/scheduler/QueueAction.d.ts:    execute(state: T, delay: number): any;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/scheduler/immediateProvider.d.ts:declare type SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/scheduler/intervalProvider.d.ts:declare type SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/scheduler/AsyncAction.d.ts:    execute(state: T, delay: number): any;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/scheduler/AsyncAction.d.ts:    protected _execute(state: T, _delay: number): any;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/scheduler/timeoutProvider.d.ts:declare type SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:export declare type observableToBeFn = (marbles: string, values?: any, errorValue?: any) => void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    assertDeepEqual: (actual: any, expected: any) => boolean | void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    constructor(assertDeepEqual: (actual: any, expected: any) => boolean | void);
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    }, error?: any): ColdObservable<T>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    }, error?: any): HotObservable<T>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:        toBe(marbles: string, values?: any, errorValue?: any): void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    static parseMarbles(marbles: string, values?: any, errorValue?: any, materializeInnerObservables?: boolean, runMode?: boolean): TestMessage[];
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/Operator.d.ts:    call(subscriber: Subscriber<R>, source: any): TeardownLogic;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/Notification.d.ts:    readonly error?: any;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/Notification.d.ts:    constructor(kind: 'E', value: undefined, error: any);
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/Notification.d.ts:    do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/Notification.d.ts:    do(next: (value: T) => void, error: (err: any) => void): void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/Notification.d.ts:    accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/Notification.d.ts:    accept(next: (value: T) => void, error: (err: any) => void): void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/Notification.d.ts:    static createError(err?: any): Notification<never> & ErrorNotification;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/observable/pairs.d.ts:export declare function pairs(n: number | bigint | boolean | ((...args: any[]) => any) | symbol, scheduler?: SchedulerLike): Observable<[never, never]>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/observable/bindCallback.d.ts:export declare function bindCallback(callbackFunc: (...args: any[]) => void, resultSelector: (...args: any[]) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/observable/bindCallbackInternals.d.ts:export declare function bindCallbackInternals(isNodeStyle: boolean, callbackFunc: any, resultSelector?: any, scheduler?: SchedulerLike): (...args: any[]) => Observable<unknown>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/observable/combineLatest.d.ts:export declare function combineLatestInit(observables: ObservableInput<any>[], scheduler?: SchedulerLike, valueTransform?: (values: any[]) => any): (subscriber: Subscriber<any>) => void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/observable/fromEventPattern.d.ts:export declare function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void): Observable<T>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/observable/fromEventPattern.d.ts:export declare function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare type NodeEventHandler = (...args: any[]) => void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:    on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:    off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<R>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string, resultSelector: (...args: any[]) => R): Observable<R>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<R>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string, resultSelector: (...args: any[]) => R): Observable<R>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<T, R>(target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>, eventName: string, resultSelector: (value: T, ...args: any[]) => R): Observable<R>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts: *   const error: any = new Error(`This is error number ${ ++errorCount }`);
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts:export declare function throwError(error: any): Observable<never>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts:export declare function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/observable/innerFrom.d.ts:export declare function fromInteropObservable<T>(obj: any): Observable<T>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/observable/bindNodeCallback.d.ts:export declare function bindNodeCallback(callbackFunc: (...args: any[]) => void, resultSelector: (...args: any[]) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/observable/bindNodeCallback.d.ts:export declare function bindNodeCallback<A extends readonly unknown[], R extends readonly unknown[]>(callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void, schedulerLike?: SchedulerLike): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/Observable.d.ts:    static create: (...args: any[]) => any;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/Observable.d.ts:    subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/Subject.d.ts:    thrownError: any;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/Subject.d.ts:    static create: (...args: any[]) => any;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/Subject.d.ts:    error(err: any): void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/Subject.d.ts:    error(err: any): void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    error(err?: any): void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    protected _error(err: any): void;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    constructor(observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null, error?: ((e?: any) => void) | null, complete?: (() => void) | null);
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/ajax/errors.d.ts:    response: any;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    post<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    put<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    patch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/ajax/types.d.ts:    body?: any;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/ajax/types.d.ts:    body?: any;
./node_modules/@nestjs/cli/node_modules/rxjs/dist/types/internal/ajax/getXHRResponse.d.ts:export declare function getXHRResponse(xhr: XMLHttpRequest): any;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/catchError.ts:  selector: (err: any, caught: Observable<T>) => O
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/catchError.ts:  selector: (err: any, caught: Observable<T>) => O
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/groupBy.ts:  elementOrOptions?: ((value: any) => any) | void | BasicGroupByOptions<K, T> | GroupByOptionsWithElement<K, R, T>,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/groupBy.ts:    let element: ((value: any) => any) | void;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/groupBy.ts:      element = elementOrOptions as ((value: any) => any);
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/groupBy.ts:    const handleError = (err: any) => notify((consumer) => consumer.error(err));
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/groupBy.ts:      const result: any = new Observable<T>((groupSubscriber) => {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/joinAllInternals.ts:export function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/scanInternals.ts:    let state: any = seed;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/find.ts:  thisArg?: any
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/find.ts:  thisArg: any,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/filter.ts:export function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/windowTime.ts:export function windowTime<T>(windowTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, Observable<T>> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/share.ts:  resetOnError?: boolean | ((error: any) => ObservableInput<any>);
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/tap.ts:  error?: ((error: any) => void) | null,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/tap.ts:  error?: ((e: any) => void) | null,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/materialize.ts: * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/retry.ts:  delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/exhaustMap.ts:      source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b: any, ii: any) => resultSelector(a, b, i, ii)))));
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/map.ts:export function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/findIndex.ts:export function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/findIndex.ts:  thisArg?: any
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/every.ts:  thisArg: any
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/every.ts:  thisArg?: any
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/windowWhen.ts:    const handleError = (err: any) => {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/pluck.ts:    let currentProp: any = x;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/bufferTime.ts:export function bufferTime<T>(bufferTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, T[]> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/timeout.ts:    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/combineLatest.ts:export function combineLatest<T, R>(...args: (ObservableInput<any> | ((...values: any[]) => R))[]): OperatorFunction<T, unknown> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/windowToggle.ts:    const handleError = (err: any) => {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/race.ts:export function race<T>(...args: any[]): OperatorFunction<T, unknown> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:  onError?: (err: any) => void,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:    onError?: (err: any) => void,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:      ? function (this: OperatorSubscriber<T>, err: any) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/concat.ts:export function concat<T, R>(...args: any[]): OperatorFunction<T, R> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/reduce.ts:export function reduce<V, A>(accumulator: (acc: V | A, value: V, index: number) => A, seed?: any): OperatorFunction<V, V | A> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/window.ts:    const errorHandler = (err: any) => {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/mergeMap.ts:    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/partition.ts:  thisArg?: any
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/toArray.ts:const arrReducer = (arr: any[], value: any) => (arr.push(value), arr);
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/withLatestFrom.ts:export function withLatestFrom<T, R>(...inputs: any[]): OperatorFunction<T, R | any[]> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/withLatestFrom.ts:  const project = popResultSelector(inputs) as ((...args: any[]) => R) | undefined;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/operators/distinctUntilChanged.ts:function defaultCompare(a: any, b: any) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/EmptyError.ts:export const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/pipe.ts:    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/reportUnhandledError.ts:export function reportUnhandledError(err: any) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/isFunction.ts:export function isFunction(value: any): value is (...args: any[]) => any {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/isInteropObservable.ts:export function isInteropObservable(input: any): input is InteropObservable<any> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/isPromise.ts:export function isPromise(value: any): value is PromiseLike<any> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/isDate.ts:export function isValidDate(value: any): value is Date {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/isAsyncIterable.ts:export function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/args.ts:export function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/args.ts:export function popScheduler(args: any[]): SchedulerLike | undefined {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/args.ts:export function popNumber(args: any[], defaultValue: number): number {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/isReadableStreamLike.ts:export function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/throwUnobservableError.ts:export function createInvalidObservableTypeError(input: any) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/SequenceError.ts:    function SequenceErrorImpl(this: any, message: string) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/createErrorClass.ts:export function createErrorClass<T>(createImpl: (_super: any) => any): T {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/createErrorClass.ts:  const _super = (instance: any) => {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/not.ts:export function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/isArrayLike.ts:export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:  readonly errors: any[];
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:  new (errors: any[]): UnsubscriptionError;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/isScheduler.ts:export function isScheduler(value: any): value is SchedulerLike {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/errorContext.ts:let context: { errorThrown: boolean; error: any } | null = null;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/errorContext.ts:export function captureError(err: any) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts:    function ObjectUnsubscribedErrorImpl(this: any) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/Immediate.ts:const activeHandles: { [key: number]: any } = {};
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/applyMixins.ts:export function applyMixins(derivedCtor: any, baseCtors: any[]) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/lift.ts:export function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/createObject.ts:export function createObject(keys: string[], values: any[]) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/argsArgArrayOrObject.ts:function isPOJO(obj: any): obj is object {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts:    function ArgumentOutOfRangeErrorImpl(this: any) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/isIterable.ts:export function isIterable(input: any): input is Iterable<any> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/NotFoundError.ts:    function NotFoundErrorImpl(this: any, message: string) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/util/isObservable.ts:export function isObservable(obj: any): obj is Observable<unknown> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts:type SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:  public execute(state: T, delay: number): any {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:  protected _execute(state: T, _delay: number): any {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:    let errorValue: any;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts:    let error: any;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:    let error: any;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected _execute(state: T, delay: number): any {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts:    let error: any;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts:    let error: any;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/scheduler/QueueAction.ts:  public execute(state: T, delay: number): any {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/scheduler/intervalProvider.ts:type SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/scheduler/immediateProvider.ts:type SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  actual?: any[];
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  expected?: any[];
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/testing/TestScheduler.ts:export type observableToBeFn = (marbles: string, values?: any, errorValue?: any) => void;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  constructor(public assertDeepEqual: (actual: any, expected: any) => boolean | void) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  createColdObservable<T = string>(marbles: string, values?: { [marble: string]: T }, error?: any): ColdObservable<T> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  createHotObservable<T = string>(marbles: string, values?: { [marble: string]: T }, error?: any): HotObservable<T> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/testing/TestScheduler.ts:      toBe(marbles: string, values?: any, errorValue?: any) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/testing/TestScheduler.ts:    values?: any,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/testing/TestScheduler.ts:    errorValue?: any,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/testing/TestScheduler.ts:        ? (x: any) => x
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/testing/TestScheduler.ts:        : (x: any) => {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/types.ts:  error: any;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/types.ts:  error?: (err: any) => void;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/types.ts:  error: (err: any) => void;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/types.ts:  error?: (err: any) => void;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/types.ts:  error: (err: any) => void;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/types.ts:export type Head<X extends readonly any[]> = ((...args: X) => any) extends (arg: infer U, ...rest: any[]) => any ? U : never;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/types.ts:export type Tail<X extends readonly any[]> = ((...args: X) => any) extends (arg: any, ...rest: infer U) => any ? U : never;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Operator.ts:  call(subscriber: Subscriber<R>, source: any): TeardownLogic;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Subscriber.ts:  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Subscriber.ts:  error(err?: any): void {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Subscriber.ts:  protected _error(err: any): void {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Subscriber.ts:function bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Subscriber.ts:  error(err: any): void {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Subscriber.ts:    error?: ((e?: any) => void) | null,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Subscriber.ts:      let context: any;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Subscriber.ts:function handleUnhandledError(error: any) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Subscriber.ts:function defaultErrorHandler(err: any) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Observable.ts:  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Observable.ts:  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Observable.ts:    error?: ((error: any) => void) | null,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Observable.ts:        (err: any) => reject(err),
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Observable.ts:function isObserver<T>(value: any): value is Observer<T> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Observable.ts:function isSubscriber<T>(value: any): value is Subscriber<T> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Notification.ts:  constructor(kind: 'E', value: undefined, error: any);
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Notification.ts:  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Notification.ts:  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Notification.ts:  do(next: (value: T) => void, error: (err: any) => void): void;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Notification.ts:  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Notification.ts:  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Notification.ts:  accept(next: (value: T) => void, error: (err: any) => void): void;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Notification.ts:  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Notification.ts:  static createError(err?: any) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Subject.ts:  thrownError: any = null;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Subject.ts:  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Subject.ts:  error(err: any) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Subject.ts:    const observable: any = new Observable<T>();
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Subject.ts:  error(err: any) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/NotificationFactories.ts:export function errorNotification(error: any): ErrorNotification {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/NotificationFactories.ts:export function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/connectable.ts:  const result: any = new Observable<T>((subscriber) => {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: any[]) => void,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  resultSelector: (...args: any[]) => any,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:): (...args: any[]) => Observable<any>;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: [...any[], (err: any, ...res: any) => void]) => void,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  resultSelector?: ((...args: any[]) => any) | SchedulerLike,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:): (...args: any[]) => Observable<any> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/throwError.ts: *   const error: any = new Error(`This is error number ${ ++errorCount }`);
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(error: any): Observable<never>;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  resultSelector?: (...args: any[]) => T
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(handler: Function): any} addHandler A function that takes
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(handler: Function, token?: any): void} [removeHandler] A function that
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(...args: any): T} [project] A function to
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  resultSelector?: (...args: any[]) => T
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:export type NodeEventHandler = (...args: any[]) => void;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (...args: any[]) => R
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (...args: any[]) => R
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (value: T, ...args: any[]) => R
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:  target: any,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:  options?: EventListenerOptions | ((...args: any[]) => T),
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector?: (...args: any[]) => T
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:function toCommonHandlerRegistry(target: any, eventName: string) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isEventTarget(target: any): target is HasEventTargetAddRemove<any> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/zip.ts:                  const result: any = buffers.map((buffer) => buffer.shift()!);
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/innerFrom.ts:export function fromInteropObservable<T>(obj: any) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/innerFrom.ts:        (err: any) => subscriber.error(err)
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/forkJoin.ts:export function forkJoin(...args: any[]): Observable<any> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/bindCallback.ts:  callbackFunc: (...args: any[]) => void,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/bindCallback.ts:  resultSelector: (...args: any[]) => any,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/bindCallback.ts:): (...args: any[]) => Observable<any>;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/bindCallback.ts:  callbackFunc: (...args: [...any[], (...res: any) => void]) => void,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/bindCallback.ts:  resultSelector?: ((...args: any[]) => any) | SchedulerLike,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/bindCallback.ts:): (...args: any[]) => Observable<unknown> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/combineLatest.ts:export function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/combineLatest.ts:  valueTransform: (values: any[]) => any = identity
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/pairs.ts:  n: number | bigint | boolean | ((...args: any[]) => any) | symbol,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/pairs.ts:export function pairs(obj: any, scheduler?: SchedulerLike) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/dom/WebSocketSubject.ts:  serializer: (value: any) => JSON.stringify(value),
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/dom/fetch.ts:    const handleError = (err: any) => {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  callbackFunc: any,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  resultSelector?: any,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:): (...args: any[]) => Observable<unknown> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:      return function (this: any, ...args: any[]) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:    return function (this: any, ...args: any[]) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  return function (this: any, ...args: any[]): Observable<any> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:            (...results: any[]) => {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/concat.ts:export function concat(...args: any[]): Observable<unknown> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/partition.ts:  predicate: (this: any, value: T, index: number) => boolean,
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/observable/partition.ts:  thisArg?: any
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Subscription.ts:    let errors: any[] | undefined;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/Subscription.ts:export function isSubscription(value: any): value is Subscription {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/config.ts:  onUnhandledError: ((err: any) => void) | null;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/ajax.ts:  post<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/ajax.ts:  put<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/ajax.ts:  patch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPost<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPut<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPatch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/ajax.ts:      const addProgressEvent = (target: any, type: string, direction: AjaxDirection) => {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/ajax.ts:        [LOADSTART, PROGRESS].forEach((type) => xhr.upload.addEventListener(type, (e: any) => progressSubscriber?.next?.(e)));
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function extractContentTypeAndMaybeSerializeBody(body: any, headers: Record<string, string>) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function toStringCheck(obj: any, name: string): boolean {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function isArrayBuffer(body: any): body is ArrayBuffer {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function isFile(body: any): body is File {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function isBlob(body: any): body is Blob {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function isArrayBufferView(body: any): body is ArrayBufferView {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function isFormData(body: any): body is FormData {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function isURLSearchParams(body: any): body is URLSearchParams {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/ajax.ts:function isReadableStream(body: any): body is ReadableStream {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/errors.ts:  response: any;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/errors.ts:    function AjaxErrorImpl(this: any, message: string, xhr: XMLHttpRequest, request: AjaxRequest) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/errors.ts:      let response: any;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/errors.ts:  function AjaxTimeoutErrorImpl(this: any, xhr: XMLHttpRequest, request: AjaxRequest) {
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/getXHRResponse.ts:        const ieXHR: any = xhr;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/getXHRResponse.ts:        const ieXHR: any = xhr;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/types.ts:  body?: any;
./node_modules/@nestjs/cli/node_modules/rxjs/src/internal/ajax/types.ts:  body?: any;
./node_modules/@nestjs/cli/node_modules/glob/dist/esm/walker.d.ts:    walkCB2(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./node_modules/@nestjs/cli/node_modules/glob/dist/esm/walker.d.ts:    walkCB2Sync(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./node_modules/@nestjs/cli/node_modules/glob/dist/commonjs/walker.d.ts:    walkCB2(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./node_modules/@nestjs/cli/node_modules/glob/dist/commonjs/walker.d.ts:    walkCB2Sync(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./node_modules/@nestjs/cli/node_modules/source-map/source-map.d.ts:    eachMapping(callback: (mapping: MappingItem) => void, context?: any, order?: number): void;
./node_modules/@nestjs/cli/node_modules/source-map/source-map.d.ts:    sourceContents: any;
./node_modules/@nestjs/cli/node_modules/ajv/dist/vocabularies/validation/const.d.ts:    allowedValue: any;
./node_modules/@nestjs/cli/node_modules/ajv/dist/vocabularies/validation/enum.d.ts:    allowedValues: any[];
./node_modules/@nestjs/cli/node_modules/ajv/dist/types/json-schema.d.ts:    [keyword: string]: any;
./node_modules/@nestjs/cli/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./node_modules/@nestjs/cli/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./node_modules/@nestjs/cli/node_modules/ajv/dist/types/index.d.ts:        [K in T]: any;
./node_modules/@nestjs/cli/node_modules/ajv/dist/types/index.d.ts:    (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T;
./node_modules/@nestjs/cli/node_modules/ajv/dist/types/index.d.ts:export type MacroKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaCxt) => AnySchema;
./node_modules/@nestjs/cli/node_modules/ajv/dist/types/index.d.ts:export type CompileKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaObjCxt) => DataValidateFunction;
./node_modules/@nestjs/cli/node_modules/ajv/dist/types/index.d.ts:    (schema: any, data: any, parentSchema?: AnySchemaObject, dataCxt?: DataValidationCxt): boolean | Promise<any>;
./node_modules/@nestjs/cli/node_modules/ajv/dist/types/index.d.ts:    schema: any;
./node_modules/@nestjs/cli/node_modules/ajv/dist/core.d.ts:    [prop: string]: any;
./node_modules/@nestjs/cli/node_modules/ajv/dist/compile/validate/index.d.ts:    schema: any;
./node_modules/@nestjs/cli/node_modules/ajv/lib/vocabularies/validation/const.ts:export type ConstError = ErrorObject<"const", {allowedValue: any}>
./node_modules/@nestjs/cli/node_modules/ajv/lib/vocabularies/validation/enum.ts:export type EnumError = ErrorObject<"enum", {allowedValues: any[]}, any[] | {$data: string}>
./node_modules/@nestjs/cli/node_modules/ajv/lib/types/json-schema.ts:  [keyword: string]: any
./node_modules/@nestjs/cli/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./node_modules/@nestjs/cli/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./node_modules/@nestjs/cli/node_modules/ajv/lib/types/index.ts:  parentData: {[K in T]: any} // object or array
./node_modules/@nestjs/cli/node_modules/ajv/lib/types/index.ts:  (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T
./node_modules/@nestjs/cli/node_modules/ajv/lib/types/index.ts:  schema: any,
./node_modules/@nestjs/cli/node_modules/ajv/lib/types/index.ts:  schema: any,
./node_modules/@nestjs/cli/node_modules/ajv/lib/types/index.ts:    schema: any,
./node_modules/@nestjs/cli/node_modules/ajv/lib/types/index.ts:    data: any,
./node_modules/@nestjs/cli/node_modules/ajv/lib/types/index.ts:  schema: any // TODO
./node_modules/@nestjs/cli/node_modules/ajv/lib/core.ts:  [prop: string]: any
./node_modules/@nestjs/cli/node_modules/ajv/lib/core.ts:  cache?: any
./node_modules/@nestjs/cli/node_modules/ajv/lib/compile/validate/index.ts:  schema: any // keyword value in the schema
./node_modules/@nestjs/cli/lib/configuration/configuration.d.ts:    [key: string]: any;
./node_modules/@nestjs/cli/lib/utils/project-utils.d.ts:export declare function shouldGenerateSpec(configuration: Required<Configuration>, schematic: string, appName: string, specValue: boolean, specPassedAsInput?: boolean): any;
./node_modules/@nestjs/cli/lib/utils/remaining-flags.d.ts:export declare function getRemainingFlags(cli: CommanderStatic): any[];
./node_modules/@nestjs/cli/lib/compiler/base-compiler.d.ts:    abstract run(configuration: Required<Configuration>, tsConfigPath: string, appName: string | undefined, extras?: T, onSuccess?: () => void): any;
./node_modules/@nestjs/cli/lib/compiler/compiler.d.ts:    run(configuration: Required<Configuration>, tsConfigPath: string, appName: string | undefined, _extras: any, onSuccess?: () => void): void;
./node_modules/@nestjs/cli/commands/command.input.d.ts:    options?: any;
./node_modules/@nestjs/schematics/dist/lib/middleware/files/ts/__name__.middleware.ts:  use(req: any, res: any, next: () => void) {
./node_modules/@nestjs/schematics/dist/lib/pipe/files/ts/__name__.pipe.ts:  transform(value: any, metadata: ArgumentMetadata) {
./node_modules/@nestjs/schematics/dist/lib/client-app/angular/files/loaders/express.loader.ts:    app.get(options.renderPath, (req: any, res: any) =>
./node_modules/@nestjs/schematics/dist/lib/client-app/angular/files/loaders/fastify.loader.ts:    app.get(options.renderPath, (req: any, res: any) => {
./node_modules/@nestjs/schematics/dist/lib/client-app/angular/files/interfaces/angular-options.interface.ts:    setHeaders?: (res: any, path: string, stat: any) => any;
./node_modules/@nestjs/schematics/dist/lib/gateway/files/ts/__name__.gateway.ts:  handleMessage(client: any, payload: any): string {
./node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/src/utils/partially-ordered-set.d.ts:    forEach(callbackfn: (value: T, value2: T, set: PartiallyOrderedSet<T>) => void, thisArg?: any): void;
./node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/src/utils/lang.d.ts:export declare function isPromise(obj: any): obj is Promise<any>;
./node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/src/utils/literals.d.ts:    (template: TemplateStringsArray, ...substitutions: any[]): R;
./node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function oneLine(strings: TemplateStringsArray, ...values: any[]): string;
./node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function stripIndent(strings: TemplateStringsArray, ...values: any[]): string;
./node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function stripIndents(strings: TemplateStringsArray, ...values: any[]): string;
./node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function trimNewlines(strings: TemplateStringsArray, ...values: any[]): string;
./node_modules/@nestjs/schematics/node_modules/chokidar/esm/handler.d.ts:    _watchWithNodeFs(path: string, listener: (path: string, newStats?: any) => void | Promise<void>): (() => void) | undefined;
./node_modules/@nestjs/schematics/node_modules/chokidar/handler.d.ts:    _watchWithNodeFs(path: string, listener: (path: string, newStats?: any) => void | Promise<void>): (() => void) | undefined;
./node_modules/@nestjs/schematics/node_modules/json-schema-traverse/index.d.ts:    [x: string]: any;
./node_modules/@nestjs/schematics/node_modules/readdirp/esm/index.d.ts:    parents: any[];
./node_modules/@nestjs/schematics/node_modules/readdirp/index.d.ts:    parents: any[];
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/Subscription.d.ts:export declare function isSubscription(value: any): value is Subscription;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/operators/catchError.d.ts:export declare function catchError<T, O extends ObservableInput<any>>(selector: (err: any, caught: Observable<T>) => O): OperatorFunction<T, T | ObservedValueOf<O>>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/operators/share.d.ts:    resetOnError?: boolean | ((error: any) => ObservableInput<any>);
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/operators/every.d.ts:export declare function every<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/operators/partition.d.ts:export declare function partition<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): UnaryFunction<Observable<T>, [Observable<T>, Observable<T>]>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/operators/materialize.d.ts: * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/operators/tap.d.ts:export declare function tap<T>(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): MonoTypeOperatorFunction<T>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/operators/find.d.ts:export declare function createFind<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean, thisArg: any, emit: 'value' | 'index'): (source: Observable<T>, subscriber: Subscriber<any>) => void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/operators/OperatorSubscriber.d.ts:export declare function createOperatorSubscriber<T>(destination: Subscriber<any>, onNext?: (value: T) => void, onComplete?: () => void, onError?: (err: any) => void, onFinalize?: () => void): Subscriber<T>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/operators/OperatorSubscriber.d.ts:    constructor(destination: Subscriber<any>, onNext?: (value: T) => void, onComplete?: () => void, onError?: (err: any) => void, onFinalize?: (() => void) | undefined, shouldUnsubscribe?: (() => boolean) | undefined);
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/operators/joinAllInternals.d.ts:export declare function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R): import("../types").UnaryFunction<Observable<ObservableInput<T>>, unknown>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/operators/findIndex.d.ts:export declare function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/operators/retry.d.ts:    delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/isReadableStreamLike.d.ts:export declare function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/isPromise.d.ts:export declare function isPromise(value: any): value is PromiseLike<any>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popScheduler(args: any[]): SchedulerLike | undefined;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popNumber(args: any[], defaultValue: number): number;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/createErrorClass.d.ts:export declare function createErrorClass<T>(createImpl: (_super: any) => any): T;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/errorContext.d.ts:export declare function captureError(err: any): void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/not.d.ts:export declare function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/isFunction.d.ts:export declare function isFunction(value: any): value is (...args: any[]) => any;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/isAsyncIterable.d.ts:export declare function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/throwUnobservableError.d.ts:export declare function createInvalidObservableTypeError(input: any): TypeError;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/lift.d.ts:export declare function hasLift(source: any): source is {
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/isObservable.d.ts:export declare function isObservable(obj: any): obj is Observable<unknown>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/applyMixins.d.ts:export declare function applyMixins(derivedCtor: any, baseCtors: any[]): void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/reportUnhandledError.d.ts:export declare function reportUnhandledError(err: any): void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/isScheduler.d.ts:export declare function isScheduler(value: any): value is SchedulerLike;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/isArrayLike.d.ts:export declare const isArrayLike: <T>(x: any) => x is ArrayLike<T>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/createObject.d.ts:export declare function createObject(keys: string[], values: any[]): any;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/isIterable.d.ts:export declare function isIterable(input: any): input is Iterable<any>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/isInteropObservable.d.ts:export declare function isInteropObservable(input: any): input is InteropObservable<any>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/isDate.d.ts:export declare function isValidDate(value: any): value is Date;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/UnsubscriptionError.d.ts:    readonly errors: any[];
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/util/UnsubscriptionError.d.ts:    new (errors: any[]): UnsubscriptionError;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:    error: any;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:    error?: (err: any) => void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:    error: (err: any) => void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:    error?: (err: any) => void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:    error: (err: any) => void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:export declare type Head<X extends readonly any[]> = ((...args: X) => any) extends (arg: infer U, ...rest: any[]) => any ? U : never;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:export declare type Tail<X extends readonly any[]> = ((...args: X) => any) extends (arg: any, ...rest: infer U) => any ? U : never;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/config.d.ts:    onUnhandledError: ((err: any) => void) | null;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay?: number): TimerHandle;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay?: number): TimerHandle | undefined;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected _execute(state: T, delay: number): any;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/scheduler/QueueAction.d.ts:    execute(state: T, delay: number): any;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/scheduler/immediateProvider.d.ts:declare type SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/scheduler/intervalProvider.d.ts:declare type SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/scheduler/AsyncAction.d.ts:    execute(state: T, delay: number): any;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/scheduler/AsyncAction.d.ts:    protected _execute(state: T, _delay: number): any;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/scheduler/timeoutProvider.d.ts:declare type SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:export declare type observableToBeFn = (marbles: string, values?: any, errorValue?: any) => void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    assertDeepEqual: (actual: any, expected: any) => boolean | void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    constructor(assertDeepEqual: (actual: any, expected: any) => boolean | void);
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    }, error?: any): ColdObservable<T>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    }, error?: any): HotObservable<T>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:        toBe(marbles: string, values?: any, errorValue?: any): void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    static parseMarbles(marbles: string, values?: any, errorValue?: any, materializeInnerObservables?: boolean, runMode?: boolean): TestMessage[];
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/Operator.d.ts:    call(subscriber: Subscriber<R>, source: any): TeardownLogic;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    readonly error?: any;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    constructor(kind: 'E', value: undefined, error: any);
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    do(next: (value: T) => void, error: (err: any) => void): void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    accept(next: (value: T) => void, error: (err: any) => void): void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    static createError(err?: any): Notification<never> & ErrorNotification;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/observable/pairs.d.ts:export declare function pairs(n: number | bigint | boolean | ((...args: any[]) => any) | symbol, scheduler?: SchedulerLike): Observable<[never, never]>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/observable/bindCallback.d.ts:export declare function bindCallback(callbackFunc: (...args: any[]) => void, resultSelector: (...args: any[]) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/observable/bindCallbackInternals.d.ts:export declare function bindCallbackInternals(isNodeStyle: boolean, callbackFunc: any, resultSelector?: any, scheduler?: SchedulerLike): (...args: any[]) => Observable<unknown>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/observable/combineLatest.d.ts:export declare function combineLatestInit(observables: ObservableInput<any>[], scheduler?: SchedulerLike, valueTransform?: (values: any[]) => any): (subscriber: Subscriber<any>) => void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/observable/fromEventPattern.d.ts:export declare function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void): Observable<T>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/observable/fromEventPattern.d.ts:export declare function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare type NodeEventHandler = (...args: any[]) => void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:    on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:    off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<R>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string, resultSelector: (...args: any[]) => R): Observable<R>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<R>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string, resultSelector: (...args: any[]) => R): Observable<R>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<T, R>(target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>, eventName: string, resultSelector: (value: T, ...args: any[]) => R): Observable<R>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts: *   const error: any = new Error(`This is error number ${ ++errorCount }`);
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts:export declare function throwError(error: any): Observable<never>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts:export declare function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/observable/innerFrom.d.ts:export declare function fromInteropObservable<T>(obj: any): Observable<T>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/observable/bindNodeCallback.d.ts:export declare function bindNodeCallback(callbackFunc: (...args: any[]) => void, resultSelector: (...args: any[]) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/observable/bindNodeCallback.d.ts:export declare function bindNodeCallback<A extends readonly unknown[], R extends readonly unknown[]>(callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void, schedulerLike?: SchedulerLike): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/Observable.d.ts:    static create: (...args: any[]) => any;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/Observable.d.ts:    subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/Subject.d.ts:    thrownError: any;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/Subject.d.ts:    static create: (...args: any[]) => any;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/Subject.d.ts:    error(err: any): void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/Subject.d.ts:    error(err: any): void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    error(err?: any): void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    protected _error(err: any): void;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    constructor(observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null, error?: ((e?: any) => void) | null, complete?: (() => void) | null);
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/ajax/errors.d.ts:    response: any;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    post<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    put<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    patch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/ajax/types.d.ts:    body?: any;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/ajax/types.d.ts:    body?: any;
./node_modules/@nestjs/schematics/node_modules/rxjs/dist/types/internal/ajax/getXHRResponse.d.ts:export declare function getXHRResponse(xhr: XMLHttpRequest): any;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/catchError.ts:  selector: (err: any, caught: Observable<T>) => O
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/catchError.ts:  selector: (err: any, caught: Observable<T>) => O
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/groupBy.ts:  elementOrOptions?: ((value: any) => any) | void | BasicGroupByOptions<K, T> | GroupByOptionsWithElement<K, R, T>,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/groupBy.ts:    let element: ((value: any) => any) | void;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/groupBy.ts:      element = elementOrOptions as ((value: any) => any);
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/groupBy.ts:    const handleError = (err: any) => notify((consumer) => consumer.error(err));
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/groupBy.ts:      const result: any = new Observable<T>((groupSubscriber) => {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/joinAllInternals.ts:export function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/scanInternals.ts:    let state: any = seed;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/find.ts:  thisArg?: any
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/find.ts:  thisArg: any,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/filter.ts:export function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/windowTime.ts:export function windowTime<T>(windowTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, Observable<T>> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/share.ts:  resetOnError?: boolean | ((error: any) => ObservableInput<any>);
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/tap.ts:  error?: ((error: any) => void) | null,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/tap.ts:  error?: ((e: any) => void) | null,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/materialize.ts: * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/retry.ts:  delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/exhaustMap.ts:      source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b: any, ii: any) => resultSelector(a, b, i, ii)))));
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/map.ts:export function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/findIndex.ts:export function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/findIndex.ts:  thisArg?: any
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/every.ts:  thisArg: any
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/every.ts:  thisArg?: any
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/windowWhen.ts:    const handleError = (err: any) => {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/pluck.ts:    let currentProp: any = x;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/bufferTime.ts:export function bufferTime<T>(bufferTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, T[]> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/timeout.ts:    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/combineLatest.ts:export function combineLatest<T, R>(...args: (ObservableInput<any> | ((...values: any[]) => R))[]): OperatorFunction<T, unknown> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/windowToggle.ts:    const handleError = (err: any) => {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/race.ts:export function race<T>(...args: any[]): OperatorFunction<T, unknown> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:  onError?: (err: any) => void,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:    onError?: (err: any) => void,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:      ? function (this: OperatorSubscriber<T>, err: any) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/concat.ts:export function concat<T, R>(...args: any[]): OperatorFunction<T, R> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/reduce.ts:export function reduce<V, A>(accumulator: (acc: V | A, value: V, index: number) => A, seed?: any): OperatorFunction<V, V | A> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/window.ts:    const errorHandler = (err: any) => {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/mergeMap.ts:    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/partition.ts:  thisArg?: any
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/toArray.ts:const arrReducer = (arr: any[], value: any) => (arr.push(value), arr);
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/withLatestFrom.ts:export function withLatestFrom<T, R>(...inputs: any[]): OperatorFunction<T, R | any[]> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/withLatestFrom.ts:  const project = popResultSelector(inputs) as ((...args: any[]) => R) | undefined;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/operators/distinctUntilChanged.ts:function defaultCompare(a: any, b: any) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/EmptyError.ts:export const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/pipe.ts:    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/reportUnhandledError.ts:export function reportUnhandledError(err: any) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/isFunction.ts:export function isFunction(value: any): value is (...args: any[]) => any {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/isInteropObservable.ts:export function isInteropObservable(input: any): input is InteropObservable<any> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/isPromise.ts:export function isPromise(value: any): value is PromiseLike<any> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/isDate.ts:export function isValidDate(value: any): value is Date {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/isAsyncIterable.ts:export function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/args.ts:export function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/args.ts:export function popScheduler(args: any[]): SchedulerLike | undefined {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/args.ts:export function popNumber(args: any[], defaultValue: number): number {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/isReadableStreamLike.ts:export function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/throwUnobservableError.ts:export function createInvalidObservableTypeError(input: any) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/SequenceError.ts:    function SequenceErrorImpl(this: any, message: string) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/createErrorClass.ts:export function createErrorClass<T>(createImpl: (_super: any) => any): T {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/createErrorClass.ts:  const _super = (instance: any) => {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/not.ts:export function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/isArrayLike.ts:export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:  readonly errors: any[];
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:  new (errors: any[]): UnsubscriptionError;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/isScheduler.ts:export function isScheduler(value: any): value is SchedulerLike {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/errorContext.ts:let context: { errorThrown: boolean; error: any } | null = null;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/errorContext.ts:export function captureError(err: any) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts:    function ObjectUnsubscribedErrorImpl(this: any) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/Immediate.ts:const activeHandles: { [key: number]: any } = {};
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/applyMixins.ts:export function applyMixins(derivedCtor: any, baseCtors: any[]) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/lift.ts:export function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/createObject.ts:export function createObject(keys: string[], values: any[]) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/argsArgArrayOrObject.ts:function isPOJO(obj: any): obj is object {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts:    function ArgumentOutOfRangeErrorImpl(this: any) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/isIterable.ts:export function isIterable(input: any): input is Iterable<any> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/NotFoundError.ts:    function NotFoundErrorImpl(this: any, message: string) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/util/isObservable.ts:export function isObservable(obj: any): obj is Observable<unknown> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts:type SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:  public execute(state: T, delay: number): any {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:  protected _execute(state: T, _delay: number): any {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:    let errorValue: any;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts:    let error: any;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:    let error: any;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected _execute(state: T, delay: number): any {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts:    let error: any;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts:    let error: any;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/scheduler/QueueAction.ts:  public execute(state: T, delay: number): any {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/scheduler/intervalProvider.ts:type SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/scheduler/immediateProvider.ts:type SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  actual?: any[];
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  expected?: any[];
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:export type observableToBeFn = (marbles: string, values?: any, errorValue?: any) => void;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  constructor(public assertDeepEqual: (actual: any, expected: any) => boolean | void) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  createColdObservable<T = string>(marbles: string, values?: { [marble: string]: T }, error?: any): ColdObservable<T> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  createHotObservable<T = string>(marbles: string, values?: { [marble: string]: T }, error?: any): HotObservable<T> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:      toBe(marbles: string, values?: any, errorValue?: any) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:    values?: any,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:    errorValue?: any,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:        ? (x: any) => x
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:        : (x: any) => {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/types.ts:  error: any;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/types.ts:  error?: (err: any) => void;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/types.ts:  error: (err: any) => void;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/types.ts:  error?: (err: any) => void;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/types.ts:  error: (err: any) => void;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/types.ts:export type Head<X extends readonly any[]> = ((...args: X) => any) extends (arg: infer U, ...rest: any[]) => any ? U : never;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/types.ts:export type Tail<X extends readonly any[]> = ((...args: X) => any) extends (arg: any, ...rest: infer U) => any ? U : never;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Operator.ts:  call(subscriber: Subscriber<R>, source: any): TeardownLogic;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Subscriber.ts:  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Subscriber.ts:  error(err?: any): void {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Subscriber.ts:  protected _error(err: any): void {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Subscriber.ts:function bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Subscriber.ts:  error(err: any): void {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Subscriber.ts:    error?: ((e?: any) => void) | null,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Subscriber.ts:      let context: any;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Subscriber.ts:function handleUnhandledError(error: any) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Subscriber.ts:function defaultErrorHandler(err: any) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Observable.ts:  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Observable.ts:  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Observable.ts:    error?: ((error: any) => void) | null,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Observable.ts:        (err: any) => reject(err),
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Observable.ts:function isObserver<T>(value: any): value is Observer<T> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Observable.ts:function isSubscriber<T>(value: any): value is Subscriber<T> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Notification.ts:  constructor(kind: 'E', value: undefined, error: any);
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Notification.ts:  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Notification.ts:  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Notification.ts:  do(next: (value: T) => void, error: (err: any) => void): void;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Notification.ts:  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Notification.ts:  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Notification.ts:  accept(next: (value: T) => void, error: (err: any) => void): void;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Notification.ts:  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Notification.ts:  static createError(err?: any) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Subject.ts:  thrownError: any = null;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Subject.ts:  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Subject.ts:  error(err: any) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Subject.ts:    const observable: any = new Observable<T>();
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Subject.ts:  error(err: any) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/NotificationFactories.ts:export function errorNotification(error: any): ErrorNotification {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/NotificationFactories.ts:export function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/connectable.ts:  const result: any = new Observable<T>((subscriber) => {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: any[]) => void,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  resultSelector: (...args: any[]) => any,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:): (...args: any[]) => Observable<any>;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: [...any[], (err: any, ...res: any) => void]) => void,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  resultSelector?: ((...args: any[]) => any) | SchedulerLike,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:): (...args: any[]) => Observable<any> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/throwError.ts: *   const error: any = new Error(`This is error number ${ ++errorCount }`);
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(error: any): Observable<never>;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  resultSelector?: (...args: any[]) => T
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(handler: Function): any} addHandler A function that takes
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(handler: Function, token?: any): void} [removeHandler] A function that
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(...args: any): T} [project] A function to
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  resultSelector?: (...args: any[]) => T
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:export type NodeEventHandler = (...args: any[]) => void;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (...args: any[]) => R
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (...args: any[]) => R
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (value: T, ...args: any[]) => R
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  target: any,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  options?: EventListenerOptions | ((...args: any[]) => T),
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector?: (...args: any[]) => T
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:function toCommonHandlerRegistry(target: any, eventName: string) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isEventTarget(target: any): target is HasEventTargetAddRemove<any> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/zip.ts:                  const result: any = buffers.map((buffer) => buffer.shift()!);
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/innerFrom.ts:export function fromInteropObservable<T>(obj: any) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/innerFrom.ts:        (err: any) => subscriber.error(err)
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/forkJoin.ts:export function forkJoin(...args: any[]): Observable<any> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:  callbackFunc: (...args: any[]) => void,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:  resultSelector: (...args: any[]) => any,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:): (...args: any[]) => Observable<any>;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:  callbackFunc: (...args: [...any[], (...res: any) => void]) => void,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:  resultSelector?: ((...args: any[]) => any) | SchedulerLike,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:): (...args: any[]) => Observable<unknown> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/combineLatest.ts:export function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/combineLatest.ts:  valueTransform: (values: any[]) => any = identity
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/pairs.ts:  n: number | bigint | boolean | ((...args: any[]) => any) | symbol,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/pairs.ts:export function pairs(obj: any, scheduler?: SchedulerLike) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/dom/WebSocketSubject.ts:  serializer: (value: any) => JSON.stringify(value),
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/dom/fetch.ts:    const handleError = (err: any) => {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  callbackFunc: any,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  resultSelector?: any,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:): (...args: any[]) => Observable<unknown> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:      return function (this: any, ...args: any[]) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:    return function (this: any, ...args: any[]) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  return function (this: any, ...args: any[]): Observable<any> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:            (...results: any[]) => {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/concat.ts:export function concat(...args: any[]): Observable<unknown> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/partition.ts:  predicate: (this: any, value: T, index: number) => boolean,
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/observable/partition.ts:  thisArg?: any
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Subscription.ts:    let errors: any[] | undefined;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/Subscription.ts:export function isSubscription(value: any): value is Subscription {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/config.ts:  onUnhandledError: ((err: any) => void) | null;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:  post<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:  put<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:  patch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPost<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPut<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPatch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:      const addProgressEvent = (target: any, type: string, direction: AjaxDirection) => {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:        [LOADSTART, PROGRESS].forEach((type) => xhr.upload.addEventListener(type, (e: any) => progressSubscriber?.next?.(e)));
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function extractContentTypeAndMaybeSerializeBody(body: any, headers: Record<string, string>) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function toStringCheck(obj: any, name: string): boolean {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isArrayBuffer(body: any): body is ArrayBuffer {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isFile(body: any): body is File {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isBlob(body: any): body is Blob {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isArrayBufferView(body: any): body is ArrayBufferView {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isFormData(body: any): body is FormData {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isURLSearchParams(body: any): body is URLSearchParams {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isReadableStream(body: any): body is ReadableStream {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/errors.ts:  response: any;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/errors.ts:    function AjaxErrorImpl(this: any, message: string, xhr: XMLHttpRequest, request: AjaxRequest) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/errors.ts:      let response: any;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/errors.ts:  function AjaxTimeoutErrorImpl(this: any, xhr: XMLHttpRequest, request: AjaxRequest) {
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/getXHRResponse.ts:        const ieXHR: any = xhr;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/getXHRResponse.ts:        const ieXHR: any = xhr;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/types.ts:  body?: any;
./node_modules/@nestjs/schematics/node_modules/rxjs/src/internal/ajax/types.ts:  body?: any;
./node_modules/@nestjs/schematics/node_modules/source-map/source-map.d.ts:    eachMapping(callback: (mapping: MappingItem) => void, context?: any, order?: number): void;
./node_modules/@nestjs/schematics/node_modules/source-map/source-map.d.ts:    sourceContents: any;
./node_modules/@nestjs/schematics/node_modules/ajv/dist/vocabularies/validation/const.d.ts:    allowedValue: any;
./node_modules/@nestjs/schematics/node_modules/ajv/dist/vocabularies/validation/enum.d.ts:    allowedValues: any[];
./node_modules/@nestjs/schematics/node_modules/ajv/dist/types/json-schema.d.ts:    [keyword: string]: any;
./node_modules/@nestjs/schematics/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./node_modules/@nestjs/schematics/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./node_modules/@nestjs/schematics/node_modules/ajv/dist/types/index.d.ts:        [K in T]: any;
./node_modules/@nestjs/schematics/node_modules/ajv/dist/types/index.d.ts:    (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T;
./node_modules/@nestjs/schematics/node_modules/ajv/dist/types/index.d.ts:export type MacroKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaCxt) => AnySchema;
./node_modules/@nestjs/schematics/node_modules/ajv/dist/types/index.d.ts:export type CompileKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaObjCxt) => DataValidateFunction;
./node_modules/@nestjs/schematics/node_modules/ajv/dist/types/index.d.ts:    (schema: any, data: any, parentSchema?: AnySchemaObject, dataCxt?: DataValidationCxt): boolean | Promise<any>;
./node_modules/@nestjs/schematics/node_modules/ajv/dist/types/index.d.ts:    schema: any;
./node_modules/@nestjs/schematics/node_modules/ajv/dist/core.d.ts:    [prop: string]: any;
./node_modules/@nestjs/schematics/node_modules/ajv/dist/compile/validate/index.d.ts:    schema: any;
./node_modules/@nestjs/schematics/node_modules/ajv/lib/vocabularies/validation/const.ts:export type ConstError = ErrorObject<"const", {allowedValue: any}>
./node_modules/@nestjs/schematics/node_modules/ajv/lib/vocabularies/validation/enum.ts:export type EnumError = ErrorObject<"enum", {allowedValues: any[]}, any[] | {$data: string}>
./node_modules/@nestjs/schematics/node_modules/ajv/lib/types/json-schema.ts:  [keyword: string]: any
./node_modules/@nestjs/schematics/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./node_modules/@nestjs/schematics/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./node_modules/@nestjs/schematics/node_modules/ajv/lib/types/index.ts:  parentData: {[K in T]: any} // object or array
./node_modules/@nestjs/schematics/node_modules/ajv/lib/types/index.ts:  (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T
./node_modules/@nestjs/schematics/node_modules/ajv/lib/types/index.ts:  schema: any,
./node_modules/@nestjs/schematics/node_modules/ajv/lib/types/index.ts:  schema: any,
./node_modules/@nestjs/schematics/node_modules/ajv/lib/types/index.ts:    schema: any,
./node_modules/@nestjs/schematics/node_modules/ajv/lib/types/index.ts:    data: any,
./node_modules/@nestjs/schematics/node_modules/ajv/lib/types/index.ts:  schema: any // TODO
./node_modules/@nestjs/schematics/node_modules/ajv/lib/core.ts:  [prop: string]: any
./node_modules/@nestjs/schematics/node_modules/ajv/lib/core.ts:  cache?: any
./node_modules/@nestjs/schematics/node_modules/ajv/lib/compile/validate/index.ts:  schema: any // keyword value in the schema
./node_modules/stylus-lookup/node_modules/commander/typings/index.d.ts:  defaultValue?: any;
./node_modules/stylus-lookup/node_modules/commander/typings/index.d.ts:  defaultValue?: any;
./node_modules/stylus-lookup/node_modules/commander/typings/index.d.ts:  processedArgs: any[];
./node_modules/stylus-lookup/node_modules/commander/typings/index.d.ts:  action(fn: (...args: any[]) => void | Promise<void>): this;
./node_modules/stylus-lookup/node_modules/commander/typings/index.d.ts:  getOptionValue(key: string): any;
./node_modules/stylus-lookup/node_modules/commander/typings/index.d.ts:  on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/ast-types/main.d.ts:    (a: any, b: any, problemPath?: any): boolean;
./node_modules/ast-types/main.d.ts:    assert(a: any, b: any): void;
./node_modules/ast-types/main.d.ts:        [key: string]: any;
./node_modules/ast-types/main.d.ts:}, defineMethod: (name: any, func?: Function | undefined) => Function, eachField: (object: any, callback: (name: any, value: any) => any, context?: any) => void, finalize: () => void, getBuilderName: (typeName: any) => any, getFieldNames: (object: any) => string[], getFieldValue: (object: any, fieldName: any) => any, getSupertypeNames: (typeName: string) => string[], NodePath: import("./lib/node-path").NodePathConstructor, Path: import("./lib/path").PathConstructor, PathVisitor: import("./lib/path-visitor").PathVisitorConstructor, someField: (object: any, callback: (name: any, value: any) => any, context?: any) => boolean, Type: {
./node_modules/ast-types/main.d.ts:    or(...types: any[]): Type<any>;
./node_modules/ast-types/main.d.ts:    from<T>(value: any, name?: string | undefined): Type<T>;
./node_modules/ast-types/gen/builders.d.ts:    [builderName: string]: any;
./node_modules/ast-types/gen/visitor.d.ts:    visitPrintable?(this: Context & M, path: NodePath<namedTypes.Printable>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitSourceLocation?(this: Context & M, path: NodePath<namedTypes.SourceLocation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitNode?(this: Context & M, path: NodePath<namedTypes.Node>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitComment?(this: Context & M, path: NodePath<namedTypes.Comment>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitPosition?(this: Context & M, path: NodePath<namedTypes.Position>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitFile?(this: Context & M, path: NodePath<namedTypes.File>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitProgram?(this: Context & M, path: NodePath<namedTypes.Program>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitStatement?(this: Context & M, path: NodePath<namedTypes.Statement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitFunction?(this: Context & M, path: NodePath<namedTypes.Function>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitExpression?(this: Context & M, path: NodePath<namedTypes.Expression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitPattern?(this: Context & M, path: NodePath<namedTypes.Pattern>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitIdentifier?(this: Context & M, path: NodePath<namedTypes.Identifier>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitBlockStatement?(this: Context & M, path: NodePath<namedTypes.BlockStatement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitEmptyStatement?(this: Context & M, path: NodePath<namedTypes.EmptyStatement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitExpressionStatement?(this: Context & M, path: NodePath<namedTypes.ExpressionStatement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitIfStatement?(this: Context & M, path: NodePath<namedTypes.IfStatement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitLabeledStatement?(this: Context & M, path: NodePath<namedTypes.LabeledStatement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitBreakStatement?(this: Context & M, path: NodePath<namedTypes.BreakStatement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitContinueStatement?(this: Context & M, path: NodePath<namedTypes.ContinueStatement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitWithStatement?(this: Context & M, path: NodePath<namedTypes.WithStatement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitSwitchStatement?(this: Context & M, path: NodePath<namedTypes.SwitchStatement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitSwitchCase?(this: Context & M, path: NodePath<namedTypes.SwitchCase>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitReturnStatement?(this: Context & M, path: NodePath<namedTypes.ReturnStatement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitThrowStatement?(this: Context & M, path: NodePath<namedTypes.ThrowStatement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTryStatement?(this: Context & M, path: NodePath<namedTypes.TryStatement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitCatchClause?(this: Context & M, path: NodePath<namedTypes.CatchClause>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitWhileStatement?(this: Context & M, path: NodePath<namedTypes.WhileStatement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitDoWhileStatement?(this: Context & M, path: NodePath<namedTypes.DoWhileStatement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitForStatement?(this: Context & M, path: NodePath<namedTypes.ForStatement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitDeclaration?(this: Context & M, path: NodePath<namedTypes.Declaration>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitVariableDeclaration?(this: Context & M, path: NodePath<namedTypes.VariableDeclaration>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitForInStatement?(this: Context & M, path: NodePath<namedTypes.ForInStatement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitDebuggerStatement?(this: Context & M, path: NodePath<namedTypes.DebuggerStatement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitFunctionDeclaration?(this: Context & M, path: NodePath<namedTypes.FunctionDeclaration>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitFunctionExpression?(this: Context & M, path: NodePath<namedTypes.FunctionExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitVariableDeclarator?(this: Context & M, path: NodePath<namedTypes.VariableDeclarator>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitThisExpression?(this: Context & M, path: NodePath<namedTypes.ThisExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitArrayExpression?(this: Context & M, path: NodePath<namedTypes.ArrayExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitObjectExpression?(this: Context & M, path: NodePath<namedTypes.ObjectExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitProperty?(this: Context & M, path: NodePath<namedTypes.Property>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitLiteral?(this: Context & M, path: NodePath<namedTypes.Literal>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitSequenceExpression?(this: Context & M, path: NodePath<namedTypes.SequenceExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitUnaryExpression?(this: Context & M, path: NodePath<namedTypes.UnaryExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitBinaryExpression?(this: Context & M, path: NodePath<namedTypes.BinaryExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitAssignmentExpression?(this: Context & M, path: NodePath<namedTypes.AssignmentExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitMemberExpression?(this: Context & M, path: NodePath<namedTypes.MemberExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitUpdateExpression?(this: Context & M, path: NodePath<namedTypes.UpdateExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitLogicalExpression?(this: Context & M, path: NodePath<namedTypes.LogicalExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitConditionalExpression?(this: Context & M, path: NodePath<namedTypes.ConditionalExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitNewExpression?(this: Context & M, path: NodePath<namedTypes.NewExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitCallExpression?(this: Context & M, path: NodePath<namedTypes.CallExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitRestElement?(this: Context & M, path: NodePath<namedTypes.RestElement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.TypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.TSTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitSpreadElementPattern?(this: Context & M, path: NodePath<namedTypes.SpreadElementPattern>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitArrowFunctionExpression?(this: Context & M, path: NodePath<namedTypes.ArrowFunctionExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitForOfStatement?(this: Context & M, path: NodePath<namedTypes.ForOfStatement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitYieldExpression?(this: Context & M, path: NodePath<namedTypes.YieldExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitGeneratorExpression?(this: Context & M, path: NodePath<namedTypes.GeneratorExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitComprehensionBlock?(this: Context & M, path: NodePath<namedTypes.ComprehensionBlock>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitComprehensionExpression?(this: Context & M, path: NodePath<namedTypes.ComprehensionExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitObjectProperty?(this: Context & M, path: NodePath<namedTypes.ObjectProperty>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitPropertyPattern?(this: Context & M, path: NodePath<namedTypes.PropertyPattern>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitObjectPattern?(this: Context & M, path: NodePath<namedTypes.ObjectPattern>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitArrayPattern?(this: Context & M, path: NodePath<namedTypes.ArrayPattern>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitMethodDefinition?(this: Context & M, path: NodePath<namedTypes.MethodDefinition>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitSpreadElement?(this: Context & M, path: NodePath<namedTypes.SpreadElement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitAssignmentPattern?(this: Context & M, path: NodePath<namedTypes.AssignmentPattern>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitClassPropertyDefinition?(this: Context & M, path: NodePath<namedTypes.ClassPropertyDefinition>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitClassProperty?(this: Context & M, path: NodePath<namedTypes.ClassProperty>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitClassBody?(this: Context & M, path: NodePath<namedTypes.ClassBody>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitClassDeclaration?(this: Context & M, path: NodePath<namedTypes.ClassDeclaration>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitClassExpression?(this: Context & M, path: NodePath<namedTypes.ClassExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitSpecifier?(this: Context & M, path: NodePath<namedTypes.Specifier>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitModuleSpecifier?(this: Context & M, path: NodePath<namedTypes.ModuleSpecifier>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitImportSpecifier?(this: Context & M, path: NodePath<namedTypes.ImportSpecifier>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitImportNamespaceSpecifier?(this: Context & M, path: NodePath<namedTypes.ImportNamespaceSpecifier>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitImportDefaultSpecifier?(this: Context & M, path: NodePath<namedTypes.ImportDefaultSpecifier>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitImportDeclaration?(this: Context & M, path: NodePath<namedTypes.ImportDeclaration>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTaggedTemplateExpression?(this: Context & M, path: NodePath<namedTypes.TaggedTemplateExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTemplateLiteral?(this: Context & M, path: NodePath<namedTypes.TemplateLiteral>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTemplateElement?(this: Context & M, path: NodePath<namedTypes.TemplateElement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitSpreadProperty?(this: Context & M, path: NodePath<namedTypes.SpreadProperty>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitSpreadPropertyPattern?(this: Context & M, path: NodePath<namedTypes.SpreadPropertyPattern>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitAwaitExpression?(this: Context & M, path: NodePath<namedTypes.AwaitExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitImportExpression?(this: Context & M, path: NodePath<namedTypes.ImportExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitJSXAttribute?(this: Context & M, path: NodePath<namedTypes.JSXAttribute>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitJSXIdentifier?(this: Context & M, path: NodePath<namedTypes.JSXIdentifier>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitJSXNamespacedName?(this: Context & M, path: NodePath<namedTypes.JSXNamespacedName>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitJSXExpressionContainer?(this: Context & M, path: NodePath<namedTypes.JSXExpressionContainer>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitJSXMemberExpression?(this: Context & M, path: NodePath<namedTypes.JSXMemberExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitJSXSpreadAttribute?(this: Context & M, path: NodePath<namedTypes.JSXSpreadAttribute>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitJSXElement?(this: Context & M, path: NodePath<namedTypes.JSXElement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitJSXOpeningElement?(this: Context & M, path: NodePath<namedTypes.JSXOpeningElement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitJSXClosingElement?(this: Context & M, path: NodePath<namedTypes.JSXClosingElement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitJSXFragment?(this: Context & M, path: NodePath<namedTypes.JSXFragment>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitJSXText?(this: Context & M, path: NodePath<namedTypes.JSXText>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitJSXOpeningFragment?(this: Context & M, path: NodePath<namedTypes.JSXOpeningFragment>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitJSXClosingFragment?(this: Context & M, path: NodePath<namedTypes.JSXClosingFragment>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitJSXEmptyExpression?(this: Context & M, path: NodePath<namedTypes.JSXEmptyExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitJSXSpreadChild?(this: Context & M, path: NodePath<namedTypes.JSXSpreadChild>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTypeParameterDeclaration?(this: Context & M, path: NodePath<namedTypes.TypeParameterDeclaration>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSTypeParameterDeclaration?(this: Context & M, path: NodePath<namedTypes.TSTypeParameterDeclaration>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTypeParameterInstantiation?(this: Context & M, path: NodePath<namedTypes.TypeParameterInstantiation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSTypeParameterInstantiation?(this: Context & M, path: NodePath<namedTypes.TSTypeParameterInstantiation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitClassImplements?(this: Context & M, path: NodePath<namedTypes.ClassImplements>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSType?(this: Context & M, path: NodePath<namedTypes.TSType>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSHasOptionalTypeParameterInstantiation?(this: Context & M, path: NodePath<namedTypes.TSHasOptionalTypeParameterInstantiation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSExpressionWithTypeArguments?(this: Context & M, path: NodePath<namedTypes.TSExpressionWithTypeArguments>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitFlow?(this: Context & M, path: NodePath<namedTypes.Flow>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitFlowType?(this: Context & M, path: NodePath<namedTypes.FlowType>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitAnyTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.AnyTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitEmptyTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.EmptyTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitMixedTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.MixedTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitVoidTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.VoidTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitNumberTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.NumberTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitNumberLiteralTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.NumberLiteralTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitNumericLiteralTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.NumericLiteralTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitStringTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.StringTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitStringLiteralTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.StringLiteralTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitBooleanTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.BooleanTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitBooleanLiteralTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.BooleanLiteralTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitNullableTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.NullableTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitNullLiteralTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.NullLiteralTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitNullTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.NullTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitThisTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.ThisTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitExistsTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.ExistsTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitExistentialTypeParam?(this: Context & M, path: NodePath<namedTypes.ExistentialTypeParam>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitFunctionTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.FunctionTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitFunctionTypeParam?(this: Context & M, path: NodePath<namedTypes.FunctionTypeParam>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitArrayTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.ArrayTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitObjectTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.ObjectTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitObjectTypeProperty?(this: Context & M, path: NodePath<namedTypes.ObjectTypeProperty>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitObjectTypeSpreadProperty?(this: Context & M, path: NodePath<namedTypes.ObjectTypeSpreadProperty>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitObjectTypeIndexer?(this: Context & M, path: NodePath<namedTypes.ObjectTypeIndexer>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitObjectTypeCallProperty?(this: Context & M, path: NodePath<namedTypes.ObjectTypeCallProperty>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitObjectTypeInternalSlot?(this: Context & M, path: NodePath<namedTypes.ObjectTypeInternalSlot>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitVariance?(this: Context & M, path: NodePath<namedTypes.Variance>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitQualifiedTypeIdentifier?(this: Context & M, path: NodePath<namedTypes.QualifiedTypeIdentifier>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitGenericTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.GenericTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitMemberTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.MemberTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitUnionTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.UnionTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitIntersectionTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.IntersectionTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTypeofTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.TypeofTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTypeParameter?(this: Context & M, path: NodePath<namedTypes.TypeParameter>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitInterfaceTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.InterfaceTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitInterfaceExtends?(this: Context & M, path: NodePath<namedTypes.InterfaceExtends>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitInterfaceDeclaration?(this: Context & M, path: NodePath<namedTypes.InterfaceDeclaration>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitDeclareInterface?(this: Context & M, path: NodePath<namedTypes.DeclareInterface>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTypeAlias?(this: Context & M, path: NodePath<namedTypes.TypeAlias>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitOpaqueType?(this: Context & M, path: NodePath<namedTypes.OpaqueType>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitDeclareTypeAlias?(this: Context & M, path: NodePath<namedTypes.DeclareTypeAlias>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitDeclareOpaqueType?(this: Context & M, path: NodePath<namedTypes.DeclareOpaqueType>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTypeCastExpression?(this: Context & M, path: NodePath<namedTypes.TypeCastExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTupleTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.TupleTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitDeclareVariable?(this: Context & M, path: NodePath<namedTypes.DeclareVariable>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitDeclareFunction?(this: Context & M, path: NodePath<namedTypes.DeclareFunction>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitDeclareClass?(this: Context & M, path: NodePath<namedTypes.DeclareClass>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitDeclareModule?(this: Context & M, path: NodePath<namedTypes.DeclareModule>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitDeclareModuleExports?(this: Context & M, path: NodePath<namedTypes.DeclareModuleExports>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitDeclareExportDeclaration?(this: Context & M, path: NodePath<namedTypes.DeclareExportDeclaration>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitExportSpecifier?(this: Context & M, path: NodePath<namedTypes.ExportSpecifier>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitExportBatchSpecifier?(this: Context & M, path: NodePath<namedTypes.ExportBatchSpecifier>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitDeclareExportAllDeclaration?(this: Context & M, path: NodePath<namedTypes.DeclareExportAllDeclaration>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitFlowPredicate?(this: Context & M, path: NodePath<namedTypes.FlowPredicate>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitInferredPredicate?(this: Context & M, path: NodePath<namedTypes.InferredPredicate>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitDeclaredPredicate?(this: Context & M, path: NodePath<namedTypes.DeclaredPredicate>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitExportDeclaration?(this: Context & M, path: NodePath<namedTypes.ExportDeclaration>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitBlock?(this: Context & M, path: NodePath<namedTypes.Block>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitLine?(this: Context & M, path: NodePath<namedTypes.Line>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitNoop?(this: Context & M, path: NodePath<namedTypes.Noop>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitDoExpression?(this: Context & M, path: NodePath<namedTypes.DoExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitSuper?(this: Context & M, path: NodePath<namedTypes.Super>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitBindExpression?(this: Context & M, path: NodePath<namedTypes.BindExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitDecorator?(this: Context & M, path: NodePath<namedTypes.Decorator>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitMetaProperty?(this: Context & M, path: NodePath<namedTypes.MetaProperty>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitParenthesizedExpression?(this: Context & M, path: NodePath<namedTypes.ParenthesizedExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitExportDefaultDeclaration?(this: Context & M, path: NodePath<namedTypes.ExportDefaultDeclaration>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitExportNamedDeclaration?(this: Context & M, path: NodePath<namedTypes.ExportNamedDeclaration>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitExportNamespaceSpecifier?(this: Context & M, path: NodePath<namedTypes.ExportNamespaceSpecifier>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitExportDefaultSpecifier?(this: Context & M, path: NodePath<namedTypes.ExportDefaultSpecifier>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitExportAllDeclaration?(this: Context & M, path: NodePath<namedTypes.ExportAllDeclaration>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitCommentBlock?(this: Context & M, path: NodePath<namedTypes.CommentBlock>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitCommentLine?(this: Context & M, path: NodePath<namedTypes.CommentLine>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitDirective?(this: Context & M, path: NodePath<namedTypes.Directive>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitDirectiveLiteral?(this: Context & M, path: NodePath<namedTypes.DirectiveLiteral>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitInterpreterDirective?(this: Context & M, path: NodePath<namedTypes.InterpreterDirective>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitStringLiteral?(this: Context & M, path: NodePath<namedTypes.StringLiteral>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitNumericLiteral?(this: Context & M, path: NodePath<namedTypes.NumericLiteral>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitBigIntLiteral?(this: Context & M, path: NodePath<namedTypes.BigIntLiteral>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitNullLiteral?(this: Context & M, path: NodePath<namedTypes.NullLiteral>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitBooleanLiteral?(this: Context & M, path: NodePath<namedTypes.BooleanLiteral>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitRegExpLiteral?(this: Context & M, path: NodePath<namedTypes.RegExpLiteral>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitObjectMethod?(this: Context & M, path: NodePath<namedTypes.ObjectMethod>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitClassPrivateProperty?(this: Context & M, path: NodePath<namedTypes.ClassPrivateProperty>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitClassMethod?(this: Context & M, path: NodePath<namedTypes.ClassMethod>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitClassPrivateMethod?(this: Context & M, path: NodePath<namedTypes.ClassPrivateMethod>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitPrivateName?(this: Context & M, path: NodePath<namedTypes.PrivateName>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitRestProperty?(this: Context & M, path: NodePath<namedTypes.RestProperty>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitForAwaitStatement?(this: Context & M, path: NodePath<namedTypes.ForAwaitStatement>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitImport?(this: Context & M, path: NodePath<namedTypes.Import>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSQualifiedName?(this: Context & M, path: NodePath<namedTypes.TSQualifiedName>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSTypeReference?(this: Context & M, path: NodePath<namedTypes.TSTypeReference>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSHasOptionalTypeParameters?(this: Context & M, path: NodePath<namedTypes.TSHasOptionalTypeParameters>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSHasOptionalTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.TSHasOptionalTypeAnnotation>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSAsExpression?(this: Context & M, path: NodePath<namedTypes.TSAsExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSNonNullExpression?(this: Context & M, path: NodePath<namedTypes.TSNonNullExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSAnyKeyword?(this: Context & M, path: NodePath<namedTypes.TSAnyKeyword>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSBigIntKeyword?(this: Context & M, path: NodePath<namedTypes.TSBigIntKeyword>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSBooleanKeyword?(this: Context & M, path: NodePath<namedTypes.TSBooleanKeyword>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSNeverKeyword?(this: Context & M, path: NodePath<namedTypes.TSNeverKeyword>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSNullKeyword?(this: Context & M, path: NodePath<namedTypes.TSNullKeyword>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSNumberKeyword?(this: Context & M, path: NodePath<namedTypes.TSNumberKeyword>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSObjectKeyword?(this: Context & M, path: NodePath<namedTypes.TSObjectKeyword>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSStringKeyword?(this: Context & M, path: NodePath<namedTypes.TSStringKeyword>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSSymbolKeyword?(this: Context & M, path: NodePath<namedTypes.TSSymbolKeyword>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSUndefinedKeyword?(this: Context & M, path: NodePath<namedTypes.TSUndefinedKeyword>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSUnknownKeyword?(this: Context & M, path: NodePath<namedTypes.TSUnknownKeyword>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSVoidKeyword?(this: Context & M, path: NodePath<namedTypes.TSVoidKeyword>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSThisType?(this: Context & M, path: NodePath<namedTypes.TSThisType>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSArrayType?(this: Context & M, path: NodePath<namedTypes.TSArrayType>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSLiteralType?(this: Context & M, path: NodePath<namedTypes.TSLiteralType>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSUnionType?(this: Context & M, path: NodePath<namedTypes.TSUnionType>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSIntersectionType?(this: Context & M, path: NodePath<namedTypes.TSIntersectionType>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSConditionalType?(this: Context & M, path: NodePath<namedTypes.TSConditionalType>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSInferType?(this: Context & M, path: NodePath<namedTypes.TSInferType>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSTypeParameter?(this: Context & M, path: NodePath<namedTypes.TSTypeParameter>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSParenthesizedType?(this: Context & M, path: NodePath<namedTypes.TSParenthesizedType>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSFunctionType?(this: Context & M, path: NodePath<namedTypes.TSFunctionType>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSConstructorType?(this: Context & M, path: NodePath<namedTypes.TSConstructorType>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSDeclareFunction?(this: Context & M, path: NodePath<namedTypes.TSDeclareFunction>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSDeclareMethod?(this: Context & M, path: NodePath<namedTypes.TSDeclareMethod>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSMappedType?(this: Context & M, path: NodePath<namedTypes.TSMappedType>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSTupleType?(this: Context & M, path: NodePath<namedTypes.TSTupleType>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSNamedTupleMember?(this: Context & M, path: NodePath<namedTypes.TSNamedTupleMember>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSRestType?(this: Context & M, path: NodePath<namedTypes.TSRestType>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSOptionalType?(this: Context & M, path: NodePath<namedTypes.TSOptionalType>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSIndexedAccessType?(this: Context & M, path: NodePath<namedTypes.TSIndexedAccessType>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSTypeOperator?(this: Context & M, path: NodePath<namedTypes.TSTypeOperator>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSIndexSignature?(this: Context & M, path: NodePath<namedTypes.TSIndexSignature>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSPropertySignature?(this: Context & M, path: NodePath<namedTypes.TSPropertySignature>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSMethodSignature?(this: Context & M, path: NodePath<namedTypes.TSMethodSignature>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSTypePredicate?(this: Context & M, path: NodePath<namedTypes.TSTypePredicate>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSCallSignatureDeclaration?(this: Context & M, path: NodePath<namedTypes.TSCallSignatureDeclaration>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSConstructSignatureDeclaration?(this: Context & M, path: NodePath<namedTypes.TSConstructSignatureDeclaration>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSEnumMember?(this: Context & M, path: NodePath<namedTypes.TSEnumMember>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSTypeQuery?(this: Context & M, path: NodePath<namedTypes.TSTypeQuery>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSImportType?(this: Context & M, path: NodePath<namedTypes.TSImportType>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSTypeLiteral?(this: Context & M, path: NodePath<namedTypes.TSTypeLiteral>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSTypeAssertion?(this: Context & M, path: NodePath<namedTypes.TSTypeAssertion>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSEnumDeclaration?(this: Context & M, path: NodePath<namedTypes.TSEnumDeclaration>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSTypeAliasDeclaration?(this: Context & M, path: NodePath<namedTypes.TSTypeAliasDeclaration>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSModuleBlock?(this: Context & M, path: NodePath<namedTypes.TSModuleBlock>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSModuleDeclaration?(this: Context & M, path: NodePath<namedTypes.TSModuleDeclaration>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSImportEqualsDeclaration?(this: Context & M, path: NodePath<namedTypes.TSImportEqualsDeclaration>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSExternalModuleReference?(this: Context & M, path: NodePath<namedTypes.TSExternalModuleReference>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSExportAssignment?(this: Context & M, path: NodePath<namedTypes.TSExportAssignment>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSNamespaceExportDeclaration?(this: Context & M, path: NodePath<namedTypes.TSNamespaceExportDeclaration>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSInterfaceBody?(this: Context & M, path: NodePath<namedTypes.TSInterfaceBody>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSInterfaceDeclaration?(this: Context & M, path: NodePath<namedTypes.TSInterfaceDeclaration>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitTSParameterProperty?(this: Context & M, path: NodePath<namedTypes.TSParameterProperty>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitOptionalMemberExpression?(this: Context & M, path: NodePath<namedTypes.OptionalMemberExpression>): any;
./node_modules/ast-types/gen/visitor.d.ts:    visitOptionalCallExpression?(this: Context & M, path: NodePath<namedTypes.OptionalCallExpression>): any;
./node_modules/ast-types/fork.d.ts:        or(...types: any[]): import("./lib/types").Type<any>;
./node_modules/ast-types/fork.d.ts:        from<T>(value: any, name?: string | undefined): import("./lib/types").Type<T>;
./node_modules/ast-types/fork.d.ts:            [key: string]: any;
./node_modules/ast-types/fork.d.ts:    defineMethod: (name: any, func?: Function | undefined) => Function;
./node_modules/ast-types/fork.d.ts:    getFieldNames: (object: any) => string[];
./node_modules/ast-types/fork.d.ts:    getFieldValue: (object: any, fieldName: any) => any;
./node_modules/ast-types/fork.d.ts:    eachField: (object: any, callback: (name: any, value: any) => any, context?: any) => void;
./node_modules/ast-types/fork.d.ts:    someField: (object: any, callback: (name: any, value: any) => any, context?: any) => boolean;
./node_modules/ast-types/fork.d.ts:    getBuilderName: (typeName: any) => any;
./node_modules/ast-types/fork.d.ts:        (a: any, b: any, problemPath?: any): boolean;
./node_modules/ast-types/fork.d.ts:        assert(a: any, b: any): void;
./node_modules/ast-types/lib/path.d.ts:    parentPath: any;
./node_modules/ast-types/lib/path.d.ts:    name: any;
./node_modules/ast-types/lib/path.d.ts:    getValueProperty(name: any): any;
./node_modules/ast-types/lib/path.d.ts:    get(...names: any[]): any;
./node_modules/ast-types/lib/path.d.ts:    each(callback: any, context: any): any;
./node_modules/ast-types/lib/path.d.ts:    map(callback: any, context: any): any;
./node_modules/ast-types/lib/path.d.ts:    filter(callback: any, context: any): any;
./node_modules/ast-types/lib/path.d.ts:    shift(): any;
./node_modules/ast-types/lib/path.d.ts:    unshift(...args: any[]): any;
./node_modules/ast-types/lib/path.d.ts:    push(...args: any[]): any;
./node_modules/ast-types/lib/path.d.ts:    pop(): any;
./node_modules/ast-types/lib/path.d.ts:    insertAt(index: number, ...args: any[]): any;
./node_modules/ast-types/lib/path.d.ts:    insertBefore(...args: any[]): any;
./node_modules/ast-types/lib/path.d.ts:    insertAfter(...args: any[]): any;
./node_modules/ast-types/lib/path.d.ts:    replace(replacement?: ASTNode, ...args: ASTNode[]): any;
./node_modules/ast-types/lib/path.d.ts:    new <V = any>(value: any, parentPath?: any, name?: any): Path<V>;
./node_modules/ast-types/lib/node-path.d.ts:    parent: any;
./node_modules/ast-types/lib/node-path.d.ts:    scope: any;
./node_modules/ast-types/lib/node-path.d.ts:    prune(...args: any[]): any;
./node_modules/ast-types/lib/node-path.d.ts:    _computeNode(): any;
./node_modules/ast-types/lib/node-path.d.ts:    _computeParent(): any;
./node_modules/ast-types/lib/node-path.d.ts:    getValueProperty(name: any): any;
./node_modules/ast-types/lib/node-path.d.ts:    new <N extends ASTNode = any, V = any>(value: any, parentPath?: any, name?: any): NodePath<N, V>;
./node_modules/ast-types/lib/equiv.d.ts:    (a: any, b: any, problemPath?: any): boolean;
./node_modules/ast-types/lib/equiv.d.ts:    assert(a: any, b: any): void;
./node_modules/ast-types/lib/types.d.ts:declare type Deep = boolean | ((type: Type<any>, value: any) => void);
./node_modules/ast-types/lib/types.d.ts:    check(value: any, deep?: Deep): boolean;
./node_modules/ast-types/lib/types.d.ts:    assert(value: any, deep?: Deep): boolean;
./node_modules/ast-types/lib/types.d.ts:    abstract check(value: any, deep?: Deep): value is T;
./node_modules/ast-types/lib/types.d.ts:    assert(value: any, deep?: Deep): value is T;
./node_modules/ast-types/lib/types.d.ts:    check(value: any, deep?: Deep): value is T;
./node_modules/ast-types/lib/types.d.ts:    check(value: any, deep?: Deep): value is T;
./node_modules/ast-types/lib/types.d.ts:    check(value: any, deep?: Deep): value is T;
./node_modules/ast-types/lib/types.d.ts:    check(value: any, deep?: Deep): value is T;
./node_modules/ast-types/lib/types.d.ts:    readonly predicate: (value: any, deep?: Deep) => boolean;
./node_modules/ast-types/lib/types.d.ts:    constructor(name: string, predicate: (value: any, deep?: Deep) => boolean);
./node_modules/ast-types/lib/types.d.ts:    check(value: any, deep?: Deep): value is T;
./node_modules/ast-types/lib/types.d.ts:    checkAllFields(value: any, deep?: any): boolean;
./node_modules/ast-types/lib/types.d.ts:    abstract check(value: any, deep?: any): boolean;
./node_modules/ast-types/lib/types.d.ts:    abstract field(name: string, type: any, defaultFn?: Function, hidden?: boolean): this;
./node_modules/ast-types/lib/types.d.ts:        [key: string]: any;
./node_modules/ast-types/lib/types.d.ts:    }): any;
./node_modules/ast-types/lib/types.d.ts:    (...args: any[]): ASTNode;
./node_modules/ast-types/lib/types.d.ts:        [param: string]: any;
./node_modules/ast-types/lib/types.d.ts:        or(...types: any[]): Type<any>;
./node_modules/ast-types/lib/types.d.ts:        from<T>(value: any, name?: string | undefined): Type<T>;
./node_modules/ast-types/lib/types.d.ts:            [key: string]: any;
./node_modules/ast-types/lib/types.d.ts:    computeSupertypeLookupTable: (candidates: any) => {
./node_modules/ast-types/lib/types.d.ts:        [typeName: string]: any;
./node_modules/ast-types/lib/types.d.ts:    defineMethod: (name: any, func?: Function | undefined) => Function;
./node_modules/ast-types/lib/types.d.ts:    getBuilderName: (typeName: any) => any;
./node_modules/ast-types/lib/types.d.ts:    getStatementBuilderName: (typeName: any) => any;
./node_modules/ast-types/lib/types.d.ts:    getFieldNames: (object: any) => string[];
./node_modules/ast-types/lib/types.d.ts:    getFieldValue: (object: any, fieldName: any) => any;
./node_modules/ast-types/lib/types.d.ts:    eachField: (object: any, callback: (name: any, value: any) => any, context?: any) => void;
./node_modules/ast-types/lib/types.d.ts:    someField: (object: any, callback: (name: any, value: any) => any, context?: any) => boolean;
./node_modules/ast-types/lib/scope.d.ts:    path: any;
./node_modules/ast-types/lib/scope.d.ts:    node: any;
./node_modules/ast-types/lib/scope.d.ts:    parent: any;
./node_modules/ast-types/lib/scope.d.ts:    bindings: any;
./node_modules/ast-types/lib/scope.d.ts:    types: any;
./node_modules/ast-types/lib/scope.d.ts:    declares(name: any): any;
./node_modules/ast-types/lib/scope.d.ts:    declaresType(name: any): any;
./node_modules/ast-types/lib/scope.d.ts:    declareTemporary(prefix?: any): any;
./node_modules/ast-types/lib/scope.d.ts:    injectTemporary(identifier: any, init: any): any;
./node_modules/ast-types/lib/scope.d.ts:    scan(force?: any): any;
./node_modules/ast-types/lib/scope.d.ts:    getBindings(): any;
./node_modules/ast-types/lib/scope.d.ts:    getTypes(): any;
./node_modules/ast-types/lib/scope.d.ts:    lookup(name: any): any;
./node_modules/ast-types/lib/scope.d.ts:    lookupType(name: any): any;
./node_modules/ast-types/lib/scope.d.ts:    new (path: any, parentScope: any): Scope;
./node_modules/ast-types/lib/scope.d.ts:    isEstablishedBy(node: any): any;
./node_modules/ast-types/lib/shared.d.ts:    geq: (than: any) => import("./types").Type<unknown>;
./node_modules/ast-types/lib/path-visitor.d.ts:    _reusableContextStack: any;
./node_modules/ast-types/lib/path-visitor.d.ts:    _methodNameTable: any;
./node_modules/ast-types/lib/path-visitor.d.ts:    _shouldVisitComments: any;
./node_modules/ast-types/lib/path-visitor.d.ts:    Context: any;
./node_modules/ast-types/lib/path-visitor.d.ts:    _visiting: any;
./node_modules/ast-types/lib/path-visitor.d.ts:    _changeReported: any;
./node_modules/ast-types/lib/path-visitor.d.ts:    visit(...args: any[]): any;
./node_modules/ast-types/lib/path-visitor.d.ts:    reset(...args: any[]): any;
./node_modules/ast-types/lib/path-visitor.d.ts:    visitWithoutReset(path: any): any;
./node_modules/ast-types/lib/path-visitor.d.ts:    AbortRequest: any;
./node_modules/ast-types/lib/path-visitor.d.ts:    visitor: any;
./node_modules/ast-types/lib/path-visitor.d.ts:    acquireContext(path: any): any;
./node_modules/ast-types/lib/path-visitor.d.ts:    releaseContext(context: any): void;
./node_modules/ast-types/lib/path-visitor.d.ts:    wasChangeReported(): any;
./node_modules/ast-types/lib/path-visitor.d.ts:    fromMethodsObject(methods?: any): Visitor;
./node_modules/ast-types/lib/path-visitor.d.ts:    visit<M = {}>(node: ASTNode, methods?: import("../gen/visitor").Visitor<M>): any;
./node_modules/ast-types/lib/path-visitor.d.ts:    currentPath: any;
./node_modules/ast-types/lib/path-visitor.d.ts:    Context: any;
./node_modules/ast-types/lib/path-visitor.d.ts:    visitor: any;
./node_modules/ast-types/lib/path-visitor.d.ts:    reset(path: any, ...args: any[]): any;
./node_modules/ast-types/lib/path-visitor.d.ts:    invokeVisitorMethod(methodName: string): any;
./node_modules/ast-types/lib/path-visitor.d.ts:    traverse(path: any, newVisitor?: VisitorMethods): any;
./node_modules/ast-types/lib/path-visitor.d.ts:    visit(path: any, newVisitor?: VisitorMethods): any;
./node_modules/ts-interface-checker/dist/types.d.ts:export declare type CheckerFunc = (value: any, ctx: IContext) => boolean;
./node_modules/ts-interface-checker/dist/types.d.ts:export declare function lit(value: any): TLiteral;
./node_modules/ts-interface-checker/dist/types.d.ts:    value: any;
./node_modules/ts-interface-checker/dist/types.d.ts:    constructor(value: any);
./node_modules/ts-interface-checker/dist/types.d.ts:    validator: (value: any) => boolean;
./node_modules/ts-interface-checker/dist/types.d.ts:    constructor(validator: (value: any) => boolean, message: string);
./node_modules/ts-interface-checker/dist/index.d.ts:    check(value: any): void;
./node_modules/ts-interface-checker/dist/index.d.ts:    test(value: any): boolean;
./node_modules/ts-interface-checker/dist/index.d.ts:    validate(value: any): IErrorDetail | null;
./node_modules/ts-interface-checker/dist/index.d.ts:    strictCheck(value: any): void;
./node_modules/ts-interface-checker/dist/index.d.ts:    strictTest(value: any): boolean;
./node_modules/ts-interface-checker/dist/index.d.ts:    strictValidate(value: any): IErrorDetail | null;
./node_modules/ts-interface-checker/dist/index.d.ts:    test(value: any): value is T;
./node_modules/ts-interface-checker/dist/index.d.ts:    strictTest(value: any): value is T;
./node_modules/canvg/lib/Document/RectElement.d.ts:    getMarkers(): any;
./node_modules/canvg/lib/Document/CircleElement.d.ts:    getMarkers(): any;
./node_modules/canvg/lib/Document/EllipseElement.d.ts:    getMarkers(): any;
./node_modules/canvg/lib/Document/GradientElement.d.ts:    createGradient(ctx: RenderingContext2D, element: any, parentOpacityProp: Property): string | CanvasGradient | CanvasPattern;
./node_modules/canvg/lib/presets/types.d.ts:    prototype: any;
./node_modules/canvg/lib/presets/types.d.ts:    new (): any;
./node_modules/canvg/lib/presets/node.d.ts:    createCanvas(width: number, height: number): any;
./node_modules/canvg/lib/presets/node.d.ts:declare type Fetch = (input: any, config?: any) => Promise<any>;
./node_modules/prettier/doc.d.ts:    label: any;
./node_modules/prettier/doc.d.ts:  function label(label: any | undefined, contents: Doc): Doc;
./node_modules/prettier/index.d.ts:type CallCallback<T, U> = (path: AstPath<T>, index: number, value: any) => U;
./node_modules/prettier/index.d.ts:  value: any,
./node_modules/prettier/index.d.ts:  value: any,
./node_modules/prettier/index.d.ts:      (node: any, name: string | null, number: number | null) => boolean
./node_modules/prettier/index.d.ts:export type BuiltInParser = (text: string, options?: any) => AST;
./node_modules/prettier/index.d.ts:    | ((original: any, cloned: any, parent: any) => any)
./node_modules/prettier/index.d.ts:              commentNode: any,
./node_modules/prettier/index.d.ts:              commentNode: any,
./node_modules/prettier/index.d.ts:              commentNode: any,
./node_modules/prettier/index.d.ts:  function addLeadingComment(node: any, comment: any): void;
./node_modules/prettier/index.d.ts:  function addDanglingComment(node: any, comment: any, marker: any): void;
./node_modules/prettier/index.d.ts:  function addTrailingComment(node: any, comment: any): void;
./node_modules/esbuild-register/dist/loader.d.ts:declare function load(url: any, context: any, defaultLoad: any): Promise<any>;
./node_modules/jest-circus/node_modules/pretty-format/build/index.d.ts:    val: any,
./node_modules/jest-circus/node_modules/pretty-format/build/index.d.ts:declare type Test = (arg0: any) => boolean;
./node_modules/async-function/index.d.ts:    type AsyncFunction<T = unknown> = (...args: any[]) => Promise<T>;
./node_modules/detective-postcss/dist/index.d.ts:declare function detective(src: any, options?: detective.Options): any[];
./node_modules/vitest/dist/environments.d.ts:declare function populateGlobal(global: any, win: any, options?: PopulateOptions): {
./node_modules/vitest/dist/runners.d.ts:	injectValue(key: string): any;
./node_modules/vitest/dist/execute.d.ts:	error: any;
./node_modules/vitest/dist/execute.d.ts:	require(identifier: string): any;
./node_modules/vitest/dist/chunks/worker.d.1GmBbd7G.d.ts:type ReturnType<T> = T extends (...args: any) => infer R ? R : never;
./node_modules/vitest/dist/chunks/worker.d.1GmBbd7G.d.ts:    post: (data: any, ...extras: any[]) => any | Promise<any>;
./node_modules/vitest/dist/chunks/worker.d.1GmBbd7G.d.ts:    on: (fn: (data: any, ...extras: any[]) => void) => any | Promise<any>;
./node_modules/vitest/dist/chunks/worker.d.1GmBbd7G.d.ts:    off?: (fn: (data: any, ...extras: any[]) => void) => any | Promise<any>;
./node_modules/vitest/dist/chunks/worker.d.1GmBbd7G.d.ts:    serialize?: (data: any) => any;
./node_modules/vitest/dist/chunks/worker.d.1GmBbd7G.d.ts:    deserialize?: (data: any) => any;
./node_modules/vitest/dist/chunks/worker.d.1GmBbd7G.d.ts:    onError?: (error: Error, functionName: string, args: any[]) => boolean | void;
./node_modules/vitest/dist/chunks/worker.d.1GmBbd7G.d.ts:    onFunctionError?: (error: Error, functionName: string, args: any[]) => boolean | void;
./node_modules/vitest/dist/chunks/worker.d.1GmBbd7G.d.ts:    onGeneralError?: (error: Error, functionName?: string, args?: any[]) => boolean | void;
./node_modules/vitest/dist/chunks/worker.d.1GmBbd7G.d.ts:    onTimeoutError?: (functionName: string, args: any[]) => boolean | void;
./node_modules/vitest/dist/chunks/benchmark.d.BwvBVTda.d.ts:	skipIf: (condition: any) => ChainableBenchmarkAPI
./node_modules/vitest/dist/chunks/benchmark.d.BwvBVTda.d.ts:	runIf: (condition: any) => ChainableBenchmarkAPI
./node_modules/vitest/dist/chunks/environment.d.cL3nLXbE.d.ts:	new (...args: any[]): any;
./node_modules/vitest/dist/chunks/environment.d.cL3nLXbE.d.ts:	exports?: any;
./node_modules/vitest/dist/chunks/environment.d.cL3nLXbE.d.ts:	teardown: (global: any) => Awaitable<void>;
./node_modules/vitest/dist/chunks/environment.d.cL3nLXbE.d.ts:		[key: string]: any
./node_modules/vitest/dist/chunks/environment.d.cL3nLXbE.d.ts:	setup: (global: any, options: Record<string, any>) => Awaitable<EnvironmentReturn>;
./node_modules/vitest/dist/chunks/reporters.d.BFLkQcL6.d.ts:	log(...args: any[]): void;
./node_modules/vitest/dist/chunks/reporters.d.BFLkQcL6.d.ts:	error(...args: any[]): void;
./node_modules/vitest/dist/chunks/reporters.d.BFLkQcL6.d.ts:	warn(...args: any[]): void;
./node_modules/vitest/dist/chunks/reporters.d.BFLkQcL6.d.ts:	log(...messages: any): void;
./node_modules/vitest/dist/chunks/reporters.d.BFLkQcL6.d.ts:	error(...messages: any): void;
./node_modules/vitest/dist/chunks/reporters.d.BFLkQcL6.d.ts:    visit(visitor: Visitor, state: any): void;
./node_modules/vitest/dist/chunks/reporters.d.BFLkQcL6.d.ts:    onStart(root: N, state: any): void;
./node_modules/vitest/dist/chunks/reporters.d.BFLkQcL6.d.ts:    onSummary(root: N, state: any): void;
./node_modules/vitest/dist/chunks/reporters.d.BFLkQcL6.d.ts:    onDetail(root: N, state: any): void;
./node_modules/vitest/dist/chunks/reporters.d.BFLkQcL6.d.ts:    onSummaryEnd(root: N, state: any): void;
./node_modules/vitest/dist/chunks/reporters.d.BFLkQcL6.d.ts:    onEnd(root: N, state: any): void;
./node_modules/vitest/dist/chunks/reporters.d.BFLkQcL6.d.ts:	onFileTransform?: (sourceCode: string, id: string, pluginCtx: any) => TransformResult | Promise<TransformResult>;
./node_modules/vitest/dist/chunks/global.d.MAmajcmJ.d.ts:			containSubset: (expected: any) => Assertion;
./node_modules/vitest/dist/chunks/global.d.MAmajcmJ.d.ts:			containSubset: (val: any, exp: any, msg?: string) => void;
./node_modules/vitest/dist/chunks/global.d.MAmajcmJ.d.ts:	<U extends { [P in keyof T] : any }>(snapshot: Partial<U>, hint?: string): void;
./node_modules/vitest/dist/chunks/global.d.MAmajcmJ.d.ts:	<U extends { [P in keyof T] : any }>(properties: Partial<U>, snapshot?: string, hint?: string): void;
./node_modules/vitest/dist/workers.d.ts:declare function provideWorkerState(context: any, state: WorkerGlobalState): WorkerGlobalState;
./node_modules/vitest/dist/coverage.d.ts:		onDebug: ((...logs: any[]) => void) & {
./node_modules/vitest/dist/index.d.ts:	isMockFunction: (fn: any) => fn is MockInstance;
./node_modules/emittery/index.d.ts:	): <T extends {new (...arguments_: any[]): any}>(klass: T) => T; // eslint-disable-line @typescript-eslint/prefer-function-type
./node_modules/@react-types/shared/src/collections.d.ts:  props?: any,
./node_modules/@react-types/shared/src/collections.d.ts:  shouldInvalidate?: (context: any) => boolean,
./node_modules/tslib/tslib.d.ts:export declare function __assign(t: any, ...sources: any[]): any;
./node_modules/tslib/tslib.d.ts:export declare function __rest(t: any, propertyNames: (string | symbol)[]): any;
./node_modules/tslib/tslib.d.ts:export declare function __decorate(decorators: Function[], target: any, key?: string | symbol, desc?: any): any;
./node_modules/tslib/tslib.d.ts:export declare function __runInitializers(thisArg: unknown, initializers: Function[], value?: any): any;
./node_modules/tslib/tslib.d.ts:export declare function __propKey(x: any): string | symbol;
./node_modules/tslib/tslib.d.ts:export declare function __metadata(metadataKey: any, metadataValue: any): Function;
./node_modules/tslib/tslib.d.ts:export declare function __awaiter(thisArg: any, _arguments: any, P: Function, generator: Function): any;
./node_modules/tslib/tslib.d.ts:export declare function __generator(thisArg: any, body: Function): any;
./node_modules/tslib/tslib.d.ts:export declare function __exportStar(m: any, o: any): void;
./node_modules/tslib/tslib.d.ts:export declare function __values(o: any): any;
./node_modules/tslib/tslib.d.ts:export declare function __read(o: any, n?: number): any[];
./node_modules/tslib/tslib.d.ts:export declare function __spread(...args: any[][]): any[];
./node_modules/tslib/tslib.d.ts:export declare function __spreadArrays(...args: any[][]): any[];
./node_modules/tslib/tslib.d.ts:export declare function __spreadArray(to: any[], from: any[], pack?: boolean): any[];
./node_modules/tslib/tslib.d.ts:export declare function __await(v: any): any;
./node_modules/tslib/tslib.d.ts:export declare function __asyncGenerator(thisArg: any, _arguments: any, generator: Function): any;
./node_modules/tslib/tslib.d.ts:export declare function __asyncDelegator(o: any): any;
./node_modules/tslib/tslib.d.ts:export declare function __asyncValues(o: any): any;
./node_modules/tslib/tslib.d.ts:export declare function __classPrivateFieldGet<T extends new (...args: any[]) => unknown, V>(
./node_modules/tslib/tslib.d.ts:export declare function __classPrivateFieldGet<T extends new (...args: any[]) => unknown, V>(
./node_modules/tslib/tslib.d.ts:export declare function __classPrivateFieldGet<T extends object, V extends (...args: any[]) => unknown>(
./node_modules/tslib/tslib.d.ts:export declare function __classPrivateFieldGet<T extends new (...args: any[]) => unknown, V extends (...args: any[]) => unknown>(
./node_modules/tslib/tslib.d.ts:export declare function __classPrivateFieldSet<T extends new (...args: any[]) => unknown, V>(
./node_modules/tslib/tslib.d.ts:export declare function __classPrivateFieldSet<T extends new (...args: any[]) => unknown, V>(
./node_modules/tslib/tslib.d.ts:    state: (new (...args: any[]) => unknown) | { has(o: any): boolean },
./node_modules/tslib/tslib.d.ts:export declare function __disposeResources(env: { stack: { value?: unknown, dispose?: Function, async: boolean }[]; error: unknown; hasError: boolean; }): any;
./node_modules/ts-jest/dist/utils/json.d.ts:export declare function parse(input: string): any;
./node_modules/ts-jest/node_modules/type-fest/source/required-deep.d.ts:								: E extends (...arguments_: any[]) => unknown
./node_modules/ts-jest/node_modules/type-fest/source/partial-on-undefined-deep.d.ts:type PartialOnUndefinedDeepValue<T, Options extends Required<PartialOnUndefinedDeepOptions>> = T extends BuiltIns | ((...arguments_: any[]) => unknown)
./node_modules/ts-jest/node_modules/type-fest/source/omit-index-signature.d.ts:	[x: string]: any
./node_modules/ts-jest/node_modules/type-fest/source/omit-index-signature.d.ts:	[x: number]: any
./node_modules/ts-jest/node_modules/type-fest/source/omit-index-signature.d.ts:	[x: symbol]: any
./node_modules/ts-jest/node_modules/type-fest/source/async-return-type.d.ts:type AsyncFunction = (...arguments_: any[]) => PromiseLike<unknown>;
./node_modules/ts-jest/node_modules/type-fest/source/set-parameter-type.d.ts:type HandleMessage = (data: Data, message: string, ...arguments: any[]) => void;
./node_modules/ts-jest/node_modules/type-fest/source/set-parameter-type.d.ts:export type SetParameterType<Function_ extends (...arguments_: any[]) => unknown, P extends Record<number, unknown>> =
./node_modules/ts-jest/node_modules/type-fest/source/find-global-type.d.ts:		? typeof globalThis extends Record<Name, abstract new (...arguments: any[]) => infer T> ? T : never
./node_modules/ts-jest/node_modules/type-fest/source/internal/object.d.ts:// Copy `readonly` and `?` from the key `a` of `{readonly a?: any}`
./node_modules/ts-jest/node_modules/type-fest/source/internal/object.d.ts:type B = BuildObject<'a', string, {readonly a?: any}>;
./node_modules/ts-jest/node_modules/type-fest/source/internal/keys.d.ts:		This check is necessary, because without it, if we don't verify whether the property is a record, an object with a type of `{name: any}` would return `never` due to its potential assignability to a function.
./node_modules/ts-jest/node_modules/type-fest/source/internal/keys.d.ts:			: [(...arguments_: any[]) => any] extends [Type[Key]]
./node_modules/ts-jest/node_modules/type-fest/source/internal/type.d.ts:export type NonRecursiveType = BuiltIns | Function | (new (...arguments_: any[]) => unknown);
./node_modules/ts-jest/node_modules/type-fest/source/internal/type.d.ts:export type HasMultipleCallSignatures<T extends (...arguments_: any[]) => unknown> =
./node_modules/ts-jest/node_modules/type-fest/source/set-return-type.d.ts:export type SetReturnType<Function_ extends (...arguments_: any[]) => any, TypeToReturn> =
./node_modules/ts-jest/node_modules/type-fest/source/pick-deep.d.ts:	otherConfig: any;
./node_modules/ts-jest/node_modules/type-fest/source/jsonify.d.ts:type NotJsonable = ((...arguments_: any[]) => any) | undefined | symbol;
./node_modules/ts-jest/node_modules/type-fest/source/readonly-deep.d.ts:	: T extends new (...arguments_: any[]) => unknown
./node_modules/ts-jest/node_modules/type-fest/source/readonly-deep.d.ts:		: T extends (...arguments_: any[]) => unknown
./node_modules/ts-jest/node_modules/type-fest/source/partial-deep.d.ts:type _PartialDeep<T, Options extends Required<PartialDeepOptions>> = T extends BuiltIns | ((new (...arguments_: any[]) => unknown))
./node_modules/ts-jest/node_modules/type-fest/source/partial-deep.d.ts:	(ObjectType extends (...arguments_: any) => unknown
./node_modules/ts-jest/node_modules/type-fest/source/is-any.d.ts:const anyObject: any = {a: 1, b: 2};
./node_modules/ts-jest/node_modules/type-fest/source/writable-deep.d.ts:	: T extends (...arguments_: any[]) => unknown
./node_modules/ts-jest/node_modules/type-fest/source/if-empty-object.d.ts:type ShouldBeBar = IfEmptyObject<{key: any}, 'foo', 'bar'>;
./node_modules/ts-jest/node_modules/type-fest/source/asyncify.d.ts:export type Asyncify<Function_ extends (...arguments_: any[]) => any> = SetReturnType<Function_, Promise<Awaited<ReturnType<Function_>>>>;
./node_modules/ts-jest/node_modules/json5/lib/parse.d.ts:    reviver?: ((this: any, key: string, value: any) => any) | null,
./node_modules/ts-jest/node_modules/json5/lib/stringify.d.ts:        | ((this: any, key: string, value: any) => any)
./node_modules/ts-jest/node_modules/json5/lib/stringify.d.ts:    value: any,
./node_modules/ts-jest/node_modules/json5/lib/stringify.d.ts:    replacer?: ((this: any, key: string, value: any) => any) | null,
./node_modules/ts-jest/node_modules/json5/lib/stringify.d.ts:    value: any,
./node_modules/ts-jest/node_modules/json5/lib/stringify.d.ts:declare function stringify(value: any, options: StringifyOptions): string
./node_modules/magic-string/dist/magic-string.cjs.d.ts:		replacement: string | ((substring: string, ...args: any[]) => string),
./node_modules/magic-string/dist/magic-string.cjs.d.ts:		replacement: string | ((substring: string, ...args: any[]) => string),
./node_modules/ajv-formats/node_modules/json-schema-traverse/index.d.ts:    [x: string]: any;
./node_modules/ajv-formats/node_modules/ajv/dist/vocabularies/validation/const.d.ts:    allowedValue: any;
./node_modules/ajv-formats/node_modules/ajv/dist/vocabularies/validation/enum.d.ts:    allowedValues: any[];
./node_modules/ajv-formats/node_modules/ajv/dist/types/json-schema.d.ts:    [keyword: string]: any;
./node_modules/ajv-formats/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./node_modules/ajv-formats/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./node_modules/ajv-formats/node_modules/ajv/dist/types/index.d.ts:        [K in T]: any;
./node_modules/ajv-formats/node_modules/ajv/dist/types/index.d.ts:    (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T;
./node_modules/ajv-formats/node_modules/ajv/dist/types/index.d.ts:export type MacroKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaCxt) => AnySchema;
./node_modules/ajv-formats/node_modules/ajv/dist/types/index.d.ts:export type CompileKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaObjCxt) => DataValidateFunction;
./node_modules/ajv-formats/node_modules/ajv/dist/types/index.d.ts:    (schema: any, data: any, parentSchema?: AnySchemaObject, dataCxt?: DataValidationCxt): boolean | Promise<any>;
./node_modules/ajv-formats/node_modules/ajv/dist/types/index.d.ts:    schema: any;
./node_modules/ajv-formats/node_modules/ajv/dist/core.d.ts:    [prop: string]: any;
./node_modules/ajv-formats/node_modules/ajv/dist/compile/validate/index.d.ts:    schema: any;
./node_modules/ajv-formats/node_modules/ajv/lib/vocabularies/validation/const.ts:export type ConstError = ErrorObject<"const", {allowedValue: any}>
./node_modules/ajv-formats/node_modules/ajv/lib/vocabularies/validation/enum.ts:export type EnumError = ErrorObject<"enum", {allowedValues: any[]}, any[] | {$data: string}>
./node_modules/ajv-formats/node_modules/ajv/lib/types/json-schema.ts:  [keyword: string]: any
./node_modules/ajv-formats/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./node_modules/ajv-formats/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./node_modules/ajv-formats/node_modules/ajv/lib/types/index.ts:  parentData: {[K in T]: any} // object or array
./node_modules/ajv-formats/node_modules/ajv/lib/types/index.ts:  (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T
./node_modules/ajv-formats/node_modules/ajv/lib/types/index.ts:  schema: any,
./node_modules/ajv-formats/node_modules/ajv/lib/types/index.ts:  schema: any,
./node_modules/ajv-formats/node_modules/ajv/lib/types/index.ts:    schema: any,
./node_modules/ajv-formats/node_modules/ajv/lib/types/index.ts:    data: any,
./node_modules/ajv-formats/node_modules/ajv/lib/types/index.ts:  schema: any // TODO
./node_modules/ajv-formats/node_modules/ajv/lib/core.ts:  [prop: string]: any
./node_modules/ajv-formats/node_modules/ajv/lib/core.ts:  cache?: any
./node_modules/ajv-formats/node_modules/ajv/lib/compile/validate/index.ts:  schema: any // keyword value in the schema
./node_modules/@stitches/core/types/styled-component.d.ts:				[name in number | string]: any
./node_modules/@stitches/core/types/styled-component.d.ts:	: T[0] extends (props: any) => any
./node_modules/@stitches/core/types/styled-component.d.ts:	: T extends [lead: any, ...tail: infer V]
./node_modules/@stitches/core/types/styled-component.d.ts:		T extends [lead: any, ...tail: infer V]
./node_modules/@stitches/core/types/stitches.d.ts:		<Styles extends { [K: string]: any }>(
./node_modules/@stitches/core/types/util.d.ts:export type Function = (...args: any[]) => unknown
./node_modules/@stitches/core/types/index.d.ts:export type ComponentProps<Component> = Component extends ((...args: any[]) => any) ? Parameters<Component>[0] : never
./node_modules/@stitches/core/types/index.d.ts:	: Config extends { [K: string]: any }
./node_modules/@stitches/core/types/index.d.ts:	: Config extends { [K: string]: any }
./node_modules/@stitches/core/types/index.d.ts:export type VariantProps<Component extends {[key: symbol | string]: any}> = StyledComponent.TransformProps<Component[StyledComponent.$$StyledComponentProps], Component[StyledComponent.$$StyledComponentMedia]>
./node_modules/safe-buffer/index.d.ts:    toJSON(): { type: 'Buffer', data: any[] };
./node_modules/safe-buffer/index.d.ts:    fill(value: any, offset?: number, end?: number): this;
./node_modules/safe-buffer/index.d.ts:    constructor (array: any[]);
./node_modules/safe-buffer/index.d.ts:    static from(array: any[]): Buffer;
./node_modules/safe-buffer/index.d.ts:    static isBuffer(obj: any): obj is Buffer;
./node_modules/tsconfig-paths-webpack-plugin/node_modules/tsconfig-paths/lib/filesystem.d.ts:    (packageJsonPath: string): any | undefined;
./node_modules/tsconfig-paths-webpack-plugin/node_modules/tsconfig-paths/lib/filesystem.d.ts:    (err?: Error, content?: any): void;
./node_modules/tsconfig-paths-webpack-plugin/node_modules/tsconfig-paths/lib/filesystem.d.ts:export declare function readJsonFromDiskSync(packageJsonPath: string): any | undefined;
./node_modules/tsconfig-paths-webpack-plugin/node_modules/tsconfig-paths/lib/filesystem.d.ts:export declare function readJsonFromDiskAsync(path: string, callback: (err?: Error, content?: any) => void): void;
./node_modules/tsconfig-paths-webpack-plugin/node_modules/tsconfig-paths/src/filesystem.ts:  (packageJsonPath: string): any | undefined;
./node_modules/tsconfig-paths-webpack-plugin/node_modules/tsconfig-paths/src/filesystem.ts:  (err?: Error, content?: any): void;
./node_modules/tsconfig-paths-webpack-plugin/node_modules/tsconfig-paths/src/filesystem.ts:export function readJsonFromDiskSync(packageJsonPath: string): any | undefined {
./node_modules/tsconfig-paths-webpack-plugin/node_modules/tsconfig-paths/src/filesystem.ts:  callback: (err?: Error, content?: any) => void
./node_modules/tsconfig-paths-webpack-plugin/node_modules/tsconfig-paths/src/register.ts:  Module._resolveFilename = function (request: string, _parent: any): string {
./node_modules/tsconfig-paths-webpack-plugin/node_modules/json5/lib/parse.d.ts:    reviver?: ((this: any, key: string, value: any) => any) | null,
./node_modules/tsconfig-paths-webpack-plugin/node_modules/json5/lib/stringify.d.ts:        | ((this: any, key: string, value: any) => any)
./node_modules/tsconfig-paths-webpack-plugin/node_modules/json5/lib/stringify.d.ts:    value: any,
./node_modules/tsconfig-paths-webpack-plugin/node_modules/json5/lib/stringify.d.ts:    replacer?: ((this: any, key: string, value: any) => any) | null,
./node_modules/tsconfig-paths-webpack-plugin/node_modules/json5/lib/stringify.d.ts:    value: any,
./node_modules/tsconfig-paths-webpack-plugin/node_modules/json5/lib/stringify.d.ts:declare function stringify(value: any, options: StringifyOptions): string
./node_modules/recast/parsers/acorn.d.ts:export declare function parse(source: string, options?: any): any;
./node_modules/recast/parsers/esprima.d.ts:export declare function parse(source: string, options?: any): any;
./node_modules/recast/node_modules/ast-types/lib/path.d.ts:    parentPath: any;
./node_modules/recast/node_modules/ast-types/lib/path.d.ts:    name: any;
./node_modules/recast/node_modules/ast-types/lib/path.d.ts:    getValueProperty(name: any): any;
./node_modules/recast/node_modules/ast-types/lib/path.d.ts:    get(...names: any[]): any;
./node_modules/recast/node_modules/ast-types/lib/path.d.ts:    each(callback: any, context?: any): any;
./node_modules/recast/node_modules/ast-types/lib/path.d.ts:    map(callback: any, context?: any): any;
./node_modules/recast/node_modules/ast-types/lib/path.d.ts:    filter(callback: any, context?: any): any;
./node_modules/recast/node_modules/ast-types/lib/path.d.ts:    shift(): any;
./node_modules/recast/node_modules/ast-types/lib/path.d.ts:    unshift(...args: any[]): any;
./node_modules/recast/node_modules/ast-types/lib/path.d.ts:    push(...args: any[]): any;
./node_modules/recast/node_modules/ast-types/lib/path.d.ts:    pop(): any;
./node_modules/recast/node_modules/ast-types/lib/path.d.ts:    insertAt(index: number, ...args: any[]): any;
./node_modules/recast/node_modules/ast-types/lib/path.d.ts:    insertBefore(...args: any[]): any;
./node_modules/recast/node_modules/ast-types/lib/path.d.ts:    insertAfter(...args: any[]): any;
./node_modules/recast/node_modules/ast-types/lib/path.d.ts:    replace(replacement?: ASTNode, ...args: ASTNode[]): any;
./node_modules/recast/node_modules/ast-types/lib/path.d.ts:    new <V = any>(value: any, parentPath?: any, name?: any): Path<V>;
./node_modules/recast/node_modules/ast-types/lib/node-path.d.ts:    parent: any;
./node_modules/recast/node_modules/ast-types/lib/node-path.d.ts:    scope: any;
./node_modules/recast/node_modules/ast-types/lib/node-path.d.ts:    prune(...args: any[]): any;
./node_modules/recast/node_modules/ast-types/lib/node-path.d.ts:    _computeNode(): any;
./node_modules/recast/node_modules/ast-types/lib/node-path.d.ts:    _computeParent(): any;
./node_modules/recast/node_modules/ast-types/lib/node-path.d.ts:    getValueProperty(name: any): any;
./node_modules/recast/node_modules/ast-types/lib/node-path.d.ts:    new <N extends ASTNode = any, V = any>(value: any, parentPath?: any, name?: any): NodePath<N, V>;
./node_modules/recast/node_modules/ast-types/lib/equiv.d.ts:    (a: any, b: any, problemPath?: any): boolean;
./node_modules/recast/node_modules/ast-types/lib/equiv.d.ts:    assert(a: any, b: any): void;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:type Deep = boolean | ((type: Type<any>, value: any) => void);
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    check(value: any, deep?: Deep): boolean;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    assert(value: any, deep?: Deep): boolean;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    abstract check(value: any, deep?: Deep): value is T;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    assert(value: any, deep?: Deep): value is T;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    check(value: any, deep?: Deep): value is T;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    check(value: any, deep?: Deep): value is T;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    check(value: any, deep?: Deep): value is T;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    check(value: any, deep?: Deep): value is T;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    readonly predicate: (value: any, deep?: Deep) => boolean;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    constructor(name: string, predicate: (value: any, deep?: Deep) => boolean);
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    check(value: any, deep?: Deep): value is T;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    checkAllFields(value: any, deep?: any): boolean;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    abstract check(value: any, deep?: any): boolean;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    abstract field(name: string, type: any, defaultFn?: Function, hidden?: boolean): this;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:        [key: string]: any;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    }): any;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    (...args: any[]): ASTNode;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:        [param: string]: any;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:        or(...types: any[]): Type<any>;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:        from<T>(value: any, name?: string): Type<T>;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:            [key: string]: any;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    computeSupertypeLookupTable: (candidates: any) => {
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:        [typeName: string]: any;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    defineMethod: (name: any, func?: Function) => Function;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    getBuilderName: (typeName: any) => any;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    getStatementBuilderName: (typeName: any) => any;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    getFieldNames: (object: any) => string[];
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    getFieldValue: (object: any, fieldName: any) => any;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    eachField: (object: any, callback: (name: any, value: any) => any, context?: any) => void;
./node_modules/recast/node_modules/ast-types/lib/types.d.ts:    someField: (object: any, callback: (name: any, value: any) => any, context?: any) => boolean;
./node_modules/recast/node_modules/ast-types/lib/scope.d.ts:    node: any;
./node_modules/recast/node_modules/ast-types/lib/scope.d.ts:    parent: any;
./node_modules/recast/node_modules/ast-types/lib/scope.d.ts:    bindings: any;
./node_modules/recast/node_modules/ast-types/lib/scope.d.ts:    types: any;
./node_modules/recast/node_modules/ast-types/lib/scope.d.ts:    declares(name: any): any;
./node_modules/recast/node_modules/ast-types/lib/scope.d.ts:    declaresType(name: any): any;
./node_modules/recast/node_modules/ast-types/lib/scope.d.ts:    declareTemporary(prefix?: any): any;
./node_modules/recast/node_modules/ast-types/lib/scope.d.ts:    injectTemporary(identifier: any, init: any): any;
./node_modules/recast/node_modules/ast-types/lib/scope.d.ts:    scan(force?: any): any;
./node_modules/recast/node_modules/ast-types/lib/scope.d.ts:    getBindings(): any;
./node_modules/recast/node_modules/ast-types/lib/scope.d.ts:    getTypes(): any;
./node_modules/recast/node_modules/ast-types/lib/scope.d.ts:    lookup(name: any): any;
./node_modules/recast/node_modules/ast-types/lib/scope.d.ts:    lookupType(name: any): any;
./node_modules/recast/node_modules/ast-types/lib/scope.d.ts:    new (path: NodePath, parentScope: any): Scope;
./node_modules/recast/node_modules/ast-types/lib/scope.d.ts:    isEstablishedBy(node: any): any;
./node_modules/recast/node_modules/ast-types/lib/main.d.ts:    (a: any, b: any, problemPath?: any): boolean;
./node_modules/recast/node_modules/ast-types/lib/main.d.ts:    assert(a: any, b: any): void;
./node_modules/recast/node_modules/ast-types/lib/main.d.ts:        [key: string]: any;
./node_modules/recast/node_modules/ast-types/lib/main.d.ts:}, defineMethod: (name: any, func?: Function | undefined) => Function, eachField: (object: any, callback: (name: any, value: any) => any, context?: any) => void, finalize: () => void, getBuilderName: (typeName: any) => any, getFieldNames: (object: any) => string[], getFieldValue: (object: any, fieldName: any) => any, getSupertypeNames: (typeName: string) => string[], NodePath: import("./node-path").NodePathConstructor, Path: import("./path").PathConstructor, PathVisitor: import("./path-visitor").PathVisitorConstructor, someField: (object: any, callback: (name: any, value: any) => any, context?: any) => boolean, Type: {
./node_modules/recast/node_modules/ast-types/lib/main.d.ts:    or(...types: any[]): Type<any>;
./node_modules/recast/node_modules/ast-types/lib/main.d.ts:    from<T>(value: any, name?: string | undefined): Type<T>;
./node_modules/recast/node_modules/ast-types/lib/gen/builders.d.ts:    [builderName: string]: any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitPrintable?(this: Context & M, path: NodePath<namedTypes.Printable>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitSourceLocation?(this: Context & M, path: NodePath<namedTypes.SourceLocation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitNode?(this: Context & M, path: NodePath<namedTypes.Node>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitComment?(this: Context & M, path: NodePath<namedTypes.Comment>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitPosition?(this: Context & M, path: NodePath<namedTypes.Position>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitFile?(this: Context & M, path: NodePath<namedTypes.File>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitProgram?(this: Context & M, path: NodePath<namedTypes.Program>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitStatement?(this: Context & M, path: NodePath<namedTypes.Statement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitFunction?(this: Context & M, path: NodePath<namedTypes.Function>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitExpression?(this: Context & M, path: NodePath<namedTypes.Expression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitPattern?(this: Context & M, path: NodePath<namedTypes.Pattern>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitIdentifier?(this: Context & M, path: NodePath<namedTypes.Identifier>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitBlockStatement?(this: Context & M, path: NodePath<namedTypes.BlockStatement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitEmptyStatement?(this: Context & M, path: NodePath<namedTypes.EmptyStatement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitExpressionStatement?(this: Context & M, path: NodePath<namedTypes.ExpressionStatement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitIfStatement?(this: Context & M, path: NodePath<namedTypes.IfStatement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitLabeledStatement?(this: Context & M, path: NodePath<namedTypes.LabeledStatement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitBreakStatement?(this: Context & M, path: NodePath<namedTypes.BreakStatement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitContinueStatement?(this: Context & M, path: NodePath<namedTypes.ContinueStatement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitWithStatement?(this: Context & M, path: NodePath<namedTypes.WithStatement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitSwitchStatement?(this: Context & M, path: NodePath<namedTypes.SwitchStatement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitSwitchCase?(this: Context & M, path: NodePath<namedTypes.SwitchCase>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitReturnStatement?(this: Context & M, path: NodePath<namedTypes.ReturnStatement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitThrowStatement?(this: Context & M, path: NodePath<namedTypes.ThrowStatement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTryStatement?(this: Context & M, path: NodePath<namedTypes.TryStatement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitCatchClause?(this: Context & M, path: NodePath<namedTypes.CatchClause>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitWhileStatement?(this: Context & M, path: NodePath<namedTypes.WhileStatement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitDoWhileStatement?(this: Context & M, path: NodePath<namedTypes.DoWhileStatement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitForStatement?(this: Context & M, path: NodePath<namedTypes.ForStatement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitDeclaration?(this: Context & M, path: NodePath<namedTypes.Declaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitVariableDeclaration?(this: Context & M, path: NodePath<namedTypes.VariableDeclaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitForInStatement?(this: Context & M, path: NodePath<namedTypes.ForInStatement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitDebuggerStatement?(this: Context & M, path: NodePath<namedTypes.DebuggerStatement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitFunctionDeclaration?(this: Context & M, path: NodePath<namedTypes.FunctionDeclaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitFunctionExpression?(this: Context & M, path: NodePath<namedTypes.FunctionExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitVariableDeclarator?(this: Context & M, path: NodePath<namedTypes.VariableDeclarator>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitThisExpression?(this: Context & M, path: NodePath<namedTypes.ThisExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitArrayExpression?(this: Context & M, path: NodePath<namedTypes.ArrayExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitObjectExpression?(this: Context & M, path: NodePath<namedTypes.ObjectExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitProperty?(this: Context & M, path: NodePath<namedTypes.Property>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitLiteral?(this: Context & M, path: NodePath<namedTypes.Literal>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitSequenceExpression?(this: Context & M, path: NodePath<namedTypes.SequenceExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitUnaryExpression?(this: Context & M, path: NodePath<namedTypes.UnaryExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitBinaryExpression?(this: Context & M, path: NodePath<namedTypes.BinaryExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitAssignmentExpression?(this: Context & M, path: NodePath<namedTypes.AssignmentExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitChainElement?(this: Context & M, path: NodePath<namedTypes.ChainElement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitMemberExpression?(this: Context & M, path: NodePath<namedTypes.MemberExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitUpdateExpression?(this: Context & M, path: NodePath<namedTypes.UpdateExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitLogicalExpression?(this: Context & M, path: NodePath<namedTypes.LogicalExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitConditionalExpression?(this: Context & M, path: NodePath<namedTypes.ConditionalExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitNewExpression?(this: Context & M, path: NodePath<namedTypes.NewExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitCallExpression?(this: Context & M, path: NodePath<namedTypes.CallExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitRestElement?(this: Context & M, path: NodePath<namedTypes.RestElement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.TypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.TSTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitSpreadElementPattern?(this: Context & M, path: NodePath<namedTypes.SpreadElementPattern>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitArrowFunctionExpression?(this: Context & M, path: NodePath<namedTypes.ArrowFunctionExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitForOfStatement?(this: Context & M, path: NodePath<namedTypes.ForOfStatement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitYieldExpression?(this: Context & M, path: NodePath<namedTypes.YieldExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitGeneratorExpression?(this: Context & M, path: NodePath<namedTypes.GeneratorExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitComprehensionBlock?(this: Context & M, path: NodePath<namedTypes.ComprehensionBlock>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitComprehensionExpression?(this: Context & M, path: NodePath<namedTypes.ComprehensionExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitObjectProperty?(this: Context & M, path: NodePath<namedTypes.ObjectProperty>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitPropertyPattern?(this: Context & M, path: NodePath<namedTypes.PropertyPattern>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitObjectPattern?(this: Context & M, path: NodePath<namedTypes.ObjectPattern>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitArrayPattern?(this: Context & M, path: NodePath<namedTypes.ArrayPattern>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitSpreadElement?(this: Context & M, path: NodePath<namedTypes.SpreadElement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitAssignmentPattern?(this: Context & M, path: NodePath<namedTypes.AssignmentPattern>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitMethodDefinition?(this: Context & M, path: NodePath<namedTypes.MethodDefinition>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitClassPropertyDefinition?(this: Context & M, path: NodePath<namedTypes.ClassPropertyDefinition>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitClassProperty?(this: Context & M, path: NodePath<namedTypes.ClassProperty>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitStaticBlock?(this: Context & M, path: NodePath<namedTypes.StaticBlock>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitClassBody?(this: Context & M, path: NodePath<namedTypes.ClassBody>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitClassDeclaration?(this: Context & M, path: NodePath<namedTypes.ClassDeclaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitClassExpression?(this: Context & M, path: NodePath<namedTypes.ClassExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitSuper?(this: Context & M, path: NodePath<namedTypes.Super>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitSpecifier?(this: Context & M, path: NodePath<namedTypes.Specifier>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitModuleSpecifier?(this: Context & M, path: NodePath<namedTypes.ModuleSpecifier>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitImportSpecifier?(this: Context & M, path: NodePath<namedTypes.ImportSpecifier>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitImportDefaultSpecifier?(this: Context & M, path: NodePath<namedTypes.ImportDefaultSpecifier>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitImportNamespaceSpecifier?(this: Context & M, path: NodePath<namedTypes.ImportNamespaceSpecifier>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitImportDeclaration?(this: Context & M, path: NodePath<namedTypes.ImportDeclaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitExportNamedDeclaration?(this: Context & M, path: NodePath<namedTypes.ExportNamedDeclaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitExportSpecifier?(this: Context & M, path: NodePath<namedTypes.ExportSpecifier>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitExportDefaultDeclaration?(this: Context & M, path: NodePath<namedTypes.ExportDefaultDeclaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitExportAllDeclaration?(this: Context & M, path: NodePath<namedTypes.ExportAllDeclaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTaggedTemplateExpression?(this: Context & M, path: NodePath<namedTypes.TaggedTemplateExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTemplateLiteral?(this: Context & M, path: NodePath<namedTypes.TemplateLiteral>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTemplateElement?(this: Context & M, path: NodePath<namedTypes.TemplateElement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitMetaProperty?(this: Context & M, path: NodePath<namedTypes.MetaProperty>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitAwaitExpression?(this: Context & M, path: NodePath<namedTypes.AwaitExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitSpreadProperty?(this: Context & M, path: NodePath<namedTypes.SpreadProperty>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitSpreadPropertyPattern?(this: Context & M, path: NodePath<namedTypes.SpreadPropertyPattern>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitImportExpression?(this: Context & M, path: NodePath<namedTypes.ImportExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitChainExpression?(this: Context & M, path: NodePath<namedTypes.ChainExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitOptionalCallExpression?(this: Context & M, path: NodePath<namedTypes.OptionalCallExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitOptionalMemberExpression?(this: Context & M, path: NodePath<namedTypes.OptionalMemberExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitDecorator?(this: Context & M, path: NodePath<namedTypes.Decorator>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitPrivateName?(this: Context & M, path: NodePath<namedTypes.PrivateName>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitClassPrivateProperty?(this: Context & M, path: NodePath<namedTypes.ClassPrivateProperty>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitImportAttribute?(this: Context & M, path: NodePath<namedTypes.ImportAttribute>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitRecordExpression?(this: Context & M, path: NodePath<namedTypes.RecordExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitObjectMethod?(this: Context & M, path: NodePath<namedTypes.ObjectMethod>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTupleExpression?(this: Context & M, path: NodePath<namedTypes.TupleExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitModuleExpression?(this: Context & M, path: NodePath<namedTypes.ModuleExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitJSXAttribute?(this: Context & M, path: NodePath<namedTypes.JSXAttribute>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitJSXIdentifier?(this: Context & M, path: NodePath<namedTypes.JSXIdentifier>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitJSXNamespacedName?(this: Context & M, path: NodePath<namedTypes.JSXNamespacedName>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitJSXExpressionContainer?(this: Context & M, path: NodePath<namedTypes.JSXExpressionContainer>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitJSXElement?(this: Context & M, path: NodePath<namedTypes.JSXElement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitJSXFragment?(this: Context & M, path: NodePath<namedTypes.JSXFragment>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitJSXMemberExpression?(this: Context & M, path: NodePath<namedTypes.JSXMemberExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitJSXSpreadAttribute?(this: Context & M, path: NodePath<namedTypes.JSXSpreadAttribute>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitJSXEmptyExpression?(this: Context & M, path: NodePath<namedTypes.JSXEmptyExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitJSXText?(this: Context & M, path: NodePath<namedTypes.JSXText>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitJSXSpreadChild?(this: Context & M, path: NodePath<namedTypes.JSXSpreadChild>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitJSXOpeningElement?(this: Context & M, path: NodePath<namedTypes.JSXOpeningElement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitJSXClosingElement?(this: Context & M, path: NodePath<namedTypes.JSXClosingElement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitJSXOpeningFragment?(this: Context & M, path: NodePath<namedTypes.JSXOpeningFragment>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitJSXClosingFragment?(this: Context & M, path: NodePath<namedTypes.JSXClosingFragment>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTypeParameterDeclaration?(this: Context & M, path: NodePath<namedTypes.TypeParameterDeclaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSTypeParameterDeclaration?(this: Context & M, path: NodePath<namedTypes.TSTypeParameterDeclaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTypeParameterInstantiation?(this: Context & M, path: NodePath<namedTypes.TypeParameterInstantiation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSTypeParameterInstantiation?(this: Context & M, path: NodePath<namedTypes.TSTypeParameterInstantiation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitClassImplements?(this: Context & M, path: NodePath<namedTypes.ClassImplements>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSType?(this: Context & M, path: NodePath<namedTypes.TSType>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSHasOptionalTypeParameterInstantiation?(this: Context & M, path: NodePath<namedTypes.TSHasOptionalTypeParameterInstantiation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSExpressionWithTypeArguments?(this: Context & M, path: NodePath<namedTypes.TSExpressionWithTypeArguments>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitFlow?(this: Context & M, path: NodePath<namedTypes.Flow>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitFlowType?(this: Context & M, path: NodePath<namedTypes.FlowType>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitAnyTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.AnyTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitEmptyTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.EmptyTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitMixedTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.MixedTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitVoidTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.VoidTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitSymbolTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.SymbolTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitNumberTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.NumberTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitBigIntTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.BigIntTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitNumberLiteralTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.NumberLiteralTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitNumericLiteralTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.NumericLiteralTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitBigIntLiteralTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.BigIntLiteralTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitStringTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.StringTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitStringLiteralTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.StringLiteralTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitBooleanTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.BooleanTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitBooleanLiteralTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.BooleanLiteralTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitNullableTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.NullableTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitNullLiteralTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.NullLiteralTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitNullTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.NullTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitThisTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.ThisTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitExistsTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.ExistsTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitExistentialTypeParam?(this: Context & M, path: NodePath<namedTypes.ExistentialTypeParam>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitFunctionTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.FunctionTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitFunctionTypeParam?(this: Context & M, path: NodePath<namedTypes.FunctionTypeParam>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitArrayTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.ArrayTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitObjectTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.ObjectTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitObjectTypeProperty?(this: Context & M, path: NodePath<namedTypes.ObjectTypeProperty>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitObjectTypeSpreadProperty?(this: Context & M, path: NodePath<namedTypes.ObjectTypeSpreadProperty>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitObjectTypeIndexer?(this: Context & M, path: NodePath<namedTypes.ObjectTypeIndexer>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitObjectTypeCallProperty?(this: Context & M, path: NodePath<namedTypes.ObjectTypeCallProperty>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitObjectTypeInternalSlot?(this: Context & M, path: NodePath<namedTypes.ObjectTypeInternalSlot>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitVariance?(this: Context & M, path: NodePath<namedTypes.Variance>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitQualifiedTypeIdentifier?(this: Context & M, path: NodePath<namedTypes.QualifiedTypeIdentifier>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitGenericTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.GenericTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitMemberTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.MemberTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitIndexedAccessType?(this: Context & M, path: NodePath<namedTypes.IndexedAccessType>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitOptionalIndexedAccessType?(this: Context & M, path: NodePath<namedTypes.OptionalIndexedAccessType>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitUnionTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.UnionTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitIntersectionTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.IntersectionTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTypeofTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.TypeofTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTypeParameter?(this: Context & M, path: NodePath<namedTypes.TypeParameter>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitInterfaceTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.InterfaceTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitInterfaceExtends?(this: Context & M, path: NodePath<namedTypes.InterfaceExtends>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitInterfaceDeclaration?(this: Context & M, path: NodePath<namedTypes.InterfaceDeclaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitDeclareInterface?(this: Context & M, path: NodePath<namedTypes.DeclareInterface>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTypeAlias?(this: Context & M, path: NodePath<namedTypes.TypeAlias>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitDeclareTypeAlias?(this: Context & M, path: NodePath<namedTypes.DeclareTypeAlias>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitOpaqueType?(this: Context & M, path: NodePath<namedTypes.OpaqueType>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitDeclareOpaqueType?(this: Context & M, path: NodePath<namedTypes.DeclareOpaqueType>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTypeCastExpression?(this: Context & M, path: NodePath<namedTypes.TypeCastExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTupleTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.TupleTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitDeclareVariable?(this: Context & M, path: NodePath<namedTypes.DeclareVariable>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitDeclareFunction?(this: Context & M, path: NodePath<namedTypes.DeclareFunction>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitFlowPredicate?(this: Context & M, path: NodePath<namedTypes.FlowPredicate>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitDeclareClass?(this: Context & M, path: NodePath<namedTypes.DeclareClass>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitDeclareModule?(this: Context & M, path: NodePath<namedTypes.DeclareModule>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitDeclareModuleExports?(this: Context & M, path: NodePath<namedTypes.DeclareModuleExports>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitDeclareExportDeclaration?(this: Context & M, path: NodePath<namedTypes.DeclareExportDeclaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitExportBatchSpecifier?(this: Context & M, path: NodePath<namedTypes.ExportBatchSpecifier>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitDeclareExportAllDeclaration?(this: Context & M, path: NodePath<namedTypes.DeclareExportAllDeclaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitInferredPredicate?(this: Context & M, path: NodePath<namedTypes.InferredPredicate>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitDeclaredPredicate?(this: Context & M, path: NodePath<namedTypes.DeclaredPredicate>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitEnumDeclaration?(this: Context & M, path: NodePath<namedTypes.EnumDeclaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitEnumBooleanBody?(this: Context & M, path: NodePath<namedTypes.EnumBooleanBody>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitEnumNumberBody?(this: Context & M, path: NodePath<namedTypes.EnumNumberBody>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitEnumStringBody?(this: Context & M, path: NodePath<namedTypes.EnumStringBody>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitEnumSymbolBody?(this: Context & M, path: NodePath<namedTypes.EnumSymbolBody>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitEnumBooleanMember?(this: Context & M, path: NodePath<namedTypes.EnumBooleanMember>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitEnumNumberMember?(this: Context & M, path: NodePath<namedTypes.EnumNumberMember>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitEnumStringMember?(this: Context & M, path: NodePath<namedTypes.EnumStringMember>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitEnumDefaultedMember?(this: Context & M, path: NodePath<namedTypes.EnumDefaultedMember>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitExportDeclaration?(this: Context & M, path: NodePath<namedTypes.ExportDeclaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitBlock?(this: Context & M, path: NodePath<namedTypes.Block>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitLine?(this: Context & M, path: NodePath<namedTypes.Line>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitNoop?(this: Context & M, path: NodePath<namedTypes.Noop>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitDoExpression?(this: Context & M, path: NodePath<namedTypes.DoExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitBindExpression?(this: Context & M, path: NodePath<namedTypes.BindExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitParenthesizedExpression?(this: Context & M, path: NodePath<namedTypes.ParenthesizedExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitExportNamespaceSpecifier?(this: Context & M, path: NodePath<namedTypes.ExportNamespaceSpecifier>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitExportDefaultSpecifier?(this: Context & M, path: NodePath<namedTypes.ExportDefaultSpecifier>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitCommentBlock?(this: Context & M, path: NodePath<namedTypes.CommentBlock>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitCommentLine?(this: Context & M, path: NodePath<namedTypes.CommentLine>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitDirective?(this: Context & M, path: NodePath<namedTypes.Directive>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitDirectiveLiteral?(this: Context & M, path: NodePath<namedTypes.DirectiveLiteral>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitInterpreterDirective?(this: Context & M, path: NodePath<namedTypes.InterpreterDirective>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitStringLiteral?(this: Context & M, path: NodePath<namedTypes.StringLiteral>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitNumericLiteral?(this: Context & M, path: NodePath<namedTypes.NumericLiteral>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitBigIntLiteral?(this: Context & M, path: NodePath<namedTypes.BigIntLiteral>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitDecimalLiteral?(this: Context & M, path: NodePath<namedTypes.DecimalLiteral>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitNullLiteral?(this: Context & M, path: NodePath<namedTypes.NullLiteral>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitBooleanLiteral?(this: Context & M, path: NodePath<namedTypes.BooleanLiteral>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitRegExpLiteral?(this: Context & M, path: NodePath<namedTypes.RegExpLiteral>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitClassMethod?(this: Context & M, path: NodePath<namedTypes.ClassMethod>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitClassPrivateMethod?(this: Context & M, path: NodePath<namedTypes.ClassPrivateMethod>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSHasOptionalTypeAnnotation?(this: Context & M, path: NodePath<namedTypes.TSHasOptionalTypeAnnotation>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitClassAccessorProperty?(this: Context & M, path: NodePath<namedTypes.ClassAccessorProperty>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitRestProperty?(this: Context & M, path: NodePath<namedTypes.RestProperty>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitForAwaitStatement?(this: Context & M, path: NodePath<namedTypes.ForAwaitStatement>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitImport?(this: Context & M, path: NodePath<namedTypes.Import>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitV8IntrinsicIdentifier?(this: Context & M, path: NodePath<namedTypes.V8IntrinsicIdentifier>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTopicReference?(this: Context & M, path: NodePath<namedTypes.TopicReference>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSQualifiedName?(this: Context & M, path: NodePath<namedTypes.TSQualifiedName>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSTypeReference?(this: Context & M, path: NodePath<namedTypes.TSTypeReference>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSHasOptionalTypeParameters?(this: Context & M, path: NodePath<namedTypes.TSHasOptionalTypeParameters>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSAsExpression?(this: Context & M, path: NodePath<namedTypes.TSAsExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSTypeCastExpression?(this: Context & M, path: NodePath<namedTypes.TSTypeCastExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSSatisfiesExpression?(this: Context & M, path: NodePath<namedTypes.TSSatisfiesExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSNonNullExpression?(this: Context & M, path: NodePath<namedTypes.TSNonNullExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSAnyKeyword?(this: Context & M, path: NodePath<namedTypes.TSAnyKeyword>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSBigIntKeyword?(this: Context & M, path: NodePath<namedTypes.TSBigIntKeyword>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSBooleanKeyword?(this: Context & M, path: NodePath<namedTypes.TSBooleanKeyword>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSNeverKeyword?(this: Context & M, path: NodePath<namedTypes.TSNeverKeyword>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSNullKeyword?(this: Context & M, path: NodePath<namedTypes.TSNullKeyword>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSNumberKeyword?(this: Context & M, path: NodePath<namedTypes.TSNumberKeyword>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSObjectKeyword?(this: Context & M, path: NodePath<namedTypes.TSObjectKeyword>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSStringKeyword?(this: Context & M, path: NodePath<namedTypes.TSStringKeyword>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSSymbolKeyword?(this: Context & M, path: NodePath<namedTypes.TSSymbolKeyword>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSUndefinedKeyword?(this: Context & M, path: NodePath<namedTypes.TSUndefinedKeyword>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSUnknownKeyword?(this: Context & M, path: NodePath<namedTypes.TSUnknownKeyword>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSVoidKeyword?(this: Context & M, path: NodePath<namedTypes.TSVoidKeyword>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSIntrinsicKeyword?(this: Context & M, path: NodePath<namedTypes.TSIntrinsicKeyword>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSThisType?(this: Context & M, path: NodePath<namedTypes.TSThisType>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSArrayType?(this: Context & M, path: NodePath<namedTypes.TSArrayType>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSLiteralType?(this: Context & M, path: NodePath<namedTypes.TSLiteralType>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSUnionType?(this: Context & M, path: NodePath<namedTypes.TSUnionType>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSIntersectionType?(this: Context & M, path: NodePath<namedTypes.TSIntersectionType>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSConditionalType?(this: Context & M, path: NodePath<namedTypes.TSConditionalType>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSInferType?(this: Context & M, path: NodePath<namedTypes.TSInferType>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSTypeParameter?(this: Context & M, path: NodePath<namedTypes.TSTypeParameter>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSParenthesizedType?(this: Context & M, path: NodePath<namedTypes.TSParenthesizedType>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSFunctionType?(this: Context & M, path: NodePath<namedTypes.TSFunctionType>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSConstructorType?(this: Context & M, path: NodePath<namedTypes.TSConstructorType>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSDeclareFunction?(this: Context & M, path: NodePath<namedTypes.TSDeclareFunction>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSDeclareMethod?(this: Context & M, path: NodePath<namedTypes.TSDeclareMethod>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSMappedType?(this: Context & M, path: NodePath<namedTypes.TSMappedType>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSTupleType?(this: Context & M, path: NodePath<namedTypes.TSTupleType>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSNamedTupleMember?(this: Context & M, path: NodePath<namedTypes.TSNamedTupleMember>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSRestType?(this: Context & M, path: NodePath<namedTypes.TSRestType>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSOptionalType?(this: Context & M, path: NodePath<namedTypes.TSOptionalType>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSIndexedAccessType?(this: Context & M, path: NodePath<namedTypes.TSIndexedAccessType>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSTypeOperator?(this: Context & M, path: NodePath<namedTypes.TSTypeOperator>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSIndexSignature?(this: Context & M, path: NodePath<namedTypes.TSIndexSignature>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSPropertySignature?(this: Context & M, path: NodePath<namedTypes.TSPropertySignature>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSMethodSignature?(this: Context & M, path: NodePath<namedTypes.TSMethodSignature>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSTypePredicate?(this: Context & M, path: NodePath<namedTypes.TSTypePredicate>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSCallSignatureDeclaration?(this: Context & M, path: NodePath<namedTypes.TSCallSignatureDeclaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSConstructSignatureDeclaration?(this: Context & M, path: NodePath<namedTypes.TSConstructSignatureDeclaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSEnumMember?(this: Context & M, path: NodePath<namedTypes.TSEnumMember>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSTypeQuery?(this: Context & M, path: NodePath<namedTypes.TSTypeQuery>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSImportType?(this: Context & M, path: NodePath<namedTypes.TSImportType>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSTypeLiteral?(this: Context & M, path: NodePath<namedTypes.TSTypeLiteral>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSTypeAssertion?(this: Context & M, path: NodePath<namedTypes.TSTypeAssertion>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSInstantiationExpression?(this: Context & M, path: NodePath<namedTypes.TSInstantiationExpression>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSEnumDeclaration?(this: Context & M, path: NodePath<namedTypes.TSEnumDeclaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSTypeAliasDeclaration?(this: Context & M, path: NodePath<namedTypes.TSTypeAliasDeclaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSModuleBlock?(this: Context & M, path: NodePath<namedTypes.TSModuleBlock>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSModuleDeclaration?(this: Context & M, path: NodePath<namedTypes.TSModuleDeclaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSImportEqualsDeclaration?(this: Context & M, path: NodePath<namedTypes.TSImportEqualsDeclaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSExternalModuleReference?(this: Context & M, path: NodePath<namedTypes.TSExternalModuleReference>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSExportAssignment?(this: Context & M, path: NodePath<namedTypes.TSExportAssignment>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSNamespaceExportDeclaration?(this: Context & M, path: NodePath<namedTypes.TSNamespaceExportDeclaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSInterfaceBody?(this: Context & M, path: NodePath<namedTypes.TSInterfaceBody>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSInterfaceDeclaration?(this: Context & M, path: NodePath<namedTypes.TSInterfaceDeclaration>): any;
./node_modules/recast/node_modules/ast-types/lib/gen/visitor.d.ts:    visitTSParameterProperty?(this: Context & M, path: NodePath<namedTypes.TSParameterProperty>): any;
./node_modules/recast/node_modules/ast-types/lib/shared.d.ts:    geq: (than: any) => import("./types").Type<unknown>;
./node_modules/recast/node_modules/ast-types/lib/shared.d.ts:        default?: any;
./node_modules/recast/node_modules/ast-types/lib/fork.d.ts:        or(...types: any[]): import("./types").Type<any>;
./node_modules/recast/node_modules/ast-types/lib/fork.d.ts:        from<T>(value: any, name?: string | undefined): import("./types").Type<T>;
./node_modules/recast/node_modules/ast-types/lib/fork.d.ts:            [key: string]: any;
./node_modules/recast/node_modules/ast-types/lib/fork.d.ts:    defineMethod: (name: any, func?: Function | undefined) => Function;
./node_modules/recast/node_modules/ast-types/lib/fork.d.ts:    getFieldNames: (object: any) => string[];
./node_modules/recast/node_modules/ast-types/lib/fork.d.ts:    getFieldValue: (object: any, fieldName: any) => any;
./node_modules/recast/node_modules/ast-types/lib/fork.d.ts:    eachField: (object: any, callback: (name: any, value: any) => any, context?: any) => void;
./node_modules/recast/node_modules/ast-types/lib/fork.d.ts:    someField: (object: any, callback: (name: any, value: any) => any, context?: any) => boolean;
./node_modules/recast/node_modules/ast-types/lib/fork.d.ts:    getBuilderName: (typeName: any) => any;
./node_modules/recast/node_modules/ast-types/lib/fork.d.ts:        (a: any, b: any, problemPath?: any): boolean;
./node_modules/recast/node_modules/ast-types/lib/fork.d.ts:        assert(a: any, b: any): void;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    _reusableContextStack: any;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    _methodNameTable: any;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    _shouldVisitComments: any;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    Context: any;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    _visiting: any;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    _changeReported: any;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    visit(...args: any[]): any;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    reset(...args: any[]): any;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    visitWithoutReset(path: any): any;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    AbortRequest: any;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    visitor: any;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    acquireContext(path: any): any;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    releaseContext(context: any): void;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    wasChangeReported(): any;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    fromMethodsObject(methods?: any): Visitor;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    visit<M = {}>(node: ASTNode, methods?: import("./gen/visitor").Visitor<M>): any;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    currentPath: any;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    Context: any;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    visitor: any;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    reset(path: any, ...args: any[]): any;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    invokeVisitorMethod(methodName: string): any;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    traverse(path: any, newVisitor?: VisitorMethods): any;
./node_modules/recast/node_modules/ast-types/lib/path-visitor.d.ts:    visit(path: any, newVisitor?: VisitorMethods): any;
./node_modules/recast/lib/patcher.d.ts:    replace(loc: any, lines: any): any;
./node_modules/recast/lib/patcher.d.ts:    get(loc?: any): any;
./node_modules/recast/lib/patcher.d.ts:    tryToReprintComments(newNode: any, oldNode: any, print: any): any;
./node_modules/recast/lib/patcher.d.ts:    deleteComments(node: any): any;
./node_modules/recast/lib/patcher.d.ts:    new (lines: any): PatcherType;
./node_modules/recast/lib/patcher.d.ts:export declare function getReprinter(path: any): ((print: any) => any) | undefined;
./node_modules/recast/lib/printer.d.ts:    map?: any;
./node_modules/recast/lib/printer.d.ts:    print(ast: any): PrintResultType;
./node_modules/recast/lib/printer.d.ts:    printGenerically(ast: any): PrintResultType;
./node_modules/recast/lib/printer.d.ts:    new (config?: any): PrinterType;
./node_modules/recast/lib/options.d.ts:    parser?: any;
./node_modules/recast/lib/options.d.ts:    esprima?: any;
./node_modules/recast/lib/comments.d.ts:export declare function attach(comments: any[], ast: any, lines: any): void;
./node_modules/recast/lib/comments.d.ts:export declare function printComments(path: any, print: any): any;
./node_modules/recast/lib/fast-path.d.ts:    stack: any[];
./node_modules/recast/lib/fast-path.d.ts:    copy(): any;
./node_modules/recast/lib/fast-path.d.ts:    getName(): any;
./node_modules/recast/lib/fast-path.d.ts:    getValue(): any;
./node_modules/recast/lib/fast-path.d.ts:    valueIsDuplicate(): any;
./node_modules/recast/lib/fast-path.d.ts:    getNode(count?: number): any;
./node_modules/recast/lib/fast-path.d.ts:    getParentNode(count?: number): any;
./node_modules/recast/lib/fast-path.d.ts:    getRootValue(): any;
./node_modules/recast/lib/fast-path.d.ts:    call(callback: any, ...names: any[]): any;
./node_modules/recast/lib/fast-path.d.ts:    each(callback: any, ...names: any[]): any;
./node_modules/recast/lib/fast-path.d.ts:    map(callback: any, ...names: any[]): any;
./node_modules/recast/lib/fast-path.d.ts:    hasParens(): any;
./node_modules/recast/lib/fast-path.d.ts:    getPrevToken(node: any): any;
./node_modules/recast/lib/fast-path.d.ts:    getNextToken(node: any): any;
./node_modules/recast/lib/fast-path.d.ts:    needsParens(assumeExpressionContext?: boolean): any;
./node_modules/recast/lib/fast-path.d.ts:    canBeFirstInStatement(): any;
./node_modules/recast/lib/fast-path.d.ts:    firstInStatement(): any;
./node_modules/recast/lib/fast-path.d.ts:    new (value: any): FastPathType;
./node_modules/recast/lib/fast-path.d.ts:    from(obj: any): any;
./node_modules/recast/lib/lines.d.ts:    getSourceMap(sourceMapName: string, sourceRoot?: string): any;
./node_modules/recast/lib/util.d.ts:export declare function getLineTerminator(): any;
./node_modules/recast/lib/util.d.ts:export declare function getOption(options: any, key: any, defaultValue: any): any;
./node_modules/recast/lib/util.d.ts:export declare function getUnionOfKeys(...args: any[]): any;
./node_modules/recast/lib/util.d.ts:export declare function comparePos(pos1: any, pos2: any): number;
./node_modules/recast/lib/util.d.ts:export declare function copyPos(pos: any): {
./node_modules/recast/lib/util.d.ts:    line: any;
./node_modules/recast/lib/util.d.ts:    column: any;
./node_modules/recast/lib/util.d.ts:export declare function composeSourceMaps(formerMap: any, latterMap: any): any;
./node_modules/recast/lib/util.d.ts:export declare function getTrueLoc(node: any, lines: any): {
./node_modules/recast/lib/util.d.ts:    start: any;
./node_modules/recast/lib/util.d.ts:    end: any;
./node_modules/recast/lib/util.d.ts:export declare function fixFaultyLocations(node: any, lines: any): void;
./node_modules/recast/lib/util.d.ts:export declare function isExportDeclaration(node: any): boolean;
./node_modules/recast/lib/util.d.ts:export declare function getParentExportDeclaration(path: any): any;
./node_modules/recast/lib/util.d.ts:export declare function isTrailingCommaEnabled(options: any, context: any): boolean;
./node_modules/recast/lib/parser.d.ts:export declare function parse(source: string, options?: Partial<Options>): any;
./node_modules/svg-pathdata/lib/SVGPathDataTransformer.d.ts:    function ROUND(roundVal?: number): (command: any) => any;
./node_modules/svg-pathdata/lib/SVGPathDataTransformer.d.ts:    function TO_ABS(): (command: any) => any;
./node_modules/svg-pathdata/lib/SVGPathDataTransformer.d.ts:    function TO_REL(): (command: any) => any;
./node_modules/svg-pathdata/lib/SVGPathDataTransformer.d.ts:    function NORMALIZE_HVZ(normalizeZ?: boolean, normalizeH?: boolean, normalizeV?: boolean): (command: any) => any;
./node_modules/svg-pathdata/lib/SVGPathDataTransformer.d.ts:    function NORMALIZE_ST(): (command: any) => any;
./node_modules/svg-pathdata/lib/SVGPathDataTransformer.d.ts:    function QT_TO_C(): (command: any) => any;
./node_modules/svg-pathdata/lib/SVGPathDataTransformer.d.ts:    function INFO(f: (command: any, prevXAbs: number, prevYAbs: number, pathStartXAbs: number, pathStartYAbs: number) => any | any[]): (command: any) => any;
./node_modules/svg-pathdata/lib/SVGPathDataTransformer.d.ts:    function SANITIZE(EPS?: number): (command: any) => any;
./node_modules/svg-pathdata/lib/SVGPathDataTransformer.d.ts:    function MATRIX(a: number, b: number, c: number, d: number, e: number, f: number): (command: any) => any;
./node_modules/svg-pathdata/lib/SVGPathDataTransformer.d.ts:    function ROTATE(a: number, x?: number, y?: number): (command: any) => any;
./node_modules/svg-pathdata/lib/SVGPathDataTransformer.d.ts:    function TRANSLATE(dX: number, dY?: number): (command: any) => any;
./node_modules/svg-pathdata/lib/SVGPathDataTransformer.d.ts:    function SCALE(dX: number, dY?: number): (command: any) => any;
./node_modules/svg-pathdata/lib/SVGPathDataTransformer.d.ts:    function SKEW_X(a: number): (command: any) => any;
./node_modules/svg-pathdata/lib/SVGPathDataTransformer.d.ts:    function SKEW_Y(a: number): (command: any) => any;
./node_modules/svg-pathdata/lib/SVGPathDataTransformer.d.ts:    function X_AXIS_SYMMETRY(xOffset?: number): (command: any) => any;
./node_modules/svg-pathdata/lib/SVGPathDataTransformer.d.ts:    function Y_AXIS_SYMMETRY(yOffset?: number): (command: any) => any;
./node_modules/svg-pathdata/lib/SVGPathDataTransformer.d.ts:    function A_TO_C(): (command: any) => any;
./node_modules/svg-pathdata/lib/SVGPathDataTransformer.d.ts:    function ANNOTATE_ARCS(): (command: any) => any;
./node_modules/svg-pathdata/src/SVGPathDataTransformer.ts:    return function round(command: any) {
./node_modules/svg-pathdata/src/SVGPathDataTransformer.ts:    f: (command: any, prevXAbs: number, prevYAbs: number,
./node_modules/svg-pathdata/src/SVGPathDataTransformer.ts:    return function transform(command: any) {
./node_modules/cli-table3/node_modules/@colors/colors/index.d.ts:export function setTheme(theme: any): void;
./node_modules/cli-table3/node_modules/@colors/colors/safe.d.ts:export function setTheme(theme: any): void;
./node_modules/axe-core/axe.d.ts:    data: any;
./node_modules/axe-core/axe.d.ts:    options?: any;
./node_modules/axe-core/axe.d.ts:    run(...args: any[]): any;
./node_modules/axe-core/axe.d.ts:      callback(...args: any[]): void;
./node_modules/axe-core/axe.d.ts:  let plugins: any;
./node_modules/axe-core/axe.d.ts:    message: any | Error,
./node_modules/axe-core/axe.d.ts:    message: any | Error,
./node_modules/axe-core/axe.d.ts:  type ReplyData = { channelId: string; message: any; keepalive: boolean };
./node_modules/eslint-plugin-storybook/dist/configs/flat/recommended.d.ts:        readonly storybook: any;
./node_modules/eslint-plugin-storybook/dist/configs/flat/csf-strict.d.ts:        readonly storybook: any;
./node_modules/eslint-plugin-storybook/dist/configs/flat/addon-interactions.d.ts:        readonly storybook: any;
./node_modules/eslint-plugin-storybook/dist/configs/flat/csf.d.ts:        readonly storybook: any;
./node_modules/eslint-plugin-storybook/dist/index.d.ts:                readonly storybook: any;
./node_modules/eslint-plugin-storybook/dist/index.d.ts:                readonly storybook: any;
./node_modules/eslint-plugin-storybook/dist/index.d.ts:                readonly storybook: any;
./node_modules/eslint-plugin-storybook/dist/index.d.ts:                readonly storybook: any;
./node_modules/typescript/lib/lib.es2019.object.d.ts:    fromEntries(entries: Iterable<readonly any[]>): any;
./node_modules/typescript/lib/lib.dom.iterable.d.ts:    initMessageEvent(type: string, bubbles?: boolean, cancelable?: boolean, data?: any, origin?: string, lastEventId?: string, source?: MessageEventSource | null, ports?: Iterable<MessagePort>): void;
./node_modules/typescript/lib/lib.dom.iterable.d.ts:    getActiveUniforms(program: WebGLProgram, uniformIndices: Iterable<GLuint>, pname: GLenum): any;
./node_modules/typescript/lib/lib.es2015.reflect.d.ts:    function apply(target: Function, thisArgument: any, argumentsList: ArrayLike<any>): any;
./node_modules/typescript/lib/lib.es2015.reflect.d.ts:        newTarget?: new (...args: any) => any,
./node_modules/typescript/lib/lib.es2015.reflect.d.ts:    function construct(target: Function, argumentsList: ArrayLike<any>, newTarget?: Function): any;
./node_modules/typescript/lib/lib.es2015.reflect.d.ts:    ): P extends keyof T ? T[P] : any;
./node_modules/typescript/lib/lib.es2015.reflect.d.ts:    ): TypedPropertyDescriptor<P extends keyof T ? T[P] : any> | undefined;
./node_modules/typescript/lib/lib.es2015.reflect.d.ts:        value: P extends keyof T ? T[P] : any,
./node_modules/typescript/lib/lib.es2015.reflect.d.ts:        receiver?: any,
./node_modules/typescript/lib/lib.es2015.reflect.d.ts:    function set(target: object, propertyKey: PropertyKey, value: any, receiver?: any): boolean;
./node_modules/typescript/lib/lib.es2021.intl.d.ts:        fractionalSecond: any;
./node_modules/typescript/lib/lib.es2015.core.d.ts:    find<S extends T>(predicate: (value: T, index: number, obj: T[]) => value is S, thisArg?: any): S | undefined;
./node_modules/typescript/lib/lib.es2015.core.d.ts:    find(predicate: (value: T, index: number, obj: T[]) => unknown, thisArg?: any): T | undefined;
./node_modules/typescript/lib/lib.es2015.core.d.ts:    findIndex(predicate: (value: T, index: number, obj: T[]) => unknown, thisArg?: any): number;
./node_modules/typescript/lib/lib.es2015.core.d.ts:    from<T, U>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => U, thisArg?: any): U[];
./node_modules/typescript/lib/lib.es2015.core.d.ts:    assign(target: object, ...sources: any[]): any;
./node_modules/typescript/lib/lib.es2015.core.d.ts:    getOwnPropertySymbols(o: any): symbol[];
./node_modules/typescript/lib/lib.es2015.core.d.ts:    is(value1: any, value2: any): boolean;
./node_modules/typescript/lib/lib.es2015.core.d.ts:    setPrototypeOf(o: any, proto: object | null): any;
./node_modules/typescript/lib/lib.es2015.core.d.ts:    find<S extends T>(predicate: (value: T, index: number, obj: readonly T[]) => value is S, thisArg?: any): S | undefined;
./node_modules/typescript/lib/lib.es2015.core.d.ts:    find(predicate: (value: T, index: number, obj: readonly T[]) => unknown, thisArg?: any): T | undefined;
./node_modules/typescript/lib/lib.es2015.core.d.ts:    findIndex(predicate: (value: T, index: number, obj: readonly T[]) => unknown, thisArg?: any): number;
./node_modules/typescript/lib/lib.es2015.core.d.ts:    raw(template: { raw: readonly string[] | ArrayLike<string>; }, ...substitutions: any[]): string;
./node_modules/typescript/lib/lib.es2015.proxy.d.ts:    apply?(target: T, thisArg: any, argArray: any[]): any;
./node_modules/typescript/lib/lib.es2015.proxy.d.ts:    construct?(target: T, argArray: any[], newTarget: Function): object;
./node_modules/typescript/lib/lib.es2015.proxy.d.ts:    get?(target: T, p: string | symbol, receiver: any): any;
./node_modules/typescript/lib/lib.es2015.proxy.d.ts:    set?(target: T, p: string | symbol, newValue: any, receiver: any): boolean;
./node_modules/typescript/lib/lib.es2015.generator.d.ts:    throw(e: any): IteratorResult<T, TReturn>;
./node_modules/typescript/lib/lib.es2015.generator.d.ts:    new (...args: any[]): Generator;
./node_modules/typescript/lib/lib.es2015.generator.d.ts:    (...args: any[]): Generator;
./node_modules/typescript/lib/lib.esnext.disposable.d.ts:    error: any;
./node_modules/typescript/lib/lib.esnext.disposable.d.ts:    suppressed: any;
./node_modules/typescript/lib/lib.esnext.disposable.d.ts:    new (error: any, suppressed: any, message?: string): SuppressedError;
./node_modules/typescript/lib/lib.esnext.disposable.d.ts:    (error: any, suppressed: any, message?: string): SuppressedError;
./node_modules/typescript/lib/lib.scripthost.d.ts:    new (s: string): any;
./node_modules/typescript/lib/lib.scripthost.d.ts:    Echo(s: any): void;
./node_modules/typescript/lib/lib.scripthost.d.ts:    ConnectObject(objEventSource: any, strPrefix: string): void;
./node_modules/typescript/lib/lib.scripthost.d.ts:    CreateObject(strProgID: string, strPrefix?: string): any;
./node_modules/typescript/lib/lib.scripthost.d.ts:    DisconnectObject(obj: any): void;
./node_modules/typescript/lib/lib.scripthost.d.ts:    GetObject(strPathname: string, strProgID?: string, strPrefix?: string): any;
./node_modules/typescript/lib/lib.scripthost.d.ts:    new <T = any>(collection: { Item(index: any): T; }): Enumerator<T>;
./node_modules/typescript/lib/lib.scripthost.d.ts:    new <T = any>(collection: any): Enumerator<T>;
./node_modules/typescript/lib/lib.es2015.promise.d.ts:    new <T>(executor: (resolve: (value: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void): Promise<T>;
./node_modules/typescript/lib/lib.es2015.promise.d.ts:    reject<T = never>(reason?: any): Promise<T>;
./node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts:    [Symbol.hasInstance](value: any): boolean;
./node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts:    [Symbol.replace](string: string, replacer: (substring: string, ...args: any[]) => string): string;
./node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts:    replace(searchValue: { [Symbol.replace](string: string, replacer: (substring: string, ...args: any[]) => string): string; }, replacer: (substring: string, ...args: any[]) => string): string;
./node_modules/typescript/lib/lib.es2024.promise.d.ts:    reject: (reason?: any) => void;
./node_modules/typescript/lib/lib.es2015.iterable.d.ts:    throw?(e?: any): IteratorResult<T, TReturn>;
./node_modules/typescript/lib/lib.es2015.iterable.d.ts:    from<T, U>(iterable: Iterable<T> | ArrayLike<T>, mapfn: (v: T, k: number) => U, thisArg?: any): U[];
./node_modules/typescript/lib/lib.es2015.iterable.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Int8Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es2015.iterable.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Uint8Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es2015.iterable.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Uint8ClampedArray<ArrayBuffer>;
./node_modules/typescript/lib/lib.es2015.iterable.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Int16Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es2015.iterable.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Uint16Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es2015.iterable.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Int32Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es2015.iterable.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Uint32Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es2015.iterable.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Float32Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es2015.iterable.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Float64Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.decorators.d.ts:    Class extends abstract new (...args: any) => any = abstract new (...args: any) => any,
./node_modules/typescript/lib/lib.decorators.d.ts:    Value extends (this: This, ...args: any) => any = (this: This, ...args: any) => any,
./node_modules/typescript/lib/lib.es2021.string.d.ts:    replaceAll(searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string;
./node_modules/typescript/lib/lib.es2018.asynciterable.d.ts:    throw?(e?: any): Promise<IteratorResult<T, TReturn>>;
./node_modules/typescript/lib/lib.es5.d.ts:declare function eval(x: string): any;
./node_modules/typescript/lib/lib.es5.d.ts:    value?: any;
./node_modules/typescript/lib/lib.es5.d.ts:    get?(): any;
./node_modules/typescript/lib/lib.es5.d.ts:    set?(v: any): void;
./node_modules/typescript/lib/lib.es5.d.ts:    new (value?: any): Object;
./node_modules/typescript/lib/lib.es5.d.ts:    (): any;
./node_modules/typescript/lib/lib.es5.d.ts:    (value: any): any;
./node_modules/typescript/lib/lib.es5.d.ts:    getPrototypeOf(o: any): any;
./node_modules/typescript/lib/lib.es5.d.ts:    getOwnPropertyDescriptor(o: any, p: PropertyKey): PropertyDescriptor | undefined;
./node_modules/typescript/lib/lib.es5.d.ts:    getOwnPropertyNames(o: any): string[];
./node_modules/typescript/lib/lib.es5.d.ts:    create(o: object | null): any;
./node_modules/typescript/lib/lib.es5.d.ts:    create(o: object | null, properties: PropertyDescriptorMap & ThisType<any>): any;
./node_modules/typescript/lib/lib.es5.d.ts:    isSealed(o: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    isFrozen(o: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    isExtensible(o: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    apply(this: Function, thisArg: any, argArray?: any): any;
./node_modules/typescript/lib/lib.es5.d.ts:    call(this: Function, thisArg: any, ...argArray: any[]): any;
./node_modules/typescript/lib/lib.es5.d.ts:    bind(this: Function, thisArg: any, ...argArray: any[]): any;
./node_modules/typescript/lib/lib.es5.d.ts:    prototype: any;
./node_modules/typescript/lib/lib.es5.d.ts:    arguments: any;
./node_modules/typescript/lib/lib.es5.d.ts:    bind<T>(this: T, thisArg: any): T;
./node_modules/typescript/lib/lib.es5.d.ts:    bind<A extends any[], B extends any[], R>(this: new (...args: [...A, ...B]) => R, thisArg: any, ...args: A): new (...args: B) => R;
./node_modules/typescript/lib/lib.es5.d.ts:    [index: number]: any;
./node_modules/typescript/lib/lib.es5.d.ts:    replace(searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string;
./node_modules/typescript/lib/lib.es5.d.ts:    new (value?: any): String;
./node_modules/typescript/lib/lib.es5.d.ts:    (value?: any): string;
./node_modules/typescript/lib/lib.es5.d.ts:    new (value?: any): Boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    new (value?: any): Number;
./node_modules/typescript/lib/lib.es5.d.ts:    (value?: any): number;
./node_modules/typescript/lib/lib.es5.d.ts:    toJSON(key?: any): string;
./node_modules/typescript/lib/lib.es5.d.ts:    parse(text: string, reviver?: (this: any, key: string, value: any) => any): any;
./node_modules/typescript/lib/lib.es5.d.ts:    stringify(value: any, replacer?: (this: any, key: string, value: any) => any, space?: string | number): string;
./node_modules/typescript/lib/lib.es5.d.ts:    stringify(value: any, replacer?: (number | string)[] | null, space?: string | number): string;
./node_modules/typescript/lib/lib.es5.d.ts:    every<S extends T>(predicate: (value: T, index: number, array: readonly T[]) => value is S, thisArg?: any): this is readonly S[];
./node_modules/typescript/lib/lib.es5.d.ts:    every(predicate: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    some(predicate: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    forEach(callbackfn: (value: T, index: number, array: readonly T[]) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.es5.d.ts:    map<U>(callbackfn: (value: T, index: number, array: readonly T[]) => U, thisArg?: any): U[];
./node_modules/typescript/lib/lib.es5.d.ts:    filter<S extends T>(predicate: (value: T, index: number, array: readonly T[]) => value is S, thisArg?: any): S[];
./node_modules/typescript/lib/lib.es5.d.ts:    filter(predicate: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any): T[];
./node_modules/typescript/lib/lib.es5.d.ts:    every<S extends T>(predicate: (value: T, index: number, array: T[]) => value is S, thisArg?: any): this is S[];
./node_modules/typescript/lib/lib.es5.d.ts:    every(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    some(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    forEach(callbackfn: (value: T, index: number, array: T[]) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.es5.d.ts:    map<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): U[];
./node_modules/typescript/lib/lib.es5.d.ts:    filter<S extends T>(predicate: (value: T, index: number, array: T[]) => value is S, thisArg?: any): S[];
./node_modules/typescript/lib/lib.es5.d.ts:    filter(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): T[];
./node_modules/typescript/lib/lib.es5.d.ts:    new (arrayLength?: number): any[];
./node_modules/typescript/lib/lib.es5.d.ts:    (arrayLength?: number): any[];
./node_modules/typescript/lib/lib.es5.d.ts:    isArray(arg: any): arg is any[];
./node_modules/typescript/lib/lib.es5.d.ts:    readonly prototype: any[];
./node_modules/typescript/lib/lib.es5.d.ts:declare type PromiseConstructorLike = new <T>(executor: (resolve: (value: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void) => PromiseLike<T>;
./node_modules/typescript/lib/lib.es5.d.ts:    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): PromiseLike<TResult1 | TResult2>;
./node_modules/typescript/lib/lib.es5.d.ts:    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
./node_modules/typescript/lib/lib.es5.d.ts:    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
./node_modules/typescript/lib/lib.es5.d.ts:    T extends object & { then(onfulfilled: infer F, ...args: infer _): any; } ? // `await` only unwraps object types with a callable `then`. Non-object types are not unwrapped
./node_modules/typescript/lib/lib.es5.d.ts:type Parameters<T extends (...args: any) => any> = T extends (...args: infer P) => any ? P : never;
./node_modules/typescript/lib/lib.es5.d.ts:type ConstructorParameters<T extends abstract new (...args: any) => any> = T extends abstract new (...args: infer P) => any ? P : never;
./node_modules/typescript/lib/lib.es5.d.ts:type ReturnType<T extends (...args: any) => any> = T extends (...args: any) => infer R ? R : any;
./node_modules/typescript/lib/lib.es5.d.ts:type InstanceType<T extends abstract new (...args: any) => any> = T extends abstract new (...args: any) => infer R ? R : any;
./node_modules/typescript/lib/lib.es5.d.ts:    isView(arg: any): arg is ArrayBufferView;
./node_modules/typescript/lib/lib.es5.d.ts:    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Int8Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;
./node_modules/typescript/lib/lib.es5.d.ts:    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;
./node_modules/typescript/lib/lib.es5.d.ts:    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.es5.d.ts:    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Int8Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Int8Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Uint8Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;
./node_modules/typescript/lib/lib.es5.d.ts:    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;
./node_modules/typescript/lib/lib.es5.d.ts:    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.es5.d.ts:    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Uint8Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint8Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Uint8ClampedArray<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;
./node_modules/typescript/lib/lib.es5.d.ts:    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;
./node_modules/typescript/lib/lib.es5.d.ts:    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.es5.d.ts:    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Uint8ClampedArray<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint8ClampedArray<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Int16Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;
./node_modules/typescript/lib/lib.es5.d.ts:    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;
./node_modules/typescript/lib/lib.es5.d.ts:    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.es5.d.ts:    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Int16Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Int16Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Uint16Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;
./node_modules/typescript/lib/lib.es5.d.ts:    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;
./node_modules/typescript/lib/lib.es5.d.ts:    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.es5.d.ts:    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Uint16Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint16Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Int32Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;
./node_modules/typescript/lib/lib.es5.d.ts:    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;
./node_modules/typescript/lib/lib.es5.d.ts:    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.es5.d.ts:    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Int32Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Int32Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Uint32Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;
./node_modules/typescript/lib/lib.es5.d.ts:    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;
./node_modules/typescript/lib/lib.es5.d.ts:    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.es5.d.ts:    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Uint32Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint32Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Float32Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;
./node_modules/typescript/lib/lib.es5.d.ts:    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;
./node_modules/typescript/lib/lib.es5.d.ts:    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.es5.d.ts:    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Float32Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Float32Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Float64Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;
./node_modules/typescript/lib/lib.es5.d.ts:    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;
./node_modules/typescript/lib/lib.es5.d.ts:    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.es5.d.ts:    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Float64Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es5.d.ts:    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es5.d.ts:    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Float64Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.esnext.float16.d.ts:    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.esnext.float16.d.ts:    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Float16Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.esnext.float16.d.ts:    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;
./node_modules/typescript/lib/lib.esnext.float16.d.ts:    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;
./node_modules/typescript/lib/lib.esnext.float16.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.esnext.float16.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.esnext.float16.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.esnext.float16.d.ts:    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.esnext.float16.d.ts:    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Float16Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.esnext.float16.d.ts:    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.esnext.float16.d.ts:    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Float16Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.esnext.float16.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Float16Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es2020.promise.d.ts:    reason: any;
./node_modules/typescript/lib/lib.dom.d.ts:    processorOptions?: any;
./node_modules/typescript/lib/lib.dom.d.ts:    error?: any;
./node_modules/typescript/lib/lib.dom.d.ts:    data?: any;
./node_modules/typescript/lib/lib.dom.d.ts:    data?: any;
./node_modules/typescript/lib/lib.dom.d.ts:    paymentMethodErrors?: any;
./node_modules/typescript/lib/lib.dom.d.ts:    methodDetails?: any;
./node_modules/typescript/lib/lib.dom.d.ts:    data?: any;
./node_modules/typescript/lib/lib.dom.d.ts:    detail?: any;
./node_modules/typescript/lib/lib.dom.d.ts:    detail?: any;
./node_modules/typescript/lib/lib.dom.d.ts:    state?: any;
./node_modules/typescript/lib/lib.dom.d.ts:    reason?: any;
./node_modules/typescript/lib/lib.dom.d.ts:    abort(reason?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    readonly reason: any;
./node_modules/typescript/lib/lib.dom.d.ts:    abort(reason?: any): AbortSignal;
./node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: AudioParam, key: string, parent: AudioParamMap) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    returnValue: any;
./node_modules/typescript/lib/lib.dom.d.ts:    postMessage(message: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: CSSNumericValue, key: number, parent: CSSNumericArray) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: CSSTransformComponent, key: number, parent: CSSTransformValue) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: CSSUnparsedSegment, key: number, parent: CSSUnparsedValue) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: string, key: string, parent: CustomStateSet) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    hasFeature(...args: any[]): true;
./node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: string, key: number, parent: DOMTokenList) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    readonly error: any;
./node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: number, key: string, parent: EventCounts) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: FontFace, key: FontFace, parent: FontFaceSet) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: FormDataEntryValue, key: string, parent: FormData) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.dom.d.ts:    getContext(contextId: string, options?: any): RenderingContext | null;
./node_modules/typescript/lib/lib.dom.d.ts:    [name: string]: any;
./node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: string, key: string, parent: Headers) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: AbstractRange, key: AbstractRange, parent: Highlight) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: Highlight, key: string, parent: HighlightRegistry) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    readonly state: any;
./node_modules/typescript/lib/lib.dom.d.ts:    pushState(data: any, unused: string, url?: string | URL | null): void;
./node_modules/typescript/lib/lib.dom.d.ts:    replaceState(data: any, unused: string, url?: string | URL | null): void;
./node_modules/typescript/lib/lib.dom.d.ts:    update(value: any): IDBRequest<IDBValidKey>;
./node_modules/typescript/lib/lib.dom.d.ts:    readonly value: any;
./node_modules/typescript/lib/lib.dom.d.ts:    cmp(first: any, second: any): number;
./node_modules/typescript/lib/lib.dom.d.ts:    readonly lower: any;
./node_modules/typescript/lib/lib.dom.d.ts:    readonly upper: any;
./node_modules/typescript/lib/lib.dom.d.ts:    includes(key: any): boolean;
./node_modules/typescript/lib/lib.dom.d.ts:    bound(lower: any, upper: any, lowerOpen?: boolean, upperOpen?: boolean): IDBKeyRange;
./node_modules/typescript/lib/lib.dom.d.ts:    lowerBound(lower: any, open?: boolean): IDBKeyRange;
./node_modules/typescript/lib/lib.dom.d.ts:    only(value: any): IDBKeyRange;
./node_modules/typescript/lib/lib.dom.d.ts:    upperBound(upper: any, open?: boolean): IDBKeyRange;
./node_modules/typescript/lib/lib.dom.d.ts:    add(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;
./node_modules/typescript/lib/lib.dom.d.ts:    put(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;
./node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: MIDIInput, key: string, parent: MIDIInputMap) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: MIDIOutput, key: string, parent: MIDIOutputMap) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: MediaKeyStatus, key: BufferSource, parent: MediaKeyStatusMap) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    initMessageEvent(type: string, bubbles?: boolean, cancelable?: boolean, data?: any, origin?: string, lastEventId?: string, source?: MessageEventSource | null, ports?: MessagePort[]): void;
./node_modules/typescript/lib/lib.dom.d.ts:    postMessage(message: any, transfer: Transferable[]): void;
./node_modules/typescript/lib/lib.dom.d.ts:    postMessage(message: any, options?: StructuredSerializeOptions): void;
./node_modules/typescript/lib/lib.dom.d.ts:    getState(): any;
./node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: Node, key: number, parent: NodeList) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: TNode, key: number, parent: NodeListOf<TNode>) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    readonly data: any;
./node_modules/typescript/lib/lib.dom.d.ts:    getContext(contextId: "2d", options?: any): OffscreenCanvasRenderingContext2D | null;
./node_modules/typescript/lib/lib.dom.d.ts:    getContext(contextId: "bitmaprenderer", options?: any): ImageBitmapRenderingContext | null;
./node_modules/typescript/lib/lib.dom.d.ts:    getContext(contextId: "webgl", options?: any): WebGLRenderingContext | null;
./node_modules/typescript/lib/lib.dom.d.ts:    getContext(contextId: "webgl2", options?: any): WebGL2RenderingContext | null;
./node_modules/typescript/lib/lib.dom.d.ts:    getContext(contextId: OffscreenRenderingContextId, options?: any): OffscreenRenderingContext | null;
./node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.dom.d.ts:    readonly methodDetails: any;
./node_modules/typescript/lib/lib.dom.d.ts:    readonly details: any;
./node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.dom.d.ts:    readonly detail: any;
./node_modules/typescript/lib/lib.dom.d.ts:    readonly detail: any;
./node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.dom.d.ts:    readonly state: any;
./node_modules/typescript/lib/lib.dom.d.ts:    readonly reason: any;
./node_modules/typescript/lib/lib.dom.d.ts:    new(worker: Worker, options?: any, transfer?: any[]): RTCRtpScriptTransform;
./node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: any, key: string, parent: RTCStatsReport) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    error(e?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    cancel(reason?: any): Promise<void>;
./node_modules/typescript/lib/lib.dom.d.ts:    error(e?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    cancel(reason?: any): Promise<void>;
./node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.dom.d.ts:    json(data: any, init?: ResponseInit): Response;
./node_modules/typescript/lib/lib.dom.d.ts:    readonly className: any;
./node_modules/typescript/lib/lib.dom.d.ts:    postMessage(message: any, transfer: Transferable[]): void;
./node_modules/typescript/lib/lib.dom.d.ts:    postMessage(message: any, options?: StructuredSerializeOptions): void;
./node_modules/typescript/lib/lib.dom.d.ts:    [name: string]: any;
./node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: CSSStyleValue[], key: string, parent: StylePropertyMapReadOnly) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    error(reason?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: string, key: string, parent: URLSearchParams) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: string, key: string, parent: ViewTransitionTypeSet) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    getActiveUniformBlockParameter(program: WebGLProgram, uniformBlockIndex: GLuint, pname: GLenum): any;
./node_modules/typescript/lib/lib.dom.d.ts:    getActiveUniforms(program: WebGLProgram, uniformIndices: GLuint[], pname: GLenum): any;
./node_modules/typescript/lib/lib.dom.d.ts:    getIndexedParameter(target: GLenum, index: GLuint): any;
./node_modules/typescript/lib/lib.dom.d.ts:    getInternalformatParameter(target: GLenum, internalformat: GLenum, pname: GLenum): any;
./node_modules/typescript/lib/lib.dom.d.ts:    getQueryParameter(query: WebGLQuery, pname: GLenum): any;
./node_modules/typescript/lib/lib.dom.d.ts:    getSamplerParameter(sampler: WebGLSampler, pname: GLenum): any;
./node_modules/typescript/lib/lib.dom.d.ts:    getSyncParameter(sync: WebGLSync, pname: GLenum): any;
./node_modules/typescript/lib/lib.dom.d.ts:    getBufferParameter(target: GLenum, pname: GLenum): any;
./node_modules/typescript/lib/lib.dom.d.ts:    getExtension(name: string): any;
./node_modules/typescript/lib/lib.dom.d.ts:    getFramebufferAttachmentParameter(target: GLenum, attachment: GLenum, pname: GLenum): any;
./node_modules/typescript/lib/lib.dom.d.ts:    getParameter(pname: GLenum): any;
./node_modules/typescript/lib/lib.dom.d.ts:    getProgramParameter(program: WebGLProgram, pname: GLenum): any;
./node_modules/typescript/lib/lib.dom.d.ts:    getRenderbufferParameter(target: GLenum, pname: GLenum): any;
./node_modules/typescript/lib/lib.dom.d.ts:    getShaderParameter(shader: WebGLShader, pname: GLenum): any;
./node_modules/typescript/lib/lib.dom.d.ts:    getTexParameter(target: GLenum, pname: GLenum): any;
./node_modules/typescript/lib/lib.dom.d.ts:    getUniform(program: WebGLProgram, location: WebGLUniformLocation): any;
./node_modules/typescript/lib/lib.dom.d.ts:    getVertexAttrib(index: GLuint, pname: GLenum): any;
./node_modules/typescript/lib/lib.dom.d.ts:    opener: any;
./node_modules/typescript/lib/lib.dom.d.ts:    alert(message?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    postMessage(message: any, targetOrigin: string, transfer?: Transferable[]): void;
./node_modules/typescript/lib/lib.dom.d.ts:    postMessage(message: any, options?: WindowPostMessageOptions): void;
./node_modules/typescript/lib/lib.dom.d.ts:    reportError(e: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    setInterval(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;
./node_modules/typescript/lib/lib.dom.d.ts:    setTimeout(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;
./node_modules/typescript/lib/lib.dom.d.ts:    postMessage(message: any, transfer: Transferable[]): void;
./node_modules/typescript/lib/lib.dom.d.ts:    postMessage(message: any, options?: StructuredSerializeOptions): void;
./node_modules/typescript/lib/lib.dom.d.ts:    abort(reason?: any): Promise<void>;
./node_modules/typescript/lib/lib.dom.d.ts:    error(e?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    abort(reason?: any): Promise<void>;
./node_modules/typescript/lib/lib.dom.d.ts:    readonly response: any;
./node_modules/typescript/lib/lib.dom.d.ts:    getParameter(namespaceURI: string | null, localName: string): any;
./node_modules/typescript/lib/lib.dom.d.ts:    setParameter(namespaceURI: string | null, localName: string, value: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    assert(condition?: boolean, ...data: any[]): void;
./node_modules/typescript/lib/lib.dom.d.ts:    debug(...data: any[]): void;
./node_modules/typescript/lib/lib.dom.d.ts:    dir(item?: any, options?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:    dirxml(...data: any[]): void;
./node_modules/typescript/lib/lib.dom.d.ts:    error(...data: any[]): void;
./node_modules/typescript/lib/lib.dom.d.ts:    group(...data: any[]): void;
./node_modules/typescript/lib/lib.dom.d.ts:    groupCollapsed(...data: any[]): void;
./node_modules/typescript/lib/lib.dom.d.ts:    info(...data: any[]): void;
./node_modules/typescript/lib/lib.dom.d.ts:    log(...data: any[]): void;
./node_modules/typescript/lib/lib.dom.d.ts:    table(tabularData?: any, properties?: string[]): void;
./node_modules/typescript/lib/lib.dom.d.ts:    timeLog(label?: string, ...data: any[]): void;
./node_modules/typescript/lib/lib.dom.d.ts:    trace(...data: any[]): void;
./node_modules/typescript/lib/lib.dom.d.ts:    warn(...data: any[]): void;
./node_modules/typescript/lib/lib.dom.d.ts:        get(index: number): any;
./node_modules/typescript/lib/lib.dom.d.ts:        grow(delta: number, value?: any): number;
./node_modules/typescript/lib/lib.dom.d.ts:        set(index: number, value?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:        new(descriptor: TableDescriptor, value?: any): Table;
./node_modules/typescript/lib/lib.dom.d.ts:        externref: any;
./node_modules/typescript/lib/lib.dom.d.ts:    new (...params: any[]): HTMLElement;
./node_modules/typescript/lib/lib.dom.d.ts:    (lock: Lock | null): any;
./node_modules/typescript/lib/lib.dom.d.ts:    (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error): any;
./node_modules/typescript/lib/lib.dom.d.ts:    (controller: TransformStreamDefaultController<O>): any;
./node_modules/typescript/lib/lib.dom.d.ts:    (reason?: any): void | PromiseLike<void>;
./node_modules/typescript/lib/lib.dom.d.ts:    (controller: WritableStreamDefaultController): any;
./node_modules/typescript/lib/lib.dom.d.ts:    (reason?: any): void | PromiseLike<void>;
./node_modules/typescript/lib/lib.dom.d.ts:    (controller: ReadableStreamController<R>): any;
./node_modules/typescript/lib/lib.dom.d.ts:    (): any;
./node_modules/typescript/lib/lib.dom.d.ts:declare var opener: any;
./node_modules/typescript/lib/lib.dom.d.ts:declare function alert(message?: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:declare function postMessage(message: any, targetOrigin: string, transfer?: Transferable[]): void;
./node_modules/typescript/lib/lib.dom.d.ts:declare function postMessage(message: any, options?: WindowPostMessageOptions): void;
./node_modules/typescript/lib/lib.dom.d.ts:declare function reportError(e: any): void;
./node_modules/typescript/lib/lib.dom.d.ts:declare function setInterval(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;
./node_modules/typescript/lib/lib.dom.d.ts:declare function setTimeout(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;
./node_modules/typescript/lib/lib.es2023.array.d.ts:    findLast<S extends T>(predicate: (value: T, index: number, array: T[]) => value is S, thisArg?: any): S | undefined;
./node_modules/typescript/lib/lib.es2023.array.d.ts:    findLast(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): T | undefined;
./node_modules/typescript/lib/lib.es2023.array.d.ts:    findLastIndex(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): number;
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./node_modules/typescript/lib/lib.webworker.iterable.d.ts:    initMessageEvent(type: string, bubbles?: boolean, cancelable?: boolean, data?: any, origin?: string, lastEventId?: string, source?: MessageEventSource | null, ports?: Iterable<MessagePort>): void;
./node_modules/typescript/lib/lib.webworker.iterable.d.ts:    getActiveUniforms(program: WebGLProgram, uniformIndices: Iterable<GLuint>, pname: GLenum): any;
./node_modules/typescript/lib/lib.es2020.bigint.d.ts:    every(predicate: (value: bigint, index: number, array: BigInt64Array<TArrayBuffer>) => boolean, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es2020.bigint.d.ts:    filter(predicate: (value: bigint, index: number, array: BigInt64Array<TArrayBuffer>) => any, thisArg?: any): BigInt64Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es2020.bigint.d.ts:    find(predicate: (value: bigint, index: number, array: BigInt64Array<TArrayBuffer>) => boolean, thisArg?: any): bigint | undefined;
./node_modules/typescript/lib/lib.es2020.bigint.d.ts:    findIndex(predicate: (value: bigint, index: number, array: BigInt64Array<TArrayBuffer>) => boolean, thisArg?: any): number;
./node_modules/typescript/lib/lib.es2020.bigint.d.ts:    forEach(callbackfn: (value: bigint, index: number, array: BigInt64Array<TArrayBuffer>) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.es2020.bigint.d.ts:    map(callbackfn: (value: bigint, index: number, array: BigInt64Array<TArrayBuffer>) => bigint, thisArg?: any): BigInt64Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es2020.bigint.d.ts:    some(predicate: (value: bigint, index: number, array: BigInt64Array<TArrayBuffer>) => boolean, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es2020.bigint.d.ts:    from<U>(arrayLike: ArrayLike<U>, mapfn: (v: U, k: number) => bigint, thisArg?: any): BigInt64Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es2020.bigint.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => bigint, thisArg?: any): BigInt64Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es2020.bigint.d.ts:    every(predicate: (value: bigint, index: number, array: BigUint64Array<TArrayBuffer>) => boolean, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es2020.bigint.d.ts:    filter(predicate: (value: bigint, index: number, array: BigUint64Array<TArrayBuffer>) => any, thisArg?: any): BigUint64Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es2020.bigint.d.ts:    find(predicate: (value: bigint, index: number, array: BigUint64Array<TArrayBuffer>) => boolean, thisArg?: any): bigint | undefined;
./node_modules/typescript/lib/lib.es2020.bigint.d.ts:    findIndex(predicate: (value: bigint, index: number, array: BigUint64Array<TArrayBuffer>) => boolean, thisArg?: any): number;
./node_modules/typescript/lib/lib.es2020.bigint.d.ts:    forEach(callbackfn: (value: bigint, index: number, array: BigUint64Array<TArrayBuffer>) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.es2020.bigint.d.ts:    map(callbackfn: (value: bigint, index: number, array: BigUint64Array<TArrayBuffer>) => bigint, thisArg?: any): BigUint64Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es2020.bigint.d.ts:    some(predicate: (value: bigint, index: number, array: BigUint64Array<TArrayBuffer>) => boolean, thisArg?: any): boolean;
./node_modules/typescript/lib/lib.es2020.bigint.d.ts:    from<U>(arrayLike: ArrayLike<U>, mapfn: (v: U, k: number) => bigint, thisArg?: any): BigUint64Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es2020.bigint.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => bigint, thisArg?: any): BigUint64Array<ArrayBuffer>;
./node_modules/typescript/lib/lib.es2021.promise.d.ts:    errors: any[];
./node_modules/typescript/lib/lib.es2017.intl.d.ts:        day: any;
./node_modules/typescript/lib/lib.es2017.intl.d.ts:        dayPeriod: any;
./node_modules/typescript/lib/lib.es2017.intl.d.ts:        era: any;
./node_modules/typescript/lib/lib.es2017.intl.d.ts:        hour: any;
./node_modules/typescript/lib/lib.es2017.intl.d.ts:        literal: any;
./node_modules/typescript/lib/lib.es2017.intl.d.ts:        minute: any;
./node_modules/typescript/lib/lib.es2017.intl.d.ts:        month: any;
./node_modules/typescript/lib/lib.es2017.intl.d.ts:        second: any;
./node_modules/typescript/lib/lib.es2017.intl.d.ts:        timeZoneName: any;
./node_modules/typescript/lib/lib.es2017.intl.d.ts:        weekday: any;
./node_modules/typescript/lib/lib.es2017.intl.d.ts:        year: any;
./node_modules/typescript/lib/lib.webworker.d.ts:    error?: any;
./node_modules/typescript/lib/lib.webworker.d.ts:    data?: any;
./node_modules/typescript/lib/lib.webworker.d.ts:    data?: any;
./node_modules/typescript/lib/lib.webworker.d.ts:    detail?: any;
./node_modules/typescript/lib/lib.webworker.d.ts:    detail?: any;
./node_modules/typescript/lib/lib.webworker.d.ts:    reason?: any;
./node_modules/typescript/lib/lib.webworker.d.ts:    abort(reason?: any): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    readonly reason: any;
./node_modules/typescript/lib/lib.webworker.d.ts:    abort(reason?: any): AbortSignal;
./node_modules/typescript/lib/lib.webworker.d.ts:    postMessage(message: any): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    forEach(callbackfn: (value: CSSNumericValue, key: number, parent: CSSNumericArray) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    forEach(callbackfn: (value: CSSTransformComponent, key: number, parent: CSSTransformValue) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    forEach(callbackfn: (value: CSSUnparsedSegment, key: number, parent: CSSUnparsedValue) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    postMessage(message: any, transfer: Transferable[]): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    postMessage(message: any, options?: StructuredSerializeOptions): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    postMessage(message: any, transfer: Transferable[]): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    postMessage(message: any, options?: StructuredSerializeOptions): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    readonly error: any;
./node_modules/typescript/lib/lib.webworker.d.ts:    readonly data: any;
./node_modules/typescript/lib/lib.webworker.d.ts:    forEach(callbackfn: (value: FontFace, key: FontFace, parent: FontFaceSet) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    forEach(callbackfn: (value: FormDataEntryValue, key: string, parent: FormData) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    forEach(callbackfn: (value: string, key: string, parent: Headers) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    update(value: any): IDBRequest<IDBValidKey>;
./node_modules/typescript/lib/lib.webworker.d.ts:    readonly value: any;
./node_modules/typescript/lib/lib.webworker.d.ts:    cmp(first: any, second: any): number;
./node_modules/typescript/lib/lib.webworker.d.ts:    readonly lower: any;
./node_modules/typescript/lib/lib.webworker.d.ts:    readonly upper: any;
./node_modules/typescript/lib/lib.webworker.d.ts:    includes(key: any): boolean;
./node_modules/typescript/lib/lib.webworker.d.ts:    bound(lower: any, upper: any, lowerOpen?: boolean, upperOpen?: boolean): IDBKeyRange;
./node_modules/typescript/lib/lib.webworker.d.ts:    lowerBound(lower: any, open?: boolean): IDBKeyRange;
./node_modules/typescript/lib/lib.webworker.d.ts:    only(value: any): IDBKeyRange;
./node_modules/typescript/lib/lib.webworker.d.ts:    upperBound(upper: any, open?: boolean): IDBKeyRange;
./node_modules/typescript/lib/lib.webworker.d.ts:    add(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;
./node_modules/typescript/lib/lib.webworker.d.ts:    put(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;
./node_modules/typescript/lib/lib.webworker.d.ts:    initMessageEvent(type: string, bubbles?: boolean, cancelable?: boolean, data?: any, origin?: string, lastEventId?: string, source?: MessageEventSource | null, ports?: MessagePort[]): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    postMessage(message: any, transfer: Transferable[]): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    postMessage(message: any, options?: StructuredSerializeOptions): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    readonly data: any;
./node_modules/typescript/lib/lib.webworker.d.ts:    getContext(contextId: "2d", options?: any): OffscreenCanvasRenderingContext2D | null;
./node_modules/typescript/lib/lib.webworker.d.ts:    getContext(contextId: "bitmaprenderer", options?: any): ImageBitmapRenderingContext | null;
./node_modules/typescript/lib/lib.webworker.d.ts:    getContext(contextId: "webgl", options?: any): WebGLRenderingContext | null;
./node_modules/typescript/lib/lib.webworker.d.ts:    getContext(contextId: "webgl2", options?: any): WebGL2RenderingContext | null;
./node_modules/typescript/lib/lib.webworker.d.ts:    getContext(contextId: OffscreenRenderingContextId, options?: any): OffscreenRenderingContext | null;
./node_modules/typescript/lib/lib.webworker.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    readonly detail: any;
./node_modules/typescript/lib/lib.webworker.d.ts:    readonly detail: any;
./node_modules/typescript/lib/lib.webworker.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    readonly reason: any;
./node_modules/typescript/lib/lib.webworker.d.ts:    json(): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    readonly options: any;
./node_modules/typescript/lib/lib.webworker.d.ts:    error(e?: any): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    cancel(reason?: any): Promise<void>;
./node_modules/typescript/lib/lib.webworker.d.ts:    error(e?: any): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    cancel(reason?: any): Promise<void>;
./node_modules/typescript/lib/lib.webworker.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    toJSON(): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    json(data: any, init?: ResponseInit): Response;
./node_modules/typescript/lib/lib.webworker.d.ts:    postMessage(message: any, transfer: Transferable[]): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    postMessage(message: any, options?: StructuredSerializeOptions): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    forEach(callbackfn: (value: CSSStyleValue[], key: string, parent: StylePropertyMapReadOnly) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    error(reason?: any): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    forEach(callbackfn: (value: string, key: string, parent: URLSearchParams) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    getActiveUniformBlockParameter(program: WebGLProgram, uniformBlockIndex: GLuint, pname: GLenum): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    getActiveUniforms(program: WebGLProgram, uniformIndices: GLuint[], pname: GLenum): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    getIndexedParameter(target: GLenum, index: GLuint): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    getInternalformatParameter(target: GLenum, internalformat: GLenum, pname: GLenum): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    getQueryParameter(query: WebGLQuery, pname: GLenum): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    getSamplerParameter(sampler: WebGLSampler, pname: GLenum): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    getSyncParameter(sync: WebGLSync, pname: GLenum): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    getBufferParameter(target: GLenum, pname: GLenum): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    getExtension(name: string): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    getFramebufferAttachmentParameter(target: GLenum, attachment: GLenum, pname: GLenum): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    getParameter(pname: GLenum): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    getProgramParameter(program: WebGLProgram, pname: GLenum): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    getRenderbufferParameter(target: GLenum, pname: GLenum): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    getShaderParameter(shader: WebGLShader, pname: GLenum): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    getTexParameter(target: GLenum, pname: GLenum): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    getUniform(program: WebGLProgram, location: WebGLUniformLocation): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    getVertexAttrib(index: GLuint, pname: GLenum): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    reportError(e: any): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    setInterval(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;
./node_modules/typescript/lib/lib.webworker.d.ts:    setTimeout(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;
./node_modules/typescript/lib/lib.webworker.d.ts:    postMessage(message: any, transfer: Transferable[]): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    postMessage(message: any, options?: StructuredSerializeOptions): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    abort(reason?: any): Promise<void>;
./node_modules/typescript/lib/lib.webworker.d.ts:    error(e?: any): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    abort(reason?: any): Promise<void>;
./node_modules/typescript/lib/lib.webworker.d.ts:    readonly response: any;
./node_modules/typescript/lib/lib.webworker.d.ts:    assert(condition?: boolean, ...data: any[]): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    debug(...data: any[]): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    dir(item?: any, options?: any): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    dirxml(...data: any[]): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    error(...data: any[]): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    group(...data: any[]): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    groupCollapsed(...data: any[]): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    info(...data: any[]): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    log(...data: any[]): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    table(tabularData?: any, properties?: string[]): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    timeLog(label?: string, ...data: any[]): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    trace(...data: any[]): void;
./node_modules/typescript/lib/lib.webworker.d.ts:    warn(...data: any[]): void;
./node_modules/typescript/lib/lib.webworker.d.ts:        get(index: number): any;
./node_modules/typescript/lib/lib.webworker.d.ts:        grow(delta: number, value?: any): number;
./node_modules/typescript/lib/lib.webworker.d.ts:        set(index: number, value?: any): void;
./node_modules/typescript/lib/lib.webworker.d.ts:        new(descriptor: TableDescriptor, value?: any): Table;
./node_modules/typescript/lib/lib.webworker.d.ts:        externref: any;
./node_modules/typescript/lib/lib.webworker.d.ts:    (lock: Lock | null): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    (controller: TransformStreamDefaultController<O>): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    (reason?: any): void | PromiseLike<void>;
./node_modules/typescript/lib/lib.webworker.d.ts:    (controller: WritableStreamDefaultController): any;
./node_modules/typescript/lib/lib.webworker.d.ts:    (reason?: any): void | PromiseLike<void>;
./node_modules/typescript/lib/lib.webworker.d.ts:    (controller: ReadableStreamController<R>): any;
./node_modules/typescript/lib/lib.webworker.d.ts:declare function postMessage(message: any, transfer: Transferable[]): void;
./node_modules/typescript/lib/lib.webworker.d.ts:declare function postMessage(message: any, options?: StructuredSerializeOptions): void;
./node_modules/typescript/lib/lib.webworker.d.ts:declare function reportError(e: any): void;
./node_modules/typescript/lib/lib.webworker.d.ts:declare function setInterval(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;
./node_modules/typescript/lib/lib.webworker.d.ts:declare function setTimeout(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;
./node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts:    throw(e: any): Promise<IteratorResult<T, TReturn>>;
./node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts:    new (...args: any[]): AsyncGenerator;
./node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts:    (...args: any[]): AsyncGenerator;
./node_modules/typescript/lib/lib.es2017.object.d.ts:    values(o: {}): any[];
./node_modules/typescript/lib/typescript.d.ts:                    [K in keyof T]?: any;
./node_modules/typescript/lib/typescript.d.ts:                arguments?: any;
./node_modules/typescript/lib/typescript.d.ts:                body?: any;
./node_modules/typescript/lib/typescript.d.ts:                body?: any;
./node_modules/typescript/lib/typescript.d.ts:                configuration: any;
./node_modules/typescript/lib/typescript.d.ts:                payload: any;
./node_modules/typescript/lib/typescript.d.ts:            data: any;
./node_modules/typescript/lib/typescript.d.ts:            setTimeout(callback: (...args: any[]) => void, ms: number, ...args: any[]): any;
./node_modules/typescript/lib/typescript.d.ts:            clearTimeout(timeoutId: any): void;
./node_modules/typescript/lib/typescript.d.ts:            setImmediate(callback: (...args: any[]) => void, ...args: any[]): any;
./node_modules/typescript/lib/typescript.d.ts:            clearImmediate(timeoutId: any): void;
./node_modules/typescript/lib/typescript.d.ts:            __normalizedPathTag: any;
./node_modules/typescript/lib/typescript.d.ts:            config: any;
./node_modules/typescript/lib/typescript.d.ts:            onConfigurationChanged?(config: any): void;
./node_modules/typescript/lib/typescript.d.ts:        const CommandNames: any;
./node_modules/typescript/lib/typescript.d.ts:        " __sortedArrayBrand": any;
./node_modules/typescript/lib/typescript.d.ts:        " __sortedArrayBrand": any;
./node_modules/typescript/lib/typescript.d.ts:        __pathBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _jsdocContainerBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _localsContainerBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _flowContainerBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _declarationBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _autoAccessorBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _objectLiteralBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _functionLikeDeclarationBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _typeNodeBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _expressionBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _unaryExpressionBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _updateExpressionBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _leftHandSideExpressionBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _memberExpressionBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _primaryExpressionBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _literalExpressionBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _optionalChainBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _propertyAccessExpressionLikeQualifiedNameBrand?: any;
./node_modules/typescript/lib/typescript.d.ts:        _optionalChainBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _optionalChainBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _optionalChainBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _statementBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _classElementBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _typeElementBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        _jsDocTypeBrand: any;
./node_modules/typescript/lib/typescript.d.ts:        raw?: any;
./node_modules/typescript/lib/typescript.d.ts:        setTimeout?(callback: (...args: any[]) => void, ms: number, ...args: any[]): any;
./node_modules/typescript/lib/typescript.d.ts:        clearTimeout?(timeoutId: any): void;
./node_modules/typescript/lib/typescript.d.ts:    type ErrorCallback = (message: DiagnosticMessage, length: number, arg0?: any) => void;
./node_modules/typescript/lib/typescript.d.ts:        config?: any;
./node_modules/typescript/lib/typescript.d.ts:        config?: any;
./node_modules/typescript/lib/typescript.d.ts:    function convertToObject(sourceFile: JsonSourceFile, errors: Diagnostic[]): any;
./node_modules/typescript/lib/typescript.d.ts:    function parseJsonConfigFileContent(json: any, host: ParseConfigHost, basePath: string, existingOptions?: CompilerOptions, configFileName?: string, resolutionStack?: Path[], extraFileExtensions?: readonly FileExtensionInfo[], extendedConfigCache?: Map<string, ExtendedConfigCacheEntry>, existingWatchOptions?: WatchOptions): ParsedCommandLine;
./node_modules/typescript/lib/typescript.d.ts:    function convertCompilerOptionsFromJson(jsonOptions: any, basePath: string, configFileName?: string): {
./node_modules/typescript/lib/typescript.d.ts:    function convertTypeAcquisitionFromJson(jsonOptions: any, basePath: string, configFileName?: string): {
./node_modules/typescript/lib/typescript.d.ts:        raw: any;
./node_modules/typescript/lib/typescript.d.ts:        setTimeout?(callback: (...args: any[]) => void, ms: number, ...args: any[]): any;
./node_modules/typescript/lib/typescript.d.ts:        clearTimeout?(timeoutId: any): void;
./node_modules/typescript/lib/typescript.d.ts:        getLocalizedDiagnosticMessages?(): any;
./node_modules/typescript/lib/typescript.d.ts:        __bucketKey: any;
./node_modules/typescript/lib/lib.esnext.array.d.ts:    fromAsync<T, U>(iterableOrArrayLike: AsyncIterable<T> | Iterable<T> | ArrayLike<T>, mapFn: (value: Awaited<T>, index: number) => U, thisArg?: any): Promise<Awaited<U>[]>;
./node_modules/typescript/lib/lib.es2015.collection.d.ts:    forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.es2015.collection.d.ts:    forEach(callbackfn: (value: V, key: K, map: ReadonlyMap<K, V>) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.es2015.collection.d.ts:    forEach(callbackfn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any): void;
./node_modules/typescript/lib/lib.es2015.collection.d.ts:    forEach(callbackfn: (value: T, value2: T, set: ReadonlySet<T>) => void, thisArg?: any): void;
./node_modules/react-hook-form/dist/types/controller.d.ts:    onChange: (...event: any[]) => void;
./node_modules/react-hook-form/dist/types/fields.d.ts:    value?: any;
./node_modules/react-hook-form/dist/types/validator.d.ts:    setValueAs: (value: any) => any;
./node_modules/react-hook-form/dist/types/validator.d.ts:    onChange?: (event: any) => void;
./node_modules/react-hook-form/dist/types/validator.d.ts:    onBlur?: (event: any) => void;
./node_modules/react-hook-form/dist/types/form.d.ts:    target: any;
./node_modules/react-hook-form/dist/types/form.d.ts:    type?: any;
./node_modules/react-hook-form/dist/types/form.d.ts:export type RefCallBack = (instance: any) => void;
./node_modules/react-hook-form/dist/logic/getFieldValue.d.ts:export default function getFieldValue(_f: Field['_f']): any;
./node_modules/react-hook-form/dist/utils/deepEqual.d.ts:export default function deepEqual(object1: any, object2: any): boolean;
./node_modules/react-hook-form/dist/utils/unset.d.ts:export default function unset(object: any, path: string | (string | number)[]): any;
./node_modules/date-fns/fp/types.d.ts:export type FPFnInput = (...args: any[]) => any;
./node_modules/jspdf/types/index.d.ts:    canvas?: any;
./node_modules/jspdf/types/index.d.ts:    state: any;
./node_modules/jspdf/types/index.d.ts:    add(parent: any, title: string, options: OutlineOptions): OutlineItem;
./node_modules/jspdf/types/index.d.ts:    options: any;
./node_modules/jspdf/types/index.d.ts:    children: any[];
./node_modules/jspdf/types/index.d.ts:    appearanceState: any;
./node_modules/jspdf/types/index.d.ts:    Parent: any;
./node_modules/jspdf/types/index.d.ts:    transparency?: any;
./node_modules/jspdf/types/index.d.ts:    palette?: any;
./node_modules/jspdf/types/index.d.ts:    sMask?: any;
./node_modules/jspdf/types/index.d.ts:    data?: any[];
./node_modules/jspdf/types/index.d.ts:    data?: any;
./node_modules/jspdf/types/index.d.ts:    pageContext: any;
./node_modules/jspdf/types/index.d.ts:    metadata: any;
./node_modules/jspdf/types/index.d.ts:      callback: (...args: any[]) => void,
./node_modules/jspdf/types/index.d.ts:    publish(topic: string, ...args: any[]): void;
./node_modules/jspdf/types/index.d.ts:      Record<string, [(...args: any[]) => void, boolean]>
./node_modules/jspdf/types/index.d.ts:    CapJoinStyles: any;
./node_modules/jspdf/types/index.d.ts:      matrix: any
./node_modules/jspdf/types/index.d.ts:    doFormObject(key: any, matrix: any): jsPDF;
./node_modules/jspdf/types/index.d.ts:    endFormObject(key: any): jsPDF;
./node_modules/jspdf/types/index.d.ts:    getFormObject(key: any): any;
./node_modules/jspdf/types/index.d.ts:      lines: any[],
./node_modules/jspdf/types/index.d.ts:      x: any,
./node_modules/jspdf/types/index.d.ts:      y: any,
./node_modules/jspdf/types/index.d.ts:      scale?: any,
./node_modules/jspdf/types/index.d.ts:    pdfEscape(text: string, flags: any): string;
./node_modules/jspdf/types/index.d.ts:    path(lines?: any[], style?: string): jsPDF;
./node_modules/jspdf/types/index.d.ts:    setGState(gState: any): jsPDF;
./node_modules/jspdf/types/index.d.ts:    link(x: number, y: number, w: number, h: number, options: any): void;
./node_modules/jspdf/types/index.d.ts:    textWithLink(text: string, x: number, y: number, options: any): number;
./node_modules/jspdf/types/index.d.ts:      Appearance(): any;
./node_modules/jspdf/types/index.d.ts:      style: any;
./node_modules/jspdf/types/index.d.ts:      model: any[]
./node_modules/jspdf/types/index.d.ts:    getCharWidthsArray(text: string, options?: any): any[];
./node_modules/jspdf/types/index.d.ts:    getStringUnitWidth(text: string, options?: any): number;
./node_modules/jspdf/types/index.d.ts:    splitTextToSize(text: string, maxlen: number, options?: any): any;
./node_modules/jspdf/types/index.d.ts:    events: any[];
./node_modules/postcss-values-parser/lib/index.d.ts:  raws: any;
./node_modules/postcss-values-parser/lib/index.d.ts:  raw(prop: string, defaultType?: string): any;
./node_modules/postcss-values-parser/lib/index.d.ts:    thisArg?: any
./node_modules/postcss-values-parser/lib/index.d.ts:    thisArg?: any
./node_modules/chokidar/types/index.d.ts:  on(event: 'raw', listener: (eventName: string, path: string, details: any) => void): this;
./node_modules/chokidar/types/index.d.ts:  on(event: string, listener: (...args: any[]) => void): this;
./node_modules/postcss/lib/result.d.ts:    [others: string]: any
./node_modules/postcss/lib/container.d.ts:    replaced: { (substring: string, ...args: any[]): string } | string
./node_modules/postcss/lib/container.d.ts:    replaced: { (substring: string, ...args: any[]): string } | string
./node_modules/postcss/lib/node.d.ts:  raws: any
./node_modules/undici/types/websocket.d.ts:    data?: any,
./node_modules/undici/types/websocket.d.ts:  error?: any
./node_modules/undici/types/websocket.d.ts:  readonly error: any
./node_modules/undici/types/fetch.d.ts:  static json(data: any, init?: ResponseInit): Response
./node_modules/undici/types/webidl.d.ts:  Stringify (V: any): string
./node_modules/undici/types/webidl.d.ts:  markAsUncloneable (V: any): void
./node_modules/undici/types/webidl.d.ts:  [Key: string]: (...args: any[]) => unknown
./node_modules/undici/types/diagnostics-channel.d.ts:    headers: any;
./node_modules/undici/types/patch.d.ts: : any
./node_modules/keyv/src/index.d.ts:		[key: string]: any;
./node_modules/keyv/src/index.d.ts:		compress(value: any, options?: any): Promise<any>;
./node_modules/keyv/src/index.d.ts:		decompress(value: any, options?: any): Promise<any>;
./node_modules/keyv/src/index.d.ts:		serialize(value: any): Promise<any>;
./node_modules/keyv/src/index.d.ts:		deserialize(value: any): Promise<any>;
./node_modules/keyv/src/index.d.ts:		set(key: string, value: Value, ttl?: number): any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:                    args: any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:} ? T[symbol]['types']['operations'][F]['args'] : any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:    [K in string]: any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:    $queryRaw<T = unknown>(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<T>;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:    $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:    $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<number>;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:    $executeRawUnsafe(query: string, ...values: any[]): PrismaPromise<number>;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:    enable(namespace: any): void;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:    disable(): any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:declare function debugCreate(namespace: string): ((...args: any[]) => void) & {
./node_modules/prisma/prisma-client/runtime/edge.d.ts:    static isDecimal(object: any): object is Decimal;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:    args: any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:    result: any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:        args: any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:        query: (args: any) => PrismaPromise<any>;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:            compute(data: DynamicResultExtensionData<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>): any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:        debug: (...args: any[]) => void;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:        define: (client: any) => {
./node_modules/prisma/prisma-client/runtime/edge.d.ts:    include: any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:        compute: (...args: any) => infer C;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:        _originalClient: any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:        _appliedParent: any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:        $on<E extends ExtendedEventType>(eventType: E, callback: EventCallback<E>): any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:        $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:        $queryRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:        $transaction(input: any, options?: any): Promise<any>;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:    error: any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:    resolve: (data: any) => void;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:    reject: (data: any) => void;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:    request: any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:export declare function makeTypedQueryFactory(sql: string): (...values: any[]) => TypedSql<any[], unknown>;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:    getAllQueryCallbacks(jsModelName: string, operation: string): any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:            payload: any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:} ? T[symbol]['types']['payload'] : any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:    catch<R = never>(onrejected?: ((reason: any) => R | PromiseLike<R>) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult | R>;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:    mapQueryEngineResult({ dataPath, unpacker }: RequestParams, response: QueryEngineResultData<any>): any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:    sanitizeMessage(message: any): any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:    unpack(data: unknown, dataPath: string[], unpacker?: Unpacker): any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:    args?: any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:            payload: any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:export declare type ResultArgsFieldCompute = (model: any) => unknown;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:export declare type Return<T> = T extends (...args: any[]) => infer R ? R : T;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:declare type Unpacker = (data: any) => any;
./node_modules/prisma/prisma-client/runtime/edge.d.ts:export declare function warnEnvConflicts(envPaths: any): void;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:                    args: any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:} ? T[symbol]['types']['operations'][F]['args'] : any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:    [K in string]: any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:    $queryRaw<T = unknown>(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<T>;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:    $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:    $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<number>;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:    $executeRawUnsafe(query: string, ...values: any[]): PrismaPromise<number>;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:    enable(namespace: any): void;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:    disable(): any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:declare function debugCreate(namespace: string): ((...args: any[]) => void) & {
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:    static isDecimal(object: any): object is Decimal;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:    args: any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:    result: any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:        args: any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:        query: (args: any) => PrismaPromise<any>;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:            compute(data: DynamicResultExtensionData<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>): any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:        debug: (...args: any[]) => void;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:        define: (client: any) => {
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:    include: any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:        compute: (...args: any) => infer C;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:        _originalClient: any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:        _appliedParent: any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:        $on<E extends ExtendedEventType>(eventType: E, callback: EventCallback<E>): any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:        $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:        $queryRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:        $transaction(input: any, options?: any): Promise<any>;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:    error: any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:    resolve: (data: any) => void;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:    reject: (data: any) => void;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:    request: any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:export declare function makeTypedQueryFactory(sql: string): (...values: any[]) => TypedSql<any[], unknown>;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:    getAllQueryCallbacks(jsModelName: string, operation: string): any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:            payload: any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:} ? T[symbol]['types']['payload'] : any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:    catch<R = never>(onrejected?: ((reason: any) => R | PromiseLike<R>) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult | R>;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:    mapQueryEngineResult({ dataPath, unpacker }: RequestParams, response: QueryEngineResultData<any>): any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:    sanitizeMessage(message: any): any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:    unpack(data: unknown, dataPath: string[], unpacker?: Unpacker): any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:    args?: any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:            payload: any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:export declare type ResultArgsFieldCompute = (model: any) => unknown;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:export declare type Return<T> = T extends (...args: any[]) => infer R ? R : T;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:declare type Unpacker = (data: any) => any;
./node_modules/prisma/prisma-client/runtime/react-native.d.ts:export declare function warnEnvConflicts(envPaths: any): void;
./node_modules/prisma/prisma-client/runtime/library.d.ts:                    args: any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:} ? T[symbol]['types']['operations'][F]['args'] : any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:    [K in string]: any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:    $queryRaw<T = unknown>(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<T>;
./node_modules/prisma/prisma-client/runtime/library.d.ts:    $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;
./node_modules/prisma/prisma-client/runtime/library.d.ts:    $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<number>;
./node_modules/prisma/prisma-client/runtime/library.d.ts:    $executeRawUnsafe(query: string, ...values: any[]): PrismaPromise<number>;
./node_modules/prisma/prisma-client/runtime/library.d.ts:    enable(namespace: any): void;
./node_modules/prisma/prisma-client/runtime/library.d.ts:    disable(): any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:declare function debugCreate(namespace: string): ((...args: any[]) => void) & {
./node_modules/prisma/prisma-client/runtime/library.d.ts:    static isDecimal(object: any): object is Decimal;
./node_modules/prisma/prisma-client/runtime/library.d.ts:    args: any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:    result: any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:        args: any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:        query: (args: any) => PrismaPromise<any>;
./node_modules/prisma/prisma-client/runtime/library.d.ts:            compute(data: DynamicResultExtensionData<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>): any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:        debug: (...args: any[]) => void;
./node_modules/prisma/prisma-client/runtime/library.d.ts:        define: (client: any) => {
./node_modules/prisma/prisma-client/runtime/library.d.ts:    include: any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:        compute: (...args: any) => infer C;
./node_modules/prisma/prisma-client/runtime/library.d.ts:        _originalClient: any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:        _appliedParent: any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:        $on<E extends ExtendedEventType>(eventType: E, callback: EventCallback<E>): any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:        $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;
./node_modules/prisma/prisma-client/runtime/library.d.ts:        $queryRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;
./node_modules/prisma/prisma-client/runtime/library.d.ts:        $transaction(input: any, options?: any): Promise<any>;
./node_modules/prisma/prisma-client/runtime/library.d.ts:    error: any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:    resolve: (data: any) => void;
./node_modules/prisma/prisma-client/runtime/library.d.ts:    reject: (data: any) => void;
./node_modules/prisma/prisma-client/runtime/library.d.ts:    request: any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:export declare function makeTypedQueryFactory(sql: string): (...values: any[]) => TypedSql<any[], unknown>;
./node_modules/prisma/prisma-client/runtime/library.d.ts:    getAllQueryCallbacks(jsModelName: string, operation: string): any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:            payload: any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:} ? T[symbol]['types']['payload'] : any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:    catch<R = never>(onrejected?: ((reason: any) => R | PromiseLike<R>) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult | R>;
./node_modules/prisma/prisma-client/runtime/library.d.ts:    mapQueryEngineResult({ dataPath, unpacker }: RequestParams, response: QueryEngineResultData<any>): any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:    sanitizeMessage(message: any): any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:    unpack(data: unknown, dataPath: string[], unpacker?: Unpacker): any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:    args?: any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:            payload: any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:export declare type ResultArgsFieldCompute = (model: any) => unknown;
./node_modules/prisma/prisma-client/runtime/library.d.ts:export declare type Return<T> = T extends (...args: any[]) => infer R ? R : T;
./node_modules/prisma/prisma-client/runtime/library.d.ts:declare type Unpacker = (data: any) => any;
./node_modules/prisma/prisma-client/runtime/library.d.ts:export declare function warnEnvConflicts(envPaths: any): void;
./node_modules/prisma/prisma-client/runtime/index-browser.d.ts:                    args: any;
./node_modules/prisma/prisma-client/runtime/index-browser.d.ts:} ? T[symbol]['types']['operations'][F]['args'] : any;
./node_modules/prisma/prisma-client/runtime/index-browser.d.ts:    static isDecimal(object: any): object is Decimal;
./node_modules/prisma/prisma-client/runtime/client.d.ts:                    args: any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:} ? T[symbol]['types']['operations'][F]['args'] : any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:    [K in string]: any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:    $queryRaw<T = unknown>(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<T>;
./node_modules/prisma/prisma-client/runtime/client.d.ts:    $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;
./node_modules/prisma/prisma-client/runtime/client.d.ts:    $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<number>;
./node_modules/prisma/prisma-client/runtime/client.d.ts:    $executeRawUnsafe(query: string, ...values: any[]): PrismaPromise<number>;
./node_modules/prisma/prisma-client/runtime/client.d.ts:    enable(namespace: any): void;
./node_modules/prisma/prisma-client/runtime/client.d.ts:    disable(): any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:declare function debugCreate(namespace: string): ((...args: any[]) => void) & {
./node_modules/prisma/prisma-client/runtime/client.d.ts:    static isDecimal(object: any): object is Decimal;
./node_modules/prisma/prisma-client/runtime/client.d.ts:    args: any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:    result: any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:        args: any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:        query: (args: any) => PrismaPromise<any>;
./node_modules/prisma/prisma-client/runtime/client.d.ts:            compute(data: DynamicResultExtensionData<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>): any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:        debug: (...args: any[]) => void;
./node_modules/prisma/prisma-client/runtime/client.d.ts:        define: (client: any) => {
./node_modules/prisma/prisma-client/runtime/client.d.ts:    include: any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:        compute: (...args: any) => infer C;
./node_modules/prisma/prisma-client/runtime/client.d.ts:        _originalClient: any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:        _appliedParent: any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:        $on<E extends ExtendedEventType>(eventType: E, callback: EventCallback<E>): any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:        $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;
./node_modules/prisma/prisma-client/runtime/client.d.ts:        $queryRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;
./node_modules/prisma/prisma-client/runtime/client.d.ts:        $transaction(input: any, options?: any): Promise<any>;
./node_modules/prisma/prisma-client/runtime/client.d.ts:    error: any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:    resolve: (data: any) => void;
./node_modules/prisma/prisma-client/runtime/client.d.ts:    reject: (data: any) => void;
./node_modules/prisma/prisma-client/runtime/client.d.ts:    request: any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:export declare function makeTypedQueryFactory(sql: string): (...values: any[]) => TypedSql<any[], unknown>;
./node_modules/prisma/prisma-client/runtime/client.d.ts:    getAllQueryCallbacks(jsModelName: string, operation: string): any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:            payload: any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:} ? T[symbol]['types']['payload'] : any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:    catch<R = never>(onrejected?: ((reason: any) => R | PromiseLike<R>) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult | R>;
./node_modules/prisma/prisma-client/runtime/client.d.ts:    mapQueryEngineResult({ dataPath, unpacker }: RequestParams, response: QueryEngineResultData<any>): any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:    sanitizeMessage(message: any): any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:    unpack(data: unknown, dataPath: string[], unpacker?: Unpacker): any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:    args?: any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:            payload: any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:export declare type ResultArgsFieldCompute = (model: any) => unknown;
./node_modules/prisma/prisma-client/runtime/client.d.ts:export declare type Return<T> = T extends (...args: any[]) => infer R ? R : T;
./node_modules/prisma/prisma-client/runtime/client.d.ts:declare type Unpacker = (data: any) => any;
./node_modules/prisma/prisma-client/runtime/client.d.ts:export declare function warnEnvConflicts(envPaths: any): void;
./node_modules/prisma/prisma-client/scripts/default-index.d.ts:export declare const PrismaClient: any
./node_modules/prisma/prisma-client/scripts/default-index.d.ts:export declare const dmmf: any
./node_modules/prisma/prisma-client/scripts/default-index.d.ts:export declare type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>
./node_modules/prisma/prisma-client/scripts/default-index.d.ts:  ): (client: any) => PrismaClientExtends<Args>
./node_modules/terser-webpack-plugin/types/utils.d.ts: * @param fn {(function(): any) | undefined}
./node_modules/terser-webpack-plugin/types/index.d.ts:  astNode: any,
./node_modules/terser-webpack-plugin/types/index.d.ts:type ExtractCommentsFilename = string | ((fileData: any) => string);
./node_modules/terser-webpack-plugin/types/index.d.ts:  [key: string]: any;
./node_modules/terser-webpack-plugin/node_modules/json-schema-traverse/index.d.ts:    [x: string]: any;
./node_modules/terser-webpack-plugin/node_modules/schema-utils/declarations/util/memorize.d.ts: * @param fn {(function(): any) | undefined}
./node_modules/terser-webpack-plugin/node_modules/ajv-keywords/dist/definitions/instanceof.d.ts:declare type Constructor = new (...args: any[]) => any;
./node_modules/terser-webpack-plugin/node_modules/ajv-keywords/src/definitions/instanceof.ts:type Constructor = new (...args: any[]) => any
./node_modules/terser-webpack-plugin/node_modules/ajv/dist/vocabularies/validation/const.d.ts:    allowedValue: any;
./node_modules/terser-webpack-plugin/node_modules/ajv/dist/vocabularies/validation/enum.d.ts:    allowedValues: any[];
./node_modules/terser-webpack-plugin/node_modules/ajv/dist/types/json-schema.d.ts:    [keyword: string]: any;
./node_modules/terser-webpack-plugin/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./node_modules/terser-webpack-plugin/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./node_modules/terser-webpack-plugin/node_modules/ajv/dist/types/index.d.ts:        [K in T]: any;
./node_modules/terser-webpack-plugin/node_modules/ajv/dist/types/index.d.ts:    (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T;
./node_modules/terser-webpack-plugin/node_modules/ajv/dist/types/index.d.ts:export type MacroKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaCxt) => AnySchema;
./node_modules/terser-webpack-plugin/node_modules/ajv/dist/types/index.d.ts:export type CompileKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaObjCxt) => DataValidateFunction;
./node_modules/terser-webpack-plugin/node_modules/ajv/dist/types/index.d.ts:    (schema: any, data: any, parentSchema?: AnySchemaObject, dataCxt?: DataValidationCxt): boolean | Promise<any>;
./node_modules/terser-webpack-plugin/node_modules/ajv/dist/types/index.d.ts:    schema: any;
./node_modules/terser-webpack-plugin/node_modules/ajv/dist/core.d.ts:    [prop: string]: any;
./node_modules/terser-webpack-plugin/node_modules/ajv/dist/compile/validate/index.d.ts:    schema: any;
./node_modules/terser-webpack-plugin/node_modules/ajv/lib/vocabularies/validation/const.ts:export type ConstError = ErrorObject<"const", {allowedValue: any}>
./node_modules/terser-webpack-plugin/node_modules/ajv/lib/vocabularies/validation/enum.ts:export type EnumError = ErrorObject<"enum", {allowedValues: any[]}, any[] | {$data: string}>
./node_modules/terser-webpack-plugin/node_modules/ajv/lib/types/json-schema.ts:  [keyword: string]: any
./node_modules/terser-webpack-plugin/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./node_modules/terser-webpack-plugin/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./node_modules/terser-webpack-plugin/node_modules/ajv/lib/types/index.ts:  parentData: {[K in T]: any} // object or array
./node_modules/terser-webpack-plugin/node_modules/ajv/lib/types/index.ts:  (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T
./node_modules/terser-webpack-plugin/node_modules/ajv/lib/types/index.ts:  schema: any,
./node_modules/terser-webpack-plugin/node_modules/ajv/lib/types/index.ts:  schema: any,
./node_modules/terser-webpack-plugin/node_modules/ajv/lib/types/index.ts:    schema: any,
./node_modules/terser-webpack-plugin/node_modules/ajv/lib/types/index.ts:    data: any,
./node_modules/terser-webpack-plugin/node_modules/ajv/lib/types/index.ts:  schema: any // TODO
./node_modules/terser-webpack-plugin/node_modules/ajv/lib/core.ts:  [prop: string]: any
./node_modules/terser-webpack-plugin/node_modules/ajv/lib/core.ts:  cache?: any
./node_modules/terser-webpack-plugin/node_modules/ajv/lib/compile/validate/index.ts:  schema: any // keyword value in the schema
./node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch/dist/esm/index.d.ts:    debug(..._: any[]): void;
./node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch/dist/esm/ast.d.ts:    toJSON(): any[];
./node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch/dist/esm/assert-valid-pattern.d.ts:export declare const assertValidPattern: (pattern: any) => void;
./node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch/dist/commonjs/index.d.ts:    debug(..._: any[]): void;
./node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch/dist/commonjs/ast.d.ts:    toJSON(): any[];
./node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch/dist/commonjs/assert-valid-pattern.d.ts:export declare const assertValidPattern: (pattern: any) => void;
./node_modules/@typescript-eslint/utils/dist/ast-utils/eslint-utils/astUtilities.d.ts: * @returns The `{ value: any }` shaped object. The `value` property is the static value. If it couldn't compute the
./node_modules/@typescript-eslint/utils/dist/ts-eslint/Rule.d.ts:export type LooseRuleCreateFunction = (context: any) => Record<string, Function | undefined>;
./node_modules/@typescript-eslint/utils/dist/ts-eslint/Processor.d.ts:        postprocess?: (messagesList: any, filename: string) => any;
./node_modules/zod-to-json-schema/dist/types/parsers/default.d.ts:    default: any;
./node_modules/zod-to-json-schema/dist/types/parseTypes.d.ts:    default?: any;
./node_modules/zod-to-json-schema/dist/types/selectParser.d.ts:export declare const selectParser: (def: any, typeName: ZodFirstPartyTypeKind, refs: Refs) => JsonSchema7Type | undefined | InnerDefGetter;
./node_modules/jackspeak/dist/esm/index.d.ts:export declare const isConfigOptionOfType: <T extends ConfigType, M extends boolean>(o: any, type: T, multi: M) => o is ConfigOption<T, M>;
./node_modules/jackspeak/dist/esm/index.d.ts:export declare const isConfigOption: <T extends ConfigType, M extends boolean>(o: any, type: T, multi: M) => o is ConfigOption<T, M>;
./node_modules/jackspeak/dist/commonjs/index.d.ts:export declare const isConfigOptionOfType: <T extends ConfigType, M extends boolean>(o: any, type: T, multi: M) => o is ConfigOption<T, M>;
./node_modules/jackspeak/dist/commonjs/index.d.ts:export declare const isConfigOption: <T extends ConfigType, M extends boolean>(o: any, type: T, multi: M) => o is ConfigOption<T, M>;
./node_modules/ts-node/dist/ts-compiler-types.d.ts:            Node16: any;
./node_modules/ts-node/dist/repl.d.ts:    evalCode(code: string): any;
./node_modules/ts-node/dist/repl.d.ts:    nodeEval(code: string, context: any, _filename: string, callback: (err: Error | null, result?: any) => any): void;
./node_modules/ts-node/dist/index.d.ts:export declare const VERSION: any;
./node_modules/ts-node/dist/child/child-require.d.ts:declare function onWarning(this: any, warning: Error, ...rest: any[]): any;
./node_modules/call-bound/index.d.ts:  (typeof globalThis)[T] extends { prototype: any }
./node_modules/call-bound/index.d.ts:    (str: string, searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string
./node_modules/call-bound/index.d.ts:  '%Array.prototype.map%': <T, U>(array: readonly T[], callbackfn: (value: T, index: number, array: readonly T[]) => U, thisArg?: any) => U[];
./node_modules/call-bound/index.d.ts:  '%Array.prototype.filter%': <T>(array: readonly T[], predicate: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any) => T[];
./node_modules/call-bound/index.d.ts:  '%Function.prototype.apply%': <T, A extends any[], R>(fn: (...args: A) => R, thisArg: any, args: A) => R;
./node_modules/call-bound/index.d.ts:  '%Function.prototype.call%': <T, A extends any[], R>(fn: (...args: A) => R, thisArg: any, ...args: A) => R;
./node_modules/call-bound/index.d.ts:  '%Function.prototype.bind%': <T, A extends any[], R>(fn: (...args: A) => R, thisArg: any, ...args: A) => (...remainingArgs: A) => R;
./node_modules/call-bound/index.d.ts:    <T, R>(promise: Promise<T>, onfulfilled: ((value: T) => R | PromiseLike<R>) | undefined | null, onrejected: (reason: any) => R | PromiseLike<R>): Promise<R>;
./node_modules/ioredis/built/transaction.d.ts:export declare function addTransactionSupport(redis: any): void;
./node_modules/ioredis/built/connectors/AbstractConnector.d.ts:    check(info: any): boolean;
./node_modules/ioredis/built/cluster/ClusterSubscriber.d.ts:    getInstance(): any;
./node_modules/ioredis/built/cluster/ConnectionPool.d.ts:    constructor(redisOptions: any);
./node_modules/ioredis/built/cluster/util.d.ts:    [key: string]: any;
./node_modules/ioredis/built/cluster/util.d.ts:export declare function getConnectionName(component: any, nodeConnectionName: any): string;
./node_modules/ioredis/built/cluster/index.d.ts:    duplicate(overrideStartupNodes?: any[], overrideOptions?: {}): Cluster;
./node_modules/ioredis/built/cluster/index.d.ts:    sendCommand(command: Command, stream?: WriteableStream, node?: any): unknown;
./node_modules/ioredis/built/cluster/index.d.ts:        value?: any;
./node_modules/ioredis/built/cluster/index.d.ts:    }, handlers: any): void;
./node_modules/ioredis/built/Script.d.ts:    execute(container: any, args: any[], options: any, callback?: Callback): any;
./node_modules/ioredis/built/autoPipelining.d.ts:export declare function shouldUseAutoPipelining(client: any, functionName: string, commandName: string): boolean;
./node_modules/ioredis/built/autoPipelining.d.ts:export declare function executeWithAutoPipelining(client: any, functionName: string, commandName: string, args: ArgumentType[], callback: any): Promise<unknown>;
./node_modules/ioredis/built/redis/event_handler.d.ts:export declare function connectHandler(self: any): () => void;
./node_modules/ioredis/built/redis/event_handler.d.ts:export declare function closeHandler(self: any): () => void;
./node_modules/ioredis/built/redis/event_handler.d.ts:export declare function errorHandler(self: any): (error: any) => void;
./node_modules/ioredis/built/redis/event_handler.d.ts:export declare function readyHandler(self: any): () => void;
./node_modules/ioredis/built/types.d.ts:    resolve(result: any): void;
./node_modules/ioredis/built/ScanStream.d.ts:    redis: any;
./node_modules/ioredis/built/utils/debug.d.ts:declare function getStringValue(v: any): string | void;
./node_modules/ioredis/built/utils/debug.d.ts:export default function genDebugFunction(namespace: string): (...args: any[]) => void;
./node_modules/ioredis/built/utils/index.d.ts:export declare function convertBufferToString(value: any, encoding?: BufferEncoding): any;
./node_modules/ioredis/built/utils/index.d.ts:export declare function isInt(value: any): value is string;
./node_modules/ioredis/built/utils/index.d.ts:export declare function packObject(array: any[]): Record<string, any>;
./node_modules/ioredis/built/utils/index.d.ts:export declare function toArg(arg: any): string;
./node_modules/ioredis/built/utils/index.d.ts:    [key: string]: any;
./node_modules/ioredis/built/utils/Commander.d.ts:        string: any;
./node_modules/ioredis/built/utils/Commander.d.ts:        buffer: any;
./node_modules/ioredis/built/utils/applyMixin.d.ts:declare type Constructor = new (...args: any[]) => void;
./node_modules/ioredis/built/Command.d.ts:declare type ArgumentTransformer = (args: any[]) => any[];
./node_modules/ioredis/built/Command.d.ts:declare type ReplyTransformer = (reply: any) => any;
./node_modules/ioredis/built/Command.d.ts:    resolve: (result: any) => void;
./node_modules/ioredis/built/Redis.d.ts:    on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/ioredis/built/Redis.d.ts:    once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/ioredis/built/errors/ClusterAllFailedError.d.ts:    constructor(message: any, lastNodeError: RedisError);
./node_modules/ioredis/built/index.d.ts:export declare const ReplyError: any;
./node_modules/ioredis/built/index.d.ts:export declare function print(err: Error | null, reply?: any): void;
./node_modules/ioredis/built/Pipeline.d.ts:    addBatch(commands: any): this;
./node_modules/smart-buffer/typings/utils.d.ts:declare function checkLengthValue(length: any): void;
./node_modules/smart-buffer/typings/utils.d.ts:declare function checkOffsetValue(offset: any): void;
./node_modules/.prisma/client/edge.d.ts:export declare const PrismaClient: any
./node_modules/.prisma/client/edge.d.ts:export declare const dmmf: any
./node_modules/.prisma/client/edge.d.ts:export declare type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>
./node_modules/.prisma/client/edge.d.ts:  ): (client: any) => PrismaClientExtends<Args>
./node_modules/.prisma/client/wasm.d.ts:export declare const PrismaClient: any
./node_modules/.prisma/client/wasm.d.ts:export declare const dmmf: any
./node_modules/.prisma/client/wasm.d.ts:export declare type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>
./node_modules/.prisma/client/wasm.d.ts:  ): (client: any) => PrismaClientExtends<Args>
./node_modules/.prisma/client/index.d.ts:export declare const PrismaClient: any
./node_modules/.prisma/client/index.d.ts:export declare const dmmf: any
./node_modules/.prisma/client/index.d.ts:export declare type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>
./node_modules/.prisma/client/index.d.ts:  ): (client: any) => PrismaClientExtends<Args>
./node_modules/.prisma/client/default.d.ts:export declare const PrismaClient: any
./node_modules/.prisma/client/default.d.ts:export declare const dmmf: any
./node_modules/.prisma/client/default.d.ts:export declare type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>
./node_modules/.prisma/client/default.d.ts:  ): (client: any) => PrismaClientExtends<Args>
./node_modules/devtools-protocol/types/protocol.d.ts:            data?: any;
./node_modules/devtools-protocol/types/protocol.d.ts:            executionContextAuxData?: any;
./node_modules/devtools-protocol/types/protocol.d.ts:            executionContextAuxData?: any;
./node_modules/devtools-protocol/types/protocol.d.ts:            additionalParameters?: any;
./node_modules/devtools-protocol/types/protocol.d.ts:            value?: any;
./node_modules/devtools-protocol/types/protocol.d.ts:            value?: any;
./node_modules/devtools-protocol/types/protocol.d.ts:            value?: any;
./node_modules/devtools-protocol/types/protocol.d.ts:            auxData?: any;
./node_modules/devtools-protocol/types/protocol.d.ts:            exceptionMetaData?: any;
./node_modules/devtools-protocol/types/protocol.d.ts:            hints: any;
./node_modules/devtools-protocol/types/protocol.d.ts:            value?: any;
./node_modules/devtools-protocol/types/protocol.d.ts:            data: any;
./node_modules/devtools-protocol/types/protocol.d.ts:            values: any;
./node_modules/devtools-protocol/types/protocol.d.ts:            shape: any[];
./node_modules/devtools-protocol/types/protocol.d.ts:            marginShape: any[];
./node_modules/devtools-protocol/types/protocol.d.ts:            commandLog: any[];
./node_modules/devtools-protocol/types/protocol.d.ts:            body: any;
./node_modules/devtools-protocol/types/protocol.d.ts:            highlight: any;
./node_modules/devtools-protocol/types/protocol.d.ts:            highlights: any;
./node_modules/devtools-protocol/types/protocol.d.ts:            highlight: any;
./node_modules/devtools-protocol/types/protocol.d.ts:            details: any;
./node_modules/devtools-protocol/types/protocol.d.ts:            auctionConfig?: any;
./node_modules/devtools-protocol/types/protocol.d.ts:            body: any;
./node_modules/devtools-protocol/types/protocol.d.ts:            auxAttributes?: any;
./node_modules/devtools-protocol/types/protocol.d.ts:            featureStatus?: any;
./node_modules/devtools-protocol/types/protocol.d.ts:            value: any[];
./node_modules/devtools-protocol/types/protocol.d.ts:            data: any;
./node_modules/pino-pretty/index.d.ts:  function prettyFactory(options: PrettyOptions): (inputData: any) => string
./node_modules/tinyspy/dist/index.d.ts:    (this: any, ...args: A): R;
./node_modules/tinyspy/dist/index.d.ts:    (this: any, ...args: A): R;
./node_modules/tinyspy/dist/index.d.ts:    nextError(error: any): this;
./node_modules/tinyspy/dist/index.d.ts:type Procedure = (...args: any[]) => any;
./node_modules/tinyspy/dist/index.d.ts:    [K in keyof T]: T[K] extends new (...args: any[]) => any ? K : never;
./node_modules/@colors/colors/index.d.ts:export function setTheme(theme: any): void;
./node_modules/@colors/colors/safe.d.ts:export function setTheme(theme: any): void;
./node_modules/@cspotcode/source-map-support/source-map-support.d.ts:    onConflictingLibraryRedirect?: (request: string, parent: any, isMain: boolean, options: any, redirectedRequest: string) => void;
./node_modules/@cspotcode/source-map-support/source-map-support.d.ts:export function wrapCallSite(frame: any /* StackFrame */): any /* StackFrame */;
./node_modules/next-test-api-route-handler/dist/src/index.d.ts:  appHandler: Partial<Omit<AppRouteUserlandModule, keyof import('next/dist/server/route-modules/app-route/module').AppRouteHandlers> & { [key in keyof import('next/dist/server/route-modules/app-route/module').AppRouteHandlers]?: (req: NextRequest, segmentData?: any) => any }>;
./node_modules/deepmerge/index.d.ts:		arrayMerge?(target: any[], source: any[], options?: Options): any[];
./node_modules/undici-types/websocket.d.ts:    data?: any,
./node_modules/undici-types/websocket.d.ts:  error?: any
./node_modules/undici-types/websocket.d.ts:  readonly error: any
./node_modules/undici-types/fetch.d.ts:  static json(data: any, init?: ResponseInit): Response
./node_modules/undici-types/webidl.d.ts:  Stringify (V: any): string
./node_modules/undici-types/webidl.d.ts:  markAsUncloneable (V: any): void
./node_modules/undici-types/webidl.d.ts:  [Key: string]: (...args: any[]) => unknown
./node_modules/undici-types/diagnostics-channel.d.ts:    headers: any;
./node_modules/undici-types/patch.d.ts: : any
./node_modules/big-integer/BigInteger.d.ts:        isInstance: (x: any) => x is BigInteger;
./node_modules/unbzip2-stream/node_modules/buffer/index.d.ts:    toJSON(): { type: 'Buffer', data: any[] };
./node_modules/unbzip2-stream/node_modules/buffer/index.d.ts:    fill(value: any, offset?: number, end?: number): this;
./node_modules/unbzip2-stream/node_modules/buffer/index.d.ts:    constructor (array: any[]);
./node_modules/unbzip2-stream/node_modules/buffer/index.d.ts:    static from(array: any[]): Buffer;
./node_modules/unbzip2-stream/node_modules/buffer/index.d.ts:    static isBuffer(obj: any): obj is Buffer;
./node_modules/tiny-invariant/dist/esm/tiny-invariant.d.ts:export default function invariant(condition: any,
./node_modules/tiny-invariant/dist/tiny-invariant.d.ts:export default function invariant(condition: any,
./node_modules/tiny-invariant/src/tiny-invariant.ts:  condition: any,
./node_modules/@isaacs/fs-minipass/dist/esm/index.d.ts:    emit(ev: string, ...args: any[]): boolean;
./node_modules/@isaacs/fs-minipass/dist/commonjs/index.d.ts:    emit(ev: string, ...args: any[]): boolean;
./node_modules/html2canvas/dist/types/core/__mocks__/context.d.ts:    readonly cache: any;
./node_modules/html2canvas/dist/types/css/layout/__mocks__/bounds.d.ts:export declare const Bounds: any;
./node_modules/playwright/types/test.d.ts:export type Metadata = { [key: string]: any };
./node_modules/playwright/types/test.d.ts:   *   return function replacementMethod(...args: any) {
./node_modules/playwright/types/test.d.ts:   *   return function replacementMethod(...args: any) {
./node_modules/playwright/types/test.d.ts:     *   return function replacementMethod(...args: any) {
./node_modules/playwright/types/test.d.ts:     *   return function replacementMethod(...args: any) {
./node_modules/playwright/types/test.d.ts:type ToUserMatcher<F, DefaultReturnType> = F extends (first: any, ...args: infer Rest) => infer R ? (...args: Rest) => (R extends PromiseLike<infer U> ? Promise<void> : DefaultReturnType) : never;
./node_modules/playwright/types/test.d.ts:  [K in keyof T as T[K] extends (arg: ArgType, ...rest: any[]) => any ? K : never]: ToUserMatcher<T[K], DefaultReturnType>;
./node_modules/playwright/types/test.d.ts:  actual?: any;
./node_modules/playwright/types/test.d.ts:  extend<MoreMatchers extends Record<string, (this: ExpectMatcherState, receiver: any, ...args: any[]) => MatcherReturnType | Promise<MatcherReturnType>>>(matchers: MoreMatchers): Expect<ExtendedMatchers & MoreMatchers>;
./node_modules/playwright/types/test.d.ts:  toHaveJSProperty(name: string, value: any, options?: {
./node_modules/onetime/index.d.ts:	callCount(fn: (...arguments: any[]) => unknown): number;
./node_modules/@asamuzakjp/css-color/node_modules/lru-cache/dist/esm/index.d.ts:        isBackgroundFetch: (p: any) => boolean;
./node_modules/@asamuzakjp/css-color/node_modules/lru-cache/dist/esm/index.d.ts:        backgroundFetch: (k: K, index: number | undefined, options: LRUCache.FetchOptions<K, V, FC>, context: any) => BackgroundFetch<V>;
./node_modules/@asamuzakjp/css-color/node_modules/lru-cache/dist/esm/index.d.ts:    forEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./node_modules/@asamuzakjp/css-color/node_modules/lru-cache/dist/esm/index.d.ts:    rforEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./node_modules/@asamuzakjp/css-color/node_modules/lru-cache/dist/commonjs/index.d.ts:        isBackgroundFetch: (p: any) => boolean;
./node_modules/@asamuzakjp/css-color/node_modules/lru-cache/dist/commonjs/index.d.ts:        backgroundFetch: (k: K, index: number | undefined, options: LRUCache.FetchOptions<K, V, FC>, context: any) => BackgroundFetch<V>;
./node_modules/@asamuzakjp/css-color/node_modules/lru-cache/dist/commonjs/index.d.ts:    forEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./node_modules/@asamuzakjp/css-color/node_modules/lru-cache/dist/commonjs/index.d.ts:    rforEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./node_modules/@vue/compiler-core/dist/compiler-core.d.ts:export declare function checkCompatEnabled(key: CompilerDeprecationTypes, context: MergedParserOptions | TransformContext, loc: SourceLocation | null, ...args: any[]): boolean;
./node_modules/@vue/compiler-core/dist/compiler-core.d.ts:export declare function warnDeprecation(key: CompilerDeprecationTypes, context: MergedParserOptions | TransformContext, loc: SourceLocation | null, ...args: any[]): void;
./node_modules/@vue/compiler-sfc/dist/compiler-sfc.d.ts:    preprocessOptions?: any;
./node_modules/@vue/compiler-sfc/dist/compiler-sfc.d.ts:    preprocessOptions?: any;
./node_modules/@vue/compiler-sfc/dist/compiler-sfc.d.ts:    postcssOptions?: any;
./node_modules/@vue/compiler-sfc/dist/compiler-sfc.d.ts:    postcssPlugins?: any[];
./node_modules/@vue/compiler-sfc/dist/compiler-sfc.d.ts:export declare const walk: any;
./node_modules/@vue/shared/dist/shared.d.ts:    readonly [key: string]: any;
./node_modules/@vue/shared/dist/shared.d.ts:export declare const hasChanged: (value: any, oldValue: any) => boolean;
./node_modules/@vue/shared/dist/shared.d.ts:export declare const invokeArrayFns: (fns: Function[], ...arg: any[]) => void;
./node_modules/@vue/shared/dist/shared.d.ts:export declare const def: (obj: object, key: string | symbol, value: any, writable?: boolean) => void;
./node_modules/@vue/shared/dist/shared.d.ts:export declare const looseToNumber: (val: any) => any;
./node_modules/@vue/shared/dist/shared.d.ts:export declare const toNumber: (val: any) => any;
./node_modules/@vue/shared/dist/shared.d.ts:export declare function genCacheKey(source: string, options: any): string;
./node_modules/@vue/shared/dist/shared.d.ts:export declare function looseEqual(a: any, b: any): boolean;
./node_modules/@vue/shared/dist/shared.d.ts:export declare function looseIndexOf(arr: any[], val: any): number;
./node_modules/@vue/shared/dist/shared.d.ts:export type OverloadParameters<T extends (...args: any[]) => any> = Parameters<OverloadUnion<T>>;
./node_modules/@vue/shared/dist/shared.d.ts:type OverloadUnion<TOverload extends (...args: any[]) => any> = Exclude<OverloadUnionRecursive<(() => never) & TOverload>, TOverload extends () => never ? never : () => never>;
./node_modules/@csstools/css-tokenizer/dist/index.d.ts:export declare function isToken(x: any): x is CSSToken;
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 500: any }   ? T[500] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 501: any }   ? T[501] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 502: any }   ? T[502] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 503: any }   ? T[503] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 504: any }   ? T[504] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 505: any }   ? T[505] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 506: any }   ? T[506] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 507: any }   ? T[507] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 508: any }   ? T[508] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 510: any }   ? T[510] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 511: any }   ? T[511] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { "5XX": any } ? T["5XX"] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 400: any }   ? T[400] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 401: any }   ? T[401] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 402: any }   ? T[402] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 403: any }   ? T[403] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 404: any }   ? T[404] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 405: any }   ? T[405] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 406: any }   ? T[406] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 407: any }   ? T[407] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 408: any }   ? T[408] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 409: any }   ? T[409] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 410: any }   ? T[410] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 411: any }   ? T[411] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 412: any }   ? T[412] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 413: any }   ? T[413] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 414: any }   ? T[414] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 415: any }   ? T[415] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 416: any }   ? T[416] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 417: any }   ? T[417] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 418: any }   ? T[418] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 420: any }   ? T[420] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 421: any }   ? T[421] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 422: any }   ? T[422] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 423: any }   ? T[423] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 424: any }   ? T[424] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 425: any }   ? T[425] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 426: any }   ? T[426] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 427: any }   ? T[427] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 428: any }   ? T[428] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 429: any }   ? T[429] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 430: any }   ? T[430] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 431: any }   ? T[431] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 444: any }   ? T[444] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 450: any }   ? T[450] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 451: any }   ? T[451] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 497: any }   ? T[497] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 498: any }   ? T[498] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { 499: any }   ? T[499] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { "4XX": any } ? T["4XX"] :
./node_modules/openapi-typescript-helpers/index.d.ts:  T extends { default: any } ? T["default"] : never;
./node_modules/openapi-typescript-helpers/index.d.ts:    [K in PathnameMethod]: any;
./node_modules/openapi-typescript-helpers/index.d.ts:  parameters: any;
./node_modules/openapi-typescript-helpers/index.d.ts:  requestBody: any; // note: "any" will get overridden in inference
./node_modules/openapi-typescript-helpers/index.d.ts:  responses: any;
./node_modules/openapi-typescript-helpers/index.d.ts:} & { parameters?: any };
./node_modules/openapi-typescript-helpers/index.d.ts:export type ResponseObjectMap<T> = T extends { responses: any } ? T["responses"] : unknown;
./node_modules/openapi-typescript-helpers/index.d.ts:export type ResponseContent<T> = T extends { content: any } ? T["content"] : unknown;
./node_modules/outvariant/lib/index.d.ts:    constructor(message: string, ...positionals: any[]);
./node_modules/outvariant/lib/index.d.ts:    (predicate: unknown, message: string, ...positionals: any[]): asserts predicate;
./node_modules/outvariant/lib/index.d.ts:declare function format(message: string, ...positionals: any[]): string;
./node_modules/bs-logger/dist/logger/context.d.ts:    [key: string]: any;
./node_modules/bs-logger/dist/logger/index.d.ts:    (message: string, ...args: any[]): void;
./node_modules/bs-logger/dist/logger/index.d.ts:    (context: LogContext, message: string, ...args: any[]): void;
./node_modules/bs-logger/dist/logger/index.d.ts:    <F extends (...args: any[]) => any>(func: F): F;
./node_modules/bs-logger/dist/logger/index.d.ts:    <F extends (...args: any[]) => any>(message: string, func: F): F;
./node_modules/bs-logger/dist/logger/index.d.ts:    <F extends (...args: any[]) => any>(context: LogContext, message: string, func: F): F;
./node_modules/bs-logger/dist/logger/index.d.ts:    <F extends (...args: any[]) => any>(level: number, message: string, func: F): F;
./node_modules/@mswjs/interceptors/lib/node/interceptors/ClientRequest/index.d.ts:    push(chunk: any, encoding?: BufferEncoding): boolean;
./node_modules/@mswjs/interceptors/lib/node/interceptors/ClientRequest/index.d.ts:    emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@mswjs/interceptors/lib/node/RemoteHttpInterceptor.d.ts:declare function requestReviver(key: string, value: any): any;
./node_modules/@mswjs/interceptors/src/interceptors/ClientRequest/agents.ts:    createConnection(options: any, callback: any): net.Socket
./node_modules/@mswjs/interceptors/src/interceptors/ClientRequest/agents.ts:  public createConnection(options: any, callback: any): net.Socket {
./node_modules/@mswjs/interceptors/src/interceptors/ClientRequest/agents.ts:  public createConnection(options: any, callback: any): net.Socket {
./node_modules/@mswjs/interceptors/src/interceptors/ClientRequest/MockHttpSocket.ts:  public emit(event: string | symbol, ...args: any[]): boolean {
./node_modules/@mswjs/interceptors/src/interceptors/Socket/MockSocket.ts:  public push(chunk: any, encoding?: BufferEncoding): boolean {
./node_modules/@mswjs/interceptors/src/interceptors/Socket/utils/normalizeSocketWriteArgs.ts:  chunk: any,
./node_modules/@mswjs/interceptors/src/interceptors/Socket/utils/baseUrlFromConnectionOptions.ts:export function baseUrlFromConnectionOptions(options: any): URL {
./node_modules/@mswjs/interceptors/src/Interceptor.ts:function setGlobalSymbol(symbol: Symbol, value: any): void {
./node_modules/@mswjs/interceptors/src/RemoteHttpInterceptor.ts:export function requestReviver(key: string, value: any) {
./node_modules/@mswjs/interceptors/src/utils/isObject.ts:export function isObject<T>(value: any, loose = false): value is T {
./node_modules/@mswjs/data/node_modules/date-fns/typings.d.ts:  function isDate(value: any): boolean
./node_modules/@mswjs/data/node_modules/date-fns/typings.d.ts:  function isValid(date: any): boolean
./node_modules/@mswjs/data/node_modules/date-fns/typings.d.ts:  function isDate(value: any): boolean
./node_modules/@mswjs/data/node_modules/date-fns/typings.d.ts:  function isValid(date: any): boolean
./node_modules/@mswjs/data/node_modules/date-fns/typings.d.ts:  isDate(value: any): boolean
./node_modules/@mswjs/data/node_modules/date-fns/typings.d.ts:  isValid(date: any): boolean
./node_modules/@mswjs/data/lib/utils/isObject.d.ts:export declare function isObject<O extends Record<string, any>>(value: any): value is O;
./node_modules/@mswjs/data/lib/utils/isModelValueType.d.ts:export declare function isModelValueType(value: any): value is ModelValueType;
./node_modules/@mswjs/data/lib/model/generateGraphQLHandlers.d.ts:export declare function getGraphQLType(value: any): GraphQLScalarType<number, number> | GraphQLScalarType<boolean, boolean> | GraphQLScalarType<string, string>;
./node_modules/basic-ftp/dist/FtpContext.d.ts:    resolve(args: any): void;
./node_modules/use-debounce/dist/useDebouncedCallback.d.ts:export interface DebouncedState<T extends (...args: any) => ReturnType<T>> extends ControlFunctions<ReturnType<T>> {
./node_modules/use-debounce/dist/useDebouncedCallback.d.ts:export default function useDebouncedCallback<T extends (...args: any) => ReturnType<T>>(func: T, wait?: number, options?: Options, forceUpdate?: Dispatch<SetStateAction<object>>): DebouncedState<T>;
./node_modules/use-debounce/dist/useThrottledCallback.d.ts:export default function useThrottledCallback<T extends (...args: any) => ReturnType<T>>(func: T, wait: number, { leading, trailing }?: CallOptions): DebouncedState<T>;
./node_modules/qrcode/node_modules/yargs/build/lib/usage.d.ts:    stringifiedValues(values?: any[], separator?: string): string;
./node_modules/qrcode/node_modules/yargs/build/lib/usage.d.ts:    version(ver: any): void;
./node_modules/qrcode/node_modules/yargs/build/lib/command.d.ts:    (argv: Arguments): any;
./node_modules/qrcode/node_modules/yargs/build/lib/command.d.ts:    (handlerResult: any): any;
./node_modules/qrcode/node_modules/yargs/build/lib/yargs.d.ts:        (key: string, value: any, defaultDescription?: string): YargsInstance;
./node_modules/qrcode/node_modules/yargs/build/lib/yargs.d.ts:    default?: any;
./node_modules/qrcode/node_modules/yargs/build/lib/completion.d.ts:    getCompletion(args: string[], done: (completions: string[]) => any): any;
./node_modules/qrcode/node_modules/yargs/build/lib/completion.d.ts:    (current: string, argv: Arguments, done: (completions: string[]) => any): any;
./node_modules/qrcode/node_modules/yargs/build/lib/argsert.d.ts:export declare function argsert(callerArguments: any[], length?: number): void;
./node_modules/qrcode/node_modules/yargs/build/lib/argsert.d.ts:export declare function argsert(expected: string, callerArguments: any[], length?: number): void;
./node_modules/motion-dom/dist/index.d.ts:    attachTimeline(timeline: any, fallback?: (animation: AnimationPlaybackControls | AnimationPlaybackControlsWithFinished) => VoidFunction): () => void;
./node_modules/motion-dom/dist/index.d.ts:    get startTime(): any;
./node_modules/motion-dom/dist/index.d.ts:declare function getValueTransition(transition: any, key: string): any;
./node_modules/motion-dom/dist/index.d.ts:    attachTimeline(timeline: any): (any: void) => void;
./node_modules/motion-dom/dist/index.d.ts:declare function attachTimeline(animation: Animation, timeline: any): void;
./node_modules/motion-dom/dist/index.d.ts:    animations: any[];
./node_modules/supabase/node_modules/minizlib/dist/esm/constants.d.ts:export declare const constants: any;
./node_modules/supabase/node_modules/minizlib/dist/esm/index.d.ts:    reset(): any;
./node_modules/supabase/node_modules/minizlib/dist/commonjs/constants.d.ts:export declare const constants: any;
./node_modules/supabase/node_modules/minizlib/dist/commonjs/index.d.ts:    reset(): any;
./node_modules/supabase/node_modules/yallist/dist/esm/index.d.ts:    forEach(fn: (value: T, i: number, list: Yallist<T>) => any, thisp?: any): void;
./node_modules/supabase/node_modules/yallist/dist/esm/index.d.ts:    forEachReverse(fn: (value: T, i: number, list: Yallist<T>) => any, thisp?: any): void;
./node_modules/supabase/node_modules/yallist/dist/esm/index.d.ts:    map<R = any>(fn: (value: T, list: Yallist<T>) => R, thisp?: any): Yallist<R>;
./node_modules/supabase/node_modules/yallist/dist/esm/index.d.ts:    mapReverse<R = any>(fn: (value: T, list: Yallist<T>) => R, thisp?: any): Yallist<R>;
./node_modules/supabase/node_modules/yallist/dist/esm/index.d.ts:    toArray(): any[];
./node_modules/supabase/node_modules/yallist/dist/esm/index.d.ts:    toArrayReverse(): any[];
./node_modules/supabase/node_modules/yallist/dist/commonjs/index.d.ts:    forEach(fn: (value: T, i: number, list: Yallist<T>) => any, thisp?: any): void;
./node_modules/supabase/node_modules/yallist/dist/commonjs/index.d.ts:    forEachReverse(fn: (value: T, i: number, list: Yallist<T>) => any, thisp?: any): void;
./node_modules/supabase/node_modules/yallist/dist/commonjs/index.d.ts:    map<R = any>(fn: (value: T, list: Yallist<T>) => R, thisp?: any): Yallist<R>;
./node_modules/supabase/node_modules/yallist/dist/commonjs/index.d.ts:    mapReverse<R = any>(fn: (value: T, list: Yallist<T>) => R, thisp?: any): Yallist<R>;
./node_modules/supabase/node_modules/yallist/dist/commonjs/index.d.ts:    toArray(): any[];
./node_modules/supabase/node_modules/yallist/dist/commonjs/index.d.ts:    toArrayReverse(): any[];
./node_modules/supabase/node_modules/tar/dist/esm/warn-method.d.ts:    warn(code: string, message: string | Error, data: any): void;
./node_modules/supabase/node_modules/tar/dist/esm/warn-method.d.ts:    [k: string]: any;
./node_modules/supabase/node_modules/tar/dist/esm/parse.d.ts:    [EMIT](ev: string | symbol, data?: any, extra?: any): void;
./node_modules/supabase/node_modules/tar/dist/esm/write-entry.d.ts:    emit(ev: keyof WarnEvent, ...data: any[]): boolean;
./node_modules/supabase/node_modules/tar/dist/commonjs/warn-method.d.ts:    warn(code: string, message: string | Error, data: any): void;
./node_modules/supabase/node_modules/tar/dist/commonjs/warn-method.d.ts:    [k: string]: any;
./node_modules/supabase/node_modules/tar/dist/commonjs/parse.d.ts:    [EMIT](ev: string | symbol, data?: any, extra?: any): void;
./node_modules/supabase/node_modules/tar/dist/commonjs/write-entry.d.ts:    emit(ev: keyof WarnEvent, ...data: any[]): boolean;
./node_modules/eventemitter3/index.d.ts:   *   'event-with-parameters': any[]
./node_modules/eventemitter3/index.d.ts:   *   'event-with-example-handler': (...args: any[]) => void
./node_modules/eventemitter3/index.d.ts:    [K in keyof T]: T[K] extends (...args: any[]) => void
./node_modules/eventemitter3/index.d.ts:      : any[];
./node_modules/eventemitter3/index.d.ts:    ? (...args: any[]) => void
./node_modules/fecha/src/fecha.ts:export function assign(origObj: any, ...args: any[]): any {
./node_modules/stable-hash/dist/index.d.ts:export declare function stableHash(arg: any): string;
./node_modules/winston-transport/index.d.ts:  public log?(info: any, next: () => void): any;
./node_modules/winston-transport/index.d.ts:  public logv?(info: any, next: () => void): any;
./node_modules/winston-transport/index.d.ts:    log?(info: any, next: () => void): any;
./node_modules/winston-transport/index.d.ts:    logv?(info: any, next: () => void): any;
./node_modules/gzip-size/index.d.ts:			listener: (...args: any[]) => void
./node_modules/gzip-size/index.d.ts:		on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/gzip-size/index.d.ts:		once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/gzip-size/index.d.ts:			listener: (...args: any[]) => void
./node_modules/gzip-size/index.d.ts:		off(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/gzip-size/index.d.ts:		emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/gzip-size/index.d.ts:			listener: (...args: any[]) => void
./node_modules/gzip-size/index.d.ts:			listener: (...args: any[]) => void
./node_modules/webpack/types.d.ts:	[index: string]: any;
./node_modules/webpack/types.d.ts:	module: any;
./node_modules/webpack/types.d.ts:	array?: any[];
./node_modules/webpack/types.d.ts:				((result: any, callback: (err?: Error) => void) => void)[]
./node_modules/webpack/types.d.ts:	constructor(source: Source | (() => Source), cachedData?: any);
./node_modules/webpack/types.d.ts:	getCachedData(): any;
./node_modules/webpack/types.d.ts:	(err?: null | WebpackError, result?: null | T): any;
./node_modules/webpack/types.d.ts:	(err: null | Error, result?: T): any;
./node_modules/webpack/types.d.ts:	(err?: null | Error, result?: T): any;
./node_modules/webpack/types.d.ts:	getData(module: Module, runtime: RuntimeSpec, key: string): any;
./node_modules/webpack/types.d.ts:		args?: any[]
./node_modules/webpack/types.d.ts:	amd?: false | { [index: string]: any };
./node_modules/webpack/types.d.ts:					result?: string | boolean | string[] | { [index: string]: any }
./node_modules/webpack/types.d.ts:	new (...params: any[]): any;
./node_modules/webpack/types.d.ts:		newContentResource?: string | boolean | RegExp | ((context?: any) => void),
./node_modules/webpack/types.d.ts:	newContentCallback?: (context?: any) => void;
./node_modules/webpack/types.d.ts:	write: (...args: any[]) => any;
./node_modules/webpack/types.d.ts:	close?: (...args: any[]) => any;
./node_modules/webpack/types.d.ts:	new (...args: any[]): Dependency;
./node_modules/webpack/types.d.ts:	module: any;
./node_modules/webpack/types.d.ts:	get disconnect(): any;
./node_modules/webpack/types.d.ts:	new (...args: any[]): Dependency;
./node_modules/webpack/types.d.ts:type DevtoolModuleFilenameTemplate = string | ((context?: any) => string);
./node_modules/webpack/types.d.ts:		buildMeta?: { [index: string]: any };
./node_modules/webpack/types.d.ts:	value: any;
./node_modules/webpack/types.d.ts:	[index: string]: any;
./node_modules/webpack/types.d.ts:	moduleFilenameTemplate?: string | ((context?: any) => string);
./node_modules/webpack/types.d.ts:	moduleFilenameTemplate: string | ((context?: any) => string);
./node_modules/webpack/types.d.ts:	preparedInfo: any;
./node_modules/webpack/types.d.ts:	exports: any;
./node_modules/webpack/types.d.ts:	exports: any;
./node_modules/webpack/types.d.ts:				result?: string | boolean | string[] | { [index: string]: any }
./node_modules/webpack/types.d.ts:type ExternalItemValue = string | boolean | string[] | { [index: string]: any };
./node_modules/webpack/types.d.ts:				result?: string | boolean | string[] | { [index: string]: any }
./node_modules/webpack/types.d.ts:	open?: (...args: any[]) => any;
./node_modules/webpack/types.d.ts:	close?: (...args: any[]) => any;
./node_modules/webpack/types.d.ts:	[index: string]: any;
./node_modules/webpack/types.d.ts:	[index: string]: { [index: string]: any };
./node_modules/webpack/types.d.ts:	getKeys: (item?: any) => undefined | string[];
./node_modules/webpack/types.d.ts:	createGroup: (key: string, children: any[], items: any[]) => object;
./node_modules/webpack/types.d.ts:	getOptions?: (name: string, items: any[]) => GroupOptions;
./node_modules/webpack/types.d.ts:	merge: any;
./node_modules/webpack/types.d.ts:		conditional: any;
./node_modules/webpack/types.d.ts:	[index: string]: any;
./node_modules/webpack/types.d.ts:	amd?: false | { [index: string]: any };
./node_modules/webpack/types.d.ts:	hash?: any;
./node_modules/webpack/types.d.ts:	args?: any[];
./node_modules/webpack/types.d.ts:	[index: string]: any;
./node_modules/webpack/types.d.ts:	[index: string]: any;
./node_modules/webpack/types.d.ts:	[index: string]: any;
./node_modules/webpack/types.d.ts:		[index: string]: any;
./node_modules/webpack/types.d.ts:		callback: (err?: null | Error, exports?: any) => any
./node_modules/webpack/types.d.ts:	readonly data: any;
./node_modules/webpack/types.d.ts:	args?: any[];
./node_modules/webpack/types.d.ts:	get hasEqualsChunks(): any;
./node_modules/webpack/types.d.ts:	get isUsed(): any;
./node_modules/webpack/types.d.ts:	get errors(): any;
./node_modules/webpack/types.d.ts:	get warnings(): any;
./node_modules/webpack/types.d.ts:	used: any;
./node_modules/webpack/types.d.ts:	range: any;
./node_modules/webpack/types.d.ts:	getMeta(thing: object): any;
./node_modules/webpack/types.d.ts:	getMetaIfExisting(thing: object): any;
./node_modules/webpack/types.d.ts:	parser?: { [index: string]: any };
./node_modules/webpack/types.d.ts:	generator?: { [index: string]: any };
./node_modules/webpack/types.d.ts:	resourceResolveData: any;
./node_modules/webpack/types.d.ts:	getCurrentLoader(loaderContext?: any, index?: number): null | LoaderItem;
./node_modules/webpack/types.d.ts:	applyNoParseRule(rule: any, content: string): boolean;
./node_modules/webpack/types.d.ts:	shouldPreventParsing(noParseRule: any, request: string): boolean;
./node_modules/webpack/types.d.ts:	static deserialize(context: ObjectDeserializerContext): any;
./node_modules/webpack/types.d.ts:	resourceResolveData?: any;
./node_modules/webpack/types.d.ts:	): any;
./node_modules/webpack/types.d.ts:	[index: string]: any;
./node_modules/webpack/types.d.ts:	serialize: (value: any, context: ObjectSerializerContext) => void;
./node_modules/webpack/types.d.ts:	write: (value?: any) => void;
./node_modules/webpack/types.d.ts:	writeLazy?: (item?: any) => void;
./node_modules/webpack/types.d.ts:		item: any,
./node_modules/webpack/types.d.ts:	devtoolFallbackModuleFilenameTemplate?: string | ((context?: any) => string);
./node_modules/webpack/types.d.ts:	devtoolModuleFilenameTemplate?: string | ((context?: any) => string);
./node_modules/webpack/types.d.ts:	devtoolFallbackModuleFilenameTemplate?: string | ((context?: any) => string);
./node_modules/webpack/types.d.ts:	devtoolModuleFilenameTemplate?: string | ((context?: any) => string);
./node_modules/webpack/types.d.ts:	[index: string]: any;
./node_modules/webpack/types.d.ts:	[index: string]: { [index: string]: any };
./node_modules/webpack/types.d.ts:	[index: string]: any;
./node_modules/webpack/types.d.ts:	additionalAssets?: any;
./node_modules/webpack/types.d.ts:	constructor(inspector?: any);
./node_modules/webpack/types.d.ts:	session: any;
./node_modules/webpack/types.d.ts:	inspector: any;
./node_modules/webpack/types.d.ts:	stopProfiling(): Promise<{ profile: any }>;
./node_modules/webpack/types.d.ts:	[index: string]: any;
./node_modules/webpack/types.d.ts:				[index: string]: any;
./node_modules/webpack/types.d.ts:	unsafeCache?: boolean | { [index: string]: any };
./node_modules/webpack/types.d.ts:			[index: string]: any;
./node_modules/webpack/types.d.ts:	exports: any[];
./node_modules/webpack/types.d.ts:type RuleSetLoaderOptions = string | { [index: string]: any };
./node_modules/webpack/types.d.ts:	generator?: { [index: string]: any };
./node_modules/webpack/types.d.ts:	options?: string | { [index: string]: any };
./node_modules/webpack/types.d.ts:	parser?: { [index: string]: any };
./node_modules/webpack/types.d.ts:						options?: string | { [index: string]: any };
./node_modules/webpack/types.d.ts:								options?: string | { [index: string]: any };
./node_modules/webpack/types.d.ts:				options?: string | { [index: string]: any };
./node_modules/webpack/types.d.ts:					options?: string | { [index: string]: any };
./node_modules/webpack/types.d.ts:							options?: string | { [index: string]: any };
./node_modules/webpack/types.d.ts:			options?: string | { [index: string]: any };
./node_modules/webpack/types.d.ts:			options?: string | { [index: string]: any };
./node_modules/webpack/types.d.ts:	(err: null | Error, result?: T): any;
./node_modules/webpack/types.d.ts:	moduleFilenameTemplate: string | ((context?: any) => string);
./node_modules/webpack/types.d.ts:	fallbackModuleFilenameTemplate: string | ((context?: any) => string);
./node_modules/webpack/types.d.ts:	fallbackModuleFilenameTemplate?: string | ((context?: any) => string);
./node_modules/webpack/types.d.ts:	moduleFilenameTemplate?: string | ((context?: any) => string);
./node_modules/webpack/types.d.ts:			[((a?: any, b?: any) => 0 | 1 | -1)[], StatsFactoryContext],
./node_modules/webpack/types.d.ts:			[((a?: any, b?: any) => 0 | 1 | -1)[], StatsFactoryContext],
./node_modules/webpack/types.d.ts:		object?: any,
./node_modules/webpack/types.d.ts:	[index: string]: any;
./node_modules/webpack/types.d.ts:	error(...args: any[]): void;
./node_modules/webpack/types.d.ts:	warn(...args: any[]): void;
./node_modules/webpack/types.d.ts:	info(...args: any[]): void;
./node_modules/webpack/types.d.ts:	log(...args: any[]): void;
./node_modules/webpack/types.d.ts:	debug(...args: any[]): void;
./node_modules/webpack/types.d.ts:	assert(assertion: any, ...args: any[]): void;
./node_modules/webpack/types.d.ts:	status(...args: any[]): void;
./node_modules/webpack/types.d.ts:	group(...args: any[]): void;
./node_modules/webpack/types.d.ts:	groupCollapsed(...args: any[]): void;
./node_modules/webpack/types.d.ts:	amd?: false | { [index: string]: any };
./node_modules/webpack/types.d.ts:	devServer?: false | { [index: string]: any };
./node_modules/webpack/types.d.ts:	[index: string]: any;
./node_modules/webpack/types.d.ts:	(id: string): any;
./node_modules/webpack/types.d.ts:	fd?: any;
./node_modules/webpack/types.d.ts:			options?: string | { [index: string]: any };
./node_modules/webpack/types.d.ts:			options?: string | { [index: string]: any };
./node_modules/webpack/types.d.ts:					options?: string | { [index: string]: any };
./node_modules/webpack/types.d.ts:			config: any,
./node_modules/webpack/types.d.ts:			options: { namespace?: string; moduleFilenameTemplate?: any },
./node_modules/webpack/node_modules/json-schema-traverse/index.d.ts:    [x: string]: any;
./node_modules/webpack/node_modules/schema-utils/declarations/util/memorize.d.ts: * @param fn {(function(): any) | undefined}
./node_modules/webpack/node_modules/ajv-keywords/dist/definitions/instanceof.d.ts:declare type Constructor = new (...args: any[]) => any;
./node_modules/webpack/node_modules/ajv-keywords/src/definitions/instanceof.ts:type Constructor = new (...args: any[]) => any
./node_modules/webpack/node_modules/ajv/dist/vocabularies/validation/const.d.ts:    allowedValue: any;
./node_modules/webpack/node_modules/ajv/dist/vocabularies/validation/enum.d.ts:    allowedValues: any[];
./node_modules/webpack/node_modules/ajv/dist/types/json-schema.d.ts:    [keyword: string]: any;
./node_modules/webpack/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./node_modules/webpack/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./node_modules/webpack/node_modules/ajv/dist/types/index.d.ts:        [K in T]: any;
./node_modules/webpack/node_modules/ajv/dist/types/index.d.ts:    (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T;
./node_modules/webpack/node_modules/ajv/dist/types/index.d.ts:export type MacroKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaCxt) => AnySchema;
./node_modules/webpack/node_modules/ajv/dist/types/index.d.ts:export type CompileKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaObjCxt) => DataValidateFunction;
./node_modules/webpack/node_modules/ajv/dist/types/index.d.ts:    (schema: any, data: any, parentSchema?: AnySchemaObject, dataCxt?: DataValidationCxt): boolean | Promise<any>;
./node_modules/webpack/node_modules/ajv/dist/types/index.d.ts:    schema: any;
./node_modules/webpack/node_modules/ajv/dist/core.d.ts:    [prop: string]: any;
./node_modules/webpack/node_modules/ajv/dist/compile/validate/index.d.ts:    schema: any;
./node_modules/webpack/node_modules/ajv/lib/vocabularies/validation/const.ts:export type ConstError = ErrorObject<"const", {allowedValue: any}>
./node_modules/webpack/node_modules/ajv/lib/vocabularies/validation/enum.ts:export type EnumError = ErrorObject<"enum", {allowedValues: any[]}, any[] | {$data: string}>
./node_modules/webpack/node_modules/ajv/lib/types/json-schema.ts:  [keyword: string]: any
./node_modules/webpack/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./node_modules/webpack/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./node_modules/webpack/node_modules/ajv/lib/types/index.ts:  parentData: {[K in T]: any} // object or array
./node_modules/webpack/node_modules/ajv/lib/types/index.ts:  (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T
./node_modules/webpack/node_modules/ajv/lib/types/index.ts:  schema: any,
./node_modules/webpack/node_modules/ajv/lib/types/index.ts:  schema: any,
./node_modules/webpack/node_modules/ajv/lib/types/index.ts:    schema: any,
./node_modules/webpack/node_modules/ajv/lib/types/index.ts:    data: any,
./node_modules/webpack/node_modules/ajv/lib/types/index.ts:  schema: any // TODO
./node_modules/webpack/node_modules/ajv/lib/core.ts:  [prop: string]: any
./node_modules/webpack/node_modules/ajv/lib/core.ts:  cache?: any
./node_modules/webpack/node_modules/ajv/lib/compile/validate/index.ts:  schema: any // keyword value in the schema
./node_modules/webpack/schemas/plugins/asset/AssetParserOptions.check.d.ts:declare const check: (options: any) => boolean;
./node_modules/webpack/schemas/plugins/asset/AssetResourceGeneratorOptions.check.d.ts:declare const check: (options: any) => boolean;
./node_modules/webpack/schemas/plugins/asset/AssetInlineGeneratorOptions.check.d.ts:declare const check: (options: any) => boolean;
./node_modules/webpack/schemas/plugins/asset/AssetGeneratorOptions.check.d.ts:declare const check: (options: any) => boolean;
./node_modules/webpack/schemas/plugins/css/CssGlobalGeneratorOptions.check.d.ts:declare const check: (options: any) => boolean;
./node_modules/webpack/schemas/plugins/css/CssGeneratorOptions.check.d.ts:declare const check: (options: any) => boolean;
./node_modules/webpack/schemas/plugins/css/CssAutoParserOptions.check.d.ts:declare const check: (options: any) => boolean;
./node_modules/webpack/schemas/plugins/css/CssAutoGeneratorOptions.check.d.ts:declare const check: (options: any) => boolean;
./node_modules/webpack/schemas/plugins/css/CssModuleGeneratorOptions.check.d.ts:declare const check: (options: any) => boolean;
./node_modules/webpack/schemas/plugins/css/CssParserOptions.check.d.ts:declare const check: (options: any) => boolean;
./node_modules/webpack/schemas/plugins/css/CssModuleParserOptions.check.d.ts:declare const check: (options: any) => boolean;
./node_modules/webpack/schemas/plugins/css/CssGlobalParserOptions.check.d.ts:declare const check: (options: any) => boolean;
./node_modules/webpack/schemas/plugins/container/ExternalsType.check.d.ts:declare const check: (options: any) => boolean;
./node_modules/webpack/module.d.ts:declare var __non_webpack_require__: (id: any) => unknown;
./node_modules/@formatjs/intl-localematcher/abstract/ResolveLocale.d.ts:    [k: string]: any;
./node_modules/@formatjs/intl-localematcher/abstract/ResolveLocale.d.ts:    [k in K]: any;
./node_modules/@formatjs/intl-localematcher/abstract/utils.d.ts:export declare function invariant(condition: boolean, message: string, Err?: any): asserts condition;
./node_modules/@formatjs/intl-localematcher/lib/abstract/ResolveLocale.d.ts:    [k: string]: any;
./node_modules/@formatjs/intl-localematcher/lib/abstract/ResolveLocale.d.ts:    [k in K]: any;
./node_modules/@formatjs/intl-localematcher/lib/abstract/utils.d.ts:export declare function invariant(condition: boolean, message: string, Err?: any): asserts condition;
./node_modules/date-fns-jalali/fp/types.d.ts:export type FPFnInput = (...args: any[]) => any;
./node_modules/jest-axe/node_modules/axe-core/axe.d.ts:    data: any;
./node_modules/jest-axe/node_modules/axe-core/axe.d.ts:    options?: any;
./node_modules/jest-axe/node_modules/axe-core/axe.d.ts:    run(...args: any[]): any;
./node_modules/jest-axe/node_modules/axe-core/axe.d.ts:      callback(...args: any[]): void;
./node_modules/jest-axe/node_modules/axe-core/axe.d.ts:  let plugins: any;
./node_modules/jest-axe/node_modules/axe-core/axe.d.ts:    message: any | Error,
./node_modules/jest-axe/node_modules/axe-core/axe.d.ts:    message: any | Error,
./node_modules/jest-axe/node_modules/axe-core/axe.d.ts:  type ReplyData = { channelId: string; message: any; keepalive: boolean };
./node_modules/jest-axe/node_modules/pretty-format/build/index.d.ts:    val: any,
./node_modules/jest-axe/node_modules/pretty-format/build/index.d.ts:declare type Test = (arg0: any) => boolean;
./node_modules/react-remove-scroll/dist/es5/types.d.ts:    onScrollCapture(event: any): void;
./node_modules/react-remove-scroll/dist/es5/types.d.ts:    onWheelCapture(event: any): void;
./node_modules/react-remove-scroll/dist/es5/types.d.ts:    onTouchMoveCapture(event: any): void;
./node_modules/react-remove-scroll/dist/es5/handleScroll.d.ts:export declare const handleScroll: (axis: Axis, endTarget: HTMLElement, event: any, sourceDelta: number, noOverscroll: boolean) => boolean;
./node_modules/react-remove-scroll/dist/es2019/types.d.ts:    onScrollCapture(event: any): void;
./node_modules/react-remove-scroll/dist/es2019/types.d.ts:    onWheelCapture(event: any): void;
./node_modules/react-remove-scroll/dist/es2019/types.d.ts:    onTouchMoveCapture(event: any): void;
./node_modules/react-remove-scroll/dist/es2019/handleScroll.d.ts:export declare const handleScroll: (axis: Axis, endTarget: HTMLElement, event: any, sourceDelta: number, noOverscroll: boolean) => boolean;
./node_modules/react-remove-scroll/dist/es2015/types.d.ts:    onScrollCapture(event: any): void;
./node_modules/react-remove-scroll/dist/es2015/types.d.ts:    onWheelCapture(event: any): void;
./node_modules/react-remove-scroll/dist/es2015/types.d.ts:    onTouchMoveCapture(event: any): void;
./node_modules/react-remove-scroll/dist/es2015/handleScroll.d.ts:export declare const handleScroll: (axis: Axis, endTarget: HTMLElement, event: any, sourceDelta: number, noOverscroll: boolean) => boolean;
./node_modules/jest-leak-detector/node_modules/pretty-format/build/index.d.ts:    val: any,
./node_modules/jest-leak-detector/node_modules/pretty-format/build/index.d.ts:declare type Test = (arg0: any) => boolean;
./node_modules/@nolyfill/is-core-module/index.d.ts:declare const isCore: (x: string, _nodeVersion?: any) => boolean;
./node_modules/unplugin/dist/rspack/loaders/load.d.ts:declare function load(this: LoaderContext, source: string, map: any): Promise<void>;
./node_modules/unplugin/dist/rspack/loaders/transform.d.ts:declare function transform(this: LoaderContext, source: string, map: any): Promise<void>;
./node_modules/unplugin/dist/webpack/loaders/load.d.ts:}>, source: string, map: any): Promise<void>;
./node_modules/unplugin/dist/webpack/loaders/transform.d.ts:}>, source: string, map: any): Promise<void>;
./node_modules/unplugin/dist/index.d.ts:    pluginData: any;
./node_modules/unplugin/dist/index.d.ts:    [key: string]: any;
./node_modules/unplugin/dist/index.d.ts:    parse: (input: string, options?: any) => AstNode;
./node_modules/unplugin/dist/index.d.ts:    meta?: any;
./node_modules/cac/deno/utils.ts:  [k: string]: any;
./node_modules/cac/deno/utils.ts:}, keys: string[], val: any) => {
./node_modules/cac/deno/utils.ts:  [k: string]: any;
./node_modules/cac/deno/utils.ts:  [k: string]: any;
./node_modules/cac/deno/Option.ts:  default?: any;
./node_modules/cac/deno/Option.ts:  type?: any[];
./node_modules/cac/deno/Command.ts:  commandAction?: (...args: any[]) => any;
./node_modules/cac/deno/Command.ts:  action(callback: (...args: any[]) => any) {
./node_modules/cac/deno/CAC.ts:    [k: string]: any;
./node_modules/cac/deno/CAC.ts:      [k: string]: any;
./node_modules/cac/deno/CAC.ts:    const actionArgs: any[] = [];
./node_modules/cac/dist/index.d.ts:    default?: any;
./node_modules/cac/dist/index.d.ts:    type?: any[];
./node_modules/cac/dist/index.d.ts:    commandAction?: (...args: any[]) => any;
./node_modules/cac/dist/index.d.ts:    action(callback: (...args: any[]) => any): this;
./node_modules/cac/dist/index.d.ts:        [k: string]: any;
./node_modules/cac/dist/index.d.ts:    runMatchedCommand(): any;
./node_modules/vite/types/hmrPayload.d.ts:  data?: any
./node_modules/vite/types/hmrPayload.d.ts:    [name: string]: any
./node_modules/vite/types/hot.d.ts:  readonly data: any
./node_modules/vite/types/hot.d.ts:  dispose(cb: (data: any) => void): void
./node_modules/vite/types/hot.d.ts:  prune(cb: (data: any) => void): void
./node_modules/vite/types/customEvent.d.ts:  T extends keyof CustomEventMap ? CustomEventMap[T] : any
./node_modules/vite/types/importMeta.d.ts:  [key: ImportMetaEnvFallbackKey]: any
./node_modules/vite/dist/node/moduleRunnerTransport-BWUZBVLX.d.ts:    result: any;
./node_modules/vite/dist/node/moduleRunnerTransport-BWUZBVLX.d.ts:    error: any;
./node_modules/vite/dist/node/module-runner.d.ts:type CustomListenersMap = Map<string, ((data: any) => void)[]>;
./node_modules/vite/dist/node/module-runner.d.ts:  disposeMap: Map<string, (data: any) => void | Promise<void>>;
./node_modules/vite/dist/node/module-runner.d.ts:  pruneMap: Map<string, (data: any) => void | Promise<void>>;
./node_modules/vite/dist/node/module-runner.d.ts:    map: any;
./node_modules/vite/dist/node/module-runner.d.ts:  [key: string]: any;
./node_modules/vite/dist/node/module-runner.d.ts:  [ssrExportAllKey]: (obj: any) => void;
./node_modules/vite/dist/node/module-runner.d.ts:  [key: string]: any;
./node_modules/vite/dist/node/module-runner.d.ts:  exports: any | undefined;
./node_modules/vite/dist/node/index.d.ts:  on(event: 'raw', listener: (eventName: string, path: string, details: any) => void): this;
./node_modules/vite/dist/node/index.d.ts:  on(event: string, listener: (...args: any[]) => void): this;
./node_modules/vite/dist/node/index.d.ts:  export type NextFunction = (err?: any) => void;
./node_modules/vite/dist/node/index.d.ts:  export type ErrorHandleFunction = (err: any, req: IncomingMessage, res: http.ServerResponse, next: NextFunction) => void;
./node_modules/vite/dist/node/index.d.ts:    listen(handle: any, listeningListener?: Function): http.Server;
./node_modules/vite/dist/node/index.d.ts:    on(event: 'proxyReqWs', listener: (proxyReq: http.ClientRequest, req: http.IncomingMessage, socket: net.Socket, options: ServerOptions, head: any) => void): this;
./node_modules/vite/dist/node/index.d.ts:    on(event: 'close', listener: (proxyRes: http.IncomingMessage, proxySocket: net.Socket, proxyHead: any) => void): this;
./node_modules/vite/dist/node/index.d.ts:    emit(event: string, ...args: any[]): boolean;
./node_modules/vite/dist/node/index.d.ts:    agent?: any;
./node_modules/vite/dist/node/index.d.ts:    ssl?: any;
./node_modules/vite/dist/node/index.d.ts:    result: any;
./node_modules/vite/dist/node/index.d.ts:    error: any;
./node_modules/vite/dist/node/index.d.ts:  ping(data?: any, mask?: boolean, cb?: (err: Error) => void): void;
./node_modules/vite/dist/node/index.d.ts:  pong(data?: any, mask?: boolean, cb?: (err: Error) => void): void;
./node_modules/vite/dist/node/index.d.ts:  send(data: any, cb?: (err?: Error) => void): void;
./node_modules/vite/dist/node/index.d.ts:  send(data: any, options: {
./node_modules/vite/dist/node/index.d.ts:  on(event: string | symbol, listener: (this: WebSocket, ...args: any[]) => void): this;
./node_modules/vite/dist/node/index.d.ts:  once(event: string | symbol, listener: (this: WebSocket, ...args: any[]) => void): this;
./node_modules/vite/dist/node/index.d.ts:  off(event: string | symbol, listener: (this: WebSocket, ...args: any[]) => void): this;
./node_modules/vite/dist/node/index.d.ts:  addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/vite/dist/node/index.d.ts:  removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/vite/dist/node/index.d.ts:    error: any;
./node_modules/vite/dist/node/index.d.ts:    on(event: string | symbol, listener: (this: Server<T>, ...args: any[]) => void): this;
./node_modules/vite/dist/node/index.d.ts:    once(event: string | symbol, listener: (this: Server<T>, ...args: any[]) => void): this;
./node_modules/vite/dist/node/index.d.ts:    off(event: string | symbol, listener: (this: Server<T>, ...args: any[]) => void): this;
./node_modules/vite/dist/node/index.d.ts:    addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/vite/dist/node/index.d.ts:    removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/vite/dist/node/index.d.ts:    [field: string]: any;
./node_modules/dependency-tree/node_modules/commander/typings/index.d.ts:  defaultValue?: any;
./node_modules/dependency-tree/node_modules/commander/typings/index.d.ts:  defaultValue?: any;
./node_modules/dependency-tree/node_modules/commander/typings/index.d.ts:  processedArgs: any[];
./node_modules/dependency-tree/node_modules/commander/typings/index.d.ts:  action(fn: (...args: any[]) => void | Promise<void>): this;
./node_modules/dependency-tree/node_modules/commander/typings/index.d.ts:  getOptionValue(key: string): any;
./node_modules/dependency-tree/node_modules/commander/typings/index.d.ts:  on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/dependency-tree/index.d.ts:    nodeModulesConfig?: any;
./node_modules/dependency-tree/index.d.ts:    detectiveConfig?: any;
./node_modules/@react-pdf/renderer/lib/react-pdf.min.d.ts:      painter: any,
./node_modules/@react-pdf/renderer/lib/react-pdf.min.d.ts:  export const version: any;
./node_modules/@react-pdf/renderer/lib/react-pdf.min.d.ts:  export const PDFRenderer: any;
./node_modules/@react-pdf/renderer/lib/react-pdf.min.d.ts:    container: any;
./node_modules/@react-pdf/renderer/lib/react-pdf.browser.d.ts:      painter: any,
./node_modules/@react-pdf/renderer/lib/react-pdf.browser.d.ts:  export const version: any;
./node_modules/@react-pdf/renderer/lib/react-pdf.browser.d.ts:  export const PDFRenderer: any;
./node_modules/@react-pdf/renderer/lib/react-pdf.browser.d.ts:    container: any;
./node_modules/@react-pdf/renderer/lib/react-pdf.d.ts:      painter: any,
./node_modules/@react-pdf/renderer/lib/react-pdf.d.ts:  export const version: any;
./node_modules/@react-pdf/renderer/lib/react-pdf.d.ts:  export const PDFRenderer: any;
./node_modules/@react-pdf/renderer/lib/react-pdf.d.ts:    container: any;
./node_modules/@react-pdf/renderer/lib/react-pdf.browser.min.d.ts:      painter: any,
./node_modules/@react-pdf/renderer/lib/react-pdf.browser.min.d.ts:  export const version: any;
./node_modules/@react-pdf/renderer/lib/react-pdf.browser.min.d.ts:  export const PDFRenderer: any;
./node_modules/@react-pdf/renderer/lib/react-pdf.browser.min.d.ts:    container: any;
./node_modules/@react-pdf/renderer/index.d.ts:      painter: any,
./node_modules/@react-pdf/renderer/index.d.ts:  export const version: any;
./node_modules/@react-pdf/renderer/index.d.ts:  export const PDFRenderer: any;
./node_modules/@react-pdf/renderer/index.d.ts:    container: any;
./node_modules/@react-pdf/types/context.d.ts:  miterLimit(m: any): this;
./node_modules/@react-pdf/types/context.d.ts:  dash(length: number, option: any): this;
./node_modules/@react-pdf/types/context.d.ts:  image(src: any, x?: number, y?: number, options?: ImageOption): Context;
./node_modules/@react-pdf/types/image.d.ts:  body?: any;
./node_modules/@react-pdf/types/image.d.ts:  headers?: any;
./node_modules/@react-pdf/types/node.d.ts:  lines?: any[];
./node_modules/@react-pdf/stylesheet/lib/index.d.ts:    textIndent?: any;
./node_modules/@react-pdf/stylesheet/lib/index.d.ts:declare const flatten: (value: Style | Style[], ...args: any[]) => Style;
./node_modules/@react-pdf/layout/lib/index.d.ts:    paint: (painter: any, availableWidth?: number, availableHeight?: number) => null;
./node_modules/@react-pdf/layout/lib/index.d.ts:    body?: any;
./node_modules/@react-pdf/layout/lib/index.d.ts:    headers?: any;
./node_modules/@react-pdf/fns/lib/index.d.ts:declare const adjust: (index: number, fn: (value: any) => any, collection: any[]) => any[];
./node_modules/@react-pdf/fns/lib/index.d.ts:type Fn$1 = (arg: any, ...args: any[]) => Promise<any> | any;
./node_modules/@react-pdf/fns/lib/index.d.ts:    (arg: infer A, ...args: any[]) => Promise<any> | any
./node_modules/@react-pdf/fns/lib/index.d.ts:    (arg: any, ...args: any[]) => Promise<infer R> | infer R,
./node_modules/@react-pdf/fns/lib/index.d.ts:type Fn = (arg: any, ...args: any[]) => any;
./node_modules/@react-pdf/fns/lib/index.d.ts:    (arg: infer A, ...args: any[]) => any
./node_modules/@react-pdf/fns/lib/index.d.ts:    (arg: any, ...args: any[]) => infer R,
./node_modules/@react-pdf/fns/lib/index.d.ts:declare const compose: <T extends Fn[]>(...fns: T) => (value: FirstFnParameterType<T>, ...args: any[]) => LastFnReturnType<T>;
./node_modules/@react-pdf/fns/lib/index.d.ts:declare const get: (target: any, path: (string | number)[], defaultValue: any) => any;
./node_modules/@react-pdf/fns/lib/index.d.ts:type IteratorFn = (value: any, key: string, index: number) => any;
./node_modules/@react-pdf/render/lib/index.d.ts:    _root: any;
./node_modules/@react-pdf/render/lib/index.d.ts:    _font: any;
./node_modules/@react-pdf/render/lib/index.d.ts:    _imageRegistry: any;
./node_modules/@react-pdf/render/lib/index.d.ts:    _acroform: any;
./node_modules/@react-pdf/render/lib/index.d.ts:    openImage: any;
./node_modules/@react-pdf/render/lib/index.d.ts:    addNamedDestination: any;
./node_modules/@react-pdf/render/lib/index.d.ts:    addPage(options?: any): Context;
./node_modules/@react-pdf/render/lib/index.d.ts:    translate(x: number, y: number, options: any): Context;
./node_modules/@react-pdf/image/lib/index.d.ts:    body?: any;
./node_modules/@react-pdf/font/lib/index.d.ts:    body?: any;
./node_modules/@react-pdf/reconciler/lib/index.d.ts:    createContainer: (container: any) => T;
./node_modules/@react-pdf/reconciler/lib/index.d.ts:    commitUpdate: (instance: I, updatePayload: any, type: string, oldProps: any, newProps: any) => void;
./node_modules/@react-pdf/reconciler/lib/index.d.ts:    createInstance: (type: string, props: any) => I;
./node_modules/openapi-fetch/dist/index.min.d.ts:  query: T extends { parameters: any } ? NonNullable<T["parameters"]["query"]> : Record<string, unknown>,
./node_modules/openapi-fetch/dist/index.min.d.ts:  parameters: any;
./node_modules/openapi-fetch/dist/index.min.d.ts:> = CreatedClient extends Client<infer Paths extends { [key: string]: any }, infer Media extends MediaType>
./node_modules/openapi-fetch/dist/index.d.ts:  query: T extends { parameters: any } ? NonNullable<T["parameters"]["query"]> : Record<string, unknown>,
./node_modules/openapi-fetch/dist/index.d.ts:  parameters: any;
./node_modules/openapi-fetch/dist/index.d.ts:> = CreatedClient extends Client<infer Paths extends { [key: string]: any }, infer Media extends MediaType>
./node_modules/openapi-fetch/src/index.d.ts:  query: T extends { parameters: any } ? NonNullable<T["parameters"]["query"]> : Record<string, unknown>,
./node_modules/openapi-fetch/src/index.d.ts:  parameters: any;
./node_modules/openapi-fetch/src/index.d.ts:> = CreatedClient extends Client<infer Paths extends { [key: string]: any }, infer Media extends MediaType>
./node_modules/chromium-bidi/lib/esm/protocol/generated/webdriver-bidi.d.ts:    [key: string]: any;
./node_modules/chromium-bidi/lib/esm/bidiMapper/modules/network/NetworkProcessor.d.ts:    static wrapInterceptionError(error: any): any;
./node_modules/chromium-bidi/lib/esm/bidiMapper/modules/session/SubscriptionManager.d.ts:export declare function cartesianProduct(...a: any[][]): any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    contexts: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    contexts?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    contexts?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    nodes: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    nodes: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    result: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    result?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    result?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    contexts: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    contexts?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    contexts?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    nodes: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    nodes: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    const InfoListSchema: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    const InfoSchema: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        params?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        params?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        params: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        params?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        params?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    result: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    result?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    result?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    const ListLocalValueSchema: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    const LocalValueSchema: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    const ArrayLocalValueSchema: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    const ListRemoteValueSchema: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    const RemoteValueSchema: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    const ArrayRemoteValueSchema: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    const NodeRemoteValueSchema: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    const NodePropertiesSchema: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            this: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            this?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            this?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            this?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            this?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            data: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            data?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            data?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            data?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            data?: any;
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            args: any[];
./node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            args: any[];
./node_modules/chromium-bidi/lib/esm/bidiTab/bidiTab.d.ts:        runMapperInstance: ((...args: any) => Promise<void>) | null;
./node_modules/chromium-bidi/lib/cjs/protocol/generated/webdriver-bidi.d.ts:    [key: string]: any;
./node_modules/chromium-bidi/lib/cjs/bidiMapper/modules/network/NetworkProcessor.d.ts:    static wrapInterceptionError(error: any): any;
./node_modules/chromium-bidi/lib/cjs/bidiMapper/modules/session/SubscriptionManager.d.ts:export declare function cartesianProduct(...a: any[][]): any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    contexts: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    contexts?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    contexts?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    nodes: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    nodes: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    result: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    result?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    result?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    contexts: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    contexts?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    contexts?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    nodes: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    nodes: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    const InfoListSchema: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    const InfoSchema: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        params?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        params?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        params: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        params?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        params?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    result: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    result?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    result?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    const ListLocalValueSchema: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    const LocalValueSchema: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    const ArrayLocalValueSchema: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    const ListRemoteValueSchema: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    const RemoteValueSchema: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    const ArrayRemoteValueSchema: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    const NodeRemoteValueSchema: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    const NodePropertiesSchema: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            this: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            this?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            this?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            this?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            arguments?: any[] | undefined;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            this?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            data: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            data?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            data?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            data?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            data?: any;
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            args: any[];
./node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            args: any[];
./node_modules/chromium-bidi/lib/cjs/bidiTab/bidiTab.d.ts:        runMapperInstance: ((...args: any) => Promise<void>) | null;
./node_modules/@modelcontextprotocol/sdk/dist/esm/types.d.ts: * Capabilities a client may support. Known capabilities are defined here, in this schema, but this is not a closed set: any client can define its own, additional capabilities.
./node_modules/@modelcontextprotocol/sdk/dist/esm/types.d.ts: * Capabilities that a server may support. Known capabilities are defined here, in this schema, but this is not a closed set: any server can define its own, additional capabilities.
./node_modules/@modelcontextprotocol/sdk/dist/esm/shared/auth.d.ts:    jwks?: any;
./node_modules/@modelcontextprotocol/sdk/dist/esm/shared/auth.d.ts:    jwks?: any;
./node_modules/@modelcontextprotocol/sdk/dist/esm/shared/auth.d.ts:    jwks?: any;
./node_modules/@modelcontextprotocol/sdk/dist/esm/shared/auth.d.ts:    jwks?: any;
./node_modules/@modelcontextprotocol/sdk/dist/esm/examples/server/demoInMemoryOAuthProvider.d.ts:        jwks?: any;
./node_modules/@modelcontextprotocol/sdk/dist/esm/examples/server/demoInMemoryOAuthProvider.d.ts:        jwks?: any;
./node_modules/@modelcontextprotocol/sdk/dist/cjs/types.d.ts: * Capabilities a client may support. Known capabilities are defined here, in this schema, but this is not a closed set: any client can define its own, additional capabilities.
./node_modules/@modelcontextprotocol/sdk/dist/cjs/types.d.ts: * Capabilities that a server may support. Known capabilities are defined here, in this schema, but this is not a closed set: any server can define its own, additional capabilities.
./node_modules/@modelcontextprotocol/sdk/dist/cjs/shared/auth.d.ts:    jwks?: any;
./node_modules/@modelcontextprotocol/sdk/dist/cjs/shared/auth.d.ts:    jwks?: any;
./node_modules/@modelcontextprotocol/sdk/dist/cjs/shared/auth.d.ts:    jwks?: any;
./node_modules/@modelcontextprotocol/sdk/dist/cjs/shared/auth.d.ts:    jwks?: any;
./node_modules/@modelcontextprotocol/sdk/dist/cjs/examples/server/demoInMemoryOAuthProvider.d.ts:        jwks?: any;
./node_modules/@modelcontextprotocol/sdk/dist/cjs/examples/server/demoInMemoryOAuthProvider.d.ts:        jwks?: any;
./node_modules/loupe/lib/class.d.ts:    new (...args: any[]): unknown;
./node_modules/class-variance-authority/dist/index.d.ts:export type VariantProps<Component extends (...args: any) => any> = Omit<OmitUndefined<Parameters<Component>[0]>, "class" | "className">;
./node_modules/html-to-text/node_modules/deepmerge/index.d.ts:		arrayMerge?(target: any[], source: any[], options?: ArrayMergeOptions): any[];
./node_modules/html-to-text/node_modules/deepmerge/index.d.ts:		customMerge?: (key: string, options?: Options) => ((x: any, y: any) => any) | undefined;
./node_modules/@open-draft/logger/lib/index.d.ts:    message: any;
./node_modules/@open-draft/logger/lib/index.d.ts:    debug(message: any, ...positionals: Array<unknown>): void;
./node_modules/@open-draft/logger/lib/index.d.ts:    info(message: any, ...positionals: Array<unknown>): (message: any, ...positionals: Array<unknown>) => void;
./node_modules/@open-draft/logger/lib/index.d.ts:    success(message: any, ...positionals: Array<unknown>): void;
./node_modules/@open-draft/logger/lib/index.d.ts:    warning(message: any, ...positionals: Array<unknown>): void;
./node_modules/@open-draft/logger/lib/index.d.ts:    error(message: any, ...positionals: Array<unknown>): void;
./node_modules/@open-draft/deferred-promise/build/index.d.ts:    then<ThenResult = Input, CatchResult = never>(onFulfilled?: (value: Input) => ThenResult | PromiseLike<ThenResult>, onRejected?: (reason: any) => CatchResult | PromiseLike<CatchResult>): DeferredPromise<ThenResult | CatchResult, Output>;
./node_modules/@open-draft/deferred-promise/build/index.d.ts:    catch<CatchResult = never>(onRejected?: (reason: any) => CatchResult | PromiseLike<CatchResult>): DeferredPromise<Input | CatchResult, Output>;
./node_modules/fast-uri/types/index.d.ts:  export function normalize (uri: any, opts?: Options): any
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/lru-cache/dist/esm/index.d.ts:        isBackgroundFetch: (p: any) => boolean;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/lru-cache/dist/esm/index.d.ts:        backgroundFetch: (k: K, index: number | undefined, options: LRUCache.FetchOptions<K, V, FC>, context: any) => BackgroundFetch<V>;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/lru-cache/dist/esm/index.d.ts:    forEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/lru-cache/dist/esm/index.d.ts:    rforEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/lru-cache/dist/commonjs/index.d.ts:        isBackgroundFetch: (p: any) => boolean;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/lru-cache/dist/commonjs/index.d.ts:        backgroundFetch: (k: K, index: number | undefined, options: LRUCache.FetchOptions<K, V, FC>, context: any) => BackgroundFetch<V>;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/lru-cache/dist/commonjs/index.d.ts:    forEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/lru-cache/dist/commonjs/index.d.ts:    rforEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/jackspeak/dist/esm/index.d.ts:export declare const isConfigOption: <T extends ConfigType, M extends boolean>(o: any, type: T, multi: M) => o is ConfigOptionBase<T, M>;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/jackspeak/dist/commonjs/index.d.ts:export declare const isConfigOption: <T extends ConfigType, M extends boolean>(o: any, type: T, multi: M) => o is ConfigOptionBase<T, M>;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/minimatch/dist/esm/index.d.ts:    debug(..._: any[]): void;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/minimatch/dist/esm/ast.d.ts:    toJSON(): any[];
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/minimatch/dist/esm/assert-valid-pattern.d.ts:export declare const assertValidPattern: (pattern: any) => void;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/minimatch/dist/commonjs/index.d.ts:    debug(..._: any[]): void;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/minimatch/dist/commonjs/ast.d.ts:    toJSON(): any[];
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/minimatch/dist/commonjs/assert-valid-pattern.d.ts:export declare const assertValidPattern: (pattern: any) => void;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/glob/dist/esm/walker.d.ts:    walkCB2(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/glob/dist/esm/walker.d.ts:    walkCB2Sync(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/glob/dist/commonjs/walker.d.ts:    walkCB2(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/glob/dist/commonjs/walker.d.ts:    walkCB2Sync(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/path-scurry/dist/esm/index.d.ts:        [k: string]: any;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/path-scurry/dist/esm/index.d.ts:    [k: string]: any;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/path-scurry/dist/esm/index.d.ts:        [k: string]: any;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/path-scurry/dist/esm/index.d.ts:    [k: string]: any;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/path-scurry/dist/commonjs/index.d.ts:        [k: string]: any;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/path-scurry/dist/commonjs/index.d.ts:    [k: string]: any;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/path-scurry/dist/commonjs/index.d.ts:        [k: string]: any;
./node_modules/@joshwooding/vite-plugin-react-docgen-typescript/node_modules/path-scurry/dist/commonjs/index.d.ts:    [k: string]: any;
./node_modules/@sinclair/typebox/typebox.d.ts:    default?: any;
./node_modules/@sinclair/typebox/typebox.d.ts:    examples?: any;
./node_modules/@sinclair/typebox/typebox.d.ts:    [prop: string]: any;
./node_modules/@sinclair/typebox/typebox.d.ts:    static: any;
./node_modules/@sinclair/typebox/value/convert.d.ts:    function Visit(schema: Types.TSchema, references: Types.TSchema[], value: any): unknown;
./node_modules/@sinclair/typebox/value/convert.d.ts:    function Convert<T extends Types.TSchema>(schema: T, references: Types.TSchema[], value: any): unknown;
./node_modules/@sinclair/typebox/value/cast.d.ts:    function Visit(schema: Types.TSchema, references: Types.TSchema[], value: any): any;
./node_modules/@sinclair/typebox/value/cast.d.ts:    function Cast<T extends Types.TSchema>(schema: T, references: Types.TSchema[], value: any): Types.Static<T>;
./node_modules/@sinclair/typebox/value/check.d.ts:    function Check<T extends Types.TSchema>(schema: T, references: Types.TSchema[], value: any): boolean;
./node_modules/@sinclair/typebox/value/pointer.d.ts:    function Set(value: any, pointer: string, update: unknown): void;
./node_modules/@sinclair/typebox/value/pointer.d.ts:    function Delete(value: any, pointer: string): void;
./node_modules/@sinclair/typebox/value/pointer.d.ts:    function Has(value: any, pointer: string): boolean;
./node_modules/@sinclair/typebox/value/pointer.d.ts:    function Get(value: any, pointer: string): any;
./node_modules/@sinclair/typebox/errors/errors.d.ts:    function Errors<T extends Types.TSchema>(schema: T, references: Types.TSchema[], value: any): ValueErrorIterator;
./node_modules/graphql/language/ast.d.ts:export declare function isNode(maybeNode: any): maybeNode is ASTNode;
./node_modules/graphql/utilities/typedQueryDocumentNode.d.ts:    [key: string]: any;
./node_modules/graphql/utilities/typedQueryDocumentNode.d.ts:    [key: string]: any;
./node_modules/graphql/type/definition.d.ts:  value?: any;
./node_modules/graphql/type/definition.d.ts:  value: any;
./node_modules/graphql/jsutils/isPromise.d.ts:export declare function isPromise(value: any): value is Promise<unknown>;
./node_modules/graphql/jsutils/isAsyncIterable.d.ts:  maybeAsyncIterable: any,
./node_modules/graphql/jsutils/isIterableObject.d.ts:  maybeIterable: any,
./node_modules/resolve.exports/index.d.ts:	[key: string]: any;
./node_modules/unzipper/node_modules/safe-buffer/index.d.ts:    toJSON(): { type: 'Buffer', data: any[] };
./node_modules/unzipper/node_modules/safe-buffer/index.d.ts:    fill(value: any, offset?: number, end?: number): this;
./node_modules/unzipper/node_modules/safe-buffer/index.d.ts:    constructor (array: any[]);
./node_modules/unzipper/node_modules/safe-buffer/index.d.ts:    static from(array: any[]): Buffer;
./node_modules/unzipper/node_modules/safe-buffer/index.d.ts:    static isBuffer(obj: any): obj is Buffer;
./node_modules/@babel/types/lib/index-legacy.d.ts:export function assertNode(obj: any): void
./node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T
./node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent(a: any, b: any): boolean
./node_modules/@babel/types/lib/index-legacy.d.ts:export function validate(n: Node, key: string, value: any): void;
./node_modules/@babel/types/lib/index.d.ts:declare function assertNode(node?: any): asserts node is Node;
./node_modules/@babel/types/lib/index.d.ts:declare function assertNumberLiteral(node: any, opts: any): void;
./node_modules/@babel/types/lib/index.d.ts:declare function assertRegexLiteral(node: any, opts: any): void;
./node_modules/@babel/types/lib/index.d.ts:declare function assertRestProperty(node: any, opts: any): void;
./node_modules/@babel/types/lib/index.d.ts:declare function assertSpreadProperty(node: any, opts: any): void;
./node_modules/@babel/types/lib/index.d.ts:declare function assertModuleDeclaration(node: any, opts: any): void;
./node_modules/@babel/types/lib/index.d.ts:declare function getType(val: any): "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function" | "array" | "null";
./node_modules/@babel/types/lib/index.d.ts:    oneOf: any[];
./node_modules/@babel/types/lib/index.d.ts:}, val: any) => void);
./node_modules/@babel/types/lib/index.d.ts:declare function isNode(node: any): node is Node;
./node_modules/@babel/types/lib/index.d.ts:declare function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T;
./node_modules/@babel/core/node_modules/json5/lib/parse.d.ts:    reviver?: ((this: any, key: string, value: any) => any) | null,
./node_modules/@babel/core/node_modules/json5/lib/stringify.d.ts:        | ((this: any, key: string, value: any) => any)
./node_modules/@babel/core/node_modules/json5/lib/stringify.d.ts:    value: any,
./node_modules/@babel/core/node_modules/json5/lib/stringify.d.ts:    replacer?: ((this: any, key: string, value: any) => any) | null,
./node_modules/@babel/core/node_modules/json5/lib/stringify.d.ts:    value: any,
./node_modules/@babel/core/node_modules/json5/lib/stringify.d.ts:declare function stringify(value: any, options: StringifyOptions): string
./node_modules/@babel/core/src/transform-file-browser.ts:    opts: any,
./node_modules/@babel/parser/typings/babel-parser.d.ts:  [name: string]: any;
./node_modules/process-warning/types/index.d.ts:    (a?: any, b?: any, c?: any): void;
./node_modules/process-warning/types/index.d.ts:    format(a?: any, b?: any, c?: any): string;
./node_modules/express-rate-limit/dist/index.d.ts:	positiveHits(hits: any): void;
./node_modules/express-rate-limit/dist/index.d.ts:	draftPolliHeaders(draft_polli_ratelimit_headers?: any): void;
./node_modules/express-rate-limit/dist/index.d.ts:	onLimitReached(onLimitReached?: any): void;
./node_modules/express-rate-limit/dist/index.d.ts:	headersDraftVersion(version?: any): void;
./node_modules/express-rate-limit/dist/index.d.ts:	message: any | ValueDeterminingMiddleware<any>;
./node_modules/@radix-ui/react-collection/dist/index.d.ts:    scope: any;
./node_modules/@radix-ui/react-collection/dist/index.d.ts:        scope: any;
./node_modules/@radix-ui/react-collection/dist/index.d.ts:        scope: any;
./node_modules/@radix-ui/react-collection/dist/index.d.ts:}, (scope: any) => () => ({
./node_modules/@radix-ui/react-collection/dist/index.d.ts:    find(predicate: (entry: [K, V], index: number, dictionary: OrderedDict<K, V>) => boolean, thisArg?: any): [K, V] | undefined;
./node_modules/@radix-ui/react-collection/dist/index.d.ts:    findIndex(predicate: (entry: [K, V], index: number, dictionary: OrderedDict<K, V>) => boolean, thisArg?: any): number;
./node_modules/@radix-ui/react-collection/dist/index.d.ts:    filter<KK extends K, VV extends V>(predicate: (entry: [K, V], index: number, dict: OrderedDict<K, V>) => entry is [KK, VV], thisArg?: any): OrderedDict<KK, VV>;
./node_modules/@radix-ui/react-collection/dist/index.d.ts:    filter(predicate: (entry: [K, V], index: number, dictionary: OrderedDict<K, V>) => unknown, thisArg?: any): OrderedDict<K, V>;
./node_modules/@radix-ui/react-collection/dist/index.d.ts:    map<U>(callbackfn: (entry: [K, V], index: number, dictionary: OrderedDict<K, V>) => U, thisArg?: any): OrderedDict<K, U>;
./node_modules/@radix-ui/react-collection/dist/index.d.ts:    every(predicate: (entry: [K, V], index: number, dictionary: OrderedDict<K, V>) => unknown, thisArg?: any): boolean;
./node_modules/@radix-ui/react-collection/dist/index.d.ts:    some(predicate: (entry: [K, V], index: number, dictionary: OrderedDict<K, V>) => unknown, thisArg?: any): boolean;
./node_modules/@radix-ui/react-collection/dist/index.d.ts:    scope: any;
./node_modules/@radix-ui/react-collection/dist/index.d.ts:        scope: any;
./node_modules/@radix-ui/react-collection/dist/index.d.ts:        scope: any;
./node_modules/@radix-ui/react-collection/dist/index.d.ts:    useCollection: (scope: any) => ItemMap<ItemElement, ItemData>;
./node_modules/@radix-ui/react-use-effect-event/dist/index.d.ts:type AnyFunction = (...args: any[]) => any;
./node_modules/@radix-ui/react-use-effect-event/src/use-effect-event.tsx:type AnyFunction = (...args: any[]) => any;
./node_modules/@radix-ui/react-focus-guards/dist/index.d.ts:declare function FocusGuards(props: any): any;
./node_modules/@radix-ui/react-use-callback-ref/dist/index.d.ts:declare function useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T;
./node_modules/fork-ts-checker-webpack-plugin/node_modules/chokidar/esm/handler.d.ts:    _watchWithNodeFs(path: string, listener: (path: string, newStats?: any) => void | Promise<void>): (() => void) | undefined;
./node_modules/fork-ts-checker-webpack-plugin/node_modules/chokidar/handler.d.ts:    _watchWithNodeFs(path: string, listener: (path: string, newStats?: any) => void | Promise<void>): (() => void) | undefined;
./node_modules/fork-ts-checker-webpack-plugin/node_modules/deepmerge/index.d.ts:		arrayMerge?(target: any[], source: any[], options?: ArrayMergeOptions): any[];
./node_modules/fork-ts-checker-webpack-plugin/node_modules/deepmerge/index.d.ts:		customMerge?: (key: string, options?: Options) => ((x: any, y: any) => any) | undefined;
./node_modules/fork-ts-checker-webpack-plugin/node_modules/readdirp/esm/index.d.ts:    parents: any[];
./node_modules/fork-ts-checker-webpack-plugin/node_modules/readdirp/index.d.ts:    parents: any[];
./node_modules/fork-ts-checker-webpack-plugin/lib/typescript/worker/lib/system.d.ts:    setTimeout(callback: (...args: any[]) => void, ms: number, ...args: any[]): any;
./node_modules/fork-ts-checker-webpack-plugin/lib/typescript/worker/lib/system.d.ts:    clearTimeout(timeoutId: any): void;
./node_modules/fork-ts-checker-webpack-plugin/lib/typescript/type-script-config-overwrite.d.ts:    compilerOptions?: any;
./node_modules/fork-ts-checker-webpack-plugin/lib/rpc/expose-rpc.d.ts:export declare function exposeRpc(fn: (...args: any[]) => any): void;
./node_modules/fork-ts-checker-webpack-plugin/lib/rpc/types.d.ts:type RpcMethod = (...args: any[]) => any;
./node_modules/fork-ts-checker-webpack-plugin/lib/rpc/wrap-rpc.d.ts:export declare function wrapRpc<T extends (...args: any[]) => any>(childProcess: ChildProcess): RpcRemoteMethod<T>;
./node_modules/jest-util/build/index.d.ts:export declare function interopRequireDefault(obj: any): any;
./node_modules/@prisma/config/node_modules/jiti/lib/types.d.ts:  (id: string): any;
./node_modules/@prisma/config/node_modules/jiti/lib/types.d.ts:  exports: any;
./node_modules/@prisma/config/node_modules/jiti/lib/types.d.ts:  error?: any;
./node_modules/@prisma/fetch-engine/dist/download.d.ts:export declare function plusX(file: any): void;
./node_modules/@prisma/fetch-engine/dist/log.d.ts:export declare function getBar(text: any): Progress;
./node_modules/@prisma/get-platform/dist/test-utils/jestContext.d.ts:                                                add<NewContext_10>(contextContributor: ContextContributor<BaseContext & NewContext & NewContext_1 & NewContext_2 & NewContext_3 & NewContext_4 & NewContext_5 & NewContext_6 & NewContext_7 & NewContext_8 & NewContext_9, NewContext_10>): any;
./node_modules/@prisma/get-platform/dist/logger.d.ts:export declare function log(...data: any[]): void;
./node_modules/@prisma/get-platform/dist/logger.d.ts:export declare function warn(message: any, ...optionalParams: any[]): void;
./node_modules/@prisma/get-platform/dist/link.d.ts:export declare function link(url: any): string;
./node_modules/@prisma/client/runtime/edge.d.ts:                    args: any;
./node_modules/@prisma/client/runtime/edge.d.ts:} ? T[symbol]['types']['operations'][F]['args'] : any;
./node_modules/@prisma/client/runtime/edge.d.ts:    [K in string]: any;
./node_modules/@prisma/client/runtime/edge.d.ts:    $queryRaw<T = unknown>(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<T>;
./node_modules/@prisma/client/runtime/edge.d.ts:    $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;
./node_modules/@prisma/client/runtime/edge.d.ts:    $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<number>;
./node_modules/@prisma/client/runtime/edge.d.ts:    $executeRawUnsafe(query: string, ...values: any[]): PrismaPromise<number>;
./node_modules/@prisma/client/runtime/edge.d.ts:    enable(namespace: any): void;
./node_modules/@prisma/client/runtime/edge.d.ts:    disable(): any;
./node_modules/@prisma/client/runtime/edge.d.ts:declare function debugCreate(namespace: string): ((...args: any[]) => void) & {
./node_modules/@prisma/client/runtime/edge.d.ts:    static isDecimal(object: any): object is Decimal;
./node_modules/@prisma/client/runtime/edge.d.ts:    args: any;
./node_modules/@prisma/client/runtime/edge.d.ts:    result: any;
./node_modules/@prisma/client/runtime/edge.d.ts:        args: any;
./node_modules/@prisma/client/runtime/edge.d.ts:        query: (args: any) => PrismaPromise<any>;
./node_modules/@prisma/client/runtime/edge.d.ts:            compute(data: DynamicResultExtensionData<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>): any;
./node_modules/@prisma/client/runtime/edge.d.ts:        debug: (...args: any[]) => void;
./node_modules/@prisma/client/runtime/edge.d.ts:        define: (client: any) => {
./node_modules/@prisma/client/runtime/edge.d.ts:    include: any;
./node_modules/@prisma/client/runtime/edge.d.ts:        compute: (...args: any) => infer C;
./node_modules/@prisma/client/runtime/edge.d.ts:        _originalClient: any;
./node_modules/@prisma/client/runtime/edge.d.ts:        _appliedParent: any;
./node_modules/@prisma/client/runtime/edge.d.ts:        $on<E extends ExtendedEventType>(eventType: E, callback: EventCallback<E>): any;
./node_modules/@prisma/client/runtime/edge.d.ts:        $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;
./node_modules/@prisma/client/runtime/edge.d.ts:        $queryRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;
./node_modules/@prisma/client/runtime/edge.d.ts:        $transaction(input: any, options?: any): Promise<any>;
./node_modules/@prisma/client/runtime/edge.d.ts:    error: any;
./node_modules/@prisma/client/runtime/edge.d.ts:    resolve: (data: any) => void;
./node_modules/@prisma/client/runtime/edge.d.ts:    reject: (data: any) => void;
./node_modules/@prisma/client/runtime/edge.d.ts:    request: any;
./node_modules/@prisma/client/runtime/edge.d.ts:export declare function makeTypedQueryFactory(sql: string): (...values: any[]) => TypedSql<any[], unknown>;
./node_modules/@prisma/client/runtime/edge.d.ts:    getAllQueryCallbacks(jsModelName: string, operation: string): any;
./node_modules/@prisma/client/runtime/edge.d.ts:            payload: any;
./node_modules/@prisma/client/runtime/edge.d.ts:} ? T[symbol]['types']['payload'] : any;
./node_modules/@prisma/client/runtime/edge.d.ts:    catch<R = never>(onrejected?: ((reason: any) => R | PromiseLike<R>) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult | R>;
./node_modules/@prisma/client/runtime/edge.d.ts:    mapQueryEngineResult({ dataPath, unpacker }: RequestParams, response: QueryEngineResultData<any>): any;
./node_modules/@prisma/client/runtime/edge.d.ts:    sanitizeMessage(message: any): any;
./node_modules/@prisma/client/runtime/edge.d.ts:    unpack(data: unknown, dataPath: string[], unpacker?: Unpacker): any;
./node_modules/@prisma/client/runtime/edge.d.ts:    args?: any;
./node_modules/@prisma/client/runtime/edge.d.ts:            payload: any;
./node_modules/@prisma/client/runtime/edge.d.ts:export declare type ResultArgsFieldCompute = (model: any) => unknown;
./node_modules/@prisma/client/runtime/edge.d.ts:export declare type Return<T> = T extends (...args: any[]) => infer R ? R : T;
./node_modules/@prisma/client/runtime/edge.d.ts:declare type Unpacker = (data: any) => any;
./node_modules/@prisma/client/runtime/edge.d.ts:export declare function warnEnvConflicts(envPaths: any): void;
./node_modules/@prisma/client/runtime/react-native.d.ts:                    args: any;
./node_modules/@prisma/client/runtime/react-native.d.ts:} ? T[symbol]['types']['operations'][F]['args'] : any;
./node_modules/@prisma/client/runtime/react-native.d.ts:    [K in string]: any;
./node_modules/@prisma/client/runtime/react-native.d.ts:    $queryRaw<T = unknown>(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<T>;
./node_modules/@prisma/client/runtime/react-native.d.ts:    $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;
./node_modules/@prisma/client/runtime/react-native.d.ts:    $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<number>;
./node_modules/@prisma/client/runtime/react-native.d.ts:    $executeRawUnsafe(query: string, ...values: any[]): PrismaPromise<number>;
./node_modules/@prisma/client/runtime/react-native.d.ts:    enable(namespace: any): void;
./node_modules/@prisma/client/runtime/react-native.d.ts:    disable(): any;
./node_modules/@prisma/client/runtime/react-native.d.ts:declare function debugCreate(namespace: string): ((...args: any[]) => void) & {
./node_modules/@prisma/client/runtime/react-native.d.ts:    static isDecimal(object: any): object is Decimal;
./node_modules/@prisma/client/runtime/react-native.d.ts:    args: any;
./node_modules/@prisma/client/runtime/react-native.d.ts:    result: any;
./node_modules/@prisma/client/runtime/react-native.d.ts:        args: any;
./node_modules/@prisma/client/runtime/react-native.d.ts:        query: (args: any) => PrismaPromise<any>;
./node_modules/@prisma/client/runtime/react-native.d.ts:            compute(data: DynamicResultExtensionData<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>): any;
./node_modules/@prisma/client/runtime/react-native.d.ts:        debug: (...args: any[]) => void;
./node_modules/@prisma/client/runtime/react-native.d.ts:        define: (client: any) => {
./node_modules/@prisma/client/runtime/react-native.d.ts:    include: any;
./node_modules/@prisma/client/runtime/react-native.d.ts:        compute: (...args: any) => infer C;
./node_modules/@prisma/client/runtime/react-native.d.ts:        _originalClient: any;
./node_modules/@prisma/client/runtime/react-native.d.ts:        _appliedParent: any;
./node_modules/@prisma/client/runtime/react-native.d.ts:        $on<E extends ExtendedEventType>(eventType: E, callback: EventCallback<E>): any;
./node_modules/@prisma/client/runtime/react-native.d.ts:        $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;
./node_modules/@prisma/client/runtime/react-native.d.ts:        $queryRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;
./node_modules/@prisma/client/runtime/react-native.d.ts:        $transaction(input: any, options?: any): Promise<any>;
./node_modules/@prisma/client/runtime/react-native.d.ts:    error: any;
./node_modules/@prisma/client/runtime/react-native.d.ts:    resolve: (data: any) => void;
./node_modules/@prisma/client/runtime/react-native.d.ts:    reject: (data: any) => void;
./node_modules/@prisma/client/runtime/react-native.d.ts:    request: any;
./node_modules/@prisma/client/runtime/react-native.d.ts:export declare function makeTypedQueryFactory(sql: string): (...values: any[]) => TypedSql<any[], unknown>;
./node_modules/@prisma/client/runtime/react-native.d.ts:    getAllQueryCallbacks(jsModelName: string, operation: string): any;
./node_modules/@prisma/client/runtime/react-native.d.ts:            payload: any;
./node_modules/@prisma/client/runtime/react-native.d.ts:} ? T[symbol]['types']['payload'] : any;
./node_modules/@prisma/client/runtime/react-native.d.ts:    catch<R = never>(onrejected?: ((reason: any) => R | PromiseLike<R>) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult | R>;
./node_modules/@prisma/client/runtime/react-native.d.ts:    mapQueryEngineResult({ dataPath, unpacker }: RequestParams, response: QueryEngineResultData<any>): any;
./node_modules/@prisma/client/runtime/react-native.d.ts:    sanitizeMessage(message: any): any;
./node_modules/@prisma/client/runtime/react-native.d.ts:    unpack(data: unknown, dataPath: string[], unpacker?: Unpacker): any;
./node_modules/@prisma/client/runtime/react-native.d.ts:    args?: any;
./node_modules/@prisma/client/runtime/react-native.d.ts:            payload: any;
./node_modules/@prisma/client/runtime/react-native.d.ts:export declare type ResultArgsFieldCompute = (model: any) => unknown;
./node_modules/@prisma/client/runtime/react-native.d.ts:export declare type Return<T> = T extends (...args: any[]) => infer R ? R : T;
./node_modules/@prisma/client/runtime/react-native.d.ts:declare type Unpacker = (data: any) => any;
./node_modules/@prisma/client/runtime/react-native.d.ts:export declare function warnEnvConflicts(envPaths: any): void;
./node_modules/@prisma/client/runtime/library.d.ts:                    args: any;
./node_modules/@prisma/client/runtime/library.d.ts:} ? T[symbol]['types']['operations'][F]['args'] : any;
./node_modules/@prisma/client/runtime/library.d.ts:    [K in string]: any;
./node_modules/@prisma/client/runtime/library.d.ts:    $queryRaw<T = unknown>(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<T>;
./node_modules/@prisma/client/runtime/library.d.ts:    $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;
./node_modules/@prisma/client/runtime/library.d.ts:    $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<number>;
./node_modules/@prisma/client/runtime/library.d.ts:    $executeRawUnsafe(query: string, ...values: any[]): PrismaPromise<number>;
./node_modules/@prisma/client/runtime/library.d.ts:    enable(namespace: any): void;
./node_modules/@prisma/client/runtime/library.d.ts:    disable(): any;
./node_modules/@prisma/client/runtime/library.d.ts:declare function debugCreate(namespace: string): ((...args: any[]) => void) & {
./node_modules/@prisma/client/runtime/library.d.ts:    static isDecimal(object: any): object is Decimal;
./node_modules/@prisma/client/runtime/library.d.ts:    args: any;
./node_modules/@prisma/client/runtime/library.d.ts:    result: any;
./node_modules/@prisma/client/runtime/library.d.ts:        args: any;
./node_modules/@prisma/client/runtime/library.d.ts:        query: (args: any) => PrismaPromise<any>;
./node_modules/@prisma/client/runtime/library.d.ts:            compute(data: DynamicResultExtensionData<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>): any;
./node_modules/@prisma/client/runtime/library.d.ts:        debug: (...args: any[]) => void;
./node_modules/@prisma/client/runtime/library.d.ts:        define: (client: any) => {
./node_modules/@prisma/client/runtime/library.d.ts:    include: any;
./node_modules/@prisma/client/runtime/library.d.ts:        compute: (...args: any) => infer C;
./node_modules/@prisma/client/runtime/library.d.ts:        _originalClient: any;
./node_modules/@prisma/client/runtime/library.d.ts:        _appliedParent: any;
./node_modules/@prisma/client/runtime/library.d.ts:        $on<E extends ExtendedEventType>(eventType: E, callback: EventCallback<E>): any;
./node_modules/@prisma/client/runtime/library.d.ts:        $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;
./node_modules/@prisma/client/runtime/library.d.ts:        $queryRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;
./node_modules/@prisma/client/runtime/library.d.ts:        $transaction(input: any, options?: any): Promise<any>;
./node_modules/@prisma/client/runtime/library.d.ts:    error: any;
./node_modules/@prisma/client/runtime/library.d.ts:    resolve: (data: any) => void;
./node_modules/@prisma/client/runtime/library.d.ts:    reject: (data: any) => void;
./node_modules/@prisma/client/runtime/library.d.ts:    request: any;
./node_modules/@prisma/client/runtime/library.d.ts:export declare function makeTypedQueryFactory(sql: string): (...values: any[]) => TypedSql<any[], unknown>;
./node_modules/@prisma/client/runtime/library.d.ts:    getAllQueryCallbacks(jsModelName: string, operation: string): any;
./node_modules/@prisma/client/runtime/library.d.ts:            payload: any;
./node_modules/@prisma/client/runtime/library.d.ts:} ? T[symbol]['types']['payload'] : any;
./node_modules/@prisma/client/runtime/library.d.ts:    catch<R = never>(onrejected?: ((reason: any) => R | PromiseLike<R>) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult | R>;
./node_modules/@prisma/client/runtime/library.d.ts:    mapQueryEngineResult({ dataPath, unpacker }: RequestParams, response: QueryEngineResultData<any>): any;
./node_modules/@prisma/client/runtime/library.d.ts:    sanitizeMessage(message: any): any;
./node_modules/@prisma/client/runtime/library.d.ts:    unpack(data: unknown, dataPath: string[], unpacker?: Unpacker): any;
./node_modules/@prisma/client/runtime/library.d.ts:    args?: any;
./node_modules/@prisma/client/runtime/library.d.ts:            payload: any;
./node_modules/@prisma/client/runtime/library.d.ts:export declare type ResultArgsFieldCompute = (model: any) => unknown;
./node_modules/@prisma/client/runtime/library.d.ts:export declare type Return<T> = T extends (...args: any[]) => infer R ? R : T;
./node_modules/@prisma/client/runtime/library.d.ts:declare type Unpacker = (data: any) => any;
./node_modules/@prisma/client/runtime/library.d.ts:export declare function warnEnvConflicts(envPaths: any): void;
./node_modules/@prisma/client/runtime/index-browser.d.ts:                    args: any;
./node_modules/@prisma/client/runtime/index-browser.d.ts:} ? T[symbol]['types']['operations'][F]['args'] : any;
./node_modules/@prisma/client/runtime/index-browser.d.ts:    static isDecimal(object: any): object is Decimal;
./node_modules/@prisma/client/runtime/client.d.ts:                    args: any;
./node_modules/@prisma/client/runtime/client.d.ts:} ? T[symbol]['types']['operations'][F]['args'] : any;
./node_modules/@prisma/client/runtime/client.d.ts:    [K in string]: any;
./node_modules/@prisma/client/runtime/client.d.ts:    $queryRaw<T = unknown>(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<T>;
./node_modules/@prisma/client/runtime/client.d.ts:    $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;
./node_modules/@prisma/client/runtime/client.d.ts:    $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<number>;
./node_modules/@prisma/client/runtime/client.d.ts:    $executeRawUnsafe(query: string, ...values: any[]): PrismaPromise<number>;
./node_modules/@prisma/client/runtime/client.d.ts:    enable(namespace: any): void;
./node_modules/@prisma/client/runtime/client.d.ts:    disable(): any;
./node_modules/@prisma/client/runtime/client.d.ts:declare function debugCreate(namespace: string): ((...args: any[]) => void) & {
./node_modules/@prisma/client/runtime/client.d.ts:    static isDecimal(object: any): object is Decimal;
./node_modules/@prisma/client/runtime/client.d.ts:    args: any;
./node_modules/@prisma/client/runtime/client.d.ts:    result: any;
./node_modules/@prisma/client/runtime/client.d.ts:        args: any;
./node_modules/@prisma/client/runtime/client.d.ts:        query: (args: any) => PrismaPromise<any>;
./node_modules/@prisma/client/runtime/client.d.ts:            compute(data: DynamicResultExtensionData<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>): any;
./node_modules/@prisma/client/runtime/client.d.ts:        debug: (...args: any[]) => void;
./node_modules/@prisma/client/runtime/client.d.ts:        define: (client: any) => {
./node_modules/@prisma/client/runtime/client.d.ts:    include: any;
./node_modules/@prisma/client/runtime/client.d.ts:        compute: (...args: any) => infer C;
./node_modules/@prisma/client/runtime/client.d.ts:        _originalClient: any;
./node_modules/@prisma/client/runtime/client.d.ts:        _appliedParent: any;
./node_modules/@prisma/client/runtime/client.d.ts:        $on<E extends ExtendedEventType>(eventType: E, callback: EventCallback<E>): any;
./node_modules/@prisma/client/runtime/client.d.ts:        $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;
./node_modules/@prisma/client/runtime/client.d.ts:        $queryRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;
./node_modules/@prisma/client/runtime/client.d.ts:        $transaction(input: any, options?: any): Promise<any>;
./node_modules/@prisma/client/runtime/client.d.ts:    error: any;
./node_modules/@prisma/client/runtime/client.d.ts:    resolve: (data: any) => void;
./node_modules/@prisma/client/runtime/client.d.ts:    reject: (data: any) => void;
./node_modules/@prisma/client/runtime/client.d.ts:    request: any;
./node_modules/@prisma/client/runtime/client.d.ts:export declare function makeTypedQueryFactory(sql: string): (...values: any[]) => TypedSql<any[], unknown>;
./node_modules/@prisma/client/runtime/client.d.ts:    getAllQueryCallbacks(jsModelName: string, operation: string): any;
./node_modules/@prisma/client/runtime/client.d.ts:            payload: any;
./node_modules/@prisma/client/runtime/client.d.ts:} ? T[symbol]['types']['payload'] : any;
./node_modules/@prisma/client/runtime/client.d.ts:    catch<R = never>(onrejected?: ((reason: any) => R | PromiseLike<R>) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult | R>;
./node_modules/@prisma/client/runtime/client.d.ts:    mapQueryEngineResult({ dataPath, unpacker }: RequestParams, response: QueryEngineResultData<any>): any;
./node_modules/@prisma/client/runtime/client.d.ts:    sanitizeMessage(message: any): any;
./node_modules/@prisma/client/runtime/client.d.ts:    unpack(data: unknown, dataPath: string[], unpacker?: Unpacker): any;
./node_modules/@prisma/client/runtime/client.d.ts:    args?: any;
./node_modules/@prisma/client/runtime/client.d.ts:            payload: any;
./node_modules/@prisma/client/runtime/client.d.ts:export declare type ResultArgsFieldCompute = (model: any) => unknown;
./node_modules/@prisma/client/runtime/client.d.ts:export declare type Return<T> = T extends (...args: any[]) => infer R ? R : T;
./node_modules/@prisma/client/runtime/client.d.ts:declare type Unpacker = (data: any) => any;
./node_modules/@prisma/client/runtime/client.d.ts:export declare function warnEnvConflicts(envPaths: any): void;
./node_modules/@prisma/client/scripts/default-index.d.ts:export declare const PrismaClient: any
./node_modules/@prisma/client/scripts/default-index.d.ts:export declare const dmmf: any
./node_modules/@prisma/client/scripts/default-index.d.ts:export declare type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>
./node_modules/@prisma/client/scripts/default-index.d.ts:  ): (client: any) => PrismaClientExtends<Args>
./node_modules/@prisma/debug/dist/index.d.ts:    enable(namespace: any): void;
./node_modules/@prisma/debug/dist/index.d.ts:    disable(): any;
./node_modules/@prisma/debug/dist/index.d.ts:declare function debugCreate(namespace: string): ((...args: any[]) => void) & {
./node_modules/msw/node_modules/type-fest/source/required-deep.d.ts:								: E extends (...arguments_: any[]) => unknown
./node_modules/msw/node_modules/type-fest/source/partial-on-undefined-deep.d.ts:type PartialOnUndefinedDeepValue<T, Options extends Required<PartialOnUndefinedDeepOptions>> = T extends BuiltIns | ((...arguments_: any[]) => unknown)
./node_modules/msw/node_modules/type-fest/source/omit-index-signature.d.ts:	[x: string]: any
./node_modules/msw/node_modules/type-fest/source/omit-index-signature.d.ts:	[x: number]: any
./node_modules/msw/node_modules/type-fest/source/omit-index-signature.d.ts:	[x: symbol]: any
./node_modules/msw/node_modules/type-fest/source/async-return-type.d.ts:type AsyncFunction = (...arguments_: any[]) => PromiseLike<unknown>;
./node_modules/msw/node_modules/type-fest/source/set-parameter-type.d.ts:type HandleMessage = (data: Data, message: string, ...arguments: any[]) => void;
./node_modules/msw/node_modules/type-fest/source/set-parameter-type.d.ts:export type SetParameterType<Function_ extends (...arguments_: any[]) => unknown, P extends Record<number, unknown>> =
./node_modules/msw/node_modules/type-fest/source/find-global-type.d.ts:		? typeof globalThis extends Record<Name, abstract new (...arguments: any[]) => infer T> ? T : never
./node_modules/msw/node_modules/type-fest/source/internal/object.d.ts:// Copy `readonly` and `?` from the key `a` of `{readonly a?: any}`
./node_modules/msw/node_modules/type-fest/source/internal/object.d.ts:type B = BuildObject<'a', string, {readonly a?: any}>;
./node_modules/msw/node_modules/type-fest/source/internal/keys.d.ts:		This check is necessary, because without it, if we don't verify whether the property is a record, an object with a type of `{name: any}` would return `never` due to its potential assignability to a function.
./node_modules/msw/node_modules/type-fest/source/internal/keys.d.ts:			: [(...arguments_: any[]) => any] extends [Type[Key]]
./node_modules/msw/node_modules/type-fest/source/internal/type.d.ts:export type NonRecursiveType = BuiltIns | Function | (new (...arguments_: any[]) => unknown);
./node_modules/msw/node_modules/type-fest/source/internal/type.d.ts:export type HasMultipleCallSignatures<T extends (...arguments_: any[]) => unknown> =
./node_modules/msw/node_modules/type-fest/source/set-return-type.d.ts:export type SetReturnType<Function_ extends (...arguments_: any[]) => any, TypeToReturn> =
./node_modules/msw/node_modules/type-fest/source/pick-deep.d.ts:	otherConfig: any;
./node_modules/msw/node_modules/type-fest/source/jsonify.d.ts:type NotJsonable = ((...arguments_: any[]) => any) | undefined | symbol;
./node_modules/msw/node_modules/type-fest/source/readonly-deep.d.ts:	: T extends new (...arguments_: any[]) => unknown
./node_modules/msw/node_modules/type-fest/source/readonly-deep.d.ts:		: T extends (...arguments_: any[]) => unknown
./node_modules/msw/node_modules/type-fest/source/partial-deep.d.ts:type _PartialDeep<T, Options extends Required<PartialDeepOptions>> = T extends BuiltIns | ((new (...arguments_: any[]) => unknown))
./node_modules/msw/node_modules/type-fest/source/partial-deep.d.ts:	(ObjectType extends (...arguments_: any) => unknown
./node_modules/msw/node_modules/type-fest/source/is-any.d.ts:const anyObject: any = {a: 1, b: 2};
./node_modules/msw/node_modules/type-fest/source/writable-deep.d.ts:	: T extends (...arguments_: any[]) => unknown
./node_modules/msw/node_modules/type-fest/source/if-empty-object.d.ts:type ShouldBeBar = IfEmptyObject<{key: any}, 'foo', 'bar'>;
./node_modules/msw/node_modules/type-fest/source/asyncify.d.ts:export type Asyncify<Function_ extends (...arguments_: any[]) => any> = SetReturnType<Function_, Promise<Awaited<ReturnType<Function_>>>>;
./node_modules/msw/lib/core/HttpResponse-DWu36LsY.d.ts:    parsedResult?: any;
./node_modules/msw/lib/core/utils/internal/tryCatch.d.ts:declare function tryCatch<Fn extends (...args: any[]) => any>(fn: Fn, onException?: (error: Error) => void): ReturnType<Fn> | undefined;
./node_modules/msw/lib/core/utils/internal/devUtils.d.ts:declare function formatMessage(message: string, ...positionals: any[]): string;
./node_modules/msw/lib/core/utils/internal/devUtils.d.ts:declare function warn(message: string, ...positionals: any[]): void;
./node_modules/msw/lib/core/utils/internal/devUtils.d.ts:declare function error(message: string, ...positionals: any[]): void;
./node_modules/msw/lib/core/utils/internal/isIterable.d.ts:declare function isIterable<IteratorType>(fn: any): fn is Iterable<IteratorType, IteratorType, IteratorType> | AsyncIterable<IteratorType, IteratorType, IteratorType>;
./node_modules/msw/lib/core/utils/internal/jsonParse.d.ts:declare function jsonParse<ValueType extends Record<string, any>>(value: any): ValueType | undefined;
./node_modules/msw/lib/core/utils/internal/isObject.d.ts:declare function isObject(value: any): boolean;
./node_modules/msw/lib/core/typeUtils.d.ts:type Fn = (...arg: any[]) => any;
./node_modules/msw/lib/core/graphql.d.ts:    [key: string]: any;
./node_modules/msw/lib/core/graphql.d.ts:    [key: string]: any;
./node_modules/msw/src/core/utils/executeHandlers.ts:  parsedResult?: any
./node_modules/msw/src/core/utils/internal/isObject.ts:export function isObject(value: any): boolean {
./node_modules/msw/src/core/utils/internal/jsonParse.ts:  value: any,
./node_modules/msw/src/core/utils/internal/tryCatch.ts:export function tryCatch<Fn extends (...args: any[]) => any>(
./node_modules/msw/src/core/utils/internal/devUtils.ts:function formatMessage(message: string, ...positionals: any[]): string {
./node_modules/msw/src/core/utils/internal/devUtils.ts:function warn(message: string, ...positionals: any[]): void {
./node_modules/msw/src/core/utils/internal/devUtils.ts:function error(message: string, ...positionals: any[]): void {
./node_modules/msw/src/core/utils/internal/isIterable.ts:  fn: any,
./node_modules/msw/src/core/utils/internal/parseGraphQLRequest.ts:        operations?: any /** @todo Annotate this */
./node_modules/msw/src/core/utils/handleRequest.test.ts:    return (...args: any) => {
./node_modules/msw/src/core/typeUtils.ts:type Fn = (...arg: any[]) => any
./node_modules/msw/src/core/graphql.ts:  Result = { [key: string]: any },
./node_modules/msw/src/core/graphql.ts:  Variables = { [key: string]: any },
./node_modules/msw/src/core/SetupApi.ts:      on: (...args: any[]) => {
./node_modules/msw/src/core/SetupApi.ts:      removeListener: (...args: any[]) => {
./node_modules/msw/src/core/SetupApi.ts:      removeAllListeners: (...args: any[]) => {
./node_modules/rollup/dist/rollup.d.ts:	meta?: any;
./node_modules/rollup/dist/rollup.d.ts:	[plugin: string]: any;
./node_modules/rollup/dist/rollup.d.ts:	ignored?: any;
./node_modules/rollup/dist/rollup.d.ts:	T extends Record<string, (...parameters: any) => any>,
./node_modules/rollup/dist/rollup.d.ts:export interface AwaitingEventEmitter<T extends Record<string, (...parameters: any) => any>> {
./node_modules/rollup/dist/loadConfigFile.d.ts:	commandOptions: any,
./node_modules/puppeteer-mcp-server/dist/src/tools/handlers.d.ts:export declare function handleToolCall(name: string, args: any, state: BrowserState, server: Server): Promise<CallToolResult>;
./node_modules/puppeteer-mcp-server/node_modules/zod/lib/types.d.ts:declare type BuiltIn = (((...args: any[]) => any) | (new (...args: any[]) => any)) | {
./node_modules/puppeteer-mcp-server/node_modules/zod/lib/types.d.ts:export declare function custom<T>(check?: (data: any) => any, params?: string | CustomParams | ((input: any) => CustomParams),
./node_modules/puppeteer-mcp-server/node_modules/zod/lib/types.d.ts:    constructor(..._: any[]);
./node_modules/puppeteer-mcp-server/node_modules/zod/lib/ZodError.d.ts:        [k: string]: any;
./node_modules/puppeteer-mcp-server/node_modules/zod/lib/ZodError.d.ts:export declare const quotelessJson: (obj: any) => string;
./node_modules/puppeteer-mcp-server/node_modules/zod/lib/ZodError.d.ts:    data: any;
./node_modules/puppeteer-mcp-server/node_modules/zod/lib/__tests__/Mocker.d.ts:    pick: (...args: any[]) => any;
./node_modules/puppeteer-mcp-server/node_modules/zod/lib/__tests__/Mocker.d.ts:    get stringOptional(): any;
./node_modules/puppeteer-mcp-server/node_modules/zod/lib/__tests__/Mocker.d.ts:    get stringNullable(): any;
./node_modules/puppeteer-mcp-server/node_modules/zod/lib/__tests__/Mocker.d.ts:    get numberOptional(): any;
./node_modules/puppeteer-mcp-server/node_modules/zod/lib/__tests__/Mocker.d.ts:    get numberNullable(): any;
./node_modules/puppeteer-mcp-server/node_modules/zod/lib/__tests__/Mocker.d.ts:    get booleanOptional(): any;
./node_modules/puppeteer-mcp-server/node_modules/zod/lib/__tests__/Mocker.d.ts:    get booleanNullable(): any;
./node_modules/puppeteer-mcp-server/node_modules/zod/lib/helpers/parseUtil.d.ts:    data: any;
./node_modules/puppeteer-mcp-server/node_modules/zod/lib/helpers/parseUtil.d.ts:    readonly data: any;
./node_modules/puppeteer-mcp-server/node_modules/zod/lib/helpers/parseUtil.d.ts:    data: any;
./node_modules/puppeteer-mcp-server/node_modules/zod/lib/helpers/parseUtil.d.ts:    data: any;
./node_modules/puppeteer-mcp-server/node_modules/zod/lib/helpers/util.d.ts:    export const getValidEnumValues: (obj: any) => any[];
./node_modules/puppeteer-mcp-server/node_modules/zod/lib/helpers/util.d.ts:    export const objectValues: (obj: any) => any[];
./node_modules/puppeteer-mcp-server/node_modules/zod/lib/helpers/util.d.ts:    export const jsonStringifyReplacer: (_: string, value: any) => any;
./node_modules/puppeteer-mcp-server/node_modules/zod/lib/helpers/util.d.ts:export declare const getParsedType: (data: any) => ZodParsedType;
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            data?: any;
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            executionContextAuxData?: any;
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            executionContextAuxData?: any;
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            additionalParameters?: any;
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            value?: any;
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            value?: any;
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            value?: any;
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            auxData?: any;
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            exceptionMetaData?: any;
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            hints: any;
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            value?: any;
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            data: any;
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            values: any;
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            shape: any[];
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            marginShape: any[];
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            values?: any[];
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            commandLog: any[];
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            body: any;
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            highlight: any;
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            highlights: any;
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            highlight: any;
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            details: any;
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            auctionConfig?: any;
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            auxAttributes?: any;
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            featureStatus?: any;
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            value: any[];
./node_modules/puppeteer-mcp-server/node_modules/devtools-protocol/types/protocol.d.ts:            data: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol/generated/webdriver-bidi.d.ts:    [key: string]: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/bidiMapper/modules/network/NetworkProcessor.d.ts:    static wrapInterceptionError(error: any): any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/bidiMapper/modules/session/SubscriptionManager.d.ts:export declare function cartesianProduct(...a: any[][]): any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    contexts: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    result: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    contexts: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    const InfoListSchema: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    const InfoSchema: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        params: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    result: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    const ListLocalValueSchema: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    const LocalValueSchema: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    const ArrayLocalValueSchema: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    const ListRemoteValueSchema: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    const RemoteValueSchema: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    const ArrayRemoteValueSchema: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    const NodeRemoteValueSchema: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:    const NodePropertiesSchema: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            this: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            data: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts:            args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/esm/bidiTab/bidiTab.d.ts:        runMapperInstance: ((...args: any) => Promise<void>) | null;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol/generated/webdriver-bidi.d.ts:    [key: string]: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/bidiMapper/modules/network/NetworkProcessor.d.ts:    static wrapInterceptionError(error: any): any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/bidiMapper/modules/session/SubscriptionManager.d.ts:export declare function cartesianProduct(...a: any[][]): any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    contexts: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    result: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    contexts: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    const InfoListSchema: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    const InfoSchema: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        contexts?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        nodes: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        params: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        params?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    result: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            exception?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    const ListLocalValueSchema: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    const LocalValueSchema: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    const ArrayLocalValueSchema: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    const ListRemoteValueSchema: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    const RemoteValueSchema: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    const ArrayRemoteValueSchema: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        value?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    const NodeRemoteValueSchema: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:    const NodePropertiesSchema: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            this: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            arguments?: any[] | undefined;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            this?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            data: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            data?: any;
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:        args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts:            args: any[];
./node_modules/puppeteer-mcp-server/node_modules/chromium-bidi/lib/cjs/bidiTab/bidiTab.d.ts:        runMapperInstance: ((...args: any) => Promise<void>) | null;
./node_modules/puppeteer-mcp-server/node_modules/@modelcontextprotocol/sdk/dist/types.d.ts: * Capabilities a client may support. Known capabilities are defined here, in this schema, but this is not a closed set: any client can define its own, additional capabilities.
./node_modules/puppeteer-mcp-server/node_modules/@modelcontextprotocol/sdk/dist/types.d.ts: * Capabilities that a server may support. Known capabilities are defined here, in this schema, but this is not a closed set: any server can define its own, additional capabilities.
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/lib/esm/puppeteer/cdp/CDPSession.d.ts:            data: any;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/lib/esm/puppeteer/cdp/CDPSession.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/lib/esm/puppeteer/cdp/utils.d.ts:export declare function valueFromRemoteObject(remoteObject: Protocol.Runtime.RemoteObject): any;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/lib/esm/puppeteer/util/ErrorLike.d.ts:        data: any;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/lib/esm/puppeteer/util/decorators.d.ts:export declare function throwIfDisposed<This extends Disposed>(message?: (value: This) => string): (target: (this: This, ...args: any[]) => any, _: unknown) => (this: This, ...args: any[]) => any;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/lib/esm/puppeteer/util/decorators.d.ts:export declare function inertIfDisposed<This extends Disposed>(target: (this: This, ...args: any[]) => any, _: unknown): (this: This, ...args: any[]) => any;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/lib/esm/puppeteer/util/decorators.d.ts:export declare function invokeAtMostOnceForArguments(target: (this: unknown, ...args: any[]) => any, _: unknown): typeof target;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/lib/esm/puppeteer/util/decorators.d.ts:export declare function guarded<T extends object>(getKey?: (this: T) => object): (target: (this: T, ...args: any[]) => Promise<any>, _: ClassMethodDecoratorContext<T>) => typeof target;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/lib/esm/puppeteer/bidi/Deserializer.d.ts:    static deserialize(result: Bidi.Script.RemoteValue): any;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/lib/esm/puppeteer/api/ElementHandle.d.ts:export declare function bindIsolatedHandle<This extends ElementHandle<Node>>(target: (this: This, ...args: any[]) => Promise<any>, _: unknown): typeof target;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/lib/esm/puppeteer/api/Frame.d.ts:export declare const throwIfDetached: (target: (this: Frame, ...args: any[]) => any, _: unknown) => (this: Frame, ...args: any[]) => any;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/lib/cjs/puppeteer/cdp/CDPSession.d.ts:            data: any;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/lib/cjs/puppeteer/cdp/CDPSession.d.ts:        result?: any;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/lib/cjs/puppeteer/cdp/utils.d.ts:export declare function valueFromRemoteObject(remoteObject: Protocol.Runtime.RemoteObject): any;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/lib/cjs/puppeteer/util/ErrorLike.d.ts:        data: any;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/lib/cjs/puppeteer/util/decorators.d.ts:export declare function throwIfDisposed<This extends Disposed>(message?: (value: This) => string): (target: (this: This, ...args: any[]) => any, _: unknown) => (this: This, ...args: any[]) => any;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/lib/cjs/puppeteer/util/decorators.d.ts:export declare function inertIfDisposed<This extends Disposed>(target: (this: This, ...args: any[]) => any, _: unknown): (this: This, ...args: any[]) => any;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/lib/cjs/puppeteer/util/decorators.d.ts:export declare function invokeAtMostOnceForArguments(target: (this: unknown, ...args: any[]) => any, _: unknown): typeof target;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/lib/cjs/puppeteer/util/decorators.d.ts:export declare function guarded<T extends object>(getKey?: (this: T) => object): (target: (this: T, ...args: any[]) => Promise<any>, _: ClassMethodDecoratorContext<T>) => typeof target;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/lib/cjs/puppeteer/bidi/Deserializer.d.ts:    static deserialize(result: Bidi.Script.RemoteValue): any;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/lib/cjs/puppeteer/api/ElementHandle.d.ts:export declare function bindIsolatedHandle<This extends ElementHandle<Node>>(target: (this: This, ...args: any[]) => Promise<any>, _: unknown): typeof target;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/lib/cjs/puppeteer/api/Frame.d.ts:export declare const throwIfDetached: (target: (this: Frame, ...args: any[]) => any, _: unknown) => (this: Frame, ...args: any[]) => any;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/src/cdp/CDPSession.ts:    error: {message: string; data: any; code: number};
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/src/cdp/CDPSession.ts:    result?: any;
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/src/cdp/NetworkManager.ts:      clientEmitter.on(event, (arg: any) => {
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/src/cdp/utils.ts:): any {
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/src/util/decorators.ts:  return (target: (this: This, ...args: any[]) => any, _: unknown) => {
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/src/util/decorators.ts:    return function (this: This, ...args: any[]): any {
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/src/util/decorators.ts:  target: (this: This, ...args: any[]) => any,
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/src/util/decorators.ts:  return function (this: This, ...args: any[]): any {
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/src/util/decorators.ts:  target: (this: unknown, ...args: any[]) => any,
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/src/util/decorators.ts:    target: (this: T, ...args: any[]) => Promise<any>,
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/src/util/ErrorLike.ts:  error: {message: string; data: any; code: number};
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/src/bidi/Deserializer.ts:  static deserialize(result: Bidi.Script.RemoteValue): any {
./node_modules/puppeteer-mcp-server/node_modules/puppeteer-core/src/api/ElementHandle.ts:  target: (this: This, ...args: any[]) => Promise<any>,
./node_modules/puppeteer-mcp-server/node_modules/@puppeteer/browsers/src/launch.ts:type EventHandler = (...args: any[]) => void;
./node_modules/puppeteer-mcp-server/node_modules/@puppeteer/browsers/src/launch.ts:  exit: (...args: any[]) => {
./node_modules/puppeteer-mcp-server/node_modules/@puppeteer/browsers/src/launch.ts:  SIGINT: (...args: any[]) => {
./node_modules/puppeteer-mcp-server/node_modules/@puppeteer/browsers/src/launch.ts:  SIGHUP: (...args: any[]) => {
./node_modules/puppeteer-mcp-server/node_modules/@puppeteer/browsers/src/launch.ts:  SIGTERM: (...args: any[]) => {
./node_modules/postcss-nested/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isNode(node: any): node is Node;
./node_modules/postcss-nested/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:        setPropertyAndEscape(name: string, value: any, valueEscaped: string): void;
./node_modules/postcss-nested/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:        setPropertyWithoutEscape(name: string, value: any): void;
./node_modules/postcss-nested/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:        appendToPropertyAndEscape(name: string, value: any, valueEscaped: string): void;
./node_modules/postcss-nested/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isContainer(node: any): node is Root | Selector | Pseudo;
./node_modules/postcss-nested/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isNamespace(node: any): node is Attribute | Tag;
./node_modules/postcss-nested/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isRoot(node: any): node is Root;
./node_modules/postcss-nested/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isSelector(node: any): node is Selector;
./node_modules/postcss-nested/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isCombinator(node: any): node is Combinator;
./node_modules/postcss-nested/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isClassName(node: any): node is ClassName;
./node_modules/postcss-nested/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isAttribute(node: any): node is Attribute;
./node_modules/postcss-nested/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isPseudo(node: any): node is Pseudo;
./node_modules/postcss-nested/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isPseudoElement(node: any): node is Pseudo;
./node_modules/postcss-nested/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isPseudoClass(node: any): node is Pseudo;
./node_modules/postcss-nested/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isTag(node: any): node is Tag;
./node_modules/postcss-nested/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isComment(node: any): node is Comment;
./node_modules/postcss-nested/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function id(opts: any): Identifier;
./node_modules/postcss-nested/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isIdentifier(node: any): node is Identifier;
./node_modules/postcss-nested/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function nesting(opts?: any): Nesting;
./node_modules/postcss-nested/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isNesting(node: any): node is Nesting;
./node_modules/postcss-nested/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isString(node: any): node is String;
./node_modules/postcss-nested/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isUniversal(node: any): node is Universal;
./node_modules/joycon/types/index.d.ts:  data?: any
./node_modules/joycon/types/index.d.ts:  loadSync(filepath: string): any
./node_modules/joycon/types/index.d.ts:  loadSync(filepath: string): any
./node_modules/@supabase/auth-ui-react/dist/components/Auth/UserContext.d.ts:    [propName: string]: any;
./node_modules/@supabase/auth-ui-react/dist/components/Auth/interfaces/EmailAuth.d.ts:    setAuthView?: any;
./node_modules/@supabase/auth-ui-react/dist/components/Auth/interfaces/EmailAuth.d.ts:        [key: string]: any;
./node_modules/@supabase/auth-ui-react/dist/components/Auth/interfaces/VerifyOtp.d.ts:    setAuthView?: any;
./node_modules/@supabase/auth-ui-react/dist/components/Auth/interfaces/ForgottenPassword.d.ts:    setAuthView?: any;
./node_modules/@supabase/auth-ui-react/dist/components/Auth/interfaces/MagicLink.d.ts:    setAuthView?: any;
./node_modules/@supabase/functions-js/dist/module/types.d.ts:    error: any;
./node_modules/@supabase/functions-js/dist/module/types.d.ts:    context: any;
./node_modules/@supabase/functions-js/dist/module/types.d.ts:    constructor(message: string, name?: string, context?: any);
./node_modules/@supabase/functions-js/dist/module/types.d.ts:    constructor(context: any);
./node_modules/@supabase/functions-js/dist/module/types.d.ts:    constructor(context: any);
./node_modules/@supabase/functions-js/dist/module/types.d.ts:    constructor(context: any);
./node_modules/@supabase/functions-js/dist/main/types.d.ts:    error: any;
./node_modules/@supabase/functions-js/dist/main/types.d.ts:    context: any;
./node_modules/@supabase/functions-js/dist/main/types.d.ts:    constructor(message: string, name?: string, context?: any);
./node_modules/@supabase/functions-js/dist/main/types.d.ts:    constructor(context: any);
./node_modules/@supabase/functions-js/dist/main/types.d.ts:    constructor(context: any);
./node_modules/@supabase/functions-js/dist/main/types.d.ts:    constructor(context: any);
./node_modules/@supabase/functions-js/src/FunctionsClient.ts:      let body: any
./node_modules/@supabase/functions-js/src/FunctionsClient.ts:      let data: any
./node_modules/@supabase/functions-js/src/types.ts:  error: any
./node_modules/@supabase/functions-js/src/types.ts:  context: any
./node_modules/@supabase/functions-js/src/types.ts:  constructor(message: string, name = 'FunctionsError', context?: any) {
./node_modules/@supabase/functions-js/src/types.ts:  constructor(context: any) {
./node_modules/@supabase/functions-js/src/types.ts:  constructor(context: any) {
./node_modules/@supabase/functions-js/src/types.ts:  constructor(context: any) {
./node_modules/@supabase/auth-js/dist/module/GoTrueClient.d.ts:    protected logger: (message: string, ...args: any[]) => void;
./node_modules/@supabase/auth-js/dist/module/lib/errors.d.ts:export declare function isAuthSessionMissingError(error: any): error is AuthSessionMissingError;
./node_modules/@supabase/auth-js/dist/module/lib/errors.d.ts:export declare function isAuthImplicitGrantRedirectError(error: any): error is AuthImplicitGrantRedirectError;
./node_modules/@supabase/auth-js/dist/module/lib/types.d.ts:    debug?: boolean | ((message: string, ...args: any[]) => void);
./node_modules/@supabase/auth-js/dist/module/lib/types.d.ts:        [key: string]: any;
./node_modules/@supabase/auth-js/dist/module/lib/types.d.ts:    [key: string]: any;
./node_modules/@supabase/auth-js/dist/module/lib/types.d.ts:    [key: string]: any;
./node_modules/@supabase/auth-js/dist/module/lib/types.d.ts:declare type AnyFunction = (...args: any[]) => any;
./node_modules/@supabase/auth-js/dist/module/lib/types.d.ts:    [key: string]: any;
./node_modules/@supabase/auth-js/dist/module/lib/types.d.ts:    [key: string]: any;
./node_modules/@supabase/auth-js/dist/module/lib/types.d.ts:    [key: string]: any;
./node_modules/@supabase/auth-js/dist/module/lib/fetch.d.ts:    xform?: (data: any) => any;
./node_modules/@supabase/auth-js/dist/module/lib/fetch.d.ts:export declare function _sessionResponse(data: any): AuthResponse;
./node_modules/@supabase/auth-js/dist/module/lib/fetch.d.ts:export declare function _sessionResponsePassword(data: any): AuthResponsePassword;
./node_modules/@supabase/auth-js/dist/module/lib/fetch.d.ts:export declare function _userResponse(data: any): UserResponse;
./node_modules/@supabase/auth-js/dist/module/lib/fetch.d.ts:export declare function _ssoResponse(data: any): SSOResponse;
./node_modules/@supabase/auth-js/dist/module/lib/fetch.d.ts:export declare function _generateLinkResponse(data: any): GenerateLinkResponse;
./node_modules/@supabase/auth-js/dist/module/lib/fetch.d.ts:export declare function _noResolveJsonResponse(data: any): Response;
./node_modules/@supabase/auth-js/dist/module/lib/helpers.d.ts:export declare const setItemAsync: (storage: SupportedStorage, key: string, data: any) => Promise<void>;
./node_modules/@supabase/auth-js/dist/module/lib/helpers.d.ts:    readonly reject: (reason?: any) => any;
./node_modules/@supabase/auth-js/dist/module/lib/helpers.d.ts:export declare function retryable<T>(fn: (attempt: number) => Promise<T>, isRetryable: (attempt: number, error: any | null, result?: T) => boolean): Promise<T>;
./node_modules/@supabase/auth-js/dist/main/GoTrueClient.d.ts:    protected logger: (message: string, ...args: any[]) => void;
./node_modules/@supabase/auth-js/dist/main/lib/errors.d.ts:export declare function isAuthSessionMissingError(error: any): error is AuthSessionMissingError;
./node_modules/@supabase/auth-js/dist/main/lib/errors.d.ts:export declare function isAuthImplicitGrantRedirectError(error: any): error is AuthImplicitGrantRedirectError;
./node_modules/@supabase/auth-js/dist/main/lib/types.d.ts:    debug?: boolean | ((message: string, ...args: any[]) => void);
./node_modules/@supabase/auth-js/dist/main/lib/types.d.ts:        [key: string]: any;
./node_modules/@supabase/auth-js/dist/main/lib/types.d.ts:    [key: string]: any;
./node_modules/@supabase/auth-js/dist/main/lib/types.d.ts:    [key: string]: any;
./node_modules/@supabase/auth-js/dist/main/lib/types.d.ts:declare type AnyFunction = (...args: any[]) => any;
./node_modules/@supabase/auth-js/dist/main/lib/types.d.ts:    [key: string]: any;
./node_modules/@supabase/auth-js/dist/main/lib/types.d.ts:    [key: string]: any;
./node_modules/@supabase/auth-js/dist/main/lib/types.d.ts:    [key: string]: any;
./node_modules/@supabase/auth-js/dist/main/lib/fetch.d.ts:    xform?: (data: any) => any;
./node_modules/@supabase/auth-js/dist/main/lib/fetch.d.ts:export declare function _sessionResponse(data: any): AuthResponse;
./node_modules/@supabase/auth-js/dist/main/lib/fetch.d.ts:export declare function _sessionResponsePassword(data: any): AuthResponsePassword;
./node_modules/@supabase/auth-js/dist/main/lib/fetch.d.ts:export declare function _userResponse(data: any): UserResponse;
./node_modules/@supabase/auth-js/dist/main/lib/fetch.d.ts:export declare function _ssoResponse(data: any): SSOResponse;
./node_modules/@supabase/auth-js/dist/main/lib/fetch.d.ts:export declare function _generateLinkResponse(data: any): GenerateLinkResponse;
./node_modules/@supabase/auth-js/dist/main/lib/fetch.d.ts:export declare function _noResolveJsonResponse(data: any): Response;
./node_modules/@supabase/auth-js/dist/main/lib/helpers.d.ts:export declare const setItemAsync: (storage: SupportedStorage, key: string, data: any) => Promise<void>;
./node_modules/@supabase/auth-js/dist/main/lib/helpers.d.ts:    readonly reject: (reason?: any) => any;
./node_modules/@supabase/auth-js/dist/main/lib/helpers.d.ts:export declare function retryable<T>(fn: (attempt: number) => Promise<T>, isRetryable: (attempt: number, error: any | null, result?: T) => boolean): Promise<T>;
./node_modules/@supabase/auth-js/src/lib/helpers.ts:    } catch (e: any) {
./node_modules/@supabase/auth-js/src/lib/helpers.ts:  data: any
./node_modules/@supabase/auth-js/src/lib/helpers.ts:  public readonly reject!: (reason?: any) => any
./node_modules/@supabase/auth-js/src/lib/helpers.ts:  isRetryable: (attempt: number, error: any | null, result?: T) => boolean
./node_modules/@supabase/auth-js/src/lib/helpers.ts:        } catch (e: any) {
./node_modules/@supabase/auth-js/src/lib/helpers.ts:  } catch (e: any) {
./node_modules/@supabase/auth-js/src/lib/errors.ts:export function isAuthSessionMissingError(error: any): error is AuthSessionMissingError {
./node_modules/@supabase/auth-js/src/lib/errors.ts:  error: any
./node_modules/@supabase/auth-js/src/lib/types.ts:  debug?: boolean | ((message: string, ...args: any[]) => void)
./node_modules/@supabase/auth-js/src/lib/types.ts:    [key: string]: any
./node_modules/@supabase/auth-js/src/lib/types.ts:  [key: string]: any
./node_modules/@supabase/auth-js/src/lib/types.ts:  [key: string]: any
./node_modules/@supabase/auth-js/src/lib/types.ts:type AnyFunction = (...args: any[]) => any
./node_modules/@supabase/auth-js/src/lib/types.ts:  [key: string]: any
./node_modules/@supabase/auth-js/src/lib/types.ts:  [key: string]: any
./node_modules/@supabase/auth-js/src/lib/types.ts:  [key: string]: any
./node_modules/@supabase/auth-js/src/lib/locks.ts:              } catch (e: any) {
./node_modules/@supabase/auth-js/src/lib/locks.ts:    .catch((e: any) => {
./node_modules/@supabase/auth-js/src/lib/locks.ts:  PROCESS_LOCKS[name] = currentOperation.catch(async (e: any) => {
./node_modules/@supabase/auth-js/src/lib/fetch.ts:const _getErrorMessage = (err: any): string =>
./node_modules/@supabase/auth-js/src/lib/fetch.ts:  let data: any
./node_modules/@supabase/auth-js/src/lib/fetch.ts:  } catch (e: any) {
./node_modules/@supabase/auth-js/src/lib/fetch.ts:      data.weak_password.reasons.reduce((a: boolean, i: any) => a && typeof i === 'string', true)
./node_modules/@supabase/auth-js/src/lib/fetch.ts:  const params: { [k: string]: any } = { method, headers: options?.headers || {} }
./node_modules/@supabase/auth-js/src/lib/fetch.ts:  xform?: (data: any) => any
./node_modules/@supabase/auth-js/src/lib/fetch.ts:  let result: any
./node_modules/@supabase/auth-js/src/lib/fetch.ts:  } catch (e: any) {
./node_modules/@supabase/auth-js/src/lib/fetch.ts:export function _sessionResponse(data: any): AuthResponse {
./node_modules/@supabase/auth-js/src/lib/fetch.ts:export function _sessionResponsePassword(data: any): AuthResponsePassword {
./node_modules/@supabase/auth-js/src/lib/fetch.ts:    data.weak_password.reasons.reduce((a: boolean, i: any) => a && typeof i === 'string', true)
./node_modules/@supabase/auth-js/src/lib/fetch.ts:export function _userResponse(data: any): UserResponse {
./node_modules/@supabase/auth-js/src/lib/fetch.ts:export function _ssoResponse(data: any): SSOResponse {
./node_modules/@supabase/auth-js/src/lib/fetch.ts:export function _generateLinkResponse(data: any): GenerateLinkResponse {
./node_modules/@supabase/auth-js/src/lib/fetch.ts:export function _noResolveJsonResponse(data: any): Response {
./node_modules/@supabase/auth-js/src/lib/fetch.ts:function hasSession(data: any): boolean {
./node_modules/@supabase/auth-js/src/GoTrueAdminApi.ts:      const body: any = { ...rest, ...options }
./node_modules/@supabase/auth-js/src/GoTrueAdminApi.ts:          xform: (factors: any) => {
./node_modules/@supabase/auth-js/src/GoTrueClient.ts:  protected logger: (message: string, ...args: any[]) => void = console.log
./node_modules/@supabase/auth-js/src/GoTrueClient.ts:      } catch (e: any) {
./node_modules/@supabase/auth-js/src/GoTrueClient.ts:  private _debug(...args: any[]): GoTrueClient {
./node_modules/@supabase/auth-js/src/GoTrueClient.ts:        let outputToProcess: any
./node_modules/@supabase/auth-js/src/GoTrueClient.ts:            } catch (e: any) {
./node_modules/@supabase/auth-js/src/GoTrueClient.ts:              } catch (e: any) {
./node_modules/@supabase/auth-js/src/GoTrueClient.ts:            get: (target: any, prop: string, receiver: any) => {
./node_modules/@supabase/auth-js/src/GoTrueClient.ts:      const errors: any[] = []
./node_modules/@supabase/auth-js/src/GoTrueClient.ts:        } catch (e: any) {
./node_modules/@supabase/auth-js/src/GoTrueClient.ts:          } catch (e: any) {
./node_modules/@supabase/auth-js/src/GoTrueClient.ts:    } catch (e: any) {
./node_modules/@supabase/auth-js/src/GoTrueClient.ts:    jwk = data.keys.find((key: any) => key.kid === kid)
./node_modules/@supabase/auth-ui-shared/dist/index.d.ts:        [key: string]: any;
./node_modules/@supabase/auth-ui-shared/dist/index.d.ts:declare function merge(target: any, ...args: any): any;
./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.d.ts:export default class SupabaseClient<Database = any, SchemaName extends string & keyof Database = 'public' extends keyof Database ? 'public' : string & keyof Database, Schema extends GenericSchema = Database[SchemaName] extends GenericSchema ? Database[SchemaName] : any> {
./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.d.ts:    schema<DynamicSchema extends string & keyof Database>(schema: DynamicSchema): PostgrestClient<Database, DynamicSchema, Database[DynamicSchema] extends GenericSchema ? Database[DynamicSchema] : any>;
./node_modules/@supabase/supabase-js/dist/module/index.d.ts:export declare const createClient: <Database = any, SchemaName extends string & keyof Database = "public" extends keyof Database ? "public" : string & keyof Database, Schema extends GenericSchema = Database[SchemaName] extends GenericSchema ? Database[SchemaName] : any>(supabaseUrl: string, supabaseKey: string, options?: SupabaseClientOptions<SchemaName> | undefined) => SupabaseClient<Database, SchemaName, Schema>;
./node_modules/@supabase/supabase-js/dist/main/SupabaseClient.d.ts:export default class SupabaseClient<Database = any, SchemaName extends string & keyof Database = 'public' extends keyof Database ? 'public' : string & keyof Database, Schema extends GenericSchema = Database[SchemaName] extends GenericSchema ? Database[SchemaName] : any> {
./node_modules/@supabase/supabase-js/dist/main/SupabaseClient.d.ts:    schema<DynamicSchema extends string & keyof Database>(schema: DynamicSchema): PostgrestClient<Database, DynamicSchema, Database[DynamicSchema] extends GenericSchema ? Database[DynamicSchema] : any>;
./node_modules/@supabase/supabase-js/dist/main/index.d.ts:export declare const createClient: <Database = any, SchemaName extends string & keyof Database = "public" extends keyof Database ? "public" : string & keyof Database, Schema extends GenericSchema = Database[SchemaName] extends GenericSchema ? Database[SchemaName] : any>(supabaseUrl: string, supabaseKey: string, options?: SupabaseClientOptions<SchemaName> | undefined) => SupabaseClient<Database, SchemaName, Schema>;
./node_modules/@supabase/supabase-js/src/SupabaseClient.ts:    : any
./node_modules/@supabase/supabase-js/src/SupabaseClient.ts:    Database[DynamicSchema] extends GenericSchema ? Database[DynamicSchema] : any
./node_modules/@supabase/supabase-js/src/index.ts:    : any
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:    [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:    [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:    [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:    [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:                [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:    }>(type: `${REALTIME_LISTEN_TYPES.SYSTEM}`, filter: {}, callback: (payload: any) => void): RealtimeChannel;
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        payload?: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.d.ts:    [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.d.ts:    [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.d.ts:    [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.d.ts:    [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.d.ts:            [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/lib/serializer.d.ts:    decode(rawPayload: ArrayBuffer | string, callback: Function): any;
./node_modules/@supabase/realtime-js/dist/module/lib/push.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/lib/push.d.ts:            [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/lib/push.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/lib/push.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/lib/push.d.ts:    trigger(status: string, response: any): void;
./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.d.ts:    payload: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.d.ts:    error: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.d.ts:    log(kind: string, msg: string, data?: any): void;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:    [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:    [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:    [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:    [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:                [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:    }>(type: `${REALTIME_LISTEN_TYPES.SYSTEM}`, filter: {}, callback: (payload: any) => void): RealtimeChannel;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        payload?: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimePresence.d.ts:    [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimePresence.d.ts:    [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimePresence.d.ts:    [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimePresence.d.ts:    [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimePresence.d.ts:            [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/lib/serializer.d.ts:    decode(rawPayload: ArrayBuffer | string, callback: Function): any;
./node_modules/@supabase/realtime-js/dist/main/lib/push.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/lib/push.d.ts:            [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/lib/push.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/lib/push.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/lib/push.d.ts:    trigger(status: string, response: any): void;
./node_modules/@supabase/realtime-js/dist/main/RealtimeClient.d.ts:    payload: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeClient.d.ts:    error: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeClient.d.ts:        [key: string]: any;
./node_modules/@supabase/realtime-js/dist/main/RealtimeClient.d.ts:    log(kind: string, msg: string, data?: any): void;
./node_modules/@supabase/realtime-js/src/lib/push.ts:    response: { [key: string]: any }
./node_modules/@supabase/realtime-js/src/lib/push.ts:    public payload: { [key: string]: any } = {},
./node_modules/@supabase/realtime-js/src/lib/push.ts:  updatePayload(payload: { [key: string]: any }): void {
./node_modules/@supabase/realtime-js/src/lib/push.ts:    const callback = (payload: any) => {
./node_modules/@supabase/realtime-js/src/lib/push.ts:  trigger(status: string, response: any) {
./node_modules/@supabase/realtime-js/src/lib/serializer.ts:    payload: { [key: string]: any }
./node_modules/@supabase/realtime-js/src/RealtimePresence.ts:type Presence<T extends { [key: string]: any } = {}> = {
./node_modules/@supabase/realtime-js/src/RealtimePresence.ts:export type RealtimePresenceState<T extends { [key: string]: any } = {}> = {
./node_modules/@supabase/realtime-js/src/RealtimePresence.ts:export type RealtimePresenceJoinPayload<T extends { [key: string]: any }> = {
./node_modules/@supabase/realtime-js/src/RealtimePresence.ts:export type RealtimePresenceLeavePayload<T extends { [key: string]: any }> = {
./node_modules/@supabase/realtime-js/src/RealtimePresence.ts:      [key: string]: any
./node_modules/@supabase/realtime-js/src/RealtimePresence.ts:  private static cloneDeep(obj: { [key: string]: any }) {
./node_modules/@supabase/realtime-js/src/RealtimeClient.ts:  payload: any
./node_modules/@supabase/realtime-js/src/RealtimeClient.ts:  error: any
./node_modules/@supabase/realtime-js/src/RealtimeClient.ts:  params?: { [key: string]: any }
./node_modules/@supabase/realtime-js/src/RealtimeClient.ts:  log(kind: string, msg: string, data?: any) {
./node_modules/@supabase/realtime-js/src/RealtimeClient.ts:      this.encode(data, (result: any) => {
./node_modules/@supabase/realtime-js/src/RealtimeClient.ts:      this.conn.onmessage = (event: any) => this._onConnMessage(event)
./node_modules/@supabase/realtime-js/src/RealtimeClient.ts:      this.conn.onclose = (event: any) => this._onConnClose(event)
./node_modules/@supabase/realtime-js/src/RealtimeClient.ts:  private _onConnMessage(rawMessage: { data: any }) {
./node_modules/@supabase/realtime-js/src/RealtimeClient.ts:  private _onConnClose(event: any) {
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:export type RealtimePostgresInsertPayload<T extends { [key: string]: any }> =
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:export type RealtimePostgresUpdatePayload<T extends { [key: string]: any }> =
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:export type RealtimePostgresDeletePayload<T extends { [key: string]: any }> =
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:export type RealtimePostgresChangesPayload<T extends { [key: string]: any }> =
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:      filter: { [key: string]: any }
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:    this._on(CHANNEL_EVENTS.reply, {}, (payload: any, ref: string) => {
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:        .receive('error', (error: { [key: string]: any }) => {
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:    T extends { [key: string]: any } = {}
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:    payload: { [key: string]: any },
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:    opts: { [key: string]: any } = {}
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:    opts: { [key: string]: any } = {}
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  on<T extends { [key: string]: any }>(
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  on<T extends { [key: string]: any }>(
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  on<T extends { [key: string]: any }>(
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  on<T extends { [key: string]: any }>(
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  on<T extends { [key: string]: any }>(
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  on<T extends { [key: string]: any }>(
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:      [key: string]: any
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  on<T extends { [key: string]: any }>(
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  on<T extends { [key: string]: any }>(
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:    callback: (payload: any) => void
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:    callback: (payload: any) => void
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:      payload?: any
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:      [key: string]: any
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:    opts: { [key: string]: any } = {}
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:      } catch (error: any) {
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  updateJoinPayload(payload: { [key: string]: any }): void {
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:    options: { [key: string]: any },
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:    payload: { [key: string]: any },
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  _onMessage(_event: string, payload: any, _ref?: string) {
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  _trigger(type: string, payload?: any, ref?: string) {
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  _on(type: string, filter: { [key: string]: any }, callback: Function) {
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  _off(type: string, filter: { [key: string]: any }) {
./node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  private _getPayloadRecords(payload: any) {
./node_modules/@supabase/ssr/dist/module/createBrowserClient.d.ts:export declare function createBrowserClient<Database = any, SchemaName extends string & keyof Database = "public" extends keyof Database ? "public" : string & keyof Database, Schema extends GenericSchema = Database[SchemaName] extends GenericSchema ? Database[SchemaName] : any>(supabaseUrl: string, supabaseKey: string, options?: SupabaseClientOptions<SchemaName> & {
./node_modules/@supabase/ssr/dist/module/createBrowserClient.d.ts:export declare function createBrowserClient<Database = any, SchemaName extends string & keyof Database = "public" extends keyof Database ? "public" : string & keyof Database, Schema extends GenericSchema = Database[SchemaName] extends GenericSchema ? Database[SchemaName] : any>(supabaseUrl: string, supabaseKey: string, options?: SupabaseClientOptions<SchemaName> & {
./node_modules/@supabase/ssr/dist/module/createServerClient.d.ts:export declare function createServerClient<Database = any, SchemaName extends string & keyof Database = "public" extends keyof Database ? "public" : string & keyof Database, Schema extends GenericSchema = Database[SchemaName] extends GenericSchema ? Database[SchemaName] : any>(supabaseUrl: string, supabaseKey: string, options: SupabaseClientOptions<SchemaName> & {
./node_modules/@supabase/ssr/dist/module/createServerClient.d.ts:export declare function createServerClient<Database = any, SchemaName extends string & keyof Database = "public" extends keyof Database ? "public" : string & keyof Database, Schema extends GenericSchema = Database[SchemaName] extends GenericSchema ? Database[SchemaName] : any>(supabaseUrl: string, supabaseKey: string, options: SupabaseClientOptions<SchemaName> & {
./node_modules/@supabase/ssr/dist/main/createBrowserClient.d.ts:export declare function createBrowserClient<Database = any, SchemaName extends string & keyof Database = "public" extends keyof Database ? "public" : string & keyof Database, Schema extends GenericSchema = Database[SchemaName] extends GenericSchema ? Database[SchemaName] : any>(supabaseUrl: string, supabaseKey: string, options?: SupabaseClientOptions<SchemaName> & {
./node_modules/@supabase/ssr/dist/main/createBrowserClient.d.ts:export declare function createBrowserClient<Database = any, SchemaName extends string & keyof Database = "public" extends keyof Database ? "public" : string & keyof Database, Schema extends GenericSchema = Database[SchemaName] extends GenericSchema ? Database[SchemaName] : any>(supabaseUrl: string, supabaseKey: string, options?: SupabaseClientOptions<SchemaName> & {
./node_modules/@supabase/ssr/dist/main/createServerClient.d.ts:export declare function createServerClient<Database = any, SchemaName extends string & keyof Database = "public" extends keyof Database ? "public" : string & keyof Database, Schema extends GenericSchema = Database[SchemaName] extends GenericSchema ? Database[SchemaName] : any>(supabaseUrl: string, supabaseKey: string, options: SupabaseClientOptions<SchemaName> & {
./node_modules/@supabase/ssr/dist/main/createServerClient.d.ts:export declare function createServerClient<Database = any, SchemaName extends string & keyof Database = "public" extends keyof Database ? "public" : string & keyof Database, Schema extends GenericSchema = Database[SchemaName] extends GenericSchema ? Database[SchemaName] : any>(supabaseUrl: string, supabaseKey: string, options: SupabaseClientOptions<SchemaName> & {
./node_modules/@supabase/ssr/src/createBrowserClient.ts:    : any,
./node_modules/@supabase/ssr/src/createBrowserClient.ts:    : any,
./node_modules/@supabase/ssr/src/createBrowserClient.ts:    : any,
./node_modules/@supabase/ssr/src/createServerClient.ts:    : any,
./node_modules/@supabase/ssr/src/createServerClient.ts:    : any,
./node_modules/@supabase/ssr/src/createServerClient.ts:    : any,
./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.d.ts:            fullPath: any;
./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.d.ts:        error: any;
./node_modules/@supabase/storage-js/dist/main/packages/StorageFileApi.d.ts:            fullPath: any;
./node_modules/@supabase/storage-js/dist/main/packages/StorageFileApi.d.ts:        error: any;
./node_modules/@supabase/storage-js/src/lib/fetch.ts:const _getErrorMessage = (err: any): string =>
./node_modules/@supabase/storage-js/src/lib/fetch.ts:  reject: (reason?: any) => void,
./node_modules/@supabase/storage-js/src/lib/fetch.ts:  const params: { [k: string]: any } = { method, headers: options?.headers || {} }
./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.d.ts:export default class PostgrestClient<Database = any, SchemaName extends string & keyof Database = 'public' extends keyof Database ? 'public' : string & keyof Database, Schema extends GenericSchema = Database[SchemaName] extends GenericSchema ? Database[SchemaName] : any> {
./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.d.ts:    schema<DynamicSchema extends string & keyof Database>(schema: DynamicSchema): PostgrestClient<Database, DynamicSchema, Database[DynamicSchema] extends GenericSchema ? Database[DynamicSchema] : any>;
./node_modules/@supabase/postgrest-js/dist/cjs/select-query-parser/result.d.ts:export declare type GetResult<Schema extends GenericSchema, Row extends Record<string, unknown>, RelationName, Relationships, Query extends string> = IsAny<Schema> extends true ? ParseQuery<Query> extends infer ParsedQuery ? ParsedQuery extends Ast.Node[] ? RelationName extends string ? ProcessNodesWithoutSchema<ParsedQuery> : any : ParsedQuery : any : Relationships extends null ? ParseQuery<Query> extends infer ParsedQuery ? ParsedQuery extends Ast.Node[] ? RPCCallNodes<ParsedQuery, RelationName extends string ? RelationName : 'rpc_call', Row> : ParsedQuery : Row : ParseQuery<Query> extends infer ParsedQuery ? ParsedQuery extends Ast.Node[] ? RelationName extends string ? Relationships extends GenericRelationship[] ? ProcessNodes<Schema, Row, RelationName, Relationships, ParsedQuery> : SelectQueryError<'Invalid Relationships cannot infer result type'> : SelectQueryError<'Invalid RelationName cannot infer result type'> : ParsedQuery : never;
./node_modules/@supabase/postgrest-js/dist/cjs/select-query-parser/result.d.ts:    [K in GetFieldNodeResultName<Field>]: Field['castType'] extends PostgreSQLTypes ? TypeScriptTypes<Field['castType']> : any;
./node_modules/@supabase/postgrest-js/dist/cjs/select-query-parser/result.d.ts:    [P in Node['target']['children'][number] as GetFieldNodeResultName<P>]: P['castType'] extends PostgreSQLTypes ? TypeScriptTypes<P['castType']> : any;
./node_modules/@supabase/postgrest-js/dist/cjs/select-query-parser/result.d.ts:} : any : Node extends Ast.FieldNode ? ProcessFieldNodeWithoutSchema<Node> : any;
./node_modules/@supabase/postgrest-js/dist/cjs/select-query-parser/result.d.ts:declare type ProcessNodesWithoutSchema<Nodes extends Ast.Node[], Acc extends Record<string, unknown> = {}> = Nodes extends [infer FirstNode, ...infer RestNodes] ? FirstNode extends Ast.Node ? RestNodes extends Ast.Node[] ? ProcessNodeWithoutSchema<FirstNode> extends infer FieldResult ? FieldResult extends Record<string, unknown> ? ProcessNodesWithoutSchema<RestNodes, Acc & FieldResult> : FieldResult : any : any : any : Prettify<Acc>;
./node_modules/@supabase/postgrest-js/dist/cjs/types.d.ts:declare type NonRecursiveType = BuiltIns | Function | (new (...arguments_: any[]) => unknown);
./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.d.ts:    then<TResult1 = ThrowOnError extends true ? PostgrestResponseSuccess<Result> : PostgrestSingleResponse<Result>, TResult2 = never>(onfulfilled?: ((value: ThrowOnError extends true ? PostgrestResponseSuccess<Result> : PostgrestSingleResponse<Result>) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): PromiseLike<TResult1 | TResult2>;
./node_modules/@supabase/postgrest-js/src/select-query-parser/result.ts:        : any
./node_modules/@supabase/postgrest-js/src/select-query-parser/result.ts:    : any
./node_modules/@supabase/postgrest-js/src/select-query-parser/result.ts:          : any
./node_modules/@supabase/postgrest-js/src/select-query-parser/result.ts:          : any
./node_modules/@supabase/postgrest-js/src/select-query-parser/result.ts:    : any
./node_modules/@supabase/postgrest-js/src/select-query-parser/result.ts:  : any
./node_modules/@supabase/postgrest-js/src/select-query-parser/result.ts:        : any
./node_modules/@supabase/postgrest-js/src/select-query-parser/result.ts:      : any
./node_modules/@supabase/postgrest-js/src/select-query-parser/result.ts:    : any
./node_modules/@supabase/postgrest-js/src/types.ts:type NonRecursiveType = BuiltIns | Function | (new (...arguments_: any[]) => unknown)
./node_modules/@supabase/postgrest-js/src/PostgrestBuilder.ts:    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
./node_modules/@supabase/postgrest-js/src/PostgrestClient.ts:    : any
./node_modules/@supabase/postgrest-js/src/PostgrestClient.ts:    Database[DynamicSchema] extends GenericSchema ? Database[DynamicSchema] : any
./node_modules/filing-cabinet/node_modules/tsconfig-paths/lib/filesystem.d.ts:    (packageJsonPath: string): any | undefined;
./node_modules/filing-cabinet/node_modules/tsconfig-paths/lib/filesystem.d.ts:    (err?: Error, content?: any): void;
./node_modules/filing-cabinet/node_modules/tsconfig-paths/lib/filesystem.d.ts:export declare function readJsonFromDiskSync(packageJsonPath: string): any | undefined;
./node_modules/filing-cabinet/node_modules/tsconfig-paths/lib/filesystem.d.ts:export declare function readJsonFromDiskAsync(path: string, callback: (err?: Error, content?: any) => void): void;
./node_modules/filing-cabinet/node_modules/tsconfig-paths/src/filesystem.ts:  (packageJsonPath: string): any | undefined;
./node_modules/filing-cabinet/node_modules/tsconfig-paths/src/filesystem.ts:  (err?: Error, content?: any): void;
./node_modules/filing-cabinet/node_modules/tsconfig-paths/src/filesystem.ts:export function readJsonFromDiskSync(packageJsonPath: string): any | undefined {
./node_modules/filing-cabinet/node_modules/tsconfig-paths/src/filesystem.ts:  callback: (err?: Error, content?: any) => void
./node_modules/filing-cabinet/node_modules/tsconfig-paths/src/register.ts:  Module._resolveFilename = function (request: string, _parent: any): string {
./node_modules/filing-cabinet/node_modules/commander/typings/index.d.ts:  defaultValue?: any;
./node_modules/filing-cabinet/node_modules/commander/typings/index.d.ts:  defaultValue?: any;
./node_modules/filing-cabinet/node_modules/commander/typings/index.d.ts:  processedArgs: any[];
./node_modules/filing-cabinet/node_modules/commander/typings/index.d.ts:  action(fn: (...args: any[]) => void | Promise<void>): this;
./node_modules/filing-cabinet/node_modules/commander/typings/index.d.ts:  getOptionValue(key: string): any;
./node_modules/filing-cabinet/node_modules/commander/typings/index.d.ts:  on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/filing-cabinet/node_modules/json5/lib/parse.d.ts:    reviver?: ((this: any, key: string, value: any) => any) | null,
./node_modules/filing-cabinet/node_modules/json5/lib/stringify.d.ts:        | ((this: any, key: string, value: any) => any)
./node_modules/filing-cabinet/node_modules/json5/lib/stringify.d.ts:    value: any,
./node_modules/filing-cabinet/node_modules/json5/lib/stringify.d.ts:    replacer?: ((this: any, key: string, value: any) => any) | null,
./node_modules/filing-cabinet/node_modules/json5/lib/stringify.d.ts:    value: any,
./node_modules/filing-cabinet/node_modules/json5/lib/stringify.d.ts:declare function stringify(value: any, options: StringifyOptions): string
./node_modules/jszip/node_modules/safe-buffer/index.d.ts:    toJSON(): { type: 'Buffer', data: any[] };
./node_modules/jszip/node_modules/safe-buffer/index.d.ts:    fill(value: any, offset?: number, end?: number): this;
./node_modules/jszip/node_modules/safe-buffer/index.d.ts:    constructor (array: any[]);
./node_modules/jszip/node_modules/safe-buffer/index.d.ts:    static from(array: any[]): Buffer;
./node_modules/jszip/node_modules/safe-buffer/index.d.ts:    static isBuffer(obj: any): obj is Buffer;
./node_modules/expect-type/dist/branding.d.ts:} : T extends new (...args: any[]) => any ? {
./node_modules/expect-type/dist/branding.d.ts:    instance: DeepBrand<InstanceType<Extract<T, new (...args: any) => any>>>;
./node_modules/expect-type/dist/messages.d.ts:export type PrintType<T> = IsUnknown<T> extends true ? 'unknown' : IsNever<T> extends true ? 'never' : IsAny<T> extends true ? never : boolean extends T ? 'boolean' : T extends boolean ? `literal boolean: ${T}` : string extends T ? 'string' : T extends string ? `literal string: ${T}` : number extends T ? 'number' : T extends number ? `literal number: ${T}` : bigint extends T ? 'bigint' : T extends bigint ? `literal bigint: ${T}` : T extends null ? 'null' : T extends undefined ? 'undefined' : T extends (...args: any[]) => any ? 'function' : '...';
./node_modules/expect-type/dist/messages.d.ts:    result: ExtendsExcludingAnyOrNever<T, (...args: any[]) => any>;
./node_modules/expect-type/dist/overloads.d.ts:export type InferFunctionType<FunctionType extends (...args: any) => any> = FunctionType;
./node_modules/expect-type/dist/overloads.d.ts:export type InferConstructor<ConstructorType extends new (...args: any) => any> = ConstructorType;
./node_modules/expect-type/dist/index.d.ts:     *   .extract<{ xs?: any }>() // extracts the last type from a union
./node_modules/expect-type/dist/index.d.ts:    instance: Actual extends new (...args: any[]) => infer I ? ExpectTypeOf<I, Options> : never;
./node_modules/expect-type/dist/index.d.ts:     * function isString(v: any): v is string {
./node_modules/expect-type/dist/index.d.ts:    guards: Actual extends (v: any, ...args: any[]) => v is infer T ? ExpectTypeOf<T, Options> : never;
./node_modules/expect-type/dist/index.d.ts:     * function assertNumber(v: any): asserts v is number {
./node_modules/expect-type/dist/index.d.ts:    asserts: Actual extends (v: any, ...args: any[]) => asserts v is infer T ? unknown extends T ? never : ExpectTypeOf<T, Options> : never;
./node_modules/react-promise-suspense/node_modules/fast-deep-equal/index.d.ts:    const equal: (a: any, b: any) => boolean;
./node_modules/tinypool/dist/index.d.ts:  onMessage?: (callback: (message: any) => void) => void;
./node_modules/tinypool/dist/index.d.ts:  postMessage?: (message: any) => void;
./node_modules/tinypool/dist/index.d.ts:    resourceLimits?: any;
./node_modules/tinypool/dist/index.d.ts:  postMessage(message: any, transferListItem?: TransferListItem[]): void;
./node_modules/tinypool/dist/index.d.ts:  on(event: string, listener: (...args: any[]) => void): void;
./node_modules/tinypool/dist/index.d.ts:  once(event: string, listener: (...args: any[]) => void): void;
./node_modules/tinypool/dist/index.d.ts:  emit(event: string, ...data: any[]): void;
./node_modules/tinypool/dist/index.d.ts:  task: any;
./node_modules/tinypool/dist/index.d.ts:  result: any;
./node_modules/tinypool/dist/index.d.ts:declare function isTransferable(value: any): boolean;
./node_modules/tinypool/dist/index.d.ts:declare function isMovable(value: any): boolean;
./node_modules/tinypool/dist/index.d.ts:declare function isTaskQueue(value: any): boolean;
./node_modules/tinypool/dist/index.d.ts:        workerData: any;
./node_modules/tinypool/dist/index.d.ts:  workerData?: any;
./node_modules/tinypool/dist/index.d.ts:  postMessage(value: any, transferList: infer T): any;
./node_modules/tinypool/dist/index.d.ts:  run(task: any, options?: RunOptions): Promise<any>;
./node_modules/tinypool/dist/index.d.ts:  static get workerData(): any;
./node_modules/lie/lie.d.ts:    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
./node_modules/lie/lie.d.ts:    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
./node_modules/lie/lie.d.ts:    new <T>(executor: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void): Promise<T>;
./node_modules/lie/lie.d.ts:    reject(reason: any): Promise<never>;
./node_modules/lie/lie.d.ts:    reject<T>(reason: any): Promise<T>;
./node_modules/queue/index.d.ts:    results?: any[];
./node_modules/queue/index.d.ts:    results: any[] | null;
./node_modules/lilconfig/src/index.d.ts:	config: any;
./node_modules/uri-js/dist/esnext/util.d.ts:export declare function typeOf(o: any): string;
./node_modules/uri-js/dist/esnext/util.d.ts:export declare function toArray(obj: any): Array<any>;
./node_modules/uri-js/dist/esnext/util.d.ts:export declare function assign(target: object, source: any): any;
./node_modules/any-promise/index.d.ts:  constructor (callback: (resolve : (value?: R | Promise.Thenable<R>) => void, reject: (error?: any) => void) => void);
./node_modules/any-promise/index.d.ts:  then <U> (onFulfilled?: (value: R) => U | Promise.Thenable<U>, onRejected?: (error: any) => U | Promise.Thenable<U>): Promise<U>;
./node_modules/any-promise/index.d.ts:  then <U> (onFulfilled?: (value: R) => U | Promise.Thenable<U>, onRejected?: (error: any) => void): Promise<U>;
./node_modules/any-promise/index.d.ts:  catch <U> (onRejected?: (error: any) => U | Promise.Thenable<U>): Promise<U>;
./node_modules/any-promise/index.d.ts:  static reject <R> (error: any): Promise<R>;
./node_modules/any-promise/index.d.ts:    then <U> (onFulfilled?: (value: R) => U | Thenable<U>, onRejected?: (error: any) => U | Thenable<U>): Thenable<U>;
./node_modules/any-promise/index.d.ts:    then <U> (onFulfilled?: (value: R) => U | Thenable<U>, onRejected?: (error: any) => void): Thenable<U>;
./node_modules/vite-node/dist/hmr.d.ts:type InferCustomEventPayload<T extends string> = T extends keyof CustomEventMap ? CustomEventMap[T] : any;
./node_modules/vite-node/dist/hmr.d.ts:	disposeMap: Map<string, (data: any) => void | Promise<void>>;
./node_modules/vite-node/dist/hmr.d.ts:	pruneMap: Map<string, (data: any) => void | Promise<void>>;
./node_modules/vite-node/dist/hmr.d.ts:	customListenersMap: Map<string, ((data: any) => void)[]>;
./node_modules/vite-node/dist/hmr.d.ts:	ctxToListenersMap: Map<string, Map<string, ((data: any) => void)[]>>;
./node_modules/vite-node/dist/utils.d.ts:declare function isPrimitive(v: any): boolean;
./node_modules/vite-node/dist/index.d-DGmxD2U7.d.ts:  data?: any
./node_modules/vite-node/dist/index.d-DGmxD2U7.d.ts:    [name: string]: any
./node_modules/vite-node/dist/index.d-DGmxD2U7.d.ts:  T extends keyof CustomEventMap ? CustomEventMap[T] : any
./node_modules/vite-node/dist/index.d-DGmxD2U7.d.ts:  readonly data: any
./node_modules/vite-node/dist/index.d-DGmxD2U7.d.ts:  dispose(cb: (data: any) => void): void
./node_modules/vite-node/dist/index.d-DGmxD2U7.d.ts:  prune(cb: (data: any) => void): void
./node_modules/vite-node/dist/index.d-DGmxD2U7.d.ts:	shouldInterop(path: string, mod: any): boolean;
./node_modules/vite-node/dist/index.d-DGmxD2U7.d.ts:	exports?: any;
./node_modules/precinct/node_modules/commander/typings/index.d.ts:  defaultValue?: any;
./node_modules/precinct/node_modules/commander/typings/index.d.ts:  defaultValue?: any;
./node_modules/precinct/node_modules/commander/typings/index.d.ts:  processedArgs: any[];
./node_modules/precinct/node_modules/commander/typings/index.d.ts:  action(fn: (...args: any[]) => void | Promise<void>): this;
./node_modules/precinct/node_modules/commander/typings/index.d.ts:  getOptionValue(key: string): any;
./node_modules/precinct/node_modules/commander/typings/index.d.ts:  on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/precinct/index.d.ts:    fileSystem?: any;
./node_modules/form-data/index.d.ts:  append(key: string, value: any, options?: FormData.AppendOptions | string): void;
./node_modules/form-data/index.d.ts:    [key: string]: any;
./node_modules/webpack-bundle-analyzer/node_modules/commander/typings/index.d.ts:    defaultValue?: any;
./node_modules/webpack-bundle-analyzer/node_modules/commander/typings/index.d.ts:    default(value: any, description?: string): this;
./node_modules/webpack-bundle-analyzer/node_modules/commander/typings/index.d.ts:    [key: string]: any;
./node_modules/webpack-bundle-analyzer/node_modules/commander/typings/index.d.ts:    action(fn: (...args: any[]) => void | Promise<void>): this;
./node_modules/webpack-bundle-analyzer/node_modules/commander/typings/index.d.ts:    on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/yaml/dist/nodes/toJS.d.ts:export declare function toJS(value: any, arg: string | null, ctx?: ToJSContext): any;
./node_modules/yaml/dist/nodes/YAMLMap.d.ts:    }): any;
./node_modules/yaml/dist/nodes/identity.d.ts:export declare const isAlias: (node: any) => node is Alias;
./node_modules/yaml/dist/nodes/identity.d.ts:export declare const isDocument: <T extends Node = Node>(node: any) => node is Document<T>;
./node_modules/yaml/dist/nodes/identity.d.ts:export declare const isMap: <K = unknown, V = unknown>(node: any) => node is YAMLMap<K, V>;
./node_modules/yaml/dist/nodes/identity.d.ts:export declare const isPair: <K = unknown, V = unknown>(node: any) => node is Pair<K, V>;
./node_modules/yaml/dist/nodes/identity.d.ts:export declare const isScalar: <T = unknown>(node: any) => node is Scalar<T>;
./node_modules/yaml/dist/nodes/identity.d.ts:export declare const isSeq: <T = unknown>(node: any) => node is YAMLSeq<T>;
./node_modules/yaml/dist/nodes/identity.d.ts:export declare function isCollection<K = unknown, V = unknown>(node: any): node is YAMLMap<K, V> | YAMLSeq<V>;
./node_modules/yaml/dist/nodes/identity.d.ts:export declare function isNode<T = unknown>(node: any): node is Node<T>;
./node_modules/yaml/dist/nodes/Node.d.ts:    [key: string]: any;
./node_modules/yaml/dist/nodes/Node.d.ts:    [key: number]: any;
./node_modules/yaml/dist/nodes/Node.d.ts:    abstract toJSON(): any;
./node_modules/yaml/dist/nodes/Node.d.ts:    toJS(doc: Document<Node, boolean>, { mapAsMap, maxAliasCount, onAnchor, reviver }?: ToJSOptions): any;
./node_modules/yaml/dist/nodes/Scalar.d.ts:    toJSON(arg?: any, ctx?: ToJSContext): any;
./node_modules/yaml/dist/log.d.ts:export declare function debug(logLevel: LogLevelId, ...messages: any[]): void;
./node_modules/yaml/dist/public-api.d.ts:export declare function parse(src: string, options?: ParseOptions & DocumentOptions & SchemaOptions & ToJSOptions): any;
./node_modules/yaml/dist/public-api.d.ts:export declare function parse(src: string, reviver: Reviver, options?: ParseOptions & DocumentOptions & SchemaOptions & ToJSOptions): any;
./node_modules/yaml/dist/public-api.d.ts:export declare function stringify(value: any, options?: DocumentOptions & SchemaOptions & ParseOptions & CreateNodeOptions & ToStringOptions): string;
./node_modules/yaml/dist/public-api.d.ts:export declare function stringify(value: any, replacer?: Replacer | null, options?: string | number | (DocumentOptions & SchemaOptions & ParseOptions & CreateNodeOptions & ToStringOptions)): string;
./node_modules/yaml/dist/schema/yaml-1.1/set.d.ts:    get(key: unknown, keepPair?: boolean): any;
./node_modules/yaml/dist/schema/yaml-1.1/set.d.ts:    toJSON(_?: unknown, ctx?: ToJSContext): any;
./node_modules/yaml/dist/doc/Document.d.ts:export type Replacer = any[] | ((key: any, value: any) => unknown);
./node_modules/yaml/dist/doc/Document.d.ts:    constructor(value?: any, options?: DocumentOptions & SchemaOptions & ParseOptions & CreateNodeOptions);
./node_modules/yaml/dist/doc/Document.d.ts:    constructor(value: any, replacer: null | Replacer, options?: DocumentOptions & SchemaOptions & ParseOptions & CreateNodeOptions);
./node_modules/yaml/dist/doc/Document.d.ts:    add(value: any): void;
./node_modules/yaml/dist/doc/Document.d.ts:    get(key: unknown, keepScalar?: boolean): Strict extends true ? unknown : any;
./node_modules/yaml/dist/doc/Document.d.ts:    getIn(path: Iterable<unknown> | null, keepScalar?: boolean): Strict extends true ? unknown : any;
./node_modules/yaml/dist/doc/Document.d.ts:    set(key: any, value: unknown): void;
./node_modules/yaml/dist/doc/Document.d.ts:    }): any;
./node_modules/yaml/dist/doc/Document.d.ts:    toJSON(jsonArg?: string | null, onAnchor?: ToJSOptions['onAnchor']): any;
./node_modules/yaml/dist/doc/applyReviver.d.ts:export declare function applyReviver(reviver: Reviver, obj: unknown, key: unknown, val: any): unknown;
./node_modules/thread-stream/index.d.ts:  workerData?: any,
./node_modules/thread-stream/index.d.ts:  emit(eventName: string | symbol, ...args: any[]): boolean;
./node_modules/thread-stream/index.d.ts:  emit(eventName: 'message', message: any, transferList?: workerThreads.TransferListItem[]): boolean
./node_modules/jest-snapshot/node_modules/pretty-format/build/index.d.ts:    val: any,
./node_modules/jest-snapshot/node_modules/pretty-format/build/index.d.ts:declare type Test = (arg0: any) => boolean;
./node_modules/ansi-escapes/node_modules/type-fest/source/async-return-type.d.ts:type AsyncFunction = (...args: any[]) => Promise<unknown>;
./node_modules/ansi-escapes/node_modules/type-fest/source/set-return-type.d.ts:export type SetReturnType<Fn extends (...args: any[]) => any, TypeToReturn> =
./node_modules/ansi-escapes/node_modules/type-fest/source/readonly-deep.d.ts:export type ReadonlyDeep<T> = T extends Primitive | ((...arguments: any[]) => unknown)
./node_modules/ansi-escapes/node_modules/type-fest/source/partial-deep.d.ts:	: T extends ((...arguments: any[]) => unknown)
./node_modules/ansi-escapes/node_modules/type-fest/source/asyncify.d.ts:export type Asyncify<Fn extends (...args: any[]) => any> = SetReturnType<Fn, Promise<PromiseValue<ReturnType<Fn>>>>;
./node_modules/jest-message-util/node_modules/pretty-format/build/index.d.ts:    val: any,
./node_modules/jest-message-util/node_modules/pretty-format/build/index.d.ts:declare type Test = (arg0: any) => boolean;
./node_modules/jest-validate/node_modules/pretty-format/build/index.d.ts:    val: any,
./node_modules/jest-validate/node_modules/pretty-format/build/index.d.ts:declare type Test = (arg0: any) => boolean;
./node_modules/@vitest/spy/dist/index.d.ts:	value: any;
./node_modules/@vitest/spy/dist/index.d.ts:	value: any;
./node_modules/@vitest/spy/dist/index.d.ts:type Procedure = (...args: any[]) => any;
./node_modules/@vitest/spy/dist/index.d.ts:type Classes<T> = { [K in keyof T] : T[K] extends new (...args: any[]) => any ? K : never }[keyof T] & (string | symbol);
./node_modules/@vitest/spy/dist/index.d.ts:	new (...args: any[]): any;
./node_modules/@vitest/spy/dist/index.d.ts:		prototype: any
./node_modules/@vitest/spy/dist/index.d.ts:declare function isMockFunction(fn: any): fn is MockInstance;
./node_modules/@vitest/snapshot/dist/rawSnapshot.d-lFsMJFUd.d.ts:	resolveSnapshotPath?: (path: string, extension: string, context?: any) => string;
./node_modules/@vitest/coverage-v8/node_modules/lru-cache/dist/esm/index.d.ts:        isBackgroundFetch: (p: any) => boolean;
./node_modules/@vitest/coverage-v8/node_modules/lru-cache/dist/esm/index.d.ts:        backgroundFetch: (k: K, index: number | undefined, options: LRUCache.FetchOptions<K, V, FC>, context: any) => BackgroundFetch<V>;
./node_modules/@vitest/coverage-v8/node_modules/lru-cache/dist/esm/index.d.ts:    forEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./node_modules/@vitest/coverage-v8/node_modules/lru-cache/dist/esm/index.d.ts:    rforEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./node_modules/@vitest/coverage-v8/node_modules/lru-cache/dist/commonjs/index.d.ts:        isBackgroundFetch: (p: any) => boolean;
./node_modules/@vitest/coverage-v8/node_modules/lru-cache/dist/commonjs/index.d.ts:        backgroundFetch: (k: K, index: number | undefined, options: LRUCache.FetchOptions<K, V, FC>, context: any) => BackgroundFetch<V>;
./node_modules/@vitest/coverage-v8/node_modules/lru-cache/dist/commonjs/index.d.ts:    forEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./node_modules/@vitest/coverage-v8/node_modules/lru-cache/dist/commonjs/index.d.ts:    rforEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./node_modules/@vitest/coverage-v8/node_modules/jackspeak/dist/esm/index.d.ts:export declare const isConfigOption: <T extends ConfigType, M extends boolean>(o: any, type: T, multi: M) => o is ConfigOptionBase<T, M>;
./node_modules/@vitest/coverage-v8/node_modules/jackspeak/dist/commonjs/index.d.ts:export declare const isConfigOption: <T extends ConfigType, M extends boolean>(o: any, type: T, multi: M) => o is ConfigOptionBase<T, M>;
./node_modules/@vitest/coverage-v8/node_modules/minimatch/dist/esm/index.d.ts:    debug(..._: any[]): void;
./node_modules/@vitest/coverage-v8/node_modules/minimatch/dist/esm/ast.d.ts:    toJSON(): any[];
./node_modules/@vitest/coverage-v8/node_modules/minimatch/dist/esm/assert-valid-pattern.d.ts:export declare const assertValidPattern: (pattern: any) => void;
./node_modules/@vitest/coverage-v8/node_modules/minimatch/dist/commonjs/index.d.ts:    debug(..._: any[]): void;
./node_modules/@vitest/coverage-v8/node_modules/minimatch/dist/commonjs/ast.d.ts:    toJSON(): any[];
./node_modules/@vitest/coverage-v8/node_modules/minimatch/dist/commonjs/assert-valid-pattern.d.ts:export declare const assertValidPattern: (pattern: any) => void;
./node_modules/@vitest/coverage-v8/node_modules/glob/dist/esm/walker.d.ts:    walkCB2(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./node_modules/@vitest/coverage-v8/node_modules/glob/dist/esm/walker.d.ts:    walkCB2Sync(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./node_modules/@vitest/coverage-v8/node_modules/glob/dist/commonjs/walker.d.ts:    walkCB2(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./node_modules/@vitest/coverage-v8/node_modules/glob/dist/commonjs/walker.d.ts:    walkCB2Sync(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./node_modules/@vitest/coverage-v8/node_modules/path-scurry/dist/esm/index.d.ts:        [k: string]: any;
./node_modules/@vitest/coverage-v8/node_modules/path-scurry/dist/esm/index.d.ts:    [k: string]: any;
./node_modules/@vitest/coverage-v8/node_modules/path-scurry/dist/esm/index.d.ts:        [k: string]: any;
./node_modules/@vitest/coverage-v8/node_modules/path-scurry/dist/esm/index.d.ts:    [k: string]: any;
./node_modules/@vitest/coverage-v8/node_modules/path-scurry/dist/commonjs/index.d.ts:        [k: string]: any;
./node_modules/@vitest/coverage-v8/node_modules/path-scurry/dist/commonjs/index.d.ts:    [k: string]: any;
./node_modules/@vitest/coverage-v8/node_modules/path-scurry/dist/commonjs/index.d.ts:        [k: string]: any;
./node_modules/@vitest/coverage-v8/node_modules/path-scurry/dist/commonjs/index.d.ts:    [k: string]: any;
./node_modules/@vitest/runner/dist/tasks.d-CkscK4of.d.ts:	value: any;
./node_modules/@vitest/runner/dist/tasks.d-CkscK4of.d.ts:	F extends (...args: any) => any,
./node_modules/@vitest/runner/dist/tasks.d-CkscK4of.d.ts:type DoneCallback = (error?: any) => void;
./node_modules/@vitest/runner/dist/tasks.d-CkscK4of.d.ts:	fallback: Array<T extends ReadonlyArray<infer U> ? U : any>
./node_modules/@vitest/runner/dist/tasks.d-CkscK4of.d.ts:	(strings: TemplateStringsArray, ...values: any[]): TestForFunctionReturn<any, TestContext & ExtraContext>;
./node_modules/@vitest/runner/dist/tasks.d-CkscK4of.d.ts:	skipIf: (condition: any) => ChainableTestAPI<ExtraContext>;
./node_modules/@vitest/runner/dist/tasks.d-CkscK4of.d.ts:	runIf: (condition: any) => ChainableTestAPI<ExtraContext>;
./node_modules/@vitest/runner/dist/tasks.d-CkscK4of.d.ts:> = ((...args: any) => any) extends T[K] ? T[K] extends any ? FixtureFn<T, K, Omit<ExtraContext, Exclude<keyof T, K>>> : never : T[K] | (T[K] extends any ? FixtureFn<T, K, Omit<ExtraContext, Exclude<keyof T, K>>> : never);
./node_modules/@vitest/runner/dist/tasks.d-CkscK4of.d.ts:	skipIf: (condition: any) => ChainableSuiteAPI<ExtraContext>
./node_modules/@vitest/runner/dist/tasks.d-CkscK4of.d.ts:	runIf: (condition: any) => ChainableSuiteAPI<ExtraContext>
./node_modules/@vitest/runner/dist/index.d.ts:declare function createTaskCollector(fn: (...args: any[]) => any, context?: Record<string, unknown>): TestAPI;
./node_modules/@vitest/utils/dist/diff.d.ts:declare function diff(a: any, b: any, options?: DiffOptions): string | undefined;
./node_modules/@vitest/utils/dist/diff.d.ts:declare function replaceAsymmetricMatcher(actual: any, expected: any, actualReplaced?: WeakSet<WeakKey>, expectedReplaced?: WeakSet<WeakKey>): {
./node_modules/@vitest/utils/dist/diff.d.ts:	replacedActual: any
./node_modules/@vitest/utils/dist/diff.d.ts:	replacedExpected: any
./node_modules/@vitest/utils/dist/error.d.ts:declare function serializeValue(val: any, seen?: WeakMap<WeakKey, any>): any;
./node_modules/@vitest/utils/dist/error.d.ts:declare function processError(_err: any, diffOptions?: DiffOptions, seen?: WeakSet<WeakKey>): any;
./node_modules/@vitest/utils/dist/types.d.ts:	new (...args: any[]): any;
./node_modules/@vitest/utils/dist/types.d.ts:	actual?: any;
./node_modules/@vitest/utils/dist/types.d.ts:	expected?: any;
./node_modules/@vitest/utils/dist/helpers.d.ts:declare function getOwnProperties(obj: any): (string | symbol)[];
./node_modules/@vitest/utils/dist/helpers.d.ts:declare function objectAttr(source: any, path: string, defaultValue?: undefined): any;
./node_modules/@vitest/utils/dist/helpers.d.ts:	reject: (reason?: any) => void
./node_modules/@vitest/utils/dist/helpers.d.ts:declare function deepMerge<T extends object = object>(target: T, ...sources: any[]): T;
./node_modules/@vitest/browser/dist/locators/index.d.ts:    query(context: QueryContext, s: any): Element[];
./node_modules/@vitest/browser/dist/locators/index.d.ts:	protected triggerCommand<T>(command: string, ...args: any[]): Promise<T>;
./node_modules/@vitest/browser/dist/index.d.ts:type ReturnType<T> = T extends (...args: any) => infer R ? R : never;
./node_modules/@vitest/mocker/dist/mocker.d-Ce9_ySj5.d.ts:	constructor(interceptor: ModuleMockerInterceptor, rpc: ModuleMockerRPC, spyOn: (obj: any, method: string | symbol) => any, config: ModuleMockerConfig);
./node_modules/@vitest/mocker/dist/mocker.d-Ce9_ySj5.d.ts:	getFactoryModule(id: string): any;
./node_modules/@vitest/mocker/dist/index.d.ts:	spyOn: (obj: any, prop: Key) => any;
./node_modules/@vitest/pretty-format/dist/index.d.ts:type Test = (arg0: any) => boolean;
./node_modules/@vitest/pretty-format/dist/index.d.ts:	serialize: (val: any, config: Config, indentation: string, depth: number, refs: Refs, printer: Printer) => string;
./node_modules/@vitest/expect/dist/index.d.ts:	getPrototype(obj: object): any;
./node_modules/@vitest/expect/dist/index.d.ts:	asymmetricMatch(other: any): boolean;
./node_modules/@vitest/expect/dist/index.d.ts:type Tester = (this: TesterContext, a: any, b: any, customTesters: Array<Tester>) => boolean | undefined;
./node_modules/@vitest/expect/dist/index.d.ts:	actual?: any;
./node_modules/@vitest/expect/dist/index.d.ts:	expected?: any;
./node_modules/@vitest/expect/dist/index.d.ts:	(this: T, received: any, ...expected: E): ExpectationResult;
./node_modules/@vitest/expect/dist/index.d.ts:	toSatisfy: (matcher: (value: any) => boolean, message?: string) => any;
./node_modules/@vitest/expect/dist/index.d.ts:> = { [K in keyof A] : A[K] extends Chai.Assertion ? Assertion<T> : A[K] extends (...args: any[]) => any ? A[K] : VitestAssertion<A[K], T> } & ((type: string, message?: string) => Assertion);
./node_modules/@vitest/expect/dist/index.d.ts:declare function isAsymmetric(obj: any): boolean;
./node_modules/@vitest/expect/dist/index.d.ts:declare function hasAsymmetric(obj: any, seen?: Set<any>): boolean;
./node_modules/@vitest/expect/dist/index.d.ts:declare function isImmutableUnorderedKeyed(maybeKeyed: any): boolean;
./node_modules/@vitest/expect/dist/index.d.ts:declare function isImmutableUnorderedSet(maybeSet: any): boolean;
./node_modules/@vitest/expect/dist/index.d.ts:declare function iterableEquality(a: any, b: any, customTesters?: Array<Tester>, aStack?: Array<any>, bStack?: Array<any>): boolean | undefined;
./node_modules/@vitest/expect/dist/index.d.ts:declare function typeEquality(a: any, b: any): boolean | undefined;
./node_modules/@vitest/expect/dist/index.d.ts:declare function getObjectSubset(object: any, subset: any, customTesters: Array<Tester>): {
./node_modules/@vitest/expect/dist/index.d.ts:	subset: any
./node_modules/event-target-shim/index.d.ts:    readonly srcElement: any | null
./node_modules/event-target-shim/index.d.ts:        [key: string]: any
./node_modules/glob/dist/esm/walker.d.ts:    walkCB2(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./node_modules/glob/dist/esm/walker.d.ts:    walkCB2Sync(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./node_modules/glob/dist/commonjs/walker.d.ts:    walkCB2(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./node_modules/glob/dist/commonjs/walker.d.ts:    walkCB2Sync(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./node_modules/glob/node_modules/minimatch/dist/esm/index.d.ts:    debug(..._: any[]): void;
./node_modules/glob/node_modules/minimatch/dist/esm/ast.d.ts:    toJSON(): any[];
./node_modules/glob/node_modules/minimatch/dist/esm/assert-valid-pattern.d.ts:export declare const assertValidPattern: (pattern: any) => void;
./node_modules/glob/node_modules/minimatch/dist/commonjs/index.d.ts:    debug(..._: any[]): void;
./node_modules/glob/node_modules/minimatch/dist/commonjs/ast.d.ts:    toJSON(): any[];
./node_modules/glob/node_modules/minimatch/dist/commonjs/assert-valid-pattern.d.ts:export declare const assertValidPattern: (pattern: any) => void;
./node_modules/@react-aria/interactions/src/usePress.ts:  activePointerId: any,
./node_modules/@react-aria/utils/dist/types.d.ts:export function chain(...callbacks: any[]): (...args: any[]) => void;
./node_modules/@react-aria/utils/dist/types.d.ts:    [key: string]: any;
./node_modules/@react-aria/utils/dist/types.d.ts:export function useUpdateEffect(effect: EffectCallback, dependencies: any[]): void;
./node_modules/@react-aria/utils/dist/types.d.ts:export function useUpdateLayoutEffect(effect: EffectCallback, dependencies: any[]): void;
./node_modules/@react-aria/utils/dist/types.d.ts:    items?: any;
./node_modules/@react-aria/utils/src/useUpdateLayoutEffect.ts:export function useUpdateLayoutEffect(effect: EffectCallback, dependencies: any[]): void {
./node_modules/@react-aria/utils/src/useLoadMore.ts:  items?: any
./node_modules/@react-aria/utils/src/chain.ts:export function chain(...callbacks: any[]): (...args: any[]) => void {
./node_modules/@react-aria/utils/src/chain.ts:  return (...args: any[]) => {
./node_modules/@react-aria/utils/src/mergeProps.ts:  [key: string]: any
./node_modules/@react-aria/utils/src/useUpdateEffect.ts:export function useUpdateEffect(effect: EffectCallback, dependencies: any[]): void {
./node_modules/@sinonjs/commons/types/value-to-string.d.ts:declare function valueToString(value: any): string;
./node_modules/@sinonjs/commons/types/called-in-order.d.ts:declare function calledInOrder(spies: SinonProxy[] | SinonProxy, ...args: any[]): boolean;
./node_modules/@sinonjs/commons/types/prototypes/function.d.ts:declare const _exports: any;
./node_modules/@sinonjs/commons/types/prototypes/set.d.ts:declare const _exports: any;
./node_modules/@sinonjs/commons/types/prototypes/copy-prototype-methods.d.ts:declare function _exports(prototype: any): any;
./node_modules/@sinonjs/commons/types/prototypes/array.d.ts:declare const _exports: any;
./node_modules/@sinonjs/commons/types/prototypes/string.d.ts:declare const _exports: any;
./node_modules/@sinonjs/commons/types/prototypes/object.d.ts:declare const _exports: any;
./node_modules/@sinonjs/commons/types/prototypes/index.d.ts:export declare const array: any;
./node_modules/@sinonjs/commons/types/prototypes/index.d.ts:declare const _function: any;
./node_modules/@sinonjs/commons/types/prototypes/index.d.ts:export declare const map: any;
./node_modules/@sinonjs/commons/types/prototypes/index.d.ts:export declare const object: any;
./node_modules/@sinonjs/commons/types/prototypes/index.d.ts:export declare const set: any;
./node_modules/@sinonjs/commons/types/prototypes/index.d.ts:export declare const string: any;
./node_modules/@sinonjs/commons/types/prototypes/map.d.ts:declare const _exports: any;
./node_modules/@sinonjs/commons/types/type-of.d.ts:declare function _exports(value: any): string;
./node_modules/@sinonjs/commons/types/index.d.ts:export const global: any;
./node_modules/@sinonjs/commons/types/index.d.ts:export const every: (obj: any, fn: Function) => boolean;
./node_modules/@sinonjs/commons/types/index.d.ts:    array: any;
./node_modules/@sinonjs/commons/types/index.d.ts:    function: any;
./node_modules/@sinonjs/commons/types/index.d.ts:    map: any;
./node_modules/@sinonjs/commons/types/index.d.ts:    object: any;
./node_modules/@sinonjs/commons/types/index.d.ts:    set: any;
./node_modules/@sinonjs/commons/types/index.d.ts:    string: any;
./node_modules/@sinonjs/commons/types/index.d.ts:export const typeOf: (value: any) => string;
./node_modules/zustand/middleware/immer.d.ts:type SetStateType<T extends unknown[]> = Exclude<T[0], (...args: any[]) => any>;
./node_modules/zustand/middleware/devtools.d.ts:    connect: (param: any) => any;
./node_modules/dayjs/esm/plugin/isMoment/index.d.ts:  export function isMoment(input: any): boolean
./node_modules/dayjs/esm/plugin/duration/index.d.ts:  export function isDuration(d: any): d is plugin.Duration
./node_modules/dayjs/esm/index.d.ts:  export function isDayjs(d: any): d is Dayjs
./node_modules/dayjs/plugin/isMoment.d.ts:  export function isMoment(input: any): boolean
./node_modules/dayjs/plugin/duration.d.ts:  export function isDuration(d: any): d is plugin.Duration
./node_modules/dayjs/index.d.ts:  export function isDayjs(d: any): d is Dayjs
./node_modules/@pdf-lib/upng/index.d.ts:  plte: any[];
./node_modules/source-map/source-map.d.ts:    eachMapping(callback: (mapping: MappingItem) => void, context?: any, order?: number): void;
./node_modules/@deno/eszip/esm/eszip_wasm.generated.d.ts:export function build(roots: any, loader: Function, import_map_url: any): Promise<Uint8Array>;
./node_modules/@deno/eszip/esm/eszip_wasm.generated.d.ts:export function instantiate(opts: any): Promise<{
./node_modules/@deno/eszip/esm/eszip_wasm.generated.d.ts:export function instantiateWithInstance(opts: any): Promise<{
./node_modules/@deno/eszip/esm/eszip_wasm.generated.d.ts:    instance: any;
./node_modules/@deno/eszip/esm/eszip_wasm.generated.d.ts:export function cacheToLocalDir(url: any, decompress: any): Promise<any>;
./node_modules/@deno/eszip/esm/eszip_wasm.generated.d.ts:export function fetchWithRetries(url: any, maxRetries?: number): Promise<dntShim.Response>;
./node_modules/@deno/eszip/esm/deps/jsr.io/@deno/graph/0.69.10/deno_graph_wasm.generated.d.ts:export function createGraph(roots: any, load: Function, maybe_default_jsx_import_source: string | undefined, maybe_jsx_import_source_module: string | undefined, maybe_cache_info: Function | undefined, maybe_resolve: Function | undefined, maybe_resolve_types: Function | undefined, maybe_graph_kind: string | undefined, maybe_imports: any): Promise<any>;
./node_modules/@deno/eszip/esm/deps/jsr.io/@deno/graph/0.69.10/deno_graph_wasm.generated.d.ts:export function parseModule(specifier: string, maybe_headers: any, maybe_default_jsx_import_source: string | undefined, maybe_jsx_import_source_module: string | undefined, content: Uint8Array, maybe_resolve?: Function | undefined, maybe_resolve_types?: Function | undefined): any;
./node_modules/@deno/eszip/esm/deps/jsr.io/@deno/graph/0.69.10/deno_graph_wasm.generated.d.ts:export function instantiate(opts: any): Promise<{
./node_modules/@deno/eszip/esm/deps/jsr.io/@deno/graph/0.69.10/deno_graph_wasm.generated.d.ts:export function instantiateWithInstance(opts: any): Promise<{
./node_modules/@deno/eszip/esm/deps/jsr.io/@deno/graph/0.69.10/deno_graph_wasm.generated.d.ts:    instance: any;
./node_modules/@deno/eszip/esm/deps/jsr.io/@deno/graph/0.69.10/deno_graph_wasm.generated.d.ts:export function cacheToLocalDir(url: any, decompress: any): Promise<any>;
./node_modules/@deno/eszip/esm/deps/jsr.io/@deno/graph/0.69.10/deno_graph_wasm.generated.d.ts:export function fetchWithRetries(url: any, maxRetries?: number): Promise<dntShim.Response>;
./node_modules/@deno/eszip/esm/deps/jsr.io/@deno/cache-dir/0.8.0/lib/snippets/deno_cache_dir-df240379fab164a9/fs.d.ts:export function read_file_bytes(path: any): Uint8Array | undefined;
./node_modules/@deno/eszip/esm/deps/jsr.io/@deno/cache-dir/0.8.0/lib/snippets/deno_cache_dir-df240379fab164a9/fs.d.ts:export function atomic_write_file(path: any, bytes: any): void;
./node_modules/@deno/eszip/esm/deps/jsr.io/@deno/cache-dir/0.8.0/lib/snippets/deno_cache_dir-df240379fab164a9/fs.d.ts:export function modified_time(path: any): number | undefined;
./node_modules/@deno/eszip/esm/deps/jsr.io/@deno/cache-dir/0.8.0/lib/snippets/deno_cache_dir-df240379fab164a9/fs.d.ts:export function is_file(path: any): boolean;
./node_modules/@deno/eszip/esm/deps/jsr.io/@deno/cache-dir/0.8.0/lib/deno_cache_dir.generated.d.ts:export function instantiate(): any;
./node_modules/@deno/eszip/esm/deps/jsr.io/@deno/cache-dir/0.8.0/lib/deno_cache_dir.generated.d.ts:export function instantiateWithInstance(): any;
./node_modules/@deno/eszip/esm/deps/jsr.io/@deno/cache-dir/0.8.0/lib/deno_cache_dir.generated.d.ts:    static __wrap(ptr: any): any;
./node_modules/@deno/eszip/esm/deps/jsr.io/@deno/cache-dir/0.8.0/lib/deno_cache_dir.generated.d.ts:    getHeaders(url: string): any;
./node_modules/@deno/eszip/esm/deps/jsr.io/@deno/cache-dir/0.8.0/lib/deno_cache_dir.generated.d.ts:    getFileBytes(url: string, maybe_checksum: string | undefined, allow_global_to_local_copy: boolean): any;
./node_modules/@deno/eszip/esm/deps/jsr.io/@deno/cache-dir/0.8.0/lib/deno_cache_dir.generated.d.ts:    set(url: string, headers: any, text: Uint8Array): void;
./node_modules/@deno/eszip/esm/deps/jsr.io/@deno/cache-dir/0.8.0/lib/deno_cache_dir.generated.d.ts:    static __wrap(ptr: any): any;
./node_modules/@deno/eszip/esm/deps/jsr.io/@deno/cache-dir/0.8.0/lib/deno_cache_dir.generated.d.ts:    getHeaders(url: string): any;
./node_modules/@deno/eszip/esm/deps/jsr.io/@deno/cache-dir/0.8.0/lib/deno_cache_dir.generated.d.ts:    getFileBytes(url: string, maybe_checksum: string | undefined, allow_global_to_local_copy: boolean): any;
./node_modules/@deno/eszip/esm/deps/jsr.io/@deno/cache-dir/0.8.0/lib/deno_cache_dir.generated.d.ts:    set(url: string, headers: any, text: Uint8Array): void;
./node_modules/@deno/shim-deno/dist/index.d.ts:    return?(value?: any): Promise<IteratorResult<FsEvent>>;
./node_modules/pretty-format/build/types.d.ts:declare type Test = (arg0: any) => boolean;
./node_modules/pretty-format/build/types.d.ts:    serialize: (val: any, config: Config, indentation: string, depth: number, refs: Refs, printer: Printer) => string;
./node_modules/@next/bundle-analyzer/node_modules/commander/typings/index.d.ts:    defaultValue?: any;
./node_modules/@next/bundle-analyzer/node_modules/commander/typings/index.d.ts:    default(value: any, description?: string): this;
./node_modules/@next/bundle-analyzer/node_modules/commander/typings/index.d.ts:    [key: string]: any;
./node_modules/@next/bundle-analyzer/node_modules/commander/typings/index.d.ts:    action(fn: (...args: any[]) => void | Promise<void>): this;
./node_modules/@next/bundle-analyzer/node_modules/commander/typings/index.d.ts:    on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@next/env/dist/index.d.ts:    info: (...args: any[]) => void;
./node_modules/@next/env/dist/index.d.ts:    error: (...args: any[]) => void;
./node_modules/jest-each/node_modules/pretty-format/build/index.d.ts:    val: any,
./node_modules/jest-each/node_modules/pretty-format/build/index.d.ts:declare type Test = (arg0: any) => boolean;
./node_modules/jest-each/build/index.d.ts:      ): any;
./node_modules/jest-each/build/index.d.ts:      skip: any;
./node_modules/jest-each/build/index.d.ts:      only: any;
./node_modules/jest-each/build/index.d.ts:    fdescribe: any;
./node_modules/jest-each/build/index.d.ts:    fit: any;
./node_modules/jest-each/build/index.d.ts:      ): any;
./node_modules/jest-each/build/index.d.ts:      skip: any;
./node_modules/jest-each/build/index.d.ts:      only: any;
./node_modules/jest-each/build/index.d.ts:        ): any;
./node_modules/jest-each/build/index.d.ts:        only: any;
./node_modules/jest-each/build/index.d.ts:        skip: any;
./node_modules/jest-each/build/index.d.ts:      ): any;
./node_modules/jest-each/build/index.d.ts:      skip: any;
./node_modules/jest-each/build/index.d.ts:      only: any;
./node_modules/jest-each/build/index.d.ts:        ): any;
./node_modules/jest-each/build/index.d.ts:        only: any;
./node_modules/jest-each/build/index.d.ts:        skip: any;
./node_modules/jest-each/build/index.d.ts:    xdescribe: any;
./node_modules/jest-each/build/index.d.ts:    xit: any;
./node_modules/jest-each/build/index.d.ts:    xtest: any;
./node_modules/jest-each/build/index.d.ts:    ): any;
./node_modules/jest-each/build/index.d.ts:    skip: any;
./node_modules/jest-each/build/index.d.ts:    only: any;
./node_modules/jest-each/build/index.d.ts:  fdescribe: any;
./node_modules/jest-each/build/index.d.ts:  fit: any;
./node_modules/jest-each/build/index.d.ts:    ): any;
./node_modules/jest-each/build/index.d.ts:    skip: any;
./node_modules/jest-each/build/index.d.ts:    only: any;
./node_modules/jest-each/build/index.d.ts:      ): any;
./node_modules/jest-each/build/index.d.ts:      only: any;
./node_modules/jest-each/build/index.d.ts:      skip: any;
./node_modules/jest-each/build/index.d.ts:    ): any;
./node_modules/jest-each/build/index.d.ts:    skip: any;
./node_modules/jest-each/build/index.d.ts:    only: any;
./node_modules/jest-each/build/index.d.ts:      ): any;
./node_modules/jest-each/build/index.d.ts:      only: any;
./node_modules/jest-each/build/index.d.ts:      skip: any;
./node_modules/jest-each/build/index.d.ts:  xdescribe: any;
./node_modules/jest-each/build/index.d.ts:  xit: any;
./node_modules/jest-each/build/index.d.ts:  xtest: any;
./node_modules/fast-equals/dist/esm/types/equals.d.ts:export declare function areArraysEqual(a: any[], b: any[], state: State<any>): boolean;
./node_modules/fast-equals/dist/esm/types/equals.d.ts:export declare function areFunctionsEqual(a: (...args: any[]) => any, b: (...args: any[]) => any): boolean;
./node_modules/fast-equals/dist/esm/types/utils.d.ts:export declare function sameValueZeroEqual(a: any, b: any): boolean;
./node_modules/fast-equals/dist/esm/types/internalTypes.d.ts:    set(key: Key, value: any): any;
./node_modules/fast-equals/dist/esm/types/internalTypes.d.ts:    $$typeof?: any;
./node_modules/fast-equals/dist/esm/types/internalTypes.d.ts:export type AnyEqualityComparator<Meta> = (a: any, b: any, state: State<Meta>) => boolean;
./node_modules/fast-equals/dist/esm/types/internalTypes.d.ts:export type InternalEqualityComparator<Meta> = (a: any, b: any, indexOrKeyA: any, indexOrKeyB: any, parentA: any, parentB: any, state: State<Meta>) => boolean;
./node_modules/fast-equals/dist/umd/types/equals.d.ts:export declare function areArraysEqual(a: any[], b: any[], state: State<any>): boolean;
./node_modules/fast-equals/dist/umd/types/equals.d.ts:export declare function areFunctionsEqual(a: (...args: any[]) => any, b: (...args: any[]) => any): boolean;
./node_modules/fast-equals/dist/umd/types/utils.d.ts:export declare function sameValueZeroEqual(a: any, b: any): boolean;
./node_modules/fast-equals/dist/umd/types/internalTypes.d.ts:    set(key: Key, value: any): any;
./node_modules/fast-equals/dist/umd/types/internalTypes.d.ts:    $$typeof?: any;
./node_modules/fast-equals/dist/umd/types/internalTypes.d.ts:export type AnyEqualityComparator<Meta> = (a: any, b: any, state: State<Meta>) => boolean;
./node_modules/fast-equals/dist/umd/types/internalTypes.d.ts:export type InternalEqualityComparator<Meta> = (a: any, b: any, indexOrKeyA: any, indexOrKeyB: any, parentA: any, parentB: any, state: State<Meta>) => boolean;
./node_modules/fast-equals/dist/min/types/equals.d.ts:export declare function areArraysEqual(a: any[], b: any[], state: State<any>): boolean;
./node_modules/fast-equals/dist/min/types/equals.d.ts:export declare function areFunctionsEqual(a: (...args: any[]) => any, b: (...args: any[]) => any): boolean;
./node_modules/fast-equals/dist/min/types/utils.d.ts:export declare function sameValueZeroEqual(a: any, b: any): boolean;
./node_modules/fast-equals/dist/min/types/internalTypes.d.ts:    set(key: Key, value: any): any;
./node_modules/fast-equals/dist/min/types/internalTypes.d.ts:    $$typeof?: any;
./node_modules/fast-equals/dist/min/types/internalTypes.d.ts:export type AnyEqualityComparator<Meta> = (a: any, b: any, state: State<Meta>) => boolean;
./node_modules/fast-equals/dist/min/types/internalTypes.d.ts:export type InternalEqualityComparator<Meta> = (a: any, b: any, indexOrKeyA: any, indexOrKeyB: any, parentA: any, parentB: any, state: State<Meta>) => boolean;
./node_modules/fast-equals/dist/cjs/types/equals.d.ts:export declare function areArraysEqual(a: any[], b: any[], state: State<any>): boolean;
./node_modules/fast-equals/dist/cjs/types/equals.d.ts:export declare function areFunctionsEqual(a: (...args: any[]) => any, b: (...args: any[]) => any): boolean;
./node_modules/fast-equals/dist/cjs/types/utils.d.ts:export declare function sameValueZeroEqual(a: any, b: any): boolean;
./node_modules/fast-equals/dist/cjs/types/internalTypes.d.ts:    set(key: Key, value: any): any;
./node_modules/fast-equals/dist/cjs/types/internalTypes.d.ts:    $$typeof?: any;
./node_modules/fast-equals/dist/cjs/types/internalTypes.d.ts:export type AnyEqualityComparator<Meta> = (a: any, b: any, state: State<Meta>) => boolean;
./node_modules/fast-equals/dist/cjs/types/internalTypes.d.ts:export type InternalEqualityComparator<Meta> = (a: any, b: any, indexOrKeyA: any, indexOrKeyB: any, parentA: any, parentB: any, state: State<Meta>) => boolean;
./node_modules/fast-equals/index.d.ts:  set(key: Key, value: any): any;
./node_modules/fast-equals/index.d.ts:  $$typeof?: any;
./node_modules/fast-equals/index.d.ts:  a: any,
./node_modules/fast-equals/index.d.ts:  b: any,
./node_modules/fast-equals/index.d.ts:  a: any,
./node_modules/fast-equals/index.d.ts:  b: any,
./node_modules/fast-equals/index.d.ts:  indexOrKeyA: any,
./node_modules/fast-equals/index.d.ts:  indexOrKeyB: any,
./node_modules/fast-equals/index.d.ts:  parentA: any,
./node_modules/fast-equals/index.d.ts:  parentB: any,
./node_modules/fast-equals/src/utils.ts:    a: any,
./node_modules/fast-equals/src/utils.ts:    b: any,
./node_modules/fast-equals/src/utils.ts:export function sameValueZeroEqual(a: any, b: any): boolean {
./node_modules/fast-equals/src/comparator.ts:  return function comparator(a: any, b: any, state: State<Meta>): boolean {
./node_modules/fast-equals/src/comparator.ts:    a: any,
./node_modules/fast-equals/src/comparator.ts:    b: any,
./node_modules/fast-equals/src/comparator.ts:    _indexOrKeyA: any,
./node_modules/fast-equals/src/comparator.ts:    _indexOrKeyB: any,
./node_modules/fast-equals/src/comparator.ts:    _parentA: any,
./node_modules/fast-equals/src/comparator.ts:    _parentB: any,
./node_modules/fast-equals/src/internalTypes.ts:  set(key: Key, value: any): any;
./node_modules/fast-equals/src/internalTypes.ts:  $$typeof?: any;
./node_modules/fast-equals/src/internalTypes.ts:  a: any,
./node_modules/fast-equals/src/internalTypes.ts:  b: any,
./node_modules/fast-equals/src/internalTypes.ts:  a: any,
./node_modules/fast-equals/src/internalTypes.ts:  b: any,
./node_modules/fast-equals/src/internalTypes.ts:  indexOrKeyA: any,
./node_modules/fast-equals/src/internalTypes.ts:  indexOrKeyB: any,
./node_modules/fast-equals/src/internalTypes.ts:  parentA: any,
./node_modules/fast-equals/src/internalTypes.ts:  parentB: any,
./node_modules/fast-equals/src/equals.ts:export function areArraysEqual(a: any[], b: any[], state: State<any>) {
./node_modules/fast-equals/src/equals.ts:  a: (...args: any[]) => any,
./node_modules/fast-equals/src/equals.ts:  b: (...args: any[]) => any,
./node_modules/jest-mock/build/index.d.ts:  new (...args: any): any;
./node_modules/jest-mock/build/index.d.ts:export declare type FunctionLike = (...args: any) => any;
./node_modules/@floating-ui/core/dist/floating-ui.core.d.ts:    element: any;
./node_modules/@floating-ui/core/dist/floating-ui.core.d.ts:    options: any;
./node_modules/@floating-ui/core/dist/floating-ui.core.d.ts:    options?: any;
./node_modules/@floating-ui/core/dist/floating-ui.core.d.ts:    [key: string]: any;
./node_modules/@floating-ui/core/dist/floating-ui.core.d.ts:        [key: string]: any;
./node_modules/@floating-ui/core/dist/floating-ui.core.d.ts:        element: any;
./node_modules/@floating-ui/core/dist/floating-ui.core.d.ts:    getDimensions: (element: any) => Promisable<Dimensions>;
./node_modules/@floating-ui/core/dist/floating-ui.core.d.ts:        offsetParent: any;
./node_modules/@floating-ui/core/dist/floating-ui.core.d.ts:    getOffsetParent?: (element: any) => Promisable<any>;
./node_modules/@floating-ui/core/dist/floating-ui.core.d.ts:    isElement?: (value: any) => Promisable<boolean>;
./node_modules/@floating-ui/core/dist/floating-ui.core.d.ts:    getDocumentElement?: (element: any) => Promisable<any>;
./node_modules/@floating-ui/core/dist/floating-ui.core.d.ts:    getClientRects?: (element: any) => Promisable<Array<ClientRectObject>>;
./node_modules/@floating-ui/core/dist/floating-ui.core.d.ts:    isRTL?: (element: any) => Promisable<boolean>;
./node_modules/@floating-ui/core/dist/floating-ui.core.d.ts:    getScale?: (element: any) => Promisable<{
./node_modules/@floating-ui/core/dist/floating-ui.core.d.ts:        options?: any;
./node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.d.ts:export declare function getWindow(node: any): typeof window;
./node_modules/@floating-ui/utils/dist/floating-ui.utils.d.ts:    contextElement?: any;
./node_modules/@floating-ui/utils/dom/floating-ui.utils.dom.d.ts:export declare function getWindow(node: any): typeof window;
./node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.d.ts:    options: any;
./node_modules/@floating-ui/dom/dist/floating-ui.dom.d.ts:    options: any;
./node_modules/puppeteer-core/lib/esm/puppeteer/cdp/CdpSession.d.ts:            data: any;
./node_modules/puppeteer-core/lib/esm/puppeteer/cdp/CdpSession.d.ts:        result?: any;
./node_modules/puppeteer-core/lib/esm/puppeteer/cdp/utils.d.ts:export declare function valueFromRemoteObject(remoteObject: Protocol.Runtime.RemoteObject): any;
./node_modules/puppeteer-core/lib/esm/puppeteer/util/ErrorLike.d.ts:        data: any;
./node_modules/puppeteer-core/lib/esm/puppeteer/util/decorators.d.ts:export declare function throwIfDisposed<This extends Disposed>(message?: (value: This) => string): (target: (this: This, ...args: any[]) => any, _: unknown) => (this: This, ...args: any[]) => any;
./node_modules/puppeteer-core/lib/esm/puppeteer/util/decorators.d.ts:export declare function inertIfDisposed<This extends Disposed>(target: (this: This, ...args: any[]) => any, _: unknown): (this: This, ...args: any[]) => any;
./node_modules/puppeteer-core/lib/esm/puppeteer/util/decorators.d.ts:export declare function invokeAtMostOnceForArguments(target: (this: unknown, ...args: any[]) => any, _: unknown): typeof target;
./node_modules/puppeteer-core/lib/esm/puppeteer/util/decorators.d.ts:export declare function guarded<T extends object>(getKey?: (this: T) => object): (target: (this: T, ...args: any[]) => Promise<any>, _: ClassMethodDecoratorContext<T>) => typeof target;
./node_modules/puppeteer-core/lib/esm/puppeteer/bidi/Deserializer.d.ts:    static deserialize(result: Bidi.Script.RemoteValue): any;
./node_modules/puppeteer-core/lib/esm/puppeteer/api/ElementHandle.d.ts:export declare function bindIsolatedHandle<This extends ElementHandle<Node>>(target: (this: This, ...args: any[]) => Promise<any>, _: unknown): typeof target;
./node_modules/puppeteer-core/lib/esm/puppeteer/api/Frame.d.ts:export declare const throwIfDetached: (target: (this: Frame, ...args: any[]) => any, _: unknown) => (this: Frame, ...args: any[]) => any;
./node_modules/puppeteer-core/lib/cjs/puppeteer/cdp/CdpSession.d.ts:            data: any;
./node_modules/puppeteer-core/lib/cjs/puppeteer/cdp/CdpSession.d.ts:        result?: any;
./node_modules/puppeteer-core/lib/cjs/puppeteer/cdp/utils.d.ts:export declare function valueFromRemoteObject(remoteObject: Protocol.Runtime.RemoteObject): any;
./node_modules/puppeteer-core/lib/cjs/puppeteer/util/ErrorLike.d.ts:        data: any;
./node_modules/puppeteer-core/lib/cjs/puppeteer/util/decorators.d.ts:export declare function throwIfDisposed<This extends Disposed>(message?: (value: This) => string): (target: (this: This, ...args: any[]) => any, _: unknown) => (this: This, ...args: any[]) => any;
./node_modules/puppeteer-core/lib/cjs/puppeteer/util/decorators.d.ts:export declare function inertIfDisposed<This extends Disposed>(target: (this: This, ...args: any[]) => any, _: unknown): (this: This, ...args: any[]) => any;
./node_modules/puppeteer-core/lib/cjs/puppeteer/util/decorators.d.ts:export declare function invokeAtMostOnceForArguments(target: (this: unknown, ...args: any[]) => any, _: unknown): typeof target;
./node_modules/puppeteer-core/lib/cjs/puppeteer/util/decorators.d.ts:export declare function guarded<T extends object>(getKey?: (this: T) => object): (target: (this: T, ...args: any[]) => Promise<any>, _: ClassMethodDecoratorContext<T>) => typeof target;
./node_modules/puppeteer-core/lib/cjs/puppeteer/bidi/Deserializer.d.ts:    static deserialize(result: Bidi.Script.RemoteValue): any;
./node_modules/puppeteer-core/lib/cjs/puppeteer/api/ElementHandle.d.ts:export declare function bindIsolatedHandle<This extends ElementHandle<Node>>(target: (this: This, ...args: any[]) => Promise<any>, _: unknown): typeof target;
./node_modules/puppeteer-core/lib/cjs/puppeteer/api/Frame.d.ts:export declare const throwIfDetached: (target: (this: Frame, ...args: any[]) => any, _: unknown) => (this: Frame, ...args: any[]) => any;
./node_modules/puppeteer-core/src/cdp/CdpSession.ts:    error: {message: string; data: any; code: number};
./node_modules/puppeteer-core/src/cdp/CdpSession.ts:    result?: any;
./node_modules/puppeteer-core/src/cdp/NetworkManager.ts:      clientEmitter.on(event, (arg: any) => {
./node_modules/puppeteer-core/src/cdp/utils.ts:): any {
./node_modules/puppeteer-core/src/util/decorators.ts:  return (target: (this: This, ...args: any[]) => any, _: unknown) => {
./node_modules/puppeteer-core/src/util/decorators.ts:    return function (this: This, ...args: any[]): any {
./node_modules/puppeteer-core/src/util/decorators.ts:  target: (this: This, ...args: any[]) => any,
./node_modules/puppeteer-core/src/util/decorators.ts:  return function (this: This, ...args: any[]): any {
./node_modules/puppeteer-core/src/util/decorators.ts:  target: (this: unknown, ...args: any[]) => any,
./node_modules/puppeteer-core/src/util/decorators.ts:    target: (this: T, ...args: any[]) => Promise<any>,
./node_modules/puppeteer-core/src/util/ErrorLike.ts:  error: {message: string; data: any; code: number};
./node_modules/puppeteer-core/src/bidi/Deserializer.ts:  static deserialize(result: Bidi.Script.RemoteValue): any {
./node_modules/puppeteer-core/src/api/ElementHandle.ts:  target: (this: This, ...args: any[]) => Promise<any>,
./node_modules/cosmiconfig/dist/merge.d.ts:export declare const hasOwn: (thisArg: any, ...argArray: any[]) => any;
./node_modules/cosmiconfig/dist/merge.d.ts:export declare function mergeAll(objects: ReadonlyArray<any>, options: MergeOptions): any;
./node_modules/jsonc-parser/lib/esm/main.d.ts:    readonly value?: any;
./node_modules/jsonc-parser/lib/esm/main.d.ts:    onLiteralValue?: (value: any, offset: number, length: number, startLine: number, startCharacter: number, pathSupplier: () => JSONPath) => void;
./node_modules/jsonc-parser/lib/esm/main.d.ts:export declare function modify(text: string, path: JSONPath, value: any, options: ModificationOptions): EditResult;
./node_modules/jsonc-parser/lib/umd/main.d.ts:    readonly value?: any;
./node_modules/jsonc-parser/lib/umd/main.d.ts:    onLiteralValue?: (value: any, offset: number, length: number, startLine: number, startCharacter: number, pathSupplier: () => JSONPath) => void;
./node_modules/jsonc-parser/lib/umd/main.d.ts:export declare function modify(text: string, path: JSONPath, value: any, options: ModificationOptions): EditResult;
./node_modules/@vercel/speed-insights/dist/vue/index.d.ts:declare const SpeedInsights: any;
./node_modules/@vercel/speed-insights/dist/nuxt/index.d.ts:declare const SpeedInsights: any;
./node_modules/@vercel/analytics/dist/vue/index.d.ts:declare const Analytics: any;
./node_modules/@vercel/analytics/dist/nuxt/index.d.ts:declare const Analytics: any;
./node_modules/jsbarcode/jsbarcode.d.ts:declare function JsBarcode(element: any): JsBarcode.api;
./node_modules/jsbarcode/jsbarcode.d.ts:declare function JsBarcode(element: any, data: string, options?: JsBarcode.Options): void;
./node_modules/make-error/index.d.ts:  new (...args: any[]): T;
./node_modules/make-error/index.d.ts:    super_: any;
./node_modules/make-error/index.d.ts:    super_: any;
./node_modules/jest-pnp-resolver/index.d.ts:  defaultResolver: (request: string, opts: any) => string,
./node_modules/esbuild/lib/main.d.ts:  detail: any
./node_modules/esbuild/lib/main.d.ts:  pluginData?: any
./node_modules/esbuild/lib/main.d.ts:  pluginData: any
./node_modules/esbuild/lib/main.d.ts:  pluginData: any
./node_modules/esbuild/lib/main.d.ts:  pluginData?: any
./node_modules/esbuild/lib/main.d.ts:  pluginData: any
./node_modules/esbuild/lib/main.d.ts:  pluginData?: any
./node_modules/esbuild/lib/main.d.ts:  detail?: any
./node_modules/minipass/dist/esm/index.d.ts:export declare const isStream: (s: any) => s is NodeJS.WriteStream | NodeJS.ReadStream | Minipass<any, any, any> | (NodeJS.ReadStream & {
./node_modules/minipass/dist/esm/index.d.ts:    pause(): any;
./node_modules/minipass/dist/esm/index.d.ts:    resume(): any;
./node_modules/minipass/dist/esm/index.d.ts:    pipe(...destArgs: any[]): any;
./node_modules/minipass/dist/esm/index.d.ts:    end(): any;
./node_modules/minipass/dist/esm/index.d.ts:    write(chunk: any, ...args: any[]): any;
./node_modules/minipass/dist/esm/index.d.ts:export declare const isReadable: (s: any) => s is Minipass.Readable;
./node_modules/minipass/dist/esm/index.d.ts:export declare const isWritable: (s: any) => s is Minipass.Readable;
./node_modules/minipass/dist/esm/index.d.ts:    proxyErrors(_er: any): void;
./node_modules/minipass/dist/esm/index.d.ts:        end(): any;
./node_modules/minipass/dist/esm/index.d.ts:        write(chunk: any, ...args: any[]): any;
./node_modules/minipass/dist/esm/index.d.ts:        pause(): any;
./node_modules/minipass/dist/esm/index.d.ts:        resume(): any;
./node_modules/minipass/dist/esm/index.d.ts:        pipe(...destArgs: any[]): any;
./node_modules/minipass/dist/esm/index.d.ts:    static get isStream(): (s: any) => s is NodeJS.WriteStream | NodeJS.ReadStream | Minipass<any, any, any> | (NodeJS.ReadStream & {
./node_modules/minipass/dist/esm/index.d.ts:        pause(): any;
./node_modules/minipass/dist/esm/index.d.ts:        resume(): any;
./node_modules/minipass/dist/esm/index.d.ts:        pipe(...destArgs: any[]): any;
./node_modules/minipass/dist/esm/index.d.ts:        end(): any;
./node_modules/minipass/dist/esm/index.d.ts:        write(chunk: any, ...args: any[]): any;
./node_modules/minipass/dist/commonjs/index.d.ts:export declare const isStream: (s: any) => s is NodeJS.WriteStream | NodeJS.ReadStream | Minipass<any, any, any> | (NodeJS.ReadStream & {
./node_modules/minipass/dist/commonjs/index.d.ts:    pause(): any;
./node_modules/minipass/dist/commonjs/index.d.ts:    resume(): any;
./node_modules/minipass/dist/commonjs/index.d.ts:    pipe(...destArgs: any[]): any;
./node_modules/minipass/dist/commonjs/index.d.ts:    end(): any;
./node_modules/minipass/dist/commonjs/index.d.ts:    write(chunk: any, ...args: any[]): any;
./node_modules/minipass/dist/commonjs/index.d.ts:export declare const isReadable: (s: any) => s is Minipass.Readable;
./node_modules/minipass/dist/commonjs/index.d.ts:export declare const isWritable: (s: any) => s is Minipass.Readable;
./node_modules/minipass/dist/commonjs/index.d.ts:    proxyErrors(_er: any): void;
./node_modules/minipass/dist/commonjs/index.d.ts:        end(): any;
./node_modules/minipass/dist/commonjs/index.d.ts:        write(chunk: any, ...args: any[]): any;
./node_modules/minipass/dist/commonjs/index.d.ts:        pause(): any;
./node_modules/minipass/dist/commonjs/index.d.ts:        resume(): any;
./node_modules/minipass/dist/commonjs/index.d.ts:        pipe(...destArgs: any[]): any;
./node_modules/minipass/dist/commonjs/index.d.ts:    static get isStream(): (s: any) => s is NodeJS.WriteStream | NodeJS.ReadStream | Minipass<any, any, any> | (NodeJS.ReadStream & {
./node_modules/minipass/dist/commonjs/index.d.ts:        pause(): any;
./node_modules/minipass/dist/commonjs/index.d.ts:        resume(): any;
./node_modules/minipass/dist/commonjs/index.d.ts:        pipe(...destArgs: any[]): any;
./node_modules/minipass/dist/commonjs/index.d.ts:        end(): any;
./node_modules/minipass/dist/commonjs/index.d.ts:        write(chunk: any, ...args: any[]): any;
./node_modules/lazystream/node_modules/safe-buffer/index.d.ts:    toJSON(): { type: 'Buffer', data: any[] };
./node_modules/lazystream/node_modules/safe-buffer/index.d.ts:    fill(value: any, offset?: number, end?: number): this;
./node_modules/lazystream/node_modules/safe-buffer/index.d.ts:    constructor (array: any[]);
./node_modules/lazystream/node_modules/safe-buffer/index.d.ts:    static from(array: any[]): Buffer;
./node_modules/lazystream/node_modules/safe-buffer/index.d.ts:    static isBuffer(obj: any): obj is Buffer;
./node_modules/formdata-node/node_modules/web-streams-polyfill/types/ponyfill.d.ts:    readonly reason?: any;
./node_modules/formdata-node/node_modules/web-streams-polyfill/types/ponyfill.d.ts:    get size(): (chunk: any) => 1;
./node_modules/formdata-node/node_modules/web-streams-polyfill/types/ponyfill.d.ts:    error(e?: any): void;
./node_modules/formdata-node/node_modules/web-streams-polyfill/types/ponyfill.d.ts:    cancel(reason?: any): Promise<void>;
./node_modules/formdata-node/node_modules/web-streams-polyfill/types/ponyfill.d.ts:    return(value?: any): Promise<IteratorResult<any>>;
./node_modules/formdata-node/node_modules/web-streams-polyfill/types/ponyfill.d.ts:    cancel(reason?: any): Promise<void>;
./node_modules/formdata-node/node_modules/web-streams-polyfill/types/ponyfill.d.ts:    error(e?: any): void;
./node_modules/formdata-node/node_modules/web-streams-polyfill/types/ponyfill.d.ts:    cancel(reason?: any): Promise<void>;
./node_modules/formdata-node/node_modules/web-streams-polyfill/types/ponyfill.d.ts:    error(reason?: any): void;
./node_modules/formdata-node/node_modules/web-streams-polyfill/types/ponyfill.d.ts:export declare type UnderlyingSinkAbortCallback = (reason: any) => void | PromiseLike<void>;
./node_modules/formdata-node/node_modules/web-streams-polyfill/types/ponyfill.d.ts:export declare type UnderlyingSourceCancelCallback = (reason: any) => void | PromiseLike<void>;
./node_modules/formdata-node/node_modules/web-streams-polyfill/types/ponyfill.d.ts:    abort(reason?: any): Promise<void>;
./node_modules/formdata-node/node_modules/web-streams-polyfill/types/ponyfill.d.ts:    get abortReason(): any;
./node_modules/formdata-node/node_modules/web-streams-polyfill/types/ponyfill.d.ts:    error(e?: any): void;
./node_modules/formdata-node/node_modules/web-streams-polyfill/types/ponyfill.d.ts:    abort(reason?: any): Promise<void>;
./node_modules/@testing-library/dom/types/get-queries-for-element.d.ts:  ...args: any[]
./node_modules/@testing-library/dom/types/config.d.ts:  asyncWrapper(cb: (...args: any[]) => any): Promise<any>
./node_modules/@testing-library/dom/types/config.d.ts:  eventWrapper(cb: (...args: any[]) => any): void
./node_modules/@testing-library/user-event/dist/types/utils/edit/isEditable.d.ts:type GuardedType<T> = T extends (x: any) => x is infer R ? R : never;
./node_modules/@testing-library/user-event/dist/types/document/interceptor.d.ts:type anyFunc = (...a: any[]) => any;
./node_modules/@testing-library/jest-dom/types/matchers-standalone.d.ts:  toHaveClass(expected: any, ...rest: string[]) : MatcherReturnType
./node_modules/@testing-library/jest-dom/types/matchers-standalone.d.ts:    expected: any,
./node_modules/@testing-library/jest-dom/types/matchers-standalone.d.ts:      expected: any,
./node_modules/@storybook/react-dom-shim/dist/preset.d.ts:declare const webpackFinal: (config: any, options: Options) => Promise<any>;
./node_modules/@storybook/react-dom-shim/dist/preset.d.ts:declare const viteFinal: (config: any, options: Options) => Promise<any>;
./node_modules/@storybook/nextjs-vite/dist/export-mocks/cache/index.d.ts:declare const revalidatePath: Mock<(...args: any[]) => any>;
./node_modules/@storybook/nextjs-vite/dist/export-mocks/cache/index.d.ts:declare const revalidateTag: Mock<(...args: any[]) => any>;
./node_modules/@storybook/nextjs-vite/dist/export-mocks/cache/index.d.ts:declare const unstable_cache: Mock<(...args: any[]) => any>;
./node_modules/@storybook/nextjs-vite/dist/export-mocks/cache/index.d.ts:declare const unstable_noStore: Mock<(...args: any[]) => any>;
./node_modules/@storybook/nextjs-vite/dist/export-mocks/cache/index.d.ts:    unstable_cache: Mock<(...args: any[]) => any>;
./node_modules/@storybook/nextjs-vite/dist/export-mocks/cache/index.d.ts:    revalidateTag: Mock<(...args: any[]) => any>;
./node_modules/@storybook/nextjs-vite/dist/export-mocks/cache/index.d.ts:    revalidatePath: Mock<(...args: any[]) => any>;
./node_modules/@storybook/nextjs-vite/dist/export-mocks/cache/index.d.ts:    unstable_noStore: Mock<(...args: any[]) => any>;
./node_modules/@storybook/nextjs-vite/dist/export-mocks/navigation/index.d.ts:declare const createNavigation: (overrides: any) => {
./node_modules/@storybook/nextjs-vite/dist/export-mocks/headers/index.d.ts:    forEach: Mock<(callbackfn: (value: string, name: string, parent: Headers) => void, thisArg?: any) => void>;
./node_modules/@storybook/nextjs-vite/dist/index.d-ff220430.d.ts:	value: any;
./node_modules/@storybook/nextjs-vite/dist/index.d-ff220430.d.ts:	value: any;
./node_modules/@storybook/nextjs-vite/dist/index.d-ff220430.d.ts:type Procedure = (...args: any[]) => any;
./node_modules/@storybook/csf-plugin/dist/webpack-loader.d.ts:    async: () => (err: Error | null, result?: string, map?: any) => void;
./node_modules/@storybook/csf-plugin/dist/webpack-loader.d.ts:declare function loader(this: LoaderContext, content: string, map: any): Promise<void>;
./node_modules/@storybook/react-vite/node_modules/tsconfig-paths/lib/filesystem.d.ts:    (packageJsonPath: string): any | undefined;
./node_modules/@storybook/react-vite/node_modules/tsconfig-paths/lib/filesystem.d.ts:    (err?: Error, content?: any): void;
./node_modules/@storybook/react-vite/node_modules/tsconfig-paths/lib/filesystem.d.ts:export declare function readJsonFromDiskSync(packageJsonPath: string): any | undefined;
./node_modules/@storybook/react-vite/node_modules/tsconfig-paths/lib/filesystem.d.ts:export declare function readJsonFromDiskAsync(path: string, callback: (err?: Error, content?: any) => void): void;
./node_modules/@storybook/react-vite/node_modules/tsconfig-paths/src/filesystem.ts:  (packageJsonPath: string): any | undefined;
./node_modules/@storybook/react-vite/node_modules/tsconfig-paths/src/filesystem.ts:  (err?: Error, content?: any): void;
./node_modules/@storybook/react-vite/node_modules/tsconfig-paths/src/filesystem.ts:export function readJsonFromDiskSync(packageJsonPath: string): any | undefined {
./node_modules/@storybook/react-vite/node_modules/tsconfig-paths/src/filesystem.ts:  callback: (err?: Error, content?: any) => void
./node_modules/@storybook/react-vite/node_modules/tsconfig-paths/src/register.ts:  Module._resolveFilename = function (request: string, _parent: any): string {
./node_modules/@storybook/react-vite/node_modules/json5/lib/parse.d.ts:    reviver?: ((this: any, key: string, value: any) => any) | null,
./node_modules/@storybook/react-vite/node_modules/json5/lib/stringify.d.ts:        | ((this: any, key: string, value: any) => any)
./node_modules/@storybook/react-vite/node_modules/json5/lib/stringify.d.ts:    value: any,
./node_modules/@storybook/react-vite/node_modules/json5/lib/stringify.d.ts:    replacer?: ((this: any, key: string, value: any) => any) | null,
./node_modules/@storybook/react-vite/node_modules/json5/lib/stringify.d.ts:    value: any,
./node_modules/@storybook/react-vite/node_modules/json5/lib/stringify.d.ts:declare function stringify(value: any, options: StringifyOptions): string
./node_modules/@storybook/react/dist/public-types-f2c70f25.d.ts:    [T in keyof TArgs]: T extends keyof DefaultArgs ? DefaultArgs[T] extends (...args: any) => any & {
./node_modules/@storybook/react/dist/preset.d.ts:declare const resolvedReact: (existing: any) => Promise<any>;
./node_modules/@storybook/react/dist/preview.d.ts:	[x: string]: any
./node_modules/@storybook/react/dist/preview.d.ts:	[x: number]: any
./node_modules/@storybook/react/dist/preview.d.ts:	[x: symbol]: any
./node_modules/@storybook/addon-docs/dist/blocks.d.ts:    defaultValue?: any;
./node_modules/@storybook/addon-docs/dist/blocks.d.ts:        [key: string]: any;
./node_modules/@storybook/addon-docs/dist/blocks.d.ts:    [key: string]: any;
./node_modules/@storybook/addon-docs/dist/blocks.d.ts:    [key: string]: any;
./node_modules/@storybook/addon-docs/dist/blocks.d.ts:    [name: string]: any;
./node_modules/@storybook/addon-docs/dist/blocks.d.ts:    projectAnnotations: any;
./node_modules/@storybook/addon-docs/dist/blocks.d.ts:declare const assertIsFn: (val: any) => any;
./node_modules/@storybook/addon-docs/dist/blocks.d.ts:    onFocus?: (evt: any) => void;
./node_modules/@storybook/addon-docs/dist/blocks.d.ts:    onBlur?: (evt: any) => void;
./node_modules/@storybook/addon-docs/dist/index.d.ts:    transform?: (code: string, storyContext: any) => string;
./node_modules/@storybook/addon-docs/dist/preview.d.ts:declare const parameters: any;
./node_modules/@storybook/addon-docs/angular/index.d.ts:export declare const setCompodocJson: (compodocJson: any) => void;
./node_modules/@storybook/addon-docs/ember/index.d.ts:export declare const setJSONDoc: (jsonDoc: any) => void;
./node_modules/terser/tools/terser.d.ts:    comments?: boolean | 'all' | 'some' | RegExp | ( (node: any, comment: {
./node_modules/terser/node_modules/commander/typings/index.d.ts:    [key: string]: any;
./node_modules/terser/node_modules/commander/typings/index.d.ts:     * @param {(...args: any[]) => void} fn
./node_modules/terser/node_modules/commander/typings/index.d.ts:    action(fn: (...args: any[]) => void): Command;
./node_modules/terser/node_modules/commander/typings/index.d.ts:     * @param {((arg1: any, arg2: any) => void) | RegExp} [fn] function or default
./node_modules/terser/node_modules/commander/typings/index.d.ts:    option(flags: string, description?: string, fn?: ((arg1: any, arg2: any) => void) | RegExp, defaultValue?: any): Command;
./node_modules/terser/node_modules/commander/typings/index.d.ts:    option(flags: string, description?: string, defaultValue?: any): Command;
./node_modules/terser/node_modules/commander/typings/index.d.ts:     * @returns {{[key: string]: any}}
./node_modules/terser/node_modules/commander/typings/index.d.ts:    opts(): { [key: string]: any };
./node_modules/@jridgewell/trace-mapping/src/trace-mapping.ts:    if (!isString && (map as unknown as { _decodedMemo: any })._decodedMemo) return map as TraceMap;
./node_modules/@jridgewell/source-map/src/source-map.ts:    context?: any /*, order?: number*/,
./node_modules/@chromatic-com/storybook/types.d.ts:  const content: any;
./node_modules/component-emitter/index.d.ts:	on(event: string, listener: (...arguments_: any[]) => void): Emitter;
./node_modules/component-emitter/index.d.ts:	once(event: string, listener: (...arguments_: any[]) => void): Emitter;
./node_modules/component-emitter/index.d.ts:	off(event: string, listener: (...arguments_: any[]) => void): Emitter; // eslint-disable-line @typescript-eslint/unified-signatures
./node_modules/component-emitter/index.d.ts:	emit(event: string, ...arguments_: any[]): Emitter;
./node_modules/component-emitter/index.d.ts:	listeners(event: string): Array<(...arguments_: any[]) => void>;
./node_modules/tsconfck/types/index.d.ts:		tsconfig: any;
./node_modules/tsconfck/types/index.d.ts:		tsconfig: any;
./node_modules/tsconfck/types/index.d.ts:		result: any;
./node_modules/tsconfck/types/index.d.ts:		constructor(diagnostic: TSDiagnosticError, tsconfigFile: string, result: any | null);
./node_modules/tsconfck/types/index.d.ts:		result: any | undefined;
./node_modules/tsconfck/src/public.d.ts:	tsconfig: any;
./node_modules/tsconfck/src/public.d.ts:	tsconfig: any;
./node_modules/tsconfck/src/public.d.ts:	result: any;
./node_modules/magicast/dist/shared/magicast.54e2233d.d.ts:    parser?: any;
./node_modules/magicast/dist/shared/magicast.54e2233d.d.ts:    esprima?: any;
./node_modules/magicast/dist/shared/magicast.54e2233d.d.ts:        map?: any;
./node_modules/magicast/dist/shared/magicast.54e2233d.d.ts:    lines?: any;
./node_modules/magicast/dist/helpers.d.ts:declare function deepMergeObject(magicast: Proxified<any>, object: any): void;
./node_modules/magicast/dist/helpers.d.ts:declare function addNuxtModule(magicast: ProxifiedModule<any>, name: string, optionsKey?: string, options?: any): void;
./node_modules/magicast/dist/helpers.d.ts:declare function updateVitePluginConfig(magicast: ProxifiedModule<any>, plugin: UpdateVitePluginConfigOptions | string, handler: Record<string, any> | ((args: any[]) => any[])): boolean;
./node_modules/magicast/dist/index.d.ts:    map?: any;
./node_modules/magicast/dist/index.d.ts:    functionCall(callee: string, ...args: any[]): Proxified;
./node_modules/magicast/dist/index.d.ts:    newExpression(callee: string, ...args: any[]): Proxified;
./node_modules/magicast/dist/index.d.ts:    literal(value: any): Proxified;
./node_modules/formik/dist/Field.d.ts:    value?: any;
./node_modules/formik/dist/Field.d.ts:    innerRef?: (instance: any) => void;
./node_modules/formik/dist/Field.d.ts:component, className, ...props }: FieldAttributes<any>): any;
./node_modules/formik/dist/types.d.ts:    [field: string]: any;
./node_modules/formik/dist/types.d.ts:    status?: any;
./node_modules/formik/dist/types.d.ts:    readonly initialStatus?: any;
./node_modules/formik/dist/types.d.ts:    setStatus: (status?: any) => void;
./node_modules/formik/dist/types.d.ts:    setFieldValue: (field: string, value: any, shouldValidate?: boolean) => Promise<void | FormikErrors<Values>>;
./node_modules/formik/dist/types.d.ts:    validateForm: (values?: any) => Promise<FormikErrors<Values>>;
./node_modules/formik/dist/types.d.ts:        <T = string | any>(fieldOrEvent: T): T extends string ? (e: any) => void : void;
./node_modules/formik/dist/types.d.ts:    initialStatus?: any;
./node_modules/formik/dist/types.d.ts:    validationSchema?: any | (() => any);
./node_modules/formik/dist/types.d.ts:export type FieldValidator = (value: any) => string | void | Promise<string | void>;
./node_modules/formik/dist/Formik.d.ts:    initialStatus: any;
./node_modules/formik/dist/Formik.d.ts:        <T = any>(fieldOrEvent: T): T extends string ? (e: any) => void : void;
./node_modules/formik/dist/Formik.d.ts:    handleReset: (e: any) => void;
./node_modules/formik/dist/Formik.d.ts:    setFieldValue: (field: string, value: any, shouldValidate?: boolean) => Promise<FormikErrors<Values>> | Promise<void>;
./node_modules/formik/dist/Formik.d.ts:    setStatus: (status: any) => void;
./node_modules/formik/dist/Formik.d.ts:    registerField: (name: string, { validate }: any) => void;
./node_modules/formik/dist/Formik.d.ts:    status?: any;
./node_modules/formik/dist/Formik.d.ts:export declare function yupToFormErrors<Values>(yupError: any): FormikErrors<Values>;
./node_modules/formik/dist/Formik.d.ts:export declare function validateYupSchema<T extends FormikValues>(values: T, schema: any, sync?: boolean, context?: any): Promise<Partial<T>>;
./node_modules/formik/dist/withFormik.d.ts:    validationSchema?: any | ((props: Props) => any);
./node_modules/formik/dist/utils.d.ts:export declare const isEmptyArray: (value?: any) => boolean;
./node_modules/formik/dist/utils.d.ts:export declare const isFunction: (obj: any) => obj is Function;
./node_modules/formik/dist/utils.d.ts:export declare const isObject: (obj: any) => obj is Object;
./node_modules/formik/dist/utils.d.ts:export declare const isInteger: (obj: any) => boolean;
./node_modules/formik/dist/utils.d.ts:export declare const isString: (obj: any) => obj is string;
./node_modules/formik/dist/utils.d.ts:export declare const isNaN: (obj: any) => boolean;
./node_modules/formik/dist/utils.d.ts:export declare const isEmptyChildren: (children: any) => boolean;
./node_modules/formik/dist/utils.d.ts:export declare const isPromise: (value: any) => value is PromiseLike<any>;
./node_modules/formik/dist/utils.d.ts:export declare const isInputEvent: (value: any) => value is React.SyntheticEvent<any, Event>;
./node_modules/formik/dist/utils.d.ts:export declare function getIn(obj: any, key: string | string[], def?: any, p?: number): any;
./node_modules/formik/dist/utils.d.ts:export declare function setIn(obj: any, path: string, value: any): any;
./node_modules/formik/dist/utils.d.ts:export declare function setNestedObjectValues<T>(object: any, value: any, visited?: any, response?: any): T;
./node_modules/eslint-plugin-react/lib/util/eslint.d.ts:export function getAncestors(context: any, node: any): any;
./node_modules/eslint-plugin-react/lib/util/eslint.d.ts:export function getFirstTokens(context: any, node: any, count: any): any;
./node_modules/eslint-plugin-react/lib/util/eslint.d.ts:export function getScope(context: any, node: any): any;
./node_modules/eslint-plugin-react/lib/util/eslint.d.ts:export function getSourceCode(context: any): any;
./node_modules/eslint-plugin-react/lib/util/eslint.d.ts:export function getText(context: any, ...args: any[]): any;
./node_modules/eslint-plugin-react/lib/util/eslint.d.ts:export function markVariableAsUsed(name: any, node: any, context: any): any;
./node_modules/eslint-plugin-react/lib/util/version.d.ts:export function testReactVersion(context: any, semverRange: any): boolean;
./node_modules/eslint-plugin-react/lib/util/version.d.ts:export function testFlowVersion(context: any, semverRange: any): boolean;
./node_modules/eslint-plugin-react/lib/util/report.d.ts:declare function _exports(context: any, message: any, messageId: any, data: any): void;
./node_modules/eslint-plugin-react/lib/util/isDestructuredFromPragmaImport.d.ts:declare function _exports(context: Context, node: ASTNode, variable: string, ...args: any[]): boolean;
./node_modules/eslint-plugin-react/lib/util/propWrapper.d.ts:export function formatPropWrapperFunctions(propWrapperFunctions: any): string;
./node_modules/eslint-plugin-react/lib/util/propWrapper.d.ts:export function getExactPropWrapperFunctions(context: any): Set<any>;
./node_modules/eslint-plugin-react/lib/util/propWrapper.d.ts:export function getPropWrapperFunctions(context: any): Set<any>;
./node_modules/eslint-plugin-react/lib/util/propWrapper.d.ts:export function isExactPropWrapperFunction(context: any, name: any): any;
./node_modules/eslint-plugin-react/lib/util/propWrapper.d.ts:export function isPropWrapperFunction(context: any, name: any): any;
./node_modules/eslint-plugin-react/lib/util/variable.d.ts:export function findVariable(variables: any[], name: string): boolean;
./node_modules/eslint-plugin-react/lib/util/variable.d.ts:export function findVariableByName(context: any, node: ASTNode, name: string): ASTNode | null;
./node_modules/eslint-plugin-react/lib/util/variable.d.ts:export function getVariable(variables: any[], name: string): any;
./node_modules/eslint-plugin-react/lib/util/variable.d.ts:export function getVariableFromContext(context: any, node: ASTNode, name: string): any | undefined;
./node_modules/eslint-plugin-react/lib/util/variable.d.ts:export function getLatestVariableDefinition(variable: any): any | undefined;
./node_modules/eslint-plugin-react/lib/util/usedPropTypes.d.ts:declare function _exports(context: any, components: any, utils: any): {
./node_modules/eslint-plugin-react/lib/util/usedPropTypes.d.ts:    VariableDeclarator(node: any): void;
./node_modules/eslint-plugin-react/lib/util/usedPropTypes.d.ts:    JSXSpreadAttribute(node: any): void;
./node_modules/eslint-plugin-react/lib/util/usedPropTypes.d.ts:    'MemberExpression, OptionalMemberExpression'(node: any): void;
./node_modules/eslint-plugin-react/lib/util/usedPropTypes.d.ts:    ObjectPattern(node: any): void;
./node_modules/eslint-plugin-react/lib/util/docsUrl.d.ts:declare function docsUrl(ruleName: any): string;
./node_modules/eslint-plugin-react/lib/util/propTypes.d.ts:declare function _exports(context: any, components: any, utils: any): {
./node_modules/eslint-plugin-react/lib/util/propTypes.d.ts:    ClassExpression(node: any): void;
./node_modules/eslint-plugin-react/lib/util/propTypes.d.ts:    ClassDeclaration(node: any): void;
./node_modules/eslint-plugin-react/lib/util/propTypes.d.ts:    'ClassProperty, PropertyDefinition'(node: any): void;
./node_modules/eslint-plugin-react/lib/util/propTypes.d.ts:    ObjectExpression(node: any): void;
./node_modules/eslint-plugin-react/lib/util/propTypes.d.ts:    FunctionExpression(node: any): void;
./node_modules/eslint-plugin-react/lib/util/propTypes.d.ts:    ImportDeclaration(node: any): void;
./node_modules/eslint-plugin-react/lib/util/propTypes.d.ts:    MemberExpression(node: any): void;
./node_modules/eslint-plugin-react/lib/util/propTypes.d.ts:    MethodDefinition(node: any): void;
./node_modules/eslint-plugin-react/lib/util/propTypes.d.ts:    TypeAlias(node: any): void;
./node_modules/eslint-plugin-react/lib/util/propTypes.d.ts:    TypeParameterDeclaration(node: any): void;
./node_modules/eslint-plugin-react/lib/util/defaultProps.d.ts:declare function _exports(context: any, components: any, utils: any): {
./node_modules/eslint-plugin-react/lib/util/defaultProps.d.ts:    MemberExpression(node: any): void;
./node_modules/eslint-plugin-react/lib/util/defaultProps.d.ts:    MethodDefinition(node: any): void;
./node_modules/eslint-plugin-react/lib/util/defaultProps.d.ts:    'ClassProperty, PropertyDefinition'(node: any): void;
./node_modules/eslint-plugin-react/lib/util/defaultProps.d.ts:    ObjectExpression(node: any): void;
./node_modules/eslint-plugin-react/lib/util/componentUtil.d.ts:export function isExplicitComponent(node: any, context: Context): boolean;
./node_modules/eslint-plugin-react/lib/util/Components.d.ts:    detect(rule: any): (context?: any) => {
./node_modules/eslint-plugin-react/lib/util/Components.d.ts:    add(node: ASTNode, confidence: number): any;
./node_modules/eslint-plugin-react/lib/util/Components.d.ts:    get(node: ASTNode): any;
./node_modules/eslint-plugin-react/lib/util/Components.d.ts:    set(node: ASTNode, props: any): void;
./node_modules/eslint-plugin-react/lib/util/Components.d.ts:    list(): any;
./node_modules/eslint-plugin-react/lib/util/Components.d.ts:    getNamedReactImports(): any;
./node_modules/eslint-plugin-react/lib/util/propTypesSort.d.ts:export function fixPropTypesSort(context: Context, fixer: Fixer, declarations: any[], ignoreCase?: boolean | undefined, requiredFirst?: boolean | undefined, callbacksLast?: boolean | undefined, noSortAlphabetically?: boolean | undefined, sortShapeProp?: boolean | undefined, checkTypes?: boolean | undefined): any | any | {
./node_modules/eslint-plugin-react/lib/util/ast.d.ts:export function getComponentProperties(node: ASTNode): any[];
./node_modules/eslint-plugin-react/lib/util/ast.d.ts:export function getFirstNodeInLine(context: any, node: ASTNode): ASTNode;
./node_modules/eslint-plugin-react/lib/util/ast.d.ts:export function getKeyValue(context: Context, node: any): string | undefined;
./node_modules/eslint-plugin-react/lib/util/ast.d.ts:export function getPropertyName(node: any): string;
./node_modules/eslint-plugin-react/lib/util/ast.d.ts:export function getPropertyNameNode(node: any): any;
./node_modules/eslint-plugin-react/lib/util/ast.d.ts:export function isNodeFirstInLine(context: any, node: ASTNode): boolean;
./node_modules/eslint-plugin-react/lib/util/ast.d.ts:export function isTSAsExpression(node: any): boolean;
./node_modules/eslint-plugin-react/lib/util/ast.d.ts:export function isTSFunctionType(node: any): boolean;
./node_modules/eslint-plugin-react/lib/util/ast.d.ts:export function isTSInterfaceDeclaration(node: any): boolean;
./node_modules/eslint-plugin-react/lib/util/ast.d.ts:export function isTSInterfaceHeritage(node: any): boolean;
./node_modules/eslint-plugin-react/lib/util/ast.d.ts:export function isTSIntersectionType(node: any): boolean;
./node_modules/eslint-plugin-react/lib/util/ast.d.ts:export function isTSParenthesizedType(node: any): boolean;
./node_modules/eslint-plugin-react/lib/util/ast.d.ts:export function isTSTypeAliasDeclaration(node: any): boolean;
./node_modules/eslint-plugin-react/lib/util/ast.d.ts:export function isTSTypeAnnotation(node: any): boolean;
./node_modules/eslint-plugin-react/lib/util/ast.d.ts:export function isTSTypeDeclaration(node: any): boolean;
./node_modules/eslint-plugin-react/lib/util/ast.d.ts:export function isTSTypeLiteral(node: any): boolean;
./node_modules/eslint-plugin-react/lib/util/ast.d.ts:export function isTSTypeParameterInstantiation(node: any): boolean;
./node_modules/eslint-plugin-react/lib/util/ast.d.ts:export function isTSTypeQuery(node: any): boolean;
./node_modules/eslint-plugin-react/lib/util/ast.d.ts:export function isTSTypeReference(node: any): boolean;
./node_modules/eslint-plugin-react/lib/util/ast.d.ts:export function traverse(ASTnode: ASTNode, visitor: any): void;
./node_modules/eslint-plugin-react/lib/util/linkComponents.d.ts:export function getFormComponents(context: any): Map<any, any>;
./node_modules/eslint-plugin-react/lib/util/linkComponents.d.ts:export function getLinkComponents(context: any): Map<any, any>;
./node_modules/eslint-plugin-react/lib/util/annotations.d.ts:export function isAnnotatedFunctionPropsDeclaration(node: ASTNode, context: any): boolean;
./node_modules/eslint-plugin-react/lib/util/message.d.ts:declare function _exports(messageId: any, message: any): {
./node_modules/eslint-plugin-react/lib/util/message.d.ts:    messageId: any;
./node_modules/eslint-plugin-react/lib/util/message.d.ts:    message: any;
./node_modules/eslint-plugin-react/lib/types.d.ts:    [_: string]: any; // TODO: fixme
./node_modules/eslint-plugin-react/index.d.ts:            jsxPragma: any;
./node_modules/vite-tsconfig-paths/src/index.ts:        } catch (e: any) {
./node_modules/vite-tsconfig-paths/src/index.ts:      let firstError: any
./node_modules/tiny-warning/src/index.d.ts:export default function warning(condition: any, message: string): void
./node_modules/is-plain-object/is-plain-object.d.ts:export function isPlainObject(o: any): boolean;
./node_modules/fast-copy/dist/esm/types/copier.d.ts:    Constructor: any;
./node_modules/fast-copy/dist/esm/types/copier.d.ts:    prototype: any;
./node_modules/fast-copy/dist/esm/types/copier.d.ts:export declare function copyArrayLoose(array: any[], state: State): any;
./node_modules/fast-copy/dist/esm/types/utils.d.ts:    has: (value: any) => boolean;
./node_modules/fast-copy/dist/esm/types/utils.d.ts:    set: (key: any, value: any) => void;
./node_modules/fast-copy/dist/esm/types/utils.d.ts:    get: (key: any) => any;
./node_modules/fast-copy/dist/esm/types/utils.d.ts:export declare function getCleanClone(prototype: any): any;
./node_modules/fast-copy/dist/esm/types/utils.d.ts:declare function getTagLegacy(value: any): string;
./node_modules/fast-copy/dist/umd/types/copier.d.ts:    Constructor: any;
./node_modules/fast-copy/dist/umd/types/copier.d.ts:    prototype: any;
./node_modules/fast-copy/dist/umd/types/copier.d.ts:export declare function copyArrayLoose(array: any[], state: State): any;
./node_modules/fast-copy/dist/umd/types/utils.d.ts:    has: (value: any) => boolean;
./node_modules/fast-copy/dist/umd/types/utils.d.ts:    set: (key: any, value: any) => void;
./node_modules/fast-copy/dist/umd/types/utils.d.ts:    get: (key: any) => any;
./node_modules/fast-copy/dist/umd/types/utils.d.ts:export declare function getCleanClone(prototype: any): any;
./node_modules/fast-copy/dist/umd/types/utils.d.ts:declare function getTagLegacy(value: any): string;
./node_modules/fast-copy/dist/min/types/copier.d.ts:    Constructor: any;
./node_modules/fast-copy/dist/min/types/copier.d.ts:    prototype: any;
./node_modules/fast-copy/dist/min/types/copier.d.ts:export declare function copyArrayLoose(array: any[], state: State): any;
./node_modules/fast-copy/dist/min/types/utils.d.ts:    has: (value: any) => boolean;
./node_modules/fast-copy/dist/min/types/utils.d.ts:    set: (key: any, value: any) => void;
./node_modules/fast-copy/dist/min/types/utils.d.ts:    get: (key: any) => any;
./node_modules/fast-copy/dist/min/types/utils.d.ts:export declare function getCleanClone(prototype: any): any;
./node_modules/fast-copy/dist/min/types/utils.d.ts:declare function getTagLegacy(value: any): string;
./node_modules/fast-copy/dist/cjs/types/copier.d.ts:    Constructor: any;
./node_modules/fast-copy/dist/cjs/types/copier.d.ts:    prototype: any;
./node_modules/fast-copy/dist/cjs/types/copier.d.ts:export declare function copyArrayLoose(array: any[], state: State): any;
./node_modules/fast-copy/dist/cjs/types/utils.d.ts:    has: (value: any) => boolean;
./node_modules/fast-copy/dist/cjs/types/utils.d.ts:    set: (key: any, value: any) => void;
./node_modules/fast-copy/dist/cjs/types/utils.d.ts:    get: (key: any) => any;
./node_modules/fast-copy/dist/cjs/types/utils.d.ts:export declare function getCleanClone(prototype: any): any;
./node_modules/fast-copy/dist/cjs/types/utils.d.ts:declare function getTagLegacy(value: any): string;
./node_modules/fast-copy/index.d.ts:  _keys?: any[];
./node_modules/fast-copy/index.d.ts:  _values?: any[];
./node_modules/fast-copy/index.d.ts:  has: (value: any) => boolean;
./node_modules/fast-copy/index.d.ts:  set: (key: any, value: any) => void;
./node_modules/fast-copy/index.d.ts:  get: (key: any) => any;
./node_modules/fast-copy/index.d.ts:  Constructor: any;
./node_modules/fast-copy/index.d.ts:  prototype: any;
./node_modules/module-lookup-amd/node_modules/commander/typings/index.d.ts:  defaultValue?: any;
./node_modules/module-lookup-amd/node_modules/commander/typings/index.d.ts:  defaultValue?: any;
./node_modules/module-lookup-amd/node_modules/commander/typings/index.d.ts:  processedArgs: any[];
./node_modules/module-lookup-amd/node_modules/commander/typings/index.d.ts:  action(fn: (...args: any[]) => void | Promise<void>): this;
./node_modules/module-lookup-amd/node_modules/commander/typings/index.d.ts:  getOptionValue(key: string): any;
./node_modules/module-lookup-amd/node_modules/commander/typings/index.d.ts:  on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/tailwindcss/types/config.d.ts:  theme(path: string, defaultValue?: unknown): any
./node_modules/tailwindcss/types/config.d.ts:  [key: string]: any
./node_modules/tailwindcss/types/config.d.ts:      (options: any): {
./node_modules/tailwindcss/types/config.d.ts:  [key: string]: any
./node_modules/tailwindcss/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isNode(node: any): node is Node;
./node_modules/tailwindcss/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:        setPropertyAndEscape(name: string, value: any, valueEscaped: string): void;
./node_modules/tailwindcss/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:        setPropertyWithoutEscape(name: string, value: any): void;
./node_modules/tailwindcss/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:        appendToPropertyAndEscape(name: string, value: any, valueEscaped: string): void;
./node_modules/tailwindcss/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isContainer(node: any): node is Root | Selector | Pseudo;
./node_modules/tailwindcss/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isNamespace(node: any): node is Attribute | Tag;
./node_modules/tailwindcss/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isRoot(node: any): node is Root;
./node_modules/tailwindcss/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isSelector(node: any): node is Selector;
./node_modules/tailwindcss/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isCombinator(node: any): node is Combinator;
./node_modules/tailwindcss/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isClassName(node: any): node is ClassName;
./node_modules/tailwindcss/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isAttribute(node: any): node is Attribute;
./node_modules/tailwindcss/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isPseudo(node: any): node is Pseudo;
./node_modules/tailwindcss/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isPseudoElement(node: any): node is Pseudo;
./node_modules/tailwindcss/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isPseudoClass(node: any): node is Pseudo;
./node_modules/tailwindcss/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isTag(node: any): node is Tag;
./node_modules/tailwindcss/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isComment(node: any): node is Comment;
./node_modules/tailwindcss/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function id(opts: any): Identifier;
./node_modules/tailwindcss/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isIdentifier(node: any): node is Identifier;
./node_modules/tailwindcss/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function nesting(opts?: any): Nesting;
./node_modules/tailwindcss/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isNesting(node: any): node is Nesting;
./node_modules/tailwindcss/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isString(node: any): node is String;
./node_modules/tailwindcss/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts:    function isUniversal(node: any): node is Universal;
./node_modules/vite-plugin-storybook-nextjs/dist/plugins/next-mocks/alias/cache/index.d.ts:type Procedure = (...args: any[]) => any;
./node_modules/vite-plugin-storybook-nextjs/dist/plugins/next-mocks/alias/headers/headers.d.ts:    forEach: Mock<(callbackfn: (value: string, name: string, parent: Headers) => void, thisArg?: any) => void>;
./node_modules/archiver-utils/node_modules/safe-buffer/index.d.ts:    toJSON(): { type: 'Buffer', data: any[] };
./node_modules/archiver-utils/node_modules/safe-buffer/index.d.ts:    fill(value: any, offset?: number, end?: number): this;
./node_modules/archiver-utils/node_modules/safe-buffer/index.d.ts:    constructor (array: any[]);
./node_modules/archiver-utils/node_modules/safe-buffer/index.d.ts:    static from(array: any[]): Buffer;
./node_modules/archiver-utils/node_modules/safe-buffer/index.d.ts:    static isBuffer(obj: any): obj is Buffer;
./node_modules/exceljs/index.d.ts:	formulae: any[];
./node_modules/exceljs/index.d.ts:	splice(start: number, count: number, ...insert: any[]): void;
./node_modules/exceljs/index.d.ts:	defn: any; //todo
./node_modules/exceljs/index.d.ts:	formulae?: any[];
./node_modules/exceljs/index.d.ts:	formulae?: any[];
./node_modules/exceljs/index.d.ts:	spliceColumns(start: number, count: number, ...insert: any[][]): void;
./node_modules/exceljs/index.d.ts:	spliceRows(start: number, count: number, ...insert: any[][]): void;
./node_modules/exceljs/index.d.ts:	addRow(data: any[] | any, style?: string): Row;
./node_modules/exceljs/index.d.ts:	addRows(rows: any[], style?: string): Row[];
./node_modules/exceljs/index.d.ts:	insertRow(pos: number, value: any[] | any, style?: string): Row;
./node_modules/exceljs/index.d.ts:	insertRows(pos: number, values: any[], style?: string): Row[];
./node_modules/exceljs/index.d.ts:	removeConditionalFormatting(filter: any): void;
./node_modules/exceljs/index.d.ts:	[key: string]: any;
./node_modules/exceljs/index.d.ts:	map(value: any, index: number): any;
./node_modules/exceljs/index.d.ts:	map(value: any, index: number): any;
./node_modules/exceljs/index.d.ts:	findRowCell(row: any[], address: Address, create: boolean): Cell | undefined;
./node_modules/exceljs/index.d.ts:	rows: any[][]
./node_modules/exceljs/index.d.ts:	addRow: (values: any[], rowNumber?: number) => void
./node_modules/exceljs/index.d.ts:	addColumn: (column: TableColumnProperties, values: any[], colIndex: number) => void
./node_modules/exceljs/index.d.ts:	function setValue(key: 'promise', promise: any): void;
./node_modules/fastq/test/example.ts:function worker(task: any, cb: fastq.done) {
./node_modules/fastq/test/example.ts:async function asyncWorker(task: any) {
./node_modules/fastq/index.d.ts:    pause(): any
./node_modules/fastq/index.d.ts:    resume(): any
./node_modules/fastq/index.d.ts:    kill(): any
./node_modules/fastq/index.d.ts:    killAndDrain(): any
./node_modules/fastq/index.d.ts:    drain(): any
./node_modules/@bcoe/v8-coverage/gulpfile.ts:const libTasks: any = registerLibTasks(gulp, lib);
./node_modules/recharts/types/cartesian/Line.d.ts:export type LineDot = ReactElement<SVGElement> | ((props: any) => ReactElement<SVGElement>) | DotProps | boolean;
./node_modules/recharts/types/cartesian/Line.d.ts:    payload?: any;
./node_modules/recharts/types/cartesian/Line.d.ts:    data?: any;
./node_modules/recharts/types/cartesian/Line.d.ts:        displayedData: any[];
./node_modules/recharts/types/cartesian/Line.d.ts:            value: any;
./node_modules/recharts/types/cartesian/Line.d.ts:            payload: any;
./node_modules/recharts/types/cartesian/Line.d.ts:    static renderDotItem(option: LineDot, props: any): React.JSX.Element;
./node_modules/recharts/types/cartesian/Brush.d.ts:type BrushTravellerType = ReactElement<SVGElement> | ((props: any) => ReactElement<SVGElement>);
./node_modules/recharts/types/cartesian/Brush.d.ts:    data?: any[];
./node_modules/recharts/types/cartesian/Brush.d.ts:    tickFormatter?: (value: any, index: number) => string | number;
./node_modules/recharts/types/cartesian/Brush.d.ts:    prevData?: any[];
./node_modules/recharts/types/cartesian/Brush.d.ts:    static renderDefaultTraveller(props: any): React.JSX.Element;
./node_modules/recharts/types/cartesian/Brush.d.ts:    static renderTraveller(option: BrushTravellerType, props: any): React.JSX.Element;
./node_modules/recharts/types/cartesian/Brush.d.ts:    getTextOfTick(index: number): any;
./node_modules/recharts/types/cartesian/CartesianGrid.d.ts:    yAxis: any;
./node_modules/recharts/types/cartesian/CartesianGrid.d.ts:    xAxis: any;
./node_modules/recharts/types/cartesian/Scatter.d.ts:    payload?: any;
./node_modules/recharts/types/cartesian/Scatter.d.ts:    data?: any[];
./node_modules/recharts/types/cartesian/Scatter.d.ts:    line?: ReactElement<SVGElement> | ((props: any) => ReactElement<SVGElement>) | CurveProps | boolean;
./node_modules/recharts/types/cartesian/Scatter.d.ts:        data: any[];
./node_modules/recharts/types/cartesian/Scatter.d.ts:        displayedData: any[];
./node_modules/recharts/types/cartesian/Scatter.d.ts:        points: any[];
./node_modules/recharts/types/cartesian/Area.d.ts:export type AreaDot = ReactElement<SVGElement> | ((props: any) => ReactElement<SVGElement>) | DotProps | boolean;
./node_modules/recharts/types/cartesian/Area.d.ts:    payload?: any;
./node_modules/recharts/types/cartesian/Area.d.ts:    data?: any[];
./node_modules/recharts/types/cartesian/Area.d.ts:    label?: any;
./node_modules/recharts/types/cartesian/Area.d.ts:        displayedData: any[];
./node_modules/recharts/types/cartesian/Area.d.ts:            value: any[];
./node_modules/recharts/types/cartesian/Area.d.ts:            payload: any;
./node_modules/recharts/types/cartesian/Area.d.ts:    static renderDotItem: (option: AreaDot, props: any) => React.JSX.Element;
./node_modules/recharts/types/cartesian/CartesianAxis.d.ts:export type TickFormatter = (value: any, index: number) => string;
./node_modules/recharts/types/cartesian/CartesianAxis.d.ts:    tick?: SVGProps<SVGTextElement> | ReactElement<SVGElement> | ((props: any) => ReactElement<SVGElement>) | boolean;
./node_modules/recharts/types/cartesian/CartesianAxis.d.ts:    label?: any;
./node_modules/recharts/types/cartesian/CartesianAxis.d.ts:    static renderTickItem(option: Props['tick'], props: any, value: ReactNode): React.JSX.Element;
./node_modules/recharts/types/cartesian/ReferenceDot.d.ts:    shape?: ReactElement<SVGElement> | ((props: any) => ReactElement<SVGElement>);
./node_modules/recharts/types/cartesian/ReferenceDot.d.ts:    static renderDot: (option: Props['shape'], props: any) => React.JSX.Element;
./node_modules/recharts/types/cartesian/Bar.d.ts:        barPosition: any;
./node_modules/recharts/types/cartesian/Bar.d.ts:        displayedData: any[];
./node_modules/recharts/types/cartesian/Bar.d.ts:        data: any[];
./node_modules/recharts/types/cartesian/getTicks.d.ts:export declare function getTicks(props: CartesianAxisProps, fontSize?: string, letterSpacing?: string): any[];
./node_modules/recharts/types/cartesian/ReferenceLine.d.ts:    shape?: ReactElement<SVGElement> | ((props: any) => ReactElement<SVGElement>);
./node_modules/recharts/types/cartesian/ReferenceLine.d.ts:export declare const getEndPoints: (scales: any, isFixedX: boolean, isFixedY: boolean, isSegment: boolean, viewBox: CartesianViewBox, position: Props['position'], xAxisOrientation: XAxisProps['orientation'], yAxisOrientation: YAxisProps['orientation'], props: EndPointsPropsSubset) => any[];
./node_modules/recharts/types/cartesian/ReferenceArea.d.ts:    shape?: ReactElement<SVGElement> | ((props: any) => ReactElement<SVGElement>);
./node_modules/recharts/types/cartesian/ReferenceArea.d.ts:    static renderRect: (option: ReferenceAreaProps['shape'], props: any) => React.JSX.Element;
./node_modules/recharts/types/cartesian/ErrorBar.d.ts:    data?: any[];
./node_modules/recharts/types/polar/types.d.ts:    scale: any;
./node_modules/recharts/types/polar/types.d.ts:    scale: any;
./node_modules/recharts/types/polar/PolarRadiusAxis.d.ts:    static renderTickItem(option: Props['tick'], props: any, value: string | number): React.JSX.Element;
./node_modules/recharts/types/polar/RadialBar.d.ts:    value?: any;
./node_modules/recharts/types/polar/RadialBar.d.ts:    payload?: any;
./node_modules/recharts/types/polar/RadialBar.d.ts:    dataKey: string | number | ((obj: any) => any);
./node_modules/recharts/types/polar/RadialBar.d.ts:        props: any;
./node_modules/recharts/types/polar/RadialBar.d.ts:        radiusAxis: any;
./node_modules/recharts/types/polar/RadialBar.d.ts:        angleAxis: any;
./node_modules/recharts/types/polar/RadialBar.d.ts:        displayedData: any[];
./node_modules/recharts/types/polar/RadialBar.d.ts:        stackedData?: any[];
./node_modules/recharts/types/polar/RadialBar.d.ts:        barPosition?: any[];
./node_modules/recharts/types/polar/RadialBar.d.ts:        data: any[];
./node_modules/recharts/types/polar/RadialBar.d.ts:        layout: any;
./node_modules/recharts/types/polar/Pie.d.ts:type PieLabelLine = ReactElement<SVGElement> | ((props: any) => ReactElement<SVGElement>) | SVGProps<SVGPathElement> | boolean;
./node_modules/recharts/types/polar/Pie.d.ts:    payload?: any;
./node_modules/recharts/types/polar/Pie.d.ts:    data?: any[];
./node_modules/recharts/types/polar/Pie.d.ts:    onMouseEnter?: (data: any, index: number, e: React.MouseEvent) => void;
./node_modules/recharts/types/polar/Pie.d.ts:    onMouseLeave?: (data: any, index: number, e: React.MouseEvent) => void;
./node_modules/recharts/types/polar/Pie.d.ts:    onClick?: (data: any, index: number, e: React.MouseEvent) => void;
./node_modules/recharts/types/polar/Pie.d.ts:    [key: string]: any;
./node_modules/recharts/types/polar/Pie.d.ts:    static renderLabelLineItem(option: PieLabelLine, props: any, key: string): React.JSX.Element;
./node_modules/recharts/types/polar/Pie.d.ts:    static renderLabelItem(option: PieLabel, props: any, value: any): React.JSX.Element;
./node_modules/recharts/types/polar/PolarAngleAxis.d.ts:    static renderTickItem(option: PolarAngleAxisProps['tick'], props: any, value: string | number): React.JSX.Element;
./node_modules/recharts/types/polar/Radar.d.ts:    payload?: any;
./node_modules/recharts/types/polar/Radar.d.ts:type RadarDot = ReactElement<SVGElement> | ((props: any) => ReactElement<SVGElement>) | DotProps | boolean;
./node_modules/recharts/types/polar/Radar.d.ts:    shape?: ReactElement<SVGElement> | ((props: any) => ReactElement<SVGElement>);
./node_modules/recharts/types/polar/Radar.d.ts:    label?: any;
./node_modules/recharts/types/polar/Radar.d.ts:    onMouseEnter?: (props: any, e: MouseEvent<SVGPolygonElement>) => void;
./node_modules/recharts/types/polar/Radar.d.ts:    onMouseLeave?: (props: any, e: MouseEvent<SVGPolygonElement>) => void;
./node_modules/recharts/types/polar/Radar.d.ts:    scale: (value: any) => number;
./node_modules/recharts/types/polar/Radar.d.ts:    scale: (value: any) => number;
./node_modules/recharts/types/polar/Radar.d.ts:        displayedData: any[];
./node_modules/recharts/types/polar/Radar.d.ts:    static renderDotItem(option: RadarDot, props: any): React.JSX.Element;
./node_modules/recharts/types/util/LogUtils.d.ts:export declare const warn: (condition: boolean, format: string, ...args: any[]) => void;
./node_modules/recharts/types/util/types.d.ts:    xAxis?: any;
./node_modules/recharts/types/util/types.d.ts:    yAxis?: any;
./node_modules/recharts/types/util/types.d.ts:    width?: any;
./node_modules/recharts/types/util/types.d.ts:    height?: any;
./node_modules/recharts/types/util/types.d.ts:    tick?: SVGProps<SVGTextElement> | ReactElement<SVGElement> | ((props: any) => ReactElement<SVGElement>) | boolean;
./node_modules/recharts/types/util/types.d.ts:    tickFormatter?: (value: any, index: number) => string;
./node_modules/recharts/types/util/types.d.ts:    AxisComp?: any;
./node_modules/recharts/types/util/types.d.ts:    value?: any;
./node_modules/recharts/types/util/types.d.ts:export declare const adaptEventsOfChild: (props: RecordString<any>, data: any, index: number) => RecordString<(e?: Event) => any>;
./node_modules/recharts/types/util/types.d.ts:    GraphicalChild?: any;
./node_modules/recharts/types/util/types.d.ts:    formatAxisMap?: any;
./node_modules/recharts/types/util/types.d.ts:    defaultProps?: any;
./node_modules/recharts/types/util/types.d.ts:    children?: any;
./node_modules/recharts/types/util/types.d.ts:    [k: string]: any;
./node_modules/recharts/types/util/CartesianUtils.d.ts:export declare const formatAxisMap: (props: any, axisMap: any, offset: any, axisType: AxisType, chartName: string) => {};
./node_modules/recharts/types/util/CartesianUtils.d.ts:    static create(obj: any): ScaleHelper;
./node_modules/recharts/types/util/CartesianUtils.d.ts:    constructor(scale: any);
./node_modules/recharts/types/util/CartesianUtils.d.ts:    get domain(): any;
./node_modules/recharts/types/util/CartesianUtils.d.ts:    get range(): any;
./node_modules/recharts/types/util/CartesianUtils.d.ts:    get rangeMin(): any;
./node_modules/recharts/types/util/CartesianUtils.d.ts:    get rangeMax(): any;
./node_modules/recharts/types/util/CartesianUtils.d.ts:    get bandwidth(): any;
./node_modules/recharts/types/util/CartesianUtils.d.ts:    apply(value: any, { bandAware, position }?: {
./node_modules/recharts/types/util/CartesianUtils.d.ts:        position?: any;
./node_modules/recharts/types/util/CartesianUtils.d.ts:    }): any;
./node_modules/recharts/types/util/CartesianUtils.d.ts:    [P in keyof T]: any;
./node_modules/recharts/types/util/CartesianUtils.d.ts:}, options: any) => ScaleResult<T>;
./node_modules/recharts/types/util/CartesianUtils.d.ts:    [P in keyof T]: any;
./node_modules/recharts/types/util/DetectReferenceElementsDomain.d.ts:export declare const detectReferenceElementsDomain: (children: ReactNode[], domain: number[], axisId: string, axisType: string, specifiedTicks?: any[]) => number[];
./node_modules/recharts/types/util/DataUtils.d.ts:export declare const getAnyElementOfObject: (obj: any) => any;
./node_modules/recharts/types/util/ReactUtils.d.ts:export declare const validateWidthHeight: (el: any) => boolean;
./node_modules/recharts/types/util/ReactUtils.d.ts:export declare const renderByOrder: (children: React.ReactElement[], renderMap: any) => React.ReactElement<any, string | React.JSXElementConstructor<any>>[];
./node_modules/recharts/types/util/ReactUtils.d.ts:export declare const parseChildIndex: (child: any, children: any[]) => number;
./node_modules/recharts/types/util/ChartUtils.d.ts:export declare function getValueByDataKey<T>(obj: T, dataKey: DataKey<T>, defaultValue?: any): any;
./node_modules/recharts/types/util/ChartUtils.d.ts:export declare const parseErrorBarsOfAxis: (data: any[], items: any[], dataKey: any, axisType: AxisType, layout?: LayoutType) => NumberDomain | null;
./node_modules/recharts/types/util/ChartUtils.d.ts:export declare const getDomainOfItemsWithSameAxis: (data: any[], items: ReactElement[], type: BaseAxisProps['type'], layout?: LayoutType, filterNil?: boolean) => NumberDomain | CategoricalDomain;
./node_modules/recharts/types/util/ChartUtils.d.ts:    duplicateDomain?: any;
./node_modules/recharts/types/util/ChartUtils.d.ts:    scale?: any;
./node_modules/recharts/types/util/ChartUtils.d.ts:    ticks?: any;
./node_modules/recharts/types/util/ChartUtils.d.ts:    niceTicks?: any;
./node_modules/recharts/types/util/ChartUtils.d.ts:    categoricalDomain?: any;
./node_modules/recharts/types/util/ChartUtils.d.ts:    scale: any;
./node_modules/recharts/types/util/ChartUtils.d.ts:export declare const checkDomainOfScale: (scale: any) => void;
./node_modules/recharts/types/util/ChartUtils.d.ts:export declare const findPositionOfBar: (barPosition: any[], child: ReactNode) => any;
./node_modules/recharts/types/util/ChartUtils.d.ts:export declare const getTicksOfScale: (scale: any, opts: any) => {
./node_modules/recharts/types/util/ChartUtils.d.ts:    niceTicks: any;
./node_modules/recharts/types/util/ChartUtils.d.ts:    axis: any;
./node_modules/recharts/types/util/ChartUtils.d.ts:    offset: any;
./node_modules/recharts/types/util/ChartUtils.d.ts:    entry: any;
./node_modules/recharts/types/util/ChartUtils.d.ts:    numericAxis: any;
./node_modules/recharts/types/util/ChartUtils.d.ts:export declare const parseSpecifiedDomain: (specifiedDomain: any, dataDomain: any, allowDataOverflow?: boolean) => any;
./node_modules/recharts/types/util/ChartUtils.d.ts:export declare const getTooltipItem: (graphicalItem: ReactElement, payload: any) => {
./node_modules/recharts/types/util/ChartUtils.d.ts:    dataKey: any;
./node_modules/recharts/types/util/ChartUtils.d.ts:    unit: any;
./node_modules/recharts/types/util/ChartUtils.d.ts:    formatter: any;
./node_modules/recharts/types/util/ChartUtils.d.ts:    name: any;
./node_modules/recharts/types/util/ChartUtils.d.ts:    color: any;
./node_modules/recharts/types/util/ChartUtils.d.ts:    value: any;
./node_modules/recharts/types/util/ChartUtils.d.ts:    type: any;
./node_modules/recharts/types/util/ChartUtils.d.ts:    payload: any;
./node_modules/recharts/types/util/ChartUtils.d.ts:    chartType: any;
./node_modules/recharts/types/util/ChartUtils.d.ts:    hide: any;
./node_modules/recharts/types/util/Global.d.ts:    set: (key: GlobalConfigKeys | GlobalConfig, value?: any) => void;
./node_modules/recharts/types/util/PolarUtils.d.ts:export declare const formatAxisMap: (props: any, axisMap: any, offset: ChartOffset, axisType: 'angleAxis' | 'radiusAxis', chartName: string) => {};
./node_modules/recharts/types/util/PolarUtils.d.ts:export declare const getTickClassName: (tick?: boolean | SVGProps<SVGTextElement> | ReactElement<SVGElement, string | import("react").JSXElementConstructor<any>> | ((props: any) => ReactElement<SVGElement>)) => string;
./node_modules/recharts/types/util/ShallowEqual.d.ts:export declare function shallowEqual(a: any, b: any): boolean;
./node_modules/recharts/types/chart/ComposedChart.d.ts:        activeLabel: any;
./node_modules/recharts/types/chart/ComposedChart.d.ts:        activePayload: any[];
./node_modules/recharts/types/chart/ComposedChart.d.ts:        xValue: any;
./node_modules/recharts/types/chart/ComposedChart.d.ts:        yValue: any;
./node_modules/recharts/types/chart/ComposedChart.d.ts:        activeLabel: any;
./node_modules/recharts/types/chart/ComposedChart.d.ts:        activePayload: any[];
./node_modules/recharts/types/chart/ComposedChart.d.ts:    inRange(x: number, y: number, scale?: number): any;
./node_modules/recharts/types/chart/ComposedChart.d.ts:    parseEventsOfWrapper(): any;
./node_modules/recharts/types/chart/ComposedChart.d.ts:    handleItemMouseEnter: (el: any) => void;
./node_modules/recharts/types/chart/ComposedChart.d.ts:    handleMouseLeave: (e: any) => void;
./node_modules/recharts/types/chart/ComposedChart.d.ts:    filterFormatItem(item: any, displayName: any, childIndex: any): any;
./node_modules/recharts/types/chart/ComposedChart.d.ts:    renderActivePoints: ({ item, activePoint, basePoint, childIndex, isRange }: any) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>[];
./node_modules/recharts/types/chart/ComposedChart.d.ts:        graphicalItem: any;
./node_modules/recharts/types/chart/ComposedChart.d.ts:        payload: any;
./node_modules/recharts/types/chart/ComposedChart.d.ts:    shouldComponentUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): boolean;
./node_modules/recharts/types/chart/ComposedChart.d.ts:    componentWillReceiveProps?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextContext: any): void;
./node_modules/recharts/types/chart/ComposedChart.d.ts:    UNSAFE_componentWillReceiveProps?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextContext: any): void;
./node_modules/recharts/types/chart/ComposedChart.d.ts:    componentWillUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): void;
./node_modules/recharts/types/chart/ComposedChart.d.ts:    UNSAFE_componentWillUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): void;
./node_modules/recharts/types/chart/RadialBarChart.d.ts:        activeLabel: any;
./node_modules/recharts/types/chart/RadialBarChart.d.ts:        activePayload: any[];
./node_modules/recharts/types/chart/RadialBarChart.d.ts:        xValue: any;
./node_modules/recharts/types/chart/RadialBarChart.d.ts:        yValue: any;
./node_modules/recharts/types/chart/RadialBarChart.d.ts:        activeLabel: any;
./node_modules/recharts/types/chart/RadialBarChart.d.ts:        activePayload: any[];
./node_modules/recharts/types/chart/RadialBarChart.d.ts:    inRange(x: number, y: number, scale?: number): any;
./node_modules/recharts/types/chart/RadialBarChart.d.ts:    parseEventsOfWrapper(): any;
./node_modules/recharts/types/chart/RadialBarChart.d.ts:    handleItemMouseEnter: (el: any) => void;
./node_modules/recharts/types/chart/RadialBarChart.d.ts:    handleMouseLeave: (e: any) => void;
./node_modules/recharts/types/chart/RadialBarChart.d.ts:    filterFormatItem(item: any, displayName: any, childIndex: any): any;
./node_modules/recharts/types/chart/RadialBarChart.d.ts:    renderActivePoints: ({ item, activePoint, basePoint, childIndex, isRange }: any) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>[];
./node_modules/recharts/types/chart/RadialBarChart.d.ts:        graphicalItem: any;
./node_modules/recharts/types/chart/RadialBarChart.d.ts:        payload: any;
./node_modules/recharts/types/chart/RadialBarChart.d.ts:    shouldComponentUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): boolean;
./node_modules/recharts/types/chart/RadialBarChart.d.ts:    componentWillReceiveProps?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextContext: any): void;
./node_modules/recharts/types/chart/RadialBarChart.d.ts:    UNSAFE_componentWillReceiveProps?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextContext: any): void;
./node_modules/recharts/types/chart/RadialBarChart.d.ts:    componentWillUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): void;
./node_modules/recharts/types/chart/RadialBarChart.d.ts:    UNSAFE_componentWillUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): void;
./node_modules/recharts/types/chart/types.d.ts:    orderedTooltipTicks?: any;
./node_modules/recharts/types/chart/types.d.ts:    angleAxisMap?: any;
./node_modules/recharts/types/chart/types.d.ts:    radiusAxisMap?: any;
./node_modules/recharts/types/chart/types.d.ts:    formattedGraphicalItems?: any;
./node_modules/recharts/types/chart/types.d.ts:    activePayload?: any[];
./node_modules/recharts/types/chart/types.d.ts:    activeItem?: any;
./node_modules/recharts/types/chart/types.d.ts:    prevData?: any[];
./node_modules/recharts/types/chart/types.d.ts:    prevChildren?: any;
./node_modules/recharts/types/chart/Sankey.d.ts:    [key: string]: any;
./node_modules/recharts/types/chart/Sankey.d.ts:    nodes: any[];
./node_modules/recharts/types/chart/Sankey.d.ts:type SankeyNodeOptions = ReactElement<SVGElement> | ((props: any) => ReactElement<SVGElement>) | RectangleProps;
./node_modules/recharts/types/chart/Sankey.d.ts:type SankeyLinkOptions = ReactElement<SVGElement> | ((props: any) => ReactElement<SVGElement>) | SVGProps<SVGPathElement>;
./node_modules/recharts/types/chart/Sankey.d.ts:    style?: any;
./node_modules/recharts/types/chart/Sankey.d.ts:    children?: any;
./node_modules/recharts/types/chart/Sankey.d.ts:    onClick?: any;
./node_modules/recharts/types/chart/Sankey.d.ts:    onMouseEnter?: any;
./node_modules/recharts/types/chart/Sankey.d.ts:    onMouseLeave?: any;
./node_modules/recharts/types/chart/Sankey.d.ts:    activeElement?: any;
./node_modules/recharts/types/chart/Sankey.d.ts:    activeElementType?: any;
./node_modules/recharts/types/chart/Sankey.d.ts:        activeElement: any;
./node_modules/recharts/types/chart/Sankey.d.ts:        activeElementType: any;
./node_modules/recharts/types/chart/Sankey.d.ts:    handleMouseEnter(el: React.ReactElement, type: string, e: any): void;
./node_modules/recharts/types/chart/Sankey.d.ts:    handleMouseLeave(el: React.ReactElement, type: string, e: any): void;
./node_modules/recharts/types/chart/Sankey.d.ts:    handleClick(el: React.ReactElement, type: string, e: any): void;
./node_modules/recharts/types/chart/Sankey.d.ts:    static renderLinkItem(option: any, props: any): any;
./node_modules/recharts/types/chart/Sankey.d.ts:    static renderNodeItem(option: any, props: Props): any;
./node_modules/recharts/types/chart/LineChart.d.ts:        activeLabel: any;
./node_modules/recharts/types/chart/LineChart.d.ts:        activePayload: any[];
./node_modules/recharts/types/chart/LineChart.d.ts:        xValue: any;
./node_modules/recharts/types/chart/LineChart.d.ts:        yValue: any;
./node_modules/recharts/types/chart/LineChart.d.ts:        activeLabel: any;
./node_modules/recharts/types/chart/LineChart.d.ts:        activePayload: any[];
./node_modules/recharts/types/chart/LineChart.d.ts:    inRange(x: number, y: number, scale?: number): any;
./node_modules/recharts/types/chart/LineChart.d.ts:    parseEventsOfWrapper(): any;
./node_modules/recharts/types/chart/LineChart.d.ts:    handleItemMouseEnter: (el: any) => void;
./node_modules/recharts/types/chart/LineChart.d.ts:    handleMouseLeave: (e: any) => void;
./node_modules/recharts/types/chart/LineChart.d.ts:    filterFormatItem(item: any, displayName: any, childIndex: any): any;
./node_modules/recharts/types/chart/LineChart.d.ts:    renderActivePoints: ({ item, activePoint, basePoint, childIndex, isRange }: any) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>[];
./node_modules/recharts/types/chart/LineChart.d.ts:        graphicalItem: any;
./node_modules/recharts/types/chart/LineChart.d.ts:        payload: any;
./node_modules/recharts/types/chart/LineChart.d.ts:    shouldComponentUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): boolean;
./node_modules/recharts/types/chart/LineChart.d.ts:    componentWillReceiveProps?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextContext: any): void;
./node_modules/recharts/types/chart/LineChart.d.ts:    UNSAFE_componentWillReceiveProps?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextContext: any): void;
./node_modules/recharts/types/chart/LineChart.d.ts:    componentWillUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): void;
./node_modules/recharts/types/chart/LineChart.d.ts:    UNSAFE_componentWillUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): void;
./node_modules/recharts/types/chart/ScatterChart.d.ts:        activeLabel: any;
./node_modules/recharts/types/chart/ScatterChart.d.ts:        activePayload: any[];
./node_modules/recharts/types/chart/ScatterChart.d.ts:        xValue: any;
./node_modules/recharts/types/chart/ScatterChart.d.ts:        yValue: any;
./node_modules/recharts/types/chart/ScatterChart.d.ts:        activeLabel: any;
./node_modules/recharts/types/chart/ScatterChart.d.ts:        activePayload: any[];
./node_modules/recharts/types/chart/ScatterChart.d.ts:    inRange(x: number, y: number, scale?: number): any;
./node_modules/recharts/types/chart/ScatterChart.d.ts:    parseEventsOfWrapper(): any;
./node_modules/recharts/types/chart/ScatterChart.d.ts:    handleItemMouseEnter: (el: any) => void;
./node_modules/recharts/types/chart/ScatterChart.d.ts:    handleMouseLeave: (e: any) => void;
./node_modules/recharts/types/chart/ScatterChart.d.ts:    filterFormatItem(item: any, displayName: any, childIndex: any): any;
./node_modules/recharts/types/chart/ScatterChart.d.ts:    renderActivePoints: ({ item, activePoint, basePoint, childIndex, isRange }: any) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>[];
./node_modules/recharts/types/chart/ScatterChart.d.ts:        graphicalItem: any;
./node_modules/recharts/types/chart/ScatterChart.d.ts:        payload: any;
./node_modules/recharts/types/chart/ScatterChart.d.ts:    shouldComponentUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): boolean;
./node_modules/recharts/types/chart/ScatterChart.d.ts:    componentWillReceiveProps?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextContext: any): void;
./node_modules/recharts/types/chart/ScatterChart.d.ts:    UNSAFE_componentWillReceiveProps?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextContext: any): void;
./node_modules/recharts/types/chart/ScatterChart.d.ts:    componentWillUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): void;
./node_modules/recharts/types/chart/ScatterChart.d.ts:    UNSAFE_componentWillUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): void;
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:export type CategoricalChartFunc = (nextState: CategoricalChartState, event: any) => void;
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:    data?: any[];
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:    style?: any;
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:    children?: any;
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:        activeLabel: any;
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:        activePayload: any[];
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:        xValue: any;
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:        yValue: any;
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:        activeLabel: any;
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:        activePayload: any[];
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:    inRange(x: number, y: number, scale?: number): any;
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:    parseEventsOfWrapper(): any;
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:    handleItemMouseEnter: (el: any) => void;
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:    handleMouseLeave: (e: any) => void;
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:    filterFormatItem(item: any, displayName: any, childIndex: any): any;
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:    renderActivePoints: ({ item, activePoint, basePoint, childIndex, isRange }: any) => React.ReactElement<any, string | React.JSXElementConstructor<any>>[];
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:        graphicalItem: any;
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:        payload: any;
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:    shouldComponentUpdate?(nextProps: Readonly<CategoricalChartProps>, nextState: Readonly<CategoricalChartState>, nextContext: any): boolean;
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:    componentWillReceiveProps?(nextProps: Readonly<CategoricalChartProps>, nextContext: any): void;
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:    UNSAFE_componentWillReceiveProps?(nextProps: Readonly<CategoricalChartProps>, nextContext: any): void;
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:    componentWillUpdate?(nextProps: Readonly<CategoricalChartProps>, nextState: Readonly<CategoricalChartState>, nextContext: any): void;
./node_modules/recharts/types/chart/generateCategoricalChart.d.ts:    UNSAFE_componentWillUpdate?(nextProps: Readonly<CategoricalChartProps>, nextState: Readonly<CategoricalChartState>, nextContext: any): void;
./node_modules/recharts/types/chart/PieChart.d.ts:        activeLabel: any;
./node_modules/recharts/types/chart/PieChart.d.ts:        activePayload: any[];
./node_modules/recharts/types/chart/PieChart.d.ts:        xValue: any;
./node_modules/recharts/types/chart/PieChart.d.ts:        yValue: any;
./node_modules/recharts/types/chart/PieChart.d.ts:        activeLabel: any;
./node_modules/recharts/types/chart/PieChart.d.ts:        activePayload: any[];
./node_modules/recharts/types/chart/PieChart.d.ts:    inRange(x: number, y: number, scale?: number): any;
./node_modules/recharts/types/chart/PieChart.d.ts:    parseEventsOfWrapper(): any;
./node_modules/recharts/types/chart/PieChart.d.ts:    handleItemMouseEnter: (el: any) => void;
./node_modules/recharts/types/chart/PieChart.d.ts:    handleMouseLeave: (e: any) => void;
./node_modules/recharts/types/chart/PieChart.d.ts:    filterFormatItem(item: any, displayName: any, childIndex: any): any;
./node_modules/recharts/types/chart/PieChart.d.ts:    renderActivePoints: ({ item, activePoint, basePoint, childIndex, isRange }: any) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>[];
./node_modules/recharts/types/chart/PieChart.d.ts:        graphicalItem: any;
./node_modules/recharts/types/chart/PieChart.d.ts:        payload: any;
./node_modules/recharts/types/chart/PieChart.d.ts:    shouldComponentUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): boolean;
./node_modules/recharts/types/chart/PieChart.d.ts:    componentWillReceiveProps?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextContext: any): void;
./node_modules/recharts/types/chart/PieChart.d.ts:    UNSAFE_componentWillReceiveProps?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextContext: any): void;
./node_modules/recharts/types/chart/PieChart.d.ts:    componentWillUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): void;
./node_modules/recharts/types/chart/PieChart.d.ts:    UNSAFE_componentWillUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): void;
./node_modules/recharts/types/chart/AccessibilityManager.d.ts:    keyboardEvent(e: any): void;
./node_modules/recharts/types/chart/SunburstChart.d.ts:    [key: string]: any;
./node_modules/recharts/types/chart/Treemap.d.ts:    data?: any[];
./node_modules/recharts/types/chart/Treemap.d.ts:    style?: any;
./node_modules/recharts/types/chart/Treemap.d.ts:    children?: any;
./node_modules/recharts/types/chart/Treemap.d.ts:    nestIndexContent?: React.ReactElement | ((item: any, i: number) => any);
./node_modules/recharts/types/chart/Treemap.d.ts:    onMouseEnter?: (node: TreemapNode, e: any) => void;
./node_modules/recharts/types/chart/Treemap.d.ts:    onMouseLeave?: (node: TreemapNode, e: any) => void;
./node_modules/recharts/types/chart/Treemap.d.ts:    prevData?: any[];
./node_modules/recharts/types/chart/Treemap.d.ts:        prevData?: any[];
./node_modules/recharts/types/chart/Treemap.d.ts:    handleMouseEnter(node: TreemapNode, e: any): void;
./node_modules/recharts/types/chart/Treemap.d.ts:    handleMouseLeave(node: TreemapNode, e: any): void;
./node_modules/recharts/types/chart/Treemap.d.ts:    renderItem(content: any, nodeProps: TreemapNode, isLeaf: boolean): React.ReactElement;
./node_modules/recharts/types/chart/Treemap.d.ts:    static renderContentItem(content: any, nodeProps: TreemapNode, type: string, colorPanel: string[]): React.ReactElement;
./node_modules/recharts/types/chart/AreaChart.d.ts:        activeLabel: any;
./node_modules/recharts/types/chart/AreaChart.d.ts:        activePayload: any[];
./node_modules/recharts/types/chart/AreaChart.d.ts:        xValue: any;
./node_modules/recharts/types/chart/AreaChart.d.ts:        yValue: any;
./node_modules/recharts/types/chart/AreaChart.d.ts:        activeLabel: any;
./node_modules/recharts/types/chart/AreaChart.d.ts:        activePayload: any[];
./node_modules/recharts/types/chart/AreaChart.d.ts:    inRange(x: number, y: number, scale?: number): any;
./node_modules/recharts/types/chart/AreaChart.d.ts:    parseEventsOfWrapper(): any;
./node_modules/recharts/types/chart/AreaChart.d.ts:    handleItemMouseEnter: (el: any) => void;
./node_modules/recharts/types/chart/AreaChart.d.ts:    handleMouseLeave: (e: any) => void;
./node_modules/recharts/types/chart/AreaChart.d.ts:    filterFormatItem(item: any, displayName: any, childIndex: any): any;
./node_modules/recharts/types/chart/AreaChart.d.ts:    renderActivePoints: ({ item, activePoint, basePoint, childIndex, isRange }: any) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>[];
./node_modules/recharts/types/chart/AreaChart.d.ts:        graphicalItem: any;
./node_modules/recharts/types/chart/AreaChart.d.ts:        payload: any;
./node_modules/recharts/types/chart/AreaChart.d.ts:    shouldComponentUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): boolean;
./node_modules/recharts/types/chart/AreaChart.d.ts:    componentWillReceiveProps?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextContext: any): void;
./node_modules/recharts/types/chart/AreaChart.d.ts:    UNSAFE_componentWillReceiveProps?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextContext: any): void;
./node_modules/recharts/types/chart/AreaChart.d.ts:    componentWillUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): void;
./node_modules/recharts/types/chart/AreaChart.d.ts:    UNSAFE_componentWillUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): void;
./node_modules/recharts/types/chart/RadarChart.d.ts:        activeLabel: any;
./node_modules/recharts/types/chart/RadarChart.d.ts:        activePayload: any[];
./node_modules/recharts/types/chart/RadarChart.d.ts:        xValue: any;
./node_modules/recharts/types/chart/RadarChart.d.ts:        yValue: any;
./node_modules/recharts/types/chart/RadarChart.d.ts:        activeLabel: any;
./node_modules/recharts/types/chart/RadarChart.d.ts:        activePayload: any[];
./node_modules/recharts/types/chart/RadarChart.d.ts:    inRange(x: number, y: number, scale?: number): any;
./node_modules/recharts/types/chart/RadarChart.d.ts:    parseEventsOfWrapper(): any;
./node_modules/recharts/types/chart/RadarChart.d.ts:    handleItemMouseEnter: (el: any) => void;
./node_modules/recharts/types/chart/RadarChart.d.ts:    handleMouseLeave: (e: any) => void;
./node_modules/recharts/types/chart/RadarChart.d.ts:    filterFormatItem(item: any, displayName: any, childIndex: any): any;
./node_modules/recharts/types/chart/RadarChart.d.ts:    renderActivePoints: ({ item, activePoint, basePoint, childIndex, isRange }: any) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>[];
./node_modules/recharts/types/chart/RadarChart.d.ts:        graphicalItem: any;
./node_modules/recharts/types/chart/RadarChart.d.ts:        payload: any;
./node_modules/recharts/types/chart/RadarChart.d.ts:    shouldComponentUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): boolean;
./node_modules/recharts/types/chart/RadarChart.d.ts:    componentWillReceiveProps?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextContext: any): void;
./node_modules/recharts/types/chart/RadarChart.d.ts:    UNSAFE_componentWillReceiveProps?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextContext: any): void;
./node_modules/recharts/types/chart/RadarChart.d.ts:    componentWillUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): void;
./node_modules/recharts/types/chart/RadarChart.d.ts:    UNSAFE_componentWillUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): void;
./node_modules/recharts/types/chart/BarChart.d.ts:        activeLabel: any;
./node_modules/recharts/types/chart/BarChart.d.ts:        activePayload: any[];
./node_modules/recharts/types/chart/BarChart.d.ts:        xValue: any;
./node_modules/recharts/types/chart/BarChart.d.ts:        yValue: any;
./node_modules/recharts/types/chart/BarChart.d.ts:        activeLabel: any;
./node_modules/recharts/types/chart/BarChart.d.ts:        activePayload: any[];
./node_modules/recharts/types/chart/BarChart.d.ts:    inRange(x: number, y: number, scale?: number): any;
./node_modules/recharts/types/chart/BarChart.d.ts:    parseEventsOfWrapper(): any;
./node_modules/recharts/types/chart/BarChart.d.ts:    handleItemMouseEnter: (el: any) => void;
./node_modules/recharts/types/chart/BarChart.d.ts:    handleMouseLeave: (e: any) => void;
./node_modules/recharts/types/chart/BarChart.d.ts:    filterFormatItem(item: any, displayName: any, childIndex: any): any;
./node_modules/recharts/types/chart/BarChart.d.ts:    renderActivePoints: ({ item, activePoint, basePoint, childIndex, isRange }: any) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>[];
./node_modules/recharts/types/chart/BarChart.d.ts:        graphicalItem: any;
./node_modules/recharts/types/chart/BarChart.d.ts:        payload: any;
./node_modules/recharts/types/chart/BarChart.d.ts:    shouldComponentUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): boolean;
./node_modules/recharts/types/chart/BarChart.d.ts:    componentWillReceiveProps?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextContext: any): void;
./node_modules/recharts/types/chart/BarChart.d.ts:    UNSAFE_componentWillReceiveProps?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextContext: any): void;
./node_modules/recharts/types/chart/BarChart.d.ts:    componentWillUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): void;
./node_modules/recharts/types/chart/BarChart.d.ts:    UNSAFE_componentWillUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): void;
./node_modules/recharts/types/chart/FunnelChart.d.ts:        activeLabel: any;
./node_modules/recharts/types/chart/FunnelChart.d.ts:        activePayload: any[];
./node_modules/recharts/types/chart/FunnelChart.d.ts:        xValue: any;
./node_modules/recharts/types/chart/FunnelChart.d.ts:        yValue: any;
./node_modules/recharts/types/chart/FunnelChart.d.ts:        activeLabel: any;
./node_modules/recharts/types/chart/FunnelChart.d.ts:        activePayload: any[];
./node_modules/recharts/types/chart/FunnelChart.d.ts:    inRange(x: number, y: number, scale?: number): any;
./node_modules/recharts/types/chart/FunnelChart.d.ts:    parseEventsOfWrapper(): any;
./node_modules/recharts/types/chart/FunnelChart.d.ts:    handleItemMouseEnter: (el: any) => void;
./node_modules/recharts/types/chart/FunnelChart.d.ts:    handleMouseLeave: (e: any) => void;
./node_modules/recharts/types/chart/FunnelChart.d.ts:    filterFormatItem(item: any, displayName: any, childIndex: any): any;
./node_modules/recharts/types/chart/FunnelChart.d.ts:    renderActivePoints: ({ item, activePoint, basePoint, childIndex, isRange }: any) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>[];
./node_modules/recharts/types/chart/FunnelChart.d.ts:        graphicalItem: any;
./node_modules/recharts/types/chart/FunnelChart.d.ts:        payload: any;
./node_modules/recharts/types/chart/FunnelChart.d.ts:    shouldComponentUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): boolean;
./node_modules/recharts/types/chart/FunnelChart.d.ts:    componentWillReceiveProps?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextContext: any): void;
./node_modules/recharts/types/chart/FunnelChart.d.ts:    UNSAFE_componentWillReceiveProps?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextContext: any): void;
./node_modules/recharts/types/chart/FunnelChart.d.ts:    componentWillUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): void;
./node_modules/recharts/types/chart/FunnelChart.d.ts:    UNSAFE_componentWillUpdate?(nextProps: Readonly<import("./generateCategoricalChart").CategoricalChartProps>, nextState: Readonly<import("./types").CategoricalChartState>, nextContext: any): void;
./node_modules/recharts/types/component/Cursor.d.ts:    activePayload: any[];
./node_modules/recharts/types/component/LabelList.d.ts:    payload?: any;
./node_modules/recharts/types/component/LabelList.d.ts:export type ImplicitLabelListType<T extends Data> = boolean | ReactElement<SVGElement> | ((props: any) => ReactElement<SVGElement>) | Props<T>;
./node_modules/recharts/types/component/DefaultLegendContent.d.ts:export type Formatter = (value: any, entry: {
./node_modules/recharts/types/component/DefaultLegendContent.d.ts:    value: any;
./node_modules/recharts/types/component/DefaultLegendContent.d.ts:        value?: any;
./node_modules/recharts/types/component/DefaultLegendContent.d.ts:    value: any;
./node_modules/recharts/types/component/DefaultLegendContent.d.ts:        value?: any;
./node_modules/recharts/types/component/Label.d.ts:export type ImplicitLabelType = boolean | string | number | ReactElement<SVGElement> | ((props: any) => ReactElement<SVGElement>) | Props;
./node_modules/recharts/types/component/Label.d.ts:    var parseViewBox: (props: any) => ViewBox;
./node_modules/recharts/types/component/DefaultTooltipContent.d.ts:    payload?: any;
./node_modules/recharts/types/component/DefaultTooltipContent.d.ts:    labelFormatter?: (label: any, payload: Array<Payload<TValue, TName>>) => ReactNode;
./node_modules/recharts/types/component/DefaultTooltipContent.d.ts:    label?: any;
./node_modules/recharts/types/numberAxis/Funnel.d.ts:    payload?: any;
./node_modules/recharts/types/numberAxis/Funnel.d.ts:    data?: any[];
./node_modules/recharts/types/numberAxis/Funnel.d.ts:            payload: any;
./node_modules/recharts/types/numberAxis/Funnel.d.ts:            name: any;
./node_modules/recharts/types/numberAxis/Funnel.d.ts:            val: any;
./node_modules/recharts/types/numberAxis/Funnel.d.ts:                name: any;
./node_modules/recharts/types/numberAxis/Funnel.d.ts:                value: any;
./node_modules/recharts/types/numberAxis/Funnel.d.ts:                payload: any;
./node_modules/recharts/types/numberAxis/Funnel.d.ts:        data: any[];
./node_modules/framer-motion/dist/m.d.ts:    [key: string]: any;
./node_modules/framer-motion/dist/m.d.ts:type TargetResolver = (custom: any, current: Target, velocity: Target) => TargetAndTransition | string;
./node_modules/framer-motion/dist/m.d.ts:    mix: (from: any, to: any) => (p: number) => number | string;
./node_modules/framer-motion/dist/m.d.ts:    layoutDependency?: any;
./node_modules/framer-motion/dist/m.d.ts:    custom?: any;
./node_modules/framer-motion/dist/three.d.ts:    [key: string]: any;
./node_modules/framer-motion/dist/three.d.ts:type TargetResolver = (custom: any, current: Target, velocity: Target) => TargetAndTransition | string;
./node_modules/framer-motion/dist/three.d.ts:    mix: (from: any, to: any) => (p: number) => number | string;
./node_modules/framer-motion/dist/three.d.ts:    custom?: any;
./node_modules/framer-motion/dist/three.d.ts:    addEventListener(name: LayoutEvents, handler: any): VoidFunction;
./node_modules/framer-motion/dist/three.d.ts:    notifyListeners(name: LayoutEvents, ...args: any): void;
./node_modules/framer-motion/dist/three.d.ts:    custom?: any;
./node_modules/framer-motion/dist/three.d.ts:    setAnimateFunction: (fn: any) => void;
./node_modules/framer-motion/dist/three.d.ts:        [key: string]: any;
./node_modules/framer-motion/dist/three.d.ts:    getTransformPagePoint(): any;
./node_modules/framer-motion/dist/three.d.ts:    readValue(key: string, target?: string | number | null): any;
./node_modules/framer-motion/dist/three.d.ts:    notify<EventName extends keyof VisualElementEventCallbacks>(eventName: EventName, ...args: any): void;
./node_modules/framer-motion/dist/three.d.ts:    layoutDependency?: any;
./node_modules/framer-motion/dist/three.d.ts:    custom?: any;
./node_modules/framer-motion/dist/three.d.ts:    ProjectionNode?: any;
./node_modules/framer-motion/dist/three.d.ts:declare const isMotionValue: (value: any) => value is MotionValue<any>;
./node_modules/framer-motion/dist/index.d.ts:    custom?: any;
./node_modules/framer-motion/dist/index.d.ts:    [key: string]: any;
./node_modules/framer-motion/dist/index.d.ts:type TargetResolver = (custom: any, current: Target, velocity: Target) => TargetAndTransition | string;
./node_modules/framer-motion/dist/index.d.ts:    mix: (from: any, to: any) => (p: number) => number | string;
./node_modules/framer-motion/dist/index.d.ts:    custom?: any;
./node_modules/framer-motion/dist/index.d.ts:    addEventListener(name: LayoutEvents, handler: any): VoidFunction;
./node_modules/framer-motion/dist/index.d.ts:    notifyListeners(name: LayoutEvents, ...args: any): void;
./node_modules/framer-motion/dist/index.d.ts:    custom?: any;
./node_modules/framer-motion/dist/index.d.ts:    setAnimateFunction: (fn: any) => void;
./node_modules/framer-motion/dist/index.d.ts:        [key: string]: any;
./node_modules/framer-motion/dist/index.d.ts:    getTransformPagePoint(): any;
./node_modules/framer-motion/dist/index.d.ts:    readValue(key: string, target?: string | number | null): any;
./node_modules/framer-motion/dist/index.d.ts:    notify<EventName extends keyof VisualElementEventCallbacks>(eventName: EventName, ...args: any): void;
./node_modules/framer-motion/dist/index.d.ts:type ResolveKeyframes<V extends string | number> = (keyframes: V[], onComplete: OnKeyframesResolved<V>, name?: string, motionValue?: any) => KeyframeResolver<V>;
./node_modules/framer-motion/dist/index.d.ts:    layoutDependency?: any;
./node_modules/framer-motion/dist/index.d.ts:    custom?: any;
./node_modules/framer-motion/dist/index.d.ts:    ProjectionNode?: any;
./node_modules/framer-motion/dist/index.d.ts:declare const isMotionValue: (value: any) => value is MotionValue<any>;
./node_modules/framer-motion/dist/index.d.ts:    attachTimeline(timeline: any): (any: void) => void;
./node_modules/framer-motion/dist/index.d.ts:type Transformer = (v: any) => any;
./node_modules/framer-motion/dist/index.d.ts:    test: (v: any) => boolean;
./node_modules/framer-motion/dist/index.d.ts:    parse: (v: any) => any;
./node_modules/framer-motion/dist/index.d.ts:    default?: any;
./node_modules/framer-motion/dist/index.d.ts:    getAnimatableNone?: (v: any) => any;
./node_modules/framer-motion/dist/index.d.ts:    test: (v: any) => boolean;
./node_modules/framer-motion/dist/index.d.ts:    parse: (v: any) => RGBA | HSLA;
./node_modules/framer-motion/dist/index.d.ts:declare function test(v: any): boolean;
./node_modules/framer-motion/dist/index.d.ts:declare function useAnimatedState(initialState: any): any[];
./node_modules/framer-motion/dist/client.d.ts:    [key: string]: any;
./node_modules/framer-motion/dist/client.d.ts:type TargetResolver = (custom: any, current: Target, velocity: Target) => TargetAndTransition | string;
./node_modules/framer-motion/dist/client.d.ts:    mix: (from: any, to: any) => (p: number) => number | string;
./node_modules/framer-motion/dist/client.d.ts:    layoutDependency?: any;
./node_modules/framer-motion/dist/client.d.ts:    custom?: any;
./node_modules/parse5-parser-stream/dist/index.d.ts:    end(chunk?: any, encoding?: any, callback?: any): any;
./node_modules/parse5-parser-stream/dist/index.d.ts:    on(event: string, handler: (...args: any[]) => void): this;
./node_modules/parse5-parser-stream/dist/cjs/index.d.ts:    end(chunk?: any, encoding?: any, callback?: any): any;
./node_modules/parse5-parser-stream/dist/cjs/index.d.ts:    on(event: string, handler: (...args: any[]) => void): this;
./node_modules/@rushstack/eslint-patch/lib/_patch-base.d.ts:declare let configArrayFactory: any;
./node_modules/@rushstack/eslint-patch/lib/_patch-base.d.ts:    resolve: any;
./node_modules/@rushstack/eslint-patch/lib/_patch-base.d.ts:    normalizePackageName: any;
./node_modules/date-fns-tz/dist/esm/fp/_lib/convertToFP/index.d.ts:export declare function convertToFP(fn: Function, arity: number, curriedArgs: any[]): Function;
./node_modules/date-fns-tz/dist/cjs/fp/_lib/convertToFP/index.d.ts:export declare function convertToFP(fn: Function, arity: number, curriedArgs: any[]): Function;
./node_modules/sass-lookup/node_modules/commander/typings/index.d.ts:  defaultValue?: any;
./node_modules/sass-lookup/node_modules/commander/typings/index.d.ts:  defaultValue?: any;
./node_modules/sass-lookup/node_modules/commander/typings/index.d.ts:  processedArgs: any[];
./node_modules/sass-lookup/node_modules/commander/typings/index.d.ts:  action(fn: (...args: any[]) => void | Promise<void>): this;
./node_modules/sass-lookup/node_modules/commander/typings/index.d.ts:  getOptionValue(key: string): any;
./node_modules/sass-lookup/node_modules/commander/typings/index.d.ts:  on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/dequal/lite/index.d.ts:export function dequal(foo: any, bar: any): boolean;
./node_modules/dequal/index.d.ts:export function dequal(foo: any, bar: any): boolean;
./node_modules/webpack-virtual-modules/lib/virtual-stats.d.ts:    constructor(config: any);
./node_modules/webpack-virtual-modules/src/index.ts:  private _watcher: any = null;
./node_modules/webpack-virtual-modules/src/index.ts:      const finalInputFileSystem: any = this._compiler?.inputFileSystem;
./node_modules/webpack-virtual-modules/src/index.ts:    let finalInputFileSystem: any = this._compiler.inputFileSystem;
./node_modules/webpack-virtual-modules/src/index.ts:      let finalInputFileSystem: any = compiler.inputFileSystem;
./node_modules/axios/index.d.ts:  [key: string]: any;
./node_modules/axios/index.d.ts:  (this: InternalAxiosRequestConfig, data: any, headers: AxiosRequestHeaders): any;
./node_modules/axios/index.d.ts:  (this: InternalAxiosRequestConfig, data: any, headers: AxiosResponseHeaders, status?: number): any;
./node_modules/axios/index.d.ts:  onabort?: ((...args: any) => any) | null;
./node_modules/axios/index.d.ts:  addEventListener?: (...args: any) => any;
./node_modules/axios/index.d.ts:  removeEventListener?: (...args: any) => any;
./node_modules/axios/index.d.ts:  convertValue: (value: any) => any;
./node_modules/axios/index.d.ts:  isVisitable: (value: any) => boolean;
./node_modules/axios/index.d.ts:      value: any,
./node_modules/axios/index.d.ts:  (value: any, defaultEncoder: (value: any) => any): any;
./node_modules/axios/index.d.ts:  params?: any;
./node_modules/axios/index.d.ts:  transport?: any;
./node_modules/axios/index.d.ts:  httpAgent?: any;
./node_modules/axios/index.d.ts:  httpsAgent?: any;
./node_modules/axios/index.d.ts:    FormData?: new (...args: any[]) => object;
./node_modules/axios/index.d.ts:  request?: any;
./node_modules/axios/index.d.ts:      request?: any,
./node_modules/axios/index.d.ts:  request?: any;
./node_modules/axios/index.d.ts:    request?: any,
./node_modules/axios/index.d.ts:  (message?: string, config?: AxiosRequestConfig, request?: any): void;
./node_modules/axios/index.d.ts:type AxiosRequestInterceptorUse<T> = (onFulfilled?: ((value: T) => T | Promise<T>) | null, onRejected?: ((error: any) => any) | null, options?: AxiosInterceptorOptions) => number;
./node_modules/axios/index.d.ts:type AxiosResponseInterceptorUse<T> = (onFulfilled?: ((value: T) => T | Promise<T>) | null, onRejected?: ((error: any) => any) | null) => number;
./node_modules/axios/index.d.ts:  append(name: string, value: any, options?: any): any;
./node_modules/axios/index.d.ts:export function isAxiosError<T = any, D = any>(payload: any): payload is AxiosError<T, D>;
./node_modules/axios/index.d.ts:export function isCancel(value: any): value is Cancel;
./node_modules/cheerio/node_modules/undici/types/dispatcher.d.ts:    onRequestStart?(controller: DispatchController, context: any): void;
./node_modules/cheerio/node_modules/undici/types/websocket.d.ts:    data?: any,
./node_modules/cheerio/node_modules/undici/types/websocket.d.ts:  error?: any
./node_modules/cheerio/node_modules/undici/types/websocket.d.ts:  readonly error: any
./node_modules/cheerio/node_modules/undici/types/fetch.d.ts:  static json (data: any, init?: ResponseInit): Response
./node_modules/cheerio/node_modules/undici/types/webidl.d.ts:  Stringify (V: any): string
./node_modules/cheerio/node_modules/undici/types/webidl.d.ts:  MakeTypeAssertion <I>(I: I): (arg: any) => arg is I
./node_modules/cheerio/node_modules/undici/types/webidl.d.ts:  markAsUncloneable (V: any): void
./node_modules/cheerio/node_modules/undici/types/webidl.d.ts:  [Key: string]: (...args: any[]) => unknown
./node_modules/cheerio/node_modules/undici/types/webidl.d.ts:type IsAssertion<T> = (arg: any) => arg is T
./node_modules/cheerio/node_modules/undici/types/webidl.d.ts:  brandCheckMultiple <Interfaces extends (new () => unknown)[]> (list: Interfaces): (V: any) => asserts V is Interfaces[number]
./node_modules/cheerio/node_modules/undici/types/diagnostics-channel.d.ts:    headers: any;
./node_modules/pdf-lib/node_modules/tslib/tslib.d.ts:export declare function __assign(t: any, ...sources: any[]): any;
./node_modules/pdf-lib/node_modules/tslib/tslib.d.ts:export declare function __rest(t: any, propertyNames: (string | symbol)[]): any;
./node_modules/pdf-lib/node_modules/tslib/tslib.d.ts:export declare function __decorate(decorators: Function[], target: any, key?: string | symbol, desc?: any): any;
./node_modules/pdf-lib/node_modules/tslib/tslib.d.ts:export declare function __metadata(metadataKey: any, metadataValue: any): Function;
./node_modules/pdf-lib/node_modules/tslib/tslib.d.ts:export declare function __awaiter(thisArg: any, _arguments: any, P: Function, generator: Function): any;
./node_modules/pdf-lib/node_modules/tslib/tslib.d.ts:export declare function __generator(thisArg: any, body: Function): any;
./node_modules/pdf-lib/node_modules/tslib/tslib.d.ts:export declare function __exportStar(m: any, exports: any): void;
./node_modules/pdf-lib/node_modules/tslib/tslib.d.ts:export declare function __values(o: any): any;
./node_modules/pdf-lib/node_modules/tslib/tslib.d.ts:export declare function __read(o: any, n?: number): any[];
./node_modules/pdf-lib/node_modules/tslib/tslib.d.ts:export declare function __spread(...args: any[][]): any[];
./node_modules/pdf-lib/node_modules/tslib/tslib.d.ts:export declare function __spreadArrays(...args: any[][]): any[];
./node_modules/pdf-lib/node_modules/tslib/tslib.d.ts:export declare function __await(v: any): any;
./node_modules/pdf-lib/node_modules/tslib/tslib.d.ts:export declare function __asyncGenerator(thisArg: any, _arguments: any, generator: Function): any;
./node_modules/pdf-lib/node_modules/tslib/tslib.d.ts:export declare function __asyncDelegator(o: any): any;
./node_modules/pdf-lib/node_modules/tslib/tslib.d.ts:export declare function __asyncValues(o: any): any;
./node_modules/pdf-lib/node_modules/tslib/tslib.d.ts:export declare function __classPrivateFieldSet<T extends object, V>(receiver: T, privateMap: { has(o: T): boolean, set(o: T, value: V): any }, value: V): V;
./node_modules/pdf-lib/es/types/fontkit.d.ts:    layers: any[];
./node_modules/pdf-lib/es/types/fontkit.d.ts:    render(context: any, size: number): void;
./node_modules/pdf-lib/es/types/fontkit.d.ts:    cff: any;
./node_modules/pdf-lib/es/core/errors.d.ts:    constructor(expected: any | any[], actual: any);
./node_modules/pdf-lib/es/core/errors.d.ts:    constructor(stream: any);
./node_modules/pdf-lib/es/utils/arrays.d.ts:    id: any;
./node_modules/pdf-lib/es/utils/arrays.d.ts:export declare const canBeConvertedToUint8Array: (input: any) => input is string | ArrayBuffer | Uint8Array;
./node_modules/pdf-lib/es/utils/validators.d.ts:export declare const backtick: (val: any) => string;
./node_modules/pdf-lib/es/utils/validators.d.ts:export declare const singleQuote: (val: any) => string;
./node_modules/pdf-lib/es/utils/validators.d.ts:export declare const createValueErrorMsg: (value: any, valueName: string, values: Primitive[]) => string;
./node_modules/pdf-lib/es/utils/validators.d.ts:export declare const assertIsOneOf: (value: any, valueName: string, allowedValues: Primitive[] | {
./node_modules/pdf-lib/es/utils/validators.d.ts:export declare const assertIsOneOfOrUndefined: (value: any, valueName: string, allowedValues: Primitive[] | {
./node_modules/pdf-lib/es/utils/validators.d.ts:export declare const assertIsSubset: (values: any[], valueName: string, allowedValues: Primitive[] | {
./node_modules/pdf-lib/es/utils/validators.d.ts:export declare const getType: (val: any) => any;
./node_modules/pdf-lib/es/utils/validators.d.ts:export declare const isType: (value: any, type: TypeDescriptor) => boolean;
./node_modules/pdf-lib/es/utils/validators.d.ts:export declare const createTypeErrorMsg: (value: any, valueName: string, types: TypeDescriptor[]) => string;
./node_modules/pdf-lib/es/utils/validators.d.ts:export declare const assertIs: (value: any, valueName: string, types: TypeDescriptor[]) => void;
./node_modules/pdf-lib/es/utils/validators.d.ts:export declare const assertOrUndefined: (value: any, valueName: string, types: TypeDescriptor[]) => void;
./node_modules/pdf-lib/es/utils/validators.d.ts:export declare const assertEachIs: (values: any[], valueName: string, types: TypeDescriptor[]) => void;
./node_modules/pdf-lib/es/utils/validators.d.ts:export declare const assertRange: (value: any, valueName: string, min: number, max: number) => void;
./node_modules/pdf-lib/es/utils/validators.d.ts:export declare const assertRangeOrUndefined: (value: any, valueName: string, min: number, max: number) => void;
./node_modules/pdf-lib/es/utils/validators.d.ts:export declare const assertMultiple: (value: any, valueName: string, multiplier: number) => void;
./node_modules/pdf-lib/es/utils/validators.d.ts:export declare const assertInteger: (value: any, valueName: string) => void;
./node_modules/pdf-lib/es/utils/objects.d.ts:export declare const values: (obj: any) => any[];
./node_modules/pdf-lib/es/utils/objects.d.ts:export declare const StandardFontValues: any[];
./node_modules/pdf-lib/es/utils/objects.d.ts:export declare const isStandardFont: (input: any) => input is FontNames;
./node_modules/pdf-lib/es/api/errors.d.ts:    constructor(name: string, expected: any, actual: any);
./node_modules/pdf-lib/es/api/errors.d.ts:    constructor(onValue: any);
./node_modules/pdf-lib/ts3.4/es/types/fontkit.d.ts:    layers: any[];
./node_modules/pdf-lib/ts3.4/es/types/fontkit.d.ts:    render(context: any, size: number): void;
./node_modules/pdf-lib/ts3.4/es/types/fontkit.d.ts:    cff: any;
./node_modules/pdf-lib/ts3.4/es/core/errors.d.ts:    constructor(expected: any | any[], actual: any);
./node_modules/pdf-lib/ts3.4/es/core/errors.d.ts:    constructor(stream: any);
./node_modules/pdf-lib/ts3.4/es/utils/arrays.d.ts:    id: any;
./node_modules/pdf-lib/ts3.4/es/utils/arrays.d.ts:export declare const canBeConvertedToUint8Array: (input: any) => input is string | ArrayBuffer | Uint8Array;
./node_modules/pdf-lib/ts3.4/es/utils/validators.d.ts:export declare const backtick: (val: any) => string;
./node_modules/pdf-lib/ts3.4/es/utils/validators.d.ts:export declare const singleQuote: (val: any) => string;
./node_modules/pdf-lib/ts3.4/es/utils/validators.d.ts:export declare const createValueErrorMsg: (value: any, valueName: string, values: Primitive[]) => string;
./node_modules/pdf-lib/ts3.4/es/utils/validators.d.ts:export declare const assertIsOneOf: (value: any, valueName: string, allowedValues: Primitive[] | {
./node_modules/pdf-lib/ts3.4/es/utils/validators.d.ts:export declare const assertIsOneOfOrUndefined: (value: any, valueName: string, allowedValues: Primitive[] | {
./node_modules/pdf-lib/ts3.4/es/utils/validators.d.ts:export declare const assertIsSubset: (values: any[], valueName: string, allowedValues: Primitive[] | {
./node_modules/pdf-lib/ts3.4/es/utils/validators.d.ts:export declare const getType: (val: any) => any;
./node_modules/pdf-lib/ts3.4/es/utils/validators.d.ts:export declare const isType: (value: any, type: TypeDescriptor) => boolean;
./node_modules/pdf-lib/ts3.4/es/utils/validators.d.ts:export declare const createTypeErrorMsg: (value: any, valueName: string, types: TypeDescriptor[]) => string;
./node_modules/pdf-lib/ts3.4/es/utils/validators.d.ts:export declare const assertIs: (value: any, valueName: string, types: TypeDescriptor[]) => void;
./node_modules/pdf-lib/ts3.4/es/utils/validators.d.ts:export declare const assertOrUndefined: (value: any, valueName: string, types: TypeDescriptor[]) => void;
./node_modules/pdf-lib/ts3.4/es/utils/validators.d.ts:export declare const assertEachIs: (values: any[], valueName: string, types: TypeDescriptor[]) => void;
./node_modules/pdf-lib/ts3.4/es/utils/validators.d.ts:export declare const assertRange: (value: any, valueName: string, min: number, max: number) => void;
./node_modules/pdf-lib/ts3.4/es/utils/validators.d.ts:export declare const assertRangeOrUndefined: (value: any, valueName: string, min: number, max: number) => void;
./node_modules/pdf-lib/ts3.4/es/utils/validators.d.ts:export declare const assertMultiple: (value: any, valueName: string, multiplier: number) => void;
./node_modules/pdf-lib/ts3.4/es/utils/validators.d.ts:export declare const assertInteger: (value: any, valueName: string) => void;
./node_modules/pdf-lib/ts3.4/es/utils/objects.d.ts:export declare const values: (obj: any) => any[];
./node_modules/pdf-lib/ts3.4/es/utils/objects.d.ts:export declare const StandardFontValues: any[];
./node_modules/pdf-lib/ts3.4/es/utils/objects.d.ts:export declare const isStandardFont: (input: any) => input is FontNames;
./node_modules/pdf-lib/ts3.4/es/api/errors.d.ts:    constructor(name: string, expected: any, actual: any);
./node_modules/pdf-lib/ts3.4/es/api/errors.d.ts:    constructor(onValue: any);
./node_modules/pdf-lib/ts3.4/apps/deno/dummy.d.ts:declare const ParseSpeeds: any;
./node_modules/pdf-lib/ts3.4/apps/deno/dummy.d.ts:declare const PDFPage: any;
./node_modules/pdf-lib/ts3.4/apps/deno/dummy.d.ts:declare const clip: any;
./node_modules/pdf-lib/ts3.4/apps/deno/dummy.d.ts:declare const clipEvenOdd: any;
./node_modules/pdf-lib/ts3.4/apps/deno/dummy.d.ts:declare const closePath: any;
./node_modules/pdf-lib/ts3.4/apps/deno/dummy.d.ts:declare const cmyk: any;
./node_modules/pdf-lib/ts3.4/apps/deno/dummy.d.ts:declare const degrees: any;
./node_modules/pdf-lib/ts3.4/apps/deno/dummy.d.ts:declare const drawRectangle: any;
./node_modules/pdf-lib/ts3.4/apps/deno/dummy.d.ts:declare const endPath: any;
./node_modules/pdf-lib/ts3.4/apps/deno/dummy.d.ts:declare const grayscale: any;
./node_modules/pdf-lib/ts3.4/apps/deno/dummy.d.ts:declare const LineCapStyle: any;
./node_modules/pdf-lib/ts3.4/apps/deno/dummy.d.ts:declare const LineJoinStyle: any;
./node_modules/pdf-lib/ts3.4/apps/deno/dummy.d.ts:declare const typedArrayFor: any;
./node_modules/pdf-lib/ts3.4/apps/deno/dummy.d.ts:declare const lineTo: any;
./node_modules/pdf-lib/ts3.4/apps/deno/dummy.d.ts:declare const PDFDocument: any;
./node_modules/pdf-lib/ts3.4/apps/deno/dummy.d.ts:declare const popGraphicsState: any;
./node_modules/pdf-lib/ts3.4/apps/deno/dummy.d.ts:declare const pushGraphicsState: any;
./node_modules/pdf-lib/ts3.4/apps/deno/dummy.d.ts:declare const rgb: any;
./node_modules/pdf-lib/ts3.4/apps/deno/dummy.d.ts:declare const setLineJoin: any;
./node_modules/pdf-lib/ts3.4/apps/deno/dummy.d.ts:declare const StandardFonts: any;
./node_modules/pdf-lib/ts3.4/cjs/types/fontkit.d.ts:    layers: any[];
./node_modules/pdf-lib/ts3.4/cjs/types/fontkit.d.ts:    render(context: any, size: number): void;
./node_modules/pdf-lib/ts3.4/cjs/types/fontkit.d.ts:    cff: any;
./node_modules/pdf-lib/ts3.4/cjs/core/errors.d.ts:    constructor(expected: any | any[], actual: any);
./node_modules/pdf-lib/ts3.4/cjs/core/errors.d.ts:    constructor(stream: any);
./node_modules/pdf-lib/ts3.4/cjs/utils/arrays.d.ts:    id: any;
./node_modules/pdf-lib/ts3.4/cjs/utils/arrays.d.ts:export declare const canBeConvertedToUint8Array: (input: any) => input is string | Uint8Array | ArrayBuffer;
./node_modules/pdf-lib/ts3.4/cjs/utils/validators.d.ts:export declare const backtick: (val: any) => string;
./node_modules/pdf-lib/ts3.4/cjs/utils/validators.d.ts:export declare const singleQuote: (val: any) => string;
./node_modules/pdf-lib/ts3.4/cjs/utils/validators.d.ts:export declare const createValueErrorMsg: (value: any, valueName: string, values: Primitive[]) => string;
./node_modules/pdf-lib/ts3.4/cjs/utils/validators.d.ts:export declare const assertIsOneOf: (value: any, valueName: string, allowedValues: Primitive[] | {
./node_modules/pdf-lib/ts3.4/cjs/utils/validators.d.ts:export declare const assertIsOneOfOrUndefined: (value: any, valueName: string, allowedValues: Primitive[] | {
./node_modules/pdf-lib/ts3.4/cjs/utils/validators.d.ts:export declare const assertIsSubset: (values: any[], valueName: string, allowedValues: Primitive[] | {
./node_modules/pdf-lib/ts3.4/cjs/utils/validators.d.ts:export declare const getType: (val: any) => any;
./node_modules/pdf-lib/ts3.4/cjs/utils/validators.d.ts:export declare const isType: (value: any, type: TypeDescriptor) => boolean;
./node_modules/pdf-lib/ts3.4/cjs/utils/validators.d.ts:export declare const createTypeErrorMsg: (value: any, valueName: string, types: TypeDescriptor[]) => string;
./node_modules/pdf-lib/ts3.4/cjs/utils/validators.d.ts:export declare const assertIs: (value: any, valueName: string, types: TypeDescriptor[]) => void;
./node_modules/pdf-lib/ts3.4/cjs/utils/validators.d.ts:export declare const assertOrUndefined: (value: any, valueName: string, types: TypeDescriptor[]) => void;
./node_modules/pdf-lib/ts3.4/cjs/utils/validators.d.ts:export declare const assertEachIs: (values: any[], valueName: string, types: TypeDescriptor[]) => void;
./node_modules/pdf-lib/ts3.4/cjs/utils/validators.d.ts:export declare const assertRange: (value: any, valueName: string, min: number, max: number) => void;
./node_modules/pdf-lib/ts3.4/cjs/utils/validators.d.ts:export declare const assertRangeOrUndefined: (value: any, valueName: string, min: number, max: number) => void;
./node_modules/pdf-lib/ts3.4/cjs/utils/validators.d.ts:export declare const assertMultiple: (value: any, valueName: string, multiplier: number) => void;
./node_modules/pdf-lib/ts3.4/cjs/utils/validators.d.ts:export declare const assertInteger: (value: any, valueName: string) => void;
./node_modules/pdf-lib/ts3.4/cjs/utils/objects.d.ts:export declare const values: (obj: any) => any[];
./node_modules/pdf-lib/ts3.4/cjs/utils/objects.d.ts:export declare const StandardFontValues: any[];
./node_modules/pdf-lib/ts3.4/cjs/utils/objects.d.ts:export declare const isStandardFont: (input: any) => input is FontNames;
./node_modules/pdf-lib/ts3.4/cjs/api/errors.d.ts:    constructor(name: string, expected: any, actual: any);
./node_modules/pdf-lib/ts3.4/cjs/api/errors.d.ts:    constructor(onValue: any);
./node_modules/pdf-lib/src/types/fontkit.ts:  layers: any[];
./node_modules/pdf-lib/src/types/fontkit.ts:  render(context: any, size: number): void;
./node_modules/pdf-lib/src/types/fontkit.ts:  cff: any;
./node_modules/pdf-lib/src/core/PDFContext.ts:  lookupMaybe(ref: LookupKey, ...types: any[]) {
./node_modules/pdf-lib/src/core/PDFContext.ts:  lookup(ref: LookupKey, ...types: any[]) {
./node_modules/pdf-lib/src/core/errors.ts:  constructor(expected: any | any[], actual: any) {
./node_modules/pdf-lib/src/core/errors.ts:    const name = (t: any) => t?.name ?? t?.constructor?.name;
./node_modules/pdf-lib/src/core/errors.ts:  constructor(stream: any) {
./node_modules/pdf-lib/src/core/objects/PDFName.ts:  private constructor(enforcer: any, name: string) {
./node_modules/pdf-lib/src/core/objects/PDFArray.ts:  lookupMaybe(index: number, ...types: any[]) {
./node_modules/pdf-lib/src/core/objects/PDFArray.ts:  lookup(index: number, ...types: any[]) {
./node_modules/pdf-lib/src/core/objects/PDFDict.ts:  lookupMaybe(key: PDFName, ...types: any[]) {
./node_modules/pdf-lib/src/core/objects/PDFDict.ts:  lookup(key: PDFName, ...types: any[]) {
./node_modules/pdf-lib/src/core/objects/PDFRef.ts:    enforcer: any,
./node_modules/pdf-lib/src/core/objects/PDFBool.ts:  private constructor(enforcer: any, value: boolean) {
./node_modules/pdf-lib/src/utils/objects.ts:export const values = (obj: any) => Object.keys(obj).map((k) => obj[k]);
./node_modules/pdf-lib/src/utils/objects.ts:export const isStandardFont = (input: any): input is FontNames =>
./node_modules/pdf-lib/src/utils/validators.ts:export const backtick = (val: any) => `\`${val}\``;
./node_modules/pdf-lib/src/utils/validators.ts:export const singleQuote = (val: any) => `'${val}'`;
./node_modules/pdf-lib/src/utils/validators.ts:const formatValue = (value: any) => {
./node_modules/pdf-lib/src/utils/validators.ts:  value: any,
./node_modules/pdf-lib/src/utils/validators.ts:  value: any,
./node_modules/pdf-lib/src/utils/validators.ts:  value: any,
./node_modules/pdf-lib/src/utils/validators.ts:  values: any[],
./node_modules/pdf-lib/src/utils/validators.ts:export const getType = (val: any) => {
./node_modules/pdf-lib/src/utils/validators.ts:export const isType = (value: any, type: TypeDescriptor) => {
./node_modules/pdf-lib/src/utils/validators.ts:  value: any,
./node_modules/pdf-lib/src/utils/validators.ts:  value: any,
./node_modules/pdf-lib/src/utils/validators.ts:  value: any,
./node_modules/pdf-lib/src/utils/validators.ts:  values: any[],
./node_modules/pdf-lib/src/utils/validators.ts:  value: any,
./node_modules/pdf-lib/src/utils/validators.ts:  value: any,
./node_modules/pdf-lib/src/utils/validators.ts:  value: any,
./node_modules/pdf-lib/src/utils/validators.ts:export const assertInteger = (value: any, valueName: string) => {
./node_modules/pdf-lib/src/utils/arrays.ts:export const byAscendingId = <T extends { id: any }>(a: T, b: T) => a.id - b.id;
./node_modules/pdf-lib/src/utils/arrays.ts:  input: any,
./node_modules/pdf-lib/src/api/form/PDFRadioGroup.ts:  // rg.updateAppearances((field: any, widget: any) => {
./node_modules/pdf-lib/src/api/errors.ts:  constructor(name: string, expected: any, actual: any) {
./node_modules/pdf-lib/src/api/errors.ts:  constructor(onValue: any) {
./node_modules/pdf-lib/cjs/types/fontkit.d.ts:    layers: any[];
./node_modules/pdf-lib/cjs/types/fontkit.d.ts:    render(context: any, size: number): void;
./node_modules/pdf-lib/cjs/types/fontkit.d.ts:    cff: any;
./node_modules/pdf-lib/cjs/core/errors.d.ts:    constructor(expected: any | any[], actual: any);
./node_modules/pdf-lib/cjs/core/errors.d.ts:    constructor(stream: any);
./node_modules/pdf-lib/cjs/utils/arrays.d.ts:    id: any;
./node_modules/pdf-lib/cjs/utils/arrays.d.ts:export declare const canBeConvertedToUint8Array: (input: any) => input is string | Uint8Array | ArrayBuffer;
./node_modules/pdf-lib/cjs/utils/validators.d.ts:export declare const backtick: (val: any) => string;
./node_modules/pdf-lib/cjs/utils/validators.d.ts:export declare const singleQuote: (val: any) => string;
./node_modules/pdf-lib/cjs/utils/validators.d.ts:export declare const createValueErrorMsg: (value: any, valueName: string, values: Primitive[]) => string;
./node_modules/pdf-lib/cjs/utils/validators.d.ts:export declare const assertIsOneOf: (value: any, valueName: string, allowedValues: Primitive[] | {
./node_modules/pdf-lib/cjs/utils/validators.d.ts:export declare const assertIsOneOfOrUndefined: (value: any, valueName: string, allowedValues: Primitive[] | {
./node_modules/pdf-lib/cjs/utils/validators.d.ts:export declare const assertIsSubset: (values: any[], valueName: string, allowedValues: Primitive[] | {
./node_modules/pdf-lib/cjs/utils/validators.d.ts:export declare const getType: (val: any) => any;
./node_modules/pdf-lib/cjs/utils/validators.d.ts:export declare const isType: (value: any, type: TypeDescriptor) => boolean;
./node_modules/pdf-lib/cjs/utils/validators.d.ts:export declare const createTypeErrorMsg: (value: any, valueName: string, types: TypeDescriptor[]) => string;
./node_modules/pdf-lib/cjs/utils/validators.d.ts:export declare const assertIs: (value: any, valueName: string, types: TypeDescriptor[]) => void;
./node_modules/pdf-lib/cjs/utils/validators.d.ts:export declare const assertOrUndefined: (value: any, valueName: string, types: TypeDescriptor[]) => void;
./node_modules/pdf-lib/cjs/utils/validators.d.ts:export declare const assertEachIs: (values: any[], valueName: string, types: TypeDescriptor[]) => void;
./node_modules/pdf-lib/cjs/utils/validators.d.ts:export declare const assertRange: (value: any, valueName: string, min: number, max: number) => void;
./node_modules/pdf-lib/cjs/utils/validators.d.ts:export declare const assertRangeOrUndefined: (value: any, valueName: string, min: number, max: number) => void;
./node_modules/pdf-lib/cjs/utils/validators.d.ts:export declare const assertMultiple: (value: any, valueName: string, multiplier: number) => void;
./node_modules/pdf-lib/cjs/utils/validators.d.ts:export declare const assertInteger: (value: any, valueName: string) => void;
./node_modules/pdf-lib/cjs/utils/objects.d.ts:export declare const values: (obj: any) => any[];
./node_modules/pdf-lib/cjs/utils/objects.d.ts:export declare const StandardFontValues: any[];
./node_modules/pdf-lib/cjs/utils/objects.d.ts:export declare const isStandardFont: (input: any) => input is FontNames;
./node_modules/pdf-lib/cjs/api/errors.d.ts:    constructor(name: string, expected: any, actual: any);
./node_modules/pdf-lib/cjs/api/errors.d.ts:    constructor(onValue: any);
./node_modules/ajv/lib/ajv.d.ts:    validate(schemaKeyRef: object | string | boolean, data: any): boolean | PromiseLike<any>;
./node_modules/ajv/lib/ajv.d.ts:    log(...args: any[]): any;
./node_modules/ajv/lib/ajv.d.ts:    warn(...args: any[]): any;
./node_modules/ajv/lib/ajv.d.ts:    error(...args: any[]): any;
./node_modules/ajv/lib/ajv.d.ts:      data: any,
./node_modules/ajv/lib/ajv.d.ts:    compile?: (schema: any, parentSchema: object, it: CompilationContext) => ValidateFunction;
./node_modules/ajv/lib/ajv.d.ts:    macro?: (schema: any, parentSchema: object, it: CompilationContext) => object | boolean;
./node_modules/ajv/lib/ajv.d.ts:    inline?: (it: CompilationContext, keyword: string, schema: any, parentSchema: object) => string;
./node_modules/ajv/lib/ajv.d.ts:    schema: any;
./node_modules/ajv/lib/ajv.d.ts:      copy(obj: any, target?: any): any;
./node_modules/ajv/lib/ajv.d.ts:      equal(obj: any, target: any): boolean;
./node_modules/ajv/lib/ajv.d.ts:      schemaHasRules(schema: object, rules: any): string;
./node_modules/ajv/lib/ajv.d.ts:      schema: any,
./node_modules/ajv/lib/ajv.d.ts:      data: any,
./node_modules/ajv/lib/ajv.d.ts:    schema?: any;
./node_modules/ajv/lib/ajv.d.ts:    data?: any;
./node_modules/@ts-graphviz/common/lib/common.d.ts:    new (...args: any[]): EdgeModel;
./node_modules/@ts-graphviz/common/lib/common.d.ts:    new (...args: any[]): NodeModel;
./node_modules/@ts-graphviz/common/lib/common.d.ts:    new (...args: any[]): RootGraphModel;
./node_modules/@ts-graphviz/common/lib/common.d.ts:    new (...args: any[]): SubgraphModel;
./node_modules/@ts-graphviz/ast/lib/ast.d.ts:    createElement<T extends ASTNode>(type: T['type'], props: any, children?: ASTChildNode<T>[]): T;
./node_modules/@discoveryjs/json-ext/index.d.ts:        | ((this: any, key: string, value: any) => any)
./node_modules/@discoveryjs/json-ext/index.d.ts:    export function stringifyStream(value: any, replacer?: TReplacer, space?: TSpace): Readable;
./node_modules/@discoveryjs/json-ext/index.d.ts:        value: any,
./node_modules/@discoveryjs/json-ext/index.d.ts:        circular: any[];
./node_modules/@discoveryjs/json-ext/index.d.ts:        duplicate: any[];
./node_modules/@discoveryjs/json-ext/index.d.ts:        async: any[];
./node_modules/winston/lib/winston/transports/index.d.ts:    ssl?: any;
./node_modules/winston/lib/winston/transports/index.d.ts:    replacer?: (key: string, value: any) => any;
./node_modules/winston/index.d.ts:    fields: any;
./node_modules/winston/index.d.ts:    done(info?: any): boolean;
./node_modules/winston/index.d.ts:    [optionName: string]: any;
./node_modules/winston/index.d.ts:    (level: string, message: string, ...meta: any[]): Logger;
./node_modules/winston/index.d.ts:    (level: string, message: any): Logger;
./node_modules/winston/index.d.ts:    (message: string, ...meta: any[]): Logger;
./node_modules/winston/index.d.ts:    (message: any): Logger;
./node_modules/winston/index.d.ts:    defaultMeta?: any;
./node_modules/winston/index.d.ts:    exceptionHandlers?: any;
./node_modules/winston/index.d.ts:    rejectionHandlers?: any;
./node_modules/winston/index.d.ts:    defaultMeta?: any;
./node_modules/winston/index.d.ts:      callback?: (err: Error, results: any) => void
./node_modules/winston/index.d.ts:    ): any;
./node_modules/winston/index.d.ts:    stream(options?: any): NodeJS.ReadableStream;
./node_modules/winston/index.d.ts:    callback?: (err: Error, results: any) => void
./node_modules/winston/index.d.ts:  let stream: (options?: any) => NodeJS.ReadableStream;
./node_modules/jest-diff/node_modules/pretty-format/build/index.d.ts:    val: any,
./node_modules/jest-diff/node_modules/pretty-format/build/index.d.ts:declare type Test = (arg0: any) => boolean;
./node_modules/jest-diff/build/index.d.ts:  a: any,
./node_modules/jest-diff/build/index.d.ts:  b: any,
./node_modules/fflate/esm/browser.d.ts:    push(chunk: Uint8Array, final?: boolean): any;
./node_modules/fflate/lib/index.d.ts:    push(chunk: Uint8Array, final?: boolean): any;
./node_modules/@tremor/react/dist/contexts/SelectedValueContext.d.ts:    selectedValue: any;
./node_modules/@tremor/react/dist/contexts/SelectedValueContext.d.ts:    handleValueChange?: (value: any) => void;
./node_modules/@tremor/react/dist/components/chart-elements/common/ChartTooltip.d.ts:    payload: any;
./node_modules/@tremor/react/dist/components/chart-elements/common/utils.d.ts:export declare const constructCategories: (data: any[], color?: string) => string[];
./node_modules/@tremor/react/dist/components/chart-elements/common/utils.d.ts:export declare function deepEqual(obj1: any, obj2: any): boolean;
./node_modules/@tremor/react/dist/components/chart-elements/common/utils.d.ts:export declare function hasOnlyOneValueForThisKey(array: any[], keyToCheck: string): boolean;
./node_modules/@tremor/react/dist/components/chart-elements/common/BaseChartProps.d.ts:    data: any[];
./node_modules/@tremor/react/dist/components/chart-elements/common/ChartLegend.d.ts:declare const ChartLegend: ({ payload }: any, categoryColors: Map<string, Color | string>, setLegendHeight: React.Dispatch<React.SetStateAction<number>>, activeLegend: string | undefined, onClick?: ((category: string, color: Color | string) => void) | undefined, enableLegendSlider?: boolean) => React.JSX.Element;
./node_modules/@tremor/react/dist/components/chart-elements/ScatterChart/ScatterChartTooltip.d.ts:    payload: any;
./node_modules/@tremor/react/dist/components/chart-elements/ScatterChart/ScatterChartTooltip.d.ts:    axis: any;
./node_modules/@tremor/react/dist/components/chart-elements/ScatterChart/ScatterChart.d.ts:    data: any[];
./node_modules/@tremor/react/dist/components/chart-elements/DonutChart/inputParser.d.ts:export declare const parseData: (data: any[], colors: (Color | string)[]) => any[];
./node_modules/@tremor/react/dist/components/chart-elements/DonutChart/inputParser.d.ts:export declare const parseLabelInput: (labelInput: string | undefined, valueFormatter: ValueFormatter, data: any[], category: string) => string;
./node_modules/@tremor/react/dist/components/chart-elements/DonutChart/DonutChart.d.ts:    data: any[];
./node_modules/@tremor/react/dist/components/chart-elements/DonutChart/DonutChartTooltip.d.ts:    payload: any;
./node_modules/@tremor/react/dist/components/input-elements/Textarea/Textarea.d.ts:    onValueChange?: (value: any) => void;
./node_modules/@tremor/react/dist/components/input-elements/BaseInput.d.ts:    onValueChange?: (value: any) => void;
./node_modules/@tremor/react/dist/components/spark-elements/common/BaseSparkChartProps.d.ts:    data: any[];
./node_modules/@tremor/react/dist/lib/utils.d.ts:export declare const isValueInArray: (value: any, array: any[]) => boolean;
./node_modules/@tremor/react/dist/index.d.ts:    data: any[];
./node_modules/@tremor/react/dist/index.d.ts:    data: any[];
./node_modules/@tremor/react/dist/index.d.ts:    data: any[];
./node_modules/@tremor/react/dist/index.d.ts:    onValueChange?: (value: any) => void;
./node_modules/@tremor/react/dist/index.d.ts:    onValueChange?: (value: any) => void;
./node_modules/@tremor/react/dist/index.d.ts:    data: any[];
./node_modules/@tremor/react/dist/assets/LoadingSpinner.d.ts:    [x: string]: any;
./node_modules/@tremor/react/dist/assets/DoubleArrowRightHeadIcon.d.ts:    [x: string]: any;
./node_modules/@tremor/react/dist/assets/ArrowUpRightIcon.d.ts:    [x: string]: any;
./node_modules/@tremor/react/dist/assets/ArrowDownIcon.d.ts:    [x: string]: any;
./node_modules/@tremor/react/dist/assets/PlusIcon.d.ts:    [x: string]: any;
./node_modules/@tremor/react/dist/assets/EyeOffIcon.d.ts:    [x: string]: any;
./node_modules/@tremor/react/dist/assets/CalendarIcon.d.ts:    [x: string]: any;
./node_modules/@tremor/react/dist/assets/XCircleIcon.d.ts:    [x: string]: any;
./node_modules/@tremor/react/dist/assets/XIcon.d.ts:    [x: string]: any;
./node_modules/@tremor/react/dist/assets/ArrowRightIcon.d.ts:    [x: string]: any;
./node_modules/@tremor/react/dist/assets/ArrowDownHeadIcon.d.ts:    [x: string]: any;
./node_modules/@tremor/react/dist/assets/MinusIcon.d.ts:    [x: string]: any;
./node_modules/@tremor/react/dist/assets/ChevronRightFill.d.ts:    [x: string]: any;
./node_modules/@tremor/react/dist/assets/SearchIcon.d.ts:    [x: string]: any;
./node_modules/@tremor/react/dist/assets/DoubleArrowLeftHeadIcon.d.ts:    [x: string]: any;
./node_modules/@tremor/react/dist/assets/ArrowLeftHeadIcon.d.ts:    [x: string]: any;
./node_modules/@tremor/react/dist/assets/ArrowDownRightIcon.d.ts:    [x: string]: any;
./node_modules/@tremor/react/dist/assets/EyeIcon.d.ts:    [x: string]: any;
./node_modules/@tremor/react/dist/assets/ArrowUpHeadIcon.d.ts:    [x: string]: any;
./node_modules/@tremor/react/dist/assets/ArrowUpIcon.d.ts:    [x: string]: any;
./node_modules/@tremor/react/dist/assets/ArrowRightHeadIcon.d.ts:    [x: string]: any;
./node_modules/@tremor/react/dist/assets/ChevronLeftFill.d.ts:    [x: string]: any;
./node_modules/@tremor/react/dist/assets/ExclamationFilledIcon.d.ts:    [x: string]: any;
./node_modules/@tremor/react/node_modules/date-fns/fp/types.d.ts:export type FPFnInput = (...args: any[]) => any;
./node_modules/@tremor/react/node_modules/@headlessui/react/dist/internal/floating.d.ts:export declare function useFloatingReference(): ((node: import("@floating-ui/react-dom").ReferenceType | null) => void) & ((node: any) => void);
./node_modules/@tremor/react/node_modules/@headlessui/react/dist/utils/render.d.ts:declare function useMergeRefsFn(): (...refs: any[]) => ((value: any) => void) | undefined;
./node_modules/@tremor/react/node_modules/@headlessui/react/dist/utils/render.d.ts:export type RefProp<T extends Function> = T extends (props: any, ref: Ref<infer RefType>) => any ? {
./node_modules/@tremor/react/node_modules/@headlessui/react/dist/utils/store.d.ts:type ActionFn<T> = (this: T, ...args: any[]) => T | void;
./node_modules/@tremor/react/node_modules/@headlessui/react/dist/utils/store.d.ts:    dispatch(action: ActionKey, ...args: any[]): void;
./node_modules/@tremor/react/node_modules/@headlessui/react/dist/utils/match.d.ts:export declare function match<TValue extends string | number = string, TReturnValue = unknown>(value: TValue, lookup: Record<TValue, TReturnValue | ((...args: any[]) => TReturnValue)>, ...args: any[]): TReturnValue;
./node_modules/@tremor/react/node_modules/@headlessui/react/dist/utils/disposables.d.ts:    setTimeout(callback: (...args: any[]) => void, ms?: number | undefined, ...args: any[]): () => void;
./node_modules/@tremor/react/node_modules/@headlessui/react/dist/components/listbox/listbox.d.ts:    value: any;
./node_modules/@tremor/react/node_modules/@headlessui/react/dist/components/combobox/combobox.d.ts:    value: any;
./node_modules/@tremor/react/node_modules/@headlessui/react/dist/components/combobox/combobox.d.ts:    option: any;
./node_modules/@tremor/react/node_modules/@headlessui/react/dist/hooks/use-disposables.d.ts:    setTimeout(callback: (...args: any[]) => void, ms?: number | undefined, ...args: any[]): () => void;
./node_modules/@tremor/react/node_modules/@headlessui/react/dist/hooks/use-disposables.d.ts:        setTimeout(callback: (...args: any[]) => void, ms?: number | undefined, ...args: any[]): () => void;
./node_modules/@tremor/react/node_modules/@headlessui/react/dist/hooks/use-disposables.d.ts:        group(cb: any): () => void;
./node_modules/@tremor/react/node_modules/@headlessui/react/dist/hooks/use-controllable.d.ts:export declare function useControllable<T>(controlledValue: T | undefined, onChange?: (value: T) => void, defaultValue?: T): readonly [NonNullable<T>, (value: any) => void | undefined];
./node_modules/@tremor/react/node_modules/@headlessui/react/dist/hooks/use-event.d.ts:export declare let useEvent: <F extends (...args: any[]) => any, P extends any[] = Parameters<F>, R = ReturnType<F>>(cb: (...args: P) => R) => (...args: P) => R;
./node_modules/@tremor/react/node_modules/@headlessui/react/dist/hooks/use-resolved-tag.d.ts:export declare function useResolvedTag<T extends React.ElementType>(tag: T): readonly [string | undefined, (ref: any) => void];
./node_modules/@tremor/react/node_modules/@headlessui/react/node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.d.ts:    options: any;
./node_modules/@tremor/react/node_modules/@headlessui/react/node_modules/@floating-ui/react/dist/floating-ui.react.utils.d.ts:export declare function isReactEvent(event: any): event is React.SyntheticEvent;
./node_modules/@tremor/react/node_modules/@headlessui/react/node_modules/@floating-ui/react/dist/floating-ui.react.d.ts:    [key: string]: any;
./node_modules/@tremor/react/node_modules/@headlessui/react/node_modules/@floating-ui/react/dist/floating-ui.react.d.ts:        refs: any;
./node_modules/@tremor/react/node_modules/@headlessui/react/node_modules/@floating-ui/react/dist/floating-ui.react.d.ts:    emit<T extends string>(event: T, data?: any): void;
./node_modules/@tremor/react/node_modules/@headlessui/react/node_modules/@floating-ui/react/dist/floating-ui.react.d.ts:    on(event: string, handler: (data: any) => void): void;
./node_modules/@tremor/react/node_modules/@headlessui/react/node_modules/@floating-ui/react/dist/floating-ui.react.d.ts:    off(event: string, handler: (data: any) => void): void;
./node_modules/@tremor/react/node_modules/@headlessui/react/node_modules/@floating-ui/react/dist/floating-ui.react.d.ts:    currentId: any;
./node_modules/@tremor/react/node_modules/@headlessui/react/node_modules/@floating-ui/react/dist/floating-ui.react.d.ts:    id?: any;
./node_modules/@tremor/react/node_modules/@headlessui/react/node_modules/@floating-ui/react/utils/floating-ui.react.utils.d.ts:export declare function isReactEvent(event: any): event is React.SyntheticEvent;
./node_modules/@tremor/react/node_modules/@floating-ui/react-dom/src/utils/deepEqual.d.ts:export declare function deepEqual(a: any, b: any): boolean;
./node_modules/@tremor/react/node_modules/@floating-ui/react/src/types.d.ts:    emit<T extends string>(event: T, data?: T extends 'dismiss' ? DismissPayload : any): void;
./node_modules/@tremor/react/node_modules/@floating-ui/react/src/types.d.ts:    on(event: string, handler: (data: any) => void): void;
./node_modules/@tremor/react/node_modules/@floating-ui/react/src/types.d.ts:    off(event: string, handler: (data: any) => void): void;
./node_modules/@tremor/react/node_modules/@floating-ui/react/src/types.d.ts:    [key: string]: any;
./node_modules/@tremor/react/node_modules/@floating-ui/react/src/utils/is.d.ts:export declare function isElement(value: any): value is Element;
./node_modules/@tremor/react/node_modules/@floating-ui/react/src/utils/is.d.ts:export declare function isHTMLElement(value: any): value is HTMLElement;
./node_modules/@tremor/react/node_modules/@floating-ui/react/src/utils/createPubSub.d.ts:    emit(event: string, data: any): void;
./node_modules/@tremor/react/node_modules/@floating-ui/react/src/utils/createPubSub.d.ts:    on(event: string, listener: (data: any) => void): void;
./node_modules/@tremor/react/node_modules/@floating-ui/react/src/utils/createPubSub.d.ts:    off(event: string, listener: (data: any) => void): void;
./node_modules/@tremor/react/node_modules/@floating-ui/react/src/components/FloatingDelayGroup.d.ts:    currentId: any;
./node_modules/@tremor/react/node_modules/@floating-ui/react/src/components/FloatingDelayGroup.d.ts:    id: any;
./node_modules/@tremor/react/node_modules/@floating-ui/react/src/hooks/utils/useEvent.d.ts:type AnyFunction = (...args: any[]) => any;
./node_modules/fast-deep-equal/react.d.ts:declare const equal: (a: any, b: any) => boolean;
./node_modules/fast-deep-equal/es6/react.d.ts:declare const equal: (a: any, b: any) => boolean;
./node_modules/fast-deep-equal/es6/index.d.ts:declare const equal: (a: any, b: any) => boolean;
./node_modules/fast-deep-equal/index.d.ts:    const equal: (a: any, b: any) => boolean;
./node_modules/openai/beta/realtime/websocket.d.ts:    WebSocket: infer ws extends abstract new (...args: any) => any;
./node_modules/openai/beta/realtime/websocket.d.ts:}) ? InstanceType<ws> : any;
./node_modules/openai/beta/realtime/internal-base.d.ts:    protected _onError(event: null, message: string, cause: any): void;
./node_modules/openai/_vendor/zod-to-json-schema/parsers/default.d.ts:    default: any;
./node_modules/openai/_vendor/zod-to-json-schema/parseDef.d.ts:    default?: any;
./node_modules/openai/resources/responses/responses.d.ts:    parsed_arguments: any;
./node_modules/openai/node_modules/@types/node/compatibility/iterators.d.ts:        : any;
./node_modules/openai/node_modules/@types/node/domain.d.ts:        run<T>(fn: (...args: any[]) => T, ...args: any[]): T;
./node_modules/openai/node_modules/@types/node/globals.d.ts:type _Request = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").Request;
./node_modules/openai/node_modules/@types/node/globals.d.ts:type _Response = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").Response;
./node_modules/openai/node_modules/@types/node/globals.d.ts:type _FormData = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").FormData;
./node_modules/openai/node_modules/@types/node/globals.d.ts:type _Headers = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").Headers;
./node_modules/openai/node_modules/@types/node/globals.d.ts:type _MessageEvent = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").MessageEvent;
./node_modules/openai/node_modules/@types/node/globals.d.ts:type _RequestInit = typeof globalThis extends { onmessage: any } ? {}
./node_modules/openai/node_modules/@types/node/globals.d.ts:type _ResponseInit = typeof globalThis extends { onmessage: any } ? {}
./node_modules/openai/node_modules/@types/node/globals.d.ts:type _DOMException = typeof globalThis extends { onmessage: any } ? {} : NodeDOMException;
./node_modules/openai/node_modules/@types/node/globals.d.ts:        prepareStackTrace(err: Error, stackTraces: NodeJS.CallSite[]): any;
./node_modules/openai/node_modules/@types/node/globals.d.ts:    var DOMException: typeof globalThis extends { onmessage: any; DOMException: infer T } ? T
./node_modules/openai/node_modules/@types/node/globals.d.ts:        abort(reason?: any): void;
./node_modules/openai/node_modules/@types/node/globals.d.ts:    var AbortController: typeof globalThis extends { onmessage: any; AbortController: infer T } ? T
./node_modules/openai/node_modules/@types/node/globals.d.ts:        readonly reason: any;
./node_modules/openai/node_modules/@types/node/globals.d.ts:    var AbortSignal: typeof globalThis extends { onmessage: any; AbortSignal: infer T } ? T
./node_modules/openai/node_modules/@types/node/globals.d.ts:            abort(reason?: any): AbortSignal;
./node_modules/openai/node_modules/@types/node/globals.d.ts:        onmessage: any;
./node_modules/openai/node_modules/@types/node/globals.d.ts:        onmessage: any;
./node_modules/openai/node_modules/@types/node/globals.d.ts:        onmessage: any;
./node_modules/openai/node_modules/@types/node/globals.d.ts:        onmessage: any;
./node_modules/openai/node_modules/@types/node/globals.d.ts:        onmessage: any;
./node_modules/openai/node_modules/@types/node/tls.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/tls.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/tls.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/tls.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/tls.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/tls.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/tls.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/tls.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/tls.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/tls.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/tls.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/tls.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/tls.d.ts:        context: any;
./node_modules/openai/node_modules/@types/node/tty.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/tty.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/tty.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/tty.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/tty.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/tty.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/readline.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/readline.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/readline.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/readline.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/readline.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/readline.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/events.d.ts:        once(eventName: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/events.d.ts:            listener: (...args: any[]) => void,
./node_modules/openai/node_modules/@types/node/events.d.ts:        ): any;
./node_modules/openai/node_modules/@types/node/events.d.ts:    type AnyRest = [...args: any[]];
./node_modules/openai/node_modules/@types/node/events.d.ts:    type Listener1<K, T> = Listener<K, T, (...args: any[]) => void>;
./node_modules/openai/node_modules/@types/node/buffer.d.ts:type _Blob = typeof globalThis extends { onmessage: any; Blob: any } ? {} : import("buffer").Blob;
./node_modules/openai/node_modules/@types/node/buffer.d.ts:            isBuffer(obj: any): obj is Buffer;
./node_modules/openai/node_modules/@types/node/buffer.d.ts:        var Blob: typeof globalThis extends { onmessage: any; Blob: infer T } ? T
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:    const workerData: any;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        postMessage(value: any, transferList?: readonly Transferable[]): void;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        addListener(event: "message", listener: (value: any) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        emit(event: "message", value: any): boolean;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        on(event: "message", listener: (value: any) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        once(event: "message", listener: (value: any) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        prependListener(event: "message", listener: (value: any) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: "message", listener: (value: any) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        removeListener(event: "message", listener: (value: any) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        off(event: "message", listener: (value: any) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        off(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        argv?: any[] | undefined;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        workerData?: any;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        postMessage(value: any, transferList?: readonly Transferable[]): void;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        addListener(event: "message", listener: (value: any) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        emit(event: "message", value: any): boolean;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        on(event: "message", listener: (value: any) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        once(event: "message", listener: (value: any) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        prependListener(event: "message", listener: (value: any) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: "message", listener: (value: any) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        removeListener(event: "message", listener: (value: any) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        off(event: "message", listener: (value: any) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:        off(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:            message: any;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:            onmessage: any;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:            onmessage: any;
./node_modules/openai/node_modules/@types/node/worker_threads.d.ts:            onmessage: any;
./node_modules/openai/node_modules/@types/node/dom-events.d.ts:type __Event = typeof globalThis extends { onmessage: any } ? {} : Event;
./node_modules/openai/node_modules/@types/node/dom-events.d.ts:type __EventTarget = typeof globalThis extends { onmessage: any } ? {} : EventTarget;
./node_modules/openai/node_modules/@types/node/dom-events.d.ts:    var Event: typeof globalThis extends { onmessage: any; Event: infer T } ? T
./node_modules/openai/node_modules/@types/node/dom-events.d.ts:    var EventTarget: typeof globalThis extends { onmessage: any; EventTarget: infer T } ? T
./node_modules/openai/node_modules/@types/node/console.d.ts:            assert(value: any, message?: string, ...optionalParams: any[]): void;
./node_modules/openai/node_modules/@types/node/console.d.ts:            debug(message?: any, ...optionalParams: any[]): void;
./node_modules/openai/node_modules/@types/node/console.d.ts:            dir(obj: any, options?: InspectOptions): void;
./node_modules/openai/node_modules/@types/node/console.d.ts:            dirxml(...data: any[]): void;
./node_modules/openai/node_modules/@types/node/console.d.ts:            error(message?: any, ...optionalParams: any[]): void;
./node_modules/openai/node_modules/@types/node/console.d.ts:            group(...label: any[]): void;
./node_modules/openai/node_modules/@types/node/console.d.ts:            groupCollapsed(...label: any[]): void;
./node_modules/openai/node_modules/@types/node/console.d.ts:            info(message?: any, ...optionalParams: any[]): void;
./node_modules/openai/node_modules/@types/node/console.d.ts:            log(message?: any, ...optionalParams: any[]): void;
./node_modules/openai/node_modules/@types/node/console.d.ts:            table(tabularData: any, properties?: readonly string[]): void;
./node_modules/openai/node_modules/@types/node/console.d.ts:            timeLog(label?: string, ...data: any[]): void;
./node_modules/openai/node_modules/@types/node/console.d.ts:            trace(message?: any, ...optionalParams: any[]): void;
./node_modules/openai/node_modules/@types/node/console.d.ts:            warn(message?: any, ...optionalParams: any[]): void;
./node_modules/openai/node_modules/@types/node/async_hooks.d.ts:        static bind<Func extends (this: ThisArg, ...args: any[]) => any, ThisArg>(
./node_modules/openai/node_modules/@types/node/async_hooks.d.ts:        bind<Func extends (...args: any[]) => any>(
./node_modules/openai/node_modules/@types/node/async_hooks.d.ts:            fn: (this: This, ...args: any[]) => Result,
./node_modules/openai/node_modules/@types/node/async_hooks.d.ts:            ...args: any[]
./node_modules/openai/node_modules/@types/node/async_hooks.d.ts:        static bind<Func extends (...args: any[]) => any>(fn: Func): Func & {
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:type _ByteLengthQueuingStrategy = typeof globalThis extends { onmessage: any } ? {}
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:type _CompressionStream = typeof globalThis extends { onmessage: any; ReportingObserver: any } ? {}
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:type _CountQueuingStrategy = typeof globalThis extends { onmessage: any } ? {}
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:type _DecompressionStream = typeof globalThis extends { onmessage: any; ReportingObserver: any } ? {}
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:type _ReadableByteStreamController = typeof globalThis extends { onmessage: any } ? {}
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:type _ReadableStream<R = any> = typeof globalThis extends { onmessage: any } ? {}
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:type _ReadableStreamBYOBReader = typeof globalThis extends { onmessage: any } ? {}
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:type _ReadableStreamBYOBRequest = typeof globalThis extends { onmessage: any } ? {}
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:type _ReadableStreamDefaultController<R = any> = typeof globalThis extends { onmessage: any } ? {}
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:type _ReadableStreamDefaultReader<R = any> = typeof globalThis extends { onmessage: any } ? {}
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:type _TextDecoderStream = typeof globalThis extends { onmessage: any } ? {}
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:type _TextEncoderStream = typeof globalThis extends { onmessage: any } ? {}
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:type _TransformStream<I = any, O = any> = typeof globalThis extends { onmessage: any } ? {}
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:type _TransformStreamDefaultController<O = any> = typeof globalThis extends { onmessage: any } ? {}
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:type _WritableStream<W = any> = typeof globalThis extends { onmessage: any } ? {}
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:type _WritableStreamDefaultController = typeof globalThis extends { onmessage: any } ? {}
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:type _WritableStreamDefaultWriter<W = any> = typeof globalThis extends { onmessage: any } ? {}
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        cancel(reason?: any): Promise<void>;
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        (reason?: any): void | PromiseLike<void>;
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        (controller: WritableStreamDefaultController): any;
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        (reason?: any): void | PromiseLike<void>;
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        (controller: ReadableStreamController<R>): any;
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        (controller: TransformStreamDefaultController<O>): any;
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        (reason: any): void | PromiseLike<void>;
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        cancel(reason?: any): Promise<void>;
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        error(error?: any): void;
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        error(e?: any): void;
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        error(reason?: any): void;
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        abort(reason?: any): Promise<void>;
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        abort(reason?: any): Promise<void>;
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        error(e?: any): void;
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        var ByteLengthQueuingStrategy: typeof globalThis extends { onmessage: any; ByteLengthQueuingStrategy: infer T }
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:            onmessage: any;
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:            ReportingObserver: any;
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:            : typeof globalThis extends { onmessage: any; TransformStream: { prototype: infer T } } ? {
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        var CountQueuingStrategy: typeof globalThis extends { onmessage: any; CountQueuingStrategy: infer T } ? T
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:            onmessage: any;
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:            ReportingObserver: any;
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:            : typeof globalThis extends { onmessage: any; TransformStream: { prototype: infer T } } ? {
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:            { onmessage: any; ReadableByteStreamController: infer T } ? T
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        var ReadableStream: typeof globalThis extends { onmessage: any; ReadableStream: infer T } ? T
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        var ReadableStreamBYOBReader: typeof globalThis extends { onmessage: any; ReadableStreamBYOBReader: infer T }
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        var ReadableStreamBYOBRequest: typeof globalThis extends { onmessage: any; ReadableStreamBYOBRequest: infer T }
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:            { onmessage: any; ReadableStreamDefaultController: infer T } ? T
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:            { onmessage: any; ReadableStreamDefaultReader: infer T } ? T
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        var TextDecoderStream: typeof globalThis extends { onmessage: any; TextDecoderStream: infer T } ? T
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        var TextEncoderStream: typeof globalThis extends { onmessage: any; TextEncoderStream: infer T } ? T
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        var TransformStream: typeof globalThis extends { onmessage: any; TransformStream: infer T } ? T
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:            { onmessage: any; TransformStreamDefaultController: infer T } ? T
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:        var WritableStream: typeof globalThis extends { onmessage: any; WritableStream: infer T } ? T
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:            { onmessage: any; WritableStreamDefaultController: infer T } ? T
./node_modules/openai/node_modules/@types/node/stream/web.d.ts:            { onmessage: any; WritableStreamDefaultWriter: infer T } ? T
./node_modules/openai/node_modules/@types/node/vm.d.ts:        runInContext(contextifiedObject: Context, options?: RunningScriptOptions): any;
./node_modules/openai/node_modules/@types/node/vm.d.ts:        runInNewContext(contextObject?: Context, options?: RunningScriptInNewContextOptions): any;
./node_modules/openai/node_modules/@types/node/vm.d.ts:        runInThisContext(options?: RunningScriptOptions): any;
./node_modules/openai/node_modules/@types/node/vm.d.ts:    function runInContext(code: string, contextifiedObject: Context, options?: RunningCodeOptions | string): any;
./node_modules/openai/node_modules/@types/node/vm.d.ts:    ): any;
./node_modules/openai/node_modules/@types/node/vm.d.ts:    function runInThisContext(code: string, options?: RunningCodeOptions | string): any;
./node_modules/openai/node_modules/@types/node/vm.d.ts:        error: any;
./node_modules/openai/node_modules/@types/node/vm.d.ts:        setExport(name: string, value: any): void;
./node_modules/openai/node_modules/@types/node/timers.d.ts:                _onImmediate(...args: any[]): void;
./node_modules/openai/node_modules/@types/node/timers.d.ts:                _onTimeout(...args: any[]): void;
./node_modules/openai/node_modules/@types/node/test.d.ts:    type TestFn = (t: TestContext, done: (result?: any) => void) => any;
./node_modules/openai/node_modules/@types/node/test.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/test.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/test.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/test.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/test.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/test.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/test.d.ts:    type HookFn = (c: TestContext | SuiteContext, done: (result?: any) => void) => any;
./node_modules/openai/node_modules/@types/node/test.d.ts:    type TestContextHookFn = (t: TestContext, done: (result?: any) => void) => any;
./node_modules/openai/node_modules/@types/node/test.d.ts:    type NoOpFunction = (...args: any[]) => undefined;
./node_modules/openai/node_modules/@types/node/test.d.ts:        ReturnType = F extends (...args: any) => infer T ? T
./node_modules/openai/node_modules/@types/node/test.d.ts:            : F extends abstract new(...args: any) => infer T ? T
./node_modules/openai/node_modules/@types/node/test.d.ts:        target: F extends abstract new(...args: any) => any ? F : undefined;
./node_modules/openai/node_modules/@types/node/http.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http.d.ts:        emit(event: string, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/http.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:    type ComposeFnParam = (source: any) => void;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            read(size?: number): any;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            unshift(chunk: any, encoding?: BufferEncoding): void;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            push(chunk: any, encoding?: BufferEncoding): boolean;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            map(fn: (data: any, options?: Pick<ArrayOptions, "signal">) => any, options?: ArrayOptions): Readable;
./node_modules/openai/node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => boolean | Promise<boolean>,
./node_modules/openai/node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => void | Promise<void>,
./node_modules/openai/node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => boolean | Promise<boolean>,
./node_modules/openai/node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => data is T,
./node_modules/openai/node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => boolean | Promise<boolean>,
./node_modules/openai/node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => boolean | Promise<boolean>,
./node_modules/openai/node_modules/@types/node/stream.d.ts:            flatMap(fn: (data: any, options?: Pick<ArrayOptions, "signal">) => any, options?: ArrayOptions): Readable;
./node_modules/openai/node_modules/@types/node/stream.d.ts:                fn: (previous: any, data: any, options?: Pick<ArrayOptions, "signal">) => T,
./node_modules/openai/node_modules/@types/node/stream.d.ts:                fn: (previous: T, data: any, options?: Pick<ArrayOptions, "signal">) => T,
./node_modules/openai/node_modules/@types/node/stream.d.ts:            addListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            emit(event: "data", chunk: any): boolean;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            on(event: "data", listener: (chunk: any) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            once(event: "data", listener: (chunk: any) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            prependListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            removeListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:                chunk: any,
./node_modules/openai/node_modules/@types/node/stream.d.ts:                    chunk: any;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            _write(chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;
./node_modules/openai/node_modules/@types/node/stream.d.ts:                    chunk: any;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            write(chunk: any, callback?: (error: Error | null | undefined) => void): boolean;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            write(chunk: any, encoding: BufferEncoding, callback?: (error: Error | null | undefined) => void): boolean;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            end(chunk: any, cb?: () => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            end(chunk: any, encoding: BufferEncoding, cb?: () => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            addListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            emit(event: "data", chunk: any): boolean;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            on(event: "data", listener: (chunk: any) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            once(event: "data", listener: (chunk: any) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            prependListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            removeListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/stream.d.ts:        type TransformCallback = (error?: Error | null, data?: any) => void;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            transform?(this: T, chunk: any, encoding: BufferEncoding, callback: TransformCallback): void;
./node_modules/openai/node_modules/@types/node/stream.d.ts:            _transform(chunk: any, encoding: BufferEncoding, callback: TransformCallback): void;
./node_modules/openai/node_modules/@types/node/stream.d.ts:                source: S extends (...args: any[]) => Iterable<infer ST> | AsyncIterable<infer ST> ? AsyncIterable<ST>
./node_modules/openai/node_modules/@types/node/inspector.d.ts:            value?: any;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:            value?: any;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        debug(...data: any[]): void;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        error(...data: any[]): void;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        info(...data: any[]): void;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        log(...data: any[]): void;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        warn(...data: any[]): void;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        dir(...data: any[]): void;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        dirxml(...data: any[]): void;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        table(...data: any[]): void;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        trace(...data: any[]): void;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        group(...data: any[]): void;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        groupCollapsed(...data: any[]): void;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        groupEnd(...data: any[]): void;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        clear(...data: any[]): void;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        count(label?: any): void;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        countReset(label?: any): void;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        assert(value?: any, ...data: any[]): void;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        profile(label?: any): void;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        profileEnd(label?: any): void;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        time(label?: any): void;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        timeLog(label?: any): void;
./node_modules/openai/node_modules/@types/node/inspector.d.ts:        timeStamp(label?: any): void;
./node_modules/openai/node_modules/@types/node/v8.d.ts:        writeValue(val: any): boolean;
./node_modules/openai/node_modules/@types/node/v8.d.ts:        readValue(): any;
./node_modules/openai/node_modules/@types/node/v8.d.ts:    function serialize(value: any): Buffer;
./node_modules/openai/node_modules/@types/node/v8.d.ts:    function deserialize(buffer: NodeJS.ArrayBufferView): any;
./node_modules/openai/node_modules/@types/node/v8.d.ts:    type StartupSnapshotCallbackFn = (args: any) => any;
./node_modules/openai/node_modules/@types/node/v8.d.ts:        addSerializeCallback(callback: StartupSnapshotCallbackFn, data?: any): void;
./node_modules/openai/node_modules/@types/node/v8.d.ts:        addDeserializeCallback(callback: StartupSnapshotCallbackFn, data?: any): void;
./node_modules/openai/node_modules/@types/node/v8.d.ts:        setDeserializeMainFunction(callback: StartupSnapshotCallbackFn, data?: any): void;
./node_modules/openai/node_modules/@types/node/perf_hooks.d.ts:        toJSON(): any;
./node_modules/openai/node_modules/@types/node/perf_hooks.d.ts:        timerify<T extends (...params: any[]) => any>(fn: T, options?: TimerifyOptions): T;
./node_modules/openai/node_modules/@types/node/perf_hooks.d.ts:        toJSON(): any;
./node_modules/openai/node_modules/@types/node/perf_hooks.d.ts:        toJSON(): any;
./node_modules/openai/node_modules/@types/node/perf_hooks.d.ts:            onmessage: any;
./node_modules/openai/node_modules/@types/node/url.d.ts:            onmessage: any;
./node_modules/openai/node_modules/@types/node/url.d.ts:            onmessage: any;
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        stdio?: any[] | undefined;
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        addListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        emit(event: "message", message: any, handle: net.Socket | net.Server): boolean;
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        on(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        once(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        prependListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        prependOnceListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        fork(env?: any): Worker;
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/cluster.d.ts:            listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        emit(event: "message", worker: Worker, message: any, handle: net.Socket | net.Server): boolean;
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        on(event: "message", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        once(event: "message", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/cluster.d.ts:            listener: (worker: Worker, message: any, handle?: net.Socket | net.Server) => void,
./node_modules/openai/node_modules/@types/node/cluster.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/cluster.d.ts:            listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/openai/node_modules/@types/node/https.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/https.d.ts:        emit(event: string, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/https.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/https.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/https.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/https.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/assert.d.ts:            calls<Func extends (...args: any[]) => any>(fn?: Func, exact?: number): Func;
./node_modules/openai/node_modules/@types/node/fs.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/fs.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/fs.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/fs.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/fs.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/fs.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/fs.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/fs.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/fs.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/fs.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/fs.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/fs.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/fs.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/fs.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/fs.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/fs.d.ts:        open?: (...args: any[]) => any;
./node_modules/openai/node_modules/@types/node/fs.d.ts:        close?: (...args: any[]) => any;
./node_modules/openai/node_modules/@types/node/fs.d.ts:        read: (...args: any[]) => any;
./node_modules/openai/node_modules/@types/node/fs.d.ts:        write: (...args: any[]) => any;
./node_modules/openai/node_modules/@types/node/fs.d.ts:        writev?: (...args: any[]) => any;
./node_modules/openai/node_modules/@types/node/repl.d.ts:        cb: (err: Error | null, result: any) => void,
./node_modules/openai/node_modules/@types/node/repl.d.ts:    type REPLWriter = (this: REPLServer, obj: any) => string;
./node_modules/openai/node_modules/@types/node/repl.d.ts:        readonly last: any;
./node_modules/openai/node_modules/@types/node/repl.d.ts:        readonly lastError: any;
./node_modules/openai/node_modules/@types/node/repl.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/repl.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/repl.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/repl.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/repl.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/repl.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/dgram.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/dgram.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/dgram.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/dgram.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/dgram.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/dgram.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/child_process.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/child_process.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/child_process.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/child_process.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/child_process.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/child_process.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/module.d.ts:            transferList?: any[] | undefined;
./node_modules/openai/node_modules/@types/node/module.d.ts:    type ImportMetaDOMCompat = typeof globalThis extends { onmessage: any } ? {
./node_modules/openai/node_modules/@types/node/module.d.ts:                exports: any;
./node_modules/openai/node_modules/@types/node/module.d.ts:                require(id: string): any;
./node_modules/openai/node_modules/@types/node/module.d.ts:                (id: string): any;
./node_modules/openai/node_modules/@types/node/process.d.ts:                    readonly cflags: any[];
./node_modules/openai/node_modules/@types/node/process.d.ts:                nextTick(callback: Function, ...args: any[]): void;
./node_modules/openai/node_modules/@types/node/process.d.ts:                    message: any,
./node_modules/openai/node_modules/@types/node/process.d.ts:                    sendHandle?: any,
./node_modules/openai/node_modules/@types/node/process.d.ts:                on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/process.d.ts:                once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/util.d.ts:    export function format(format?: any, ...param: any[]): string;
./node_modules/openai/node_modules/@types/node/util.d.ts:    export function formatWithOptions(inspectOptions: InspectOptions, format?: any, ...param: any[]): string;
./node_modules/openai/node_modules/@types/node/util.d.ts:    export function aborted(signal: AbortSignal, resource: any): Promise<void>;
./node_modules/openai/node_modules/@types/node/util.d.ts:    export function inspect(object: any, showHidden?: boolean, depth?: number | null, color?: boolean): string;
./node_modules/openai/node_modules/@types/node/util.d.ts:    export function inspect(object: any, options?: InspectOptions): string;
./node_modules/openai/node_modules/@types/node/util.d.ts:        fn: (callback: (err: any, result: TResult) => void) => void,
./node_modules/openai/node_modules/@types/node/util.d.ts:    export function promisify(fn: (callback: (err?: any) => void) => void): () => Promise<void>;
./node_modules/openai/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, callback: (err: any, result: TResult) => void) => void,
./node_modules/openai/node_modules/@types/node/util.d.ts:    export function promisify<T1>(fn: (arg1: T1, callback: (err?: any) => void) => void): (arg1: T1) => Promise<void>;
./node_modules/openai/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, callback: (err: any, result: TResult) => void) => void,
./node_modules/openai/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, callback: (err?: any) => void) => void,
./node_modules/openai/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, callback: (err: any, result: TResult) => void) => void,
./node_modules/openai/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, callback: (err?: any) => void) => void,
./node_modules/openai/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: (err: any, result: TResult) => void) => void,
./node_modules/openai/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: (err?: any) => void) => void,
./node_modules/openai/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: (err: any, result: TResult) => void) => void,
./node_modules/openai/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: (err?: any) => void) => void,
./node_modules/openai/node_modules/@types/node/util.d.ts:            onmessage: any;
./node_modules/openai/node_modules/@types/node/util.d.ts:            onmessage: any;
./node_modules/openai/node_modules/@types/node/net.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/net.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/net.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/net.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/net.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/net.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/net.d.ts:        listen(handle: any, backlog?: number, listeningListener?: () => void): this;
./node_modules/openai/node_modules/@types/node/net.d.ts:        listen(handle: any, listeningListener?: () => void): this;
./node_modules/openai/node_modules/@types/node/net.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/net.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/openai/node_modules/@types/node/net.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/net.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/net.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/@types/node/net.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/openai/node_modules/undici-types/websocket.d.ts:    data?: any,
./node_modules/openai/node_modules/undici-types/fetch.d.ts:  static json(data: any, init?: ResponseInit): Response
./node_modules/openai/node_modules/undici-types/webidl.d.ts:  [Key: string]: (...args: any[]) => unknown
./node_modules/openai/node_modules/undici-types/patch.d.ts: : any
./node_modules/openai/node_modules/undici-types/patch.d.ts:      listener: any,
./node_modules/openai/node_modules/undici-types/patch.d.ts:      options?: any,
./node_modules/openai/node_modules/undici-types/patch.d.ts:      listener: any,
./node_modules/openai/node_modules/undici-types/patch.d.ts:      options?: any | boolean,
./node_modules/openai/internal/stream-utils.d.ts:export declare function ReadableStreamToAsyncIterable<T>(stream: any): AsyncIterableIterator<T>;
./node_modules/openai/internal/qs/types.d.ts:export type DefaultEncoder = (str: any, defaultEncoder?: any, charset?: string) => string;
./node_modules/openai/internal/qs/types.d.ts:export type DefaultDecoder = (str: string, decoder?: any, charset?: string) => string;
./node_modules/openai/internal/qs/types.d.ts:    encoder?: (str: any, defaultEncoder: DefaultEncoder, charset: string, type: 'key' | 'value', format?: Format) => string;
./node_modules/openai/internal/qs/types.d.ts:    filter?: Array<PropertyKey> | ((prefix: PropertyKey, value: any) => any);
./node_modules/openai/internal/qs/stringify.d.ts:export declare function stringify(object: any, opts?: StringifyOptions): string;
./node_modules/openai/internal/qs/utils.d.ts:export declare function merge(target: any, source: any, options?: {
./node_modules/openai/internal/qs/utils.d.ts:}): any;
./node_modules/openai/internal/qs/utils.d.ts:export declare function assign_single_source(target: any, source: any): any;
./node_modules/openai/internal/qs/utils.d.ts:export declare function decode(str: string, _: any, charset: string): string;
./node_modules/openai/internal/qs/utils.d.ts:export declare const encode: (str: any, defaultEncoder: DefaultEncoder, charset: string, type: 'key' | 'value', format: Format) => string;
./node_modules/openai/internal/qs/utils.d.ts:export declare function compact(value: any): any;
./node_modules/openai/internal/qs/utils.d.ts:export declare function is_regexp(obj: any): boolean;
./node_modules/openai/internal/qs/utils.d.ts:export declare function is_buffer(obj: any): boolean;
./node_modules/openai/internal/qs/utils.d.ts:export declare function combine(a: any, b: any): never[];
./node_modules/openai/internal/decoders/line.d.ts:    textDecoder: any;
./node_modules/openai/core.d.ts:    then<TResult1 = WithRequestID<T>, TResult2 = never>(onfulfilled?: ((value: WithRequestID<T>) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
./node_modules/openai/core.d.ts:    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<WithRequestID<T> | TResult>;
./node_modules/openai/core.d.ts:    getAPIList<Item, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(path: string, Page: new (...args: any[]) => PageClass, opts?: RequestOptions<any>): PagePromise<PageClass, Item>;
./node_modules/openai/core.d.ts:export declare const castToError: (err: any) => Error;
./node_modules/openai/core.d.ts:export declare function debug(action: string, ...args: any[]): void;
./node_modules/openai/core.d.ts:export declare const isHeadersProtocol: (headers: any) => headers is HeadersProtocol;
./node_modules/openai/lib/ResponsesParser.d.ts:    arguments: any;
./node_modules/openai/lib/ResponsesParser.d.ts:    function?: ((args: any) => any) | undefined;
./node_modules/openai/lib/ResponsesParser.d.ts:    callback: ((args: any) => any) | undefined;
./node_modules/openai/lib/ResponsesParser.d.ts:export declare function isAutoParsableTool(tool: any): tool is AutoParseableResponseTool<any>;
./node_modules/openai/lib/RunnableFunction.d.ts:export declare function isRunnableFunctionWithParse<Args extends object>(fn: any): fn is RunnableFunctionWithParse<Args>;
./node_modules/openai/lib/EventEmitter.d.ts:export declare class EventEmitter<EventTypes extends Record<string, (...args: any) => any>> {
./node_modules/openai/lib/parser.d.ts:export declare function isAutoParsableResponseFormat<ParsedT>(response_format: any): response_format is AutoParseableResponseFormat<ParsedT>;
./node_modules/openai/lib/parser.d.ts:    arguments: any;
./node_modules/openai/lib/parser.d.ts:    function?: ((args: any) => any) | undefined;
./node_modules/openai/lib/parser.d.ts:    callback: ((args: any) => any) | undefined;
./node_modules/openai/lib/parser.d.ts:export declare function isAutoParsableTool(tool: any): tool is AutoParseableTool<any>;
./node_modules/openai/uploads.d.ts:export declare const isResponseLike: (value: any) => value is ResponseLike;
./node_modules/openai/uploads.d.ts:export declare const isFileLike: (value: any) => value is FileLike;
./node_modules/openai/uploads.d.ts:export declare const isBlobLike: (value: any) => value is BlobLike & {
./node_modules/openai/uploads.d.ts:export declare const isUploadable: (value: any) => value is Uploadable;
./node_modules/openai/uploads.d.ts:export declare const isMultipartBody: (body: any) => body is MultipartBody;
./node_modules/openai/_shims/registry.d.ts:    fetch: any;
./node_modules/openai/_shims/registry.d.ts:    Request: any;
./node_modules/openai/_shims/registry.d.ts:    Response: any;
./node_modules/openai/_shims/registry.d.ts:    Headers: any;
./node_modules/openai/_shims/registry.d.ts:    FormData: any;
./node_modules/openai/_shims/registry.d.ts:    Blob: any;
./node_modules/openai/_shims/registry.d.ts:    File: any;
./node_modules/openai/_shims/registry.d.ts:    ReadableStream: any;
./node_modules/openai/_shims/registry.d.ts:    isFsReadStream: (value: any) => boolean;
./node_modules/openai/_shims/MultipartBody.d.ts:    body: any;
./node_modules/openai/_shims/MultipartBody.d.ts:    constructor(body: any);
./node_modules/openai/_shims/auto/types.d.ts:  read(size?: number): any;
./node_modules/openai/_shims/web-types.d.ts:  read(size?: number): any;
./node_modules/openai/_shims/index.d.ts:export function getDefaultAgent(url: string): any;
./node_modules/openai/_shims/index.d.ts:export function isFsReadStream(value: any): value is FsReadStream;
./node_modules/openai/src/beta/realtime/websocket.ts:      WebSocket: infer ws extends abstract new (...args: any) => any;
./node_modules/openai/src/beta/realtime/websocket.ts:  : any;
./node_modules/openai/src/beta/realtime/websocket.ts:    this.socket.addEventListener('error', (event: any) => {
./node_modules/openai/src/beta/realtime/internal-base.ts:  protected _onError(event: null, message: string, cause: any): void;
./node_modules/openai/src/beta/realtime/internal-base.ts:  protected _onError(event: ErrorEvent | null, message?: string | undefined, cause?: any): void {
./node_modules/openai/src/streaming.ts:      async pull(ctrl: any) {
./node_modules/openai/src/_vendor/partial-json-parser/parser.ts:function parseJSON(jsonString: string, allowPartial: number = Allow.ALL): any {
./node_modules/openai/src/_vendor/zod-to-json-schema/parsers/default.ts:export function parseDefaultDef(_def: ZodDefaultDef, refs: Refs): JsonSchema7Type & { default: any } {
./node_modules/openai/src/_vendor/zod-to-json-schema/parseDef.ts:  default?: any;
./node_modules/openai/src/_vendor/zod-to-json-schema/parseDef.ts:  def: any,
./node_modules/openai/src/uploads.ts:export const isResponseLike = (value: any): value is ResponseLike =>
./node_modules/openai/src/uploads.ts:export const isFileLike = (value: any): value is FileLike =>
./node_modules/openai/src/uploads.ts:export const isBlobLike = (value: any): value is BlobLike & { arrayBuffer(): Promise<ArrayBuffer> } =>
./node_modules/openai/src/uploads.ts:export const isUploadable = (value: any): value is Uploadable => {
./node_modules/openai/src/uploads.ts:function propsForError(value: any): string {
./node_modules/openai/src/uploads.ts:function getName(value: any): string | undefined {
./node_modules/openai/src/uploads.ts:const isAsyncIterableIterator = (value: any): value is AsyncIterableIterator<unknown> =>
./node_modules/openai/src/uploads.ts:export const isMultipartBody = (body: any): body is MultipartBody =>
./node_modules/openai/src/resources/responses/responses.ts:  parsed_arguments: any;
./node_modules/openai/src/internal/qs/utils.ts:function array_to_object(source: any[], options: { plainObjects: boolean }) {
./node_modules/openai/src/internal/qs/utils.ts:  target: any,
./node_modules/openai/src/internal/qs/utils.ts:  source: any,
./node_modules/openai/src/internal/qs/utils.ts:export function assign_single_source(target: any, source: any) {
./node_modules/openai/src/internal/qs/utils.ts:export function decode(str: string, _: any, charset: string) {
./node_modules/openai/src/internal/qs/utils.ts:  str: any,
./node_modules/openai/src/internal/qs/utils.ts:export function compact(value: any) {
./node_modules/openai/src/internal/qs/utils.ts:export function is_regexp(obj: any) {
./node_modules/openai/src/internal/qs/utils.ts:export function is_buffer(obj: any) {
./node_modules/openai/src/internal/qs/utils.ts:export function combine(a: any, b: any) {
./node_modules/openai/src/internal/qs/types.ts:export type DefaultEncoder = (str: any, defaultEncoder?: any, charset?: string) => string;
./node_modules/openai/src/internal/qs/types.ts:export type DefaultDecoder = (str: string, decoder?: any, charset?: string) => string;
./node_modules/openai/src/internal/qs/types.ts:    str: any,
./node_modules/openai/src/internal/qs/types.ts:  filter?: Array<PropertyKey> | ((prefix: PropertyKey, value: any) => any);
./node_modules/openai/src/internal/qs/stringify.ts:const push_to_array = function (arr: any[], value_or_array: any) {
./node_modules/openai/src/internal/qs/stringify.ts:  object: any,
./node_modules/openai/src/internal/qs/stringify.ts:export function stringify(object: any, opts: StringifyOptions = {}) {
./node_modules/openai/src/internal/decoders/line.ts:  textDecoder: any; // TextDecoder found in browsers; not typed to avoid pulling in either "dom" or "node" types.
./node_modules/openai/src/internal/stream-utils.ts:export function ReadableStreamToAsyncIterable<T>(stream: any): AsyncIterableIterator<T> {
./node_modules/openai/src/core.ts:    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
./node_modules/openai/src/core.ts:    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
./node_modules/openai/src/core.ts:    Page: new (...args: any[]) => PageClass,
./node_modules/openai/src/core.ts:declare const Deno: any;
./node_modules/openai/src/core.ts:declare const EdgeRuntime: any;
./node_modules/openai/src/core.ts:export const castToError = (err: any): Error => {
./node_modules/openai/src/core.ts:export function debug(action: string, ...args: any[]) {
./node_modules/openai/src/core.ts:export const isHeadersProtocol = (headers: any): headers is HeadersProtocol => {
./node_modules/openai/src/lib/EventEmitter.ts:export class EventEmitter<EventTypes extends Record<string, (...args: any) => any>> {
./node_modules/openai/src/lib/EventEmitter.ts:      listeners.forEach(({ listener }: any) => listener(...(args as any)));
./node_modules/openai/src/lib/EventStream.ts:      listeners.forEach(({ listener }: any) => listener(...(args as any)));
./node_modules/openai/src/lib/ResponsesParser.ts:  arguments: any;
./node_modules/openai/src/lib/ResponsesParser.ts:  function?: ((args: any) => any) | undefined;
./node_modules/openai/src/lib/ResponsesParser.ts:    callback: ((args: any) => any) | undefined;
./node_modules/openai/src/lib/ResponsesParser.ts:export function isAutoParsableTool(tool: any): tool is AutoParseableResponseTool<any> {
./node_modules/openai/src/lib/parser.ts:  response_format: any,
./node_modules/openai/src/lib/parser.ts:  arguments: any;
./node_modules/openai/src/lib/parser.ts:  function?: ((args: any) => any) | undefined;
./node_modules/openai/src/lib/parser.ts:    callback: ((args: any) => any) | undefined;
./node_modules/openai/src/lib/parser.ts:export function isAutoParsableTool(tool: any): tool is AutoParseableTool<any> {
./node_modules/openai/src/lib/RunnableFunction.ts:  fn: any,
./node_modules/openai/src/_shims/bun-runtime.ts:  function isFsReadStream(value: any): value is FsReadStream {
./node_modules/openai/src/_shims/auto/types.d.ts:  read(size?: number): any;
./node_modules/openai/src/_shims/web-types.d.ts:  read(size?: number): any;
./node_modules/openai/src/_shims/MultipartBody.ts:  constructor(public body: any) {}
./node_modules/openai/src/_shims/web-runtime.ts:    isFsReadStream: (value: any) => false,
./node_modules/openai/src/_shims/node-runtime.ts:async function fileFromPath(path: string, ...args: any[]): Promise<File> {
./node_modules/openai/src/_shims/node-runtime.ts:    isFsReadStream: (value: any): value is FsReadStream => value instanceof FsReadStream,
./node_modules/openai/src/_shims/registry.ts:  fetch: any;
./node_modules/openai/src/_shims/registry.ts:  Request: any;
./node_modules/openai/src/_shims/registry.ts:  Response: any;
./node_modules/openai/src/_shims/registry.ts:  Headers: any;
./node_modules/openai/src/_shims/registry.ts:  FormData: any;
./node_modules/openai/src/_shims/registry.ts:  Blob: any;
./node_modules/openai/src/_shims/registry.ts:  File: any;
./node_modules/openai/src/_shims/registry.ts:  ReadableStream: any;
./node_modules/openai/src/_shims/registry.ts:  isFsReadStream: (value: any) => boolean;
./node_modules/openai/src/_shims/index.d.ts:export function getDefaultAgent(url: string): any;
./node_modules/openai/src/_shims/index.d.ts:export function isFsReadStream(value: any): value is FsReadStream;
./node_modules/openai/src/error.ts:  private static makeMessage(status: number | undefined, error: any, message: string | undefined) {
./node_modules/openai/src/helpers/audio.ts:    const data: any[] = [];
./node_modules/@fast-csv/parse/node_modules/@types/node/domain.d.ts:                run<T>(fn: (...args: any[]) => T, ...args: any[]): T;
./node_modules/@fast-csv/parse/node_modules/@types/node/globals.d.ts:declare function setTimeout(callback: (...args: any[]) => void, ms?: number, ...args: any[]): NodeJS.Timeout;
./node_modules/@fast-csv/parse/node_modules/@types/node/globals.d.ts:declare function setInterval(callback: (...args: any[]) => void, ms?: number, ...args: any[]): NodeJS.Timeout;
./node_modules/@fast-csv/parse/node_modules/@types/node/globals.d.ts:declare function setImmediate(callback: (...args: any[]) => void, ...args: any[]): NodeJS.Immediate;
./node_modules/@fast-csv/parse/node_modules/@types/node/globals.d.ts:declare var exports: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/globals.d.ts:    abort(reason?: any): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/globals.d.ts:    readonly reason: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/globals.d.ts:    abort(reason?: any): AbortSignal;
./node_modules/@fast-csv/parse/node_modules/@types/node/globals.d.ts:    static isBuffer(obj: any): obj is Buffer;
./node_modules/@fast-csv/parse/node_modules/@types/node/globals.d.ts:        getThis(): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/globals.d.ts:        setImmediate: (callback: (...args: any[]) => void, ...args: any[]) => Immediate;
./node_modules/@fast-csv/parse/node_modules/@types/node/globals.d.ts:        setInterval: (callback: (...args: any[]) => void, ms?: number, ...args: any[]) => Timeout;
./node_modules/@fast-csv/parse/node_modules/@types/node/globals.d.ts:        setTimeout: (callback: (...args: any[]) => void, ms?: number, ...args: any[]) => Timeout;
./node_modules/@fast-csv/parse/node_modules/@types/node/globals.d.ts:        v8debug?: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/globals.d.ts:        (id: string): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/globals.d.ts:        exports: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/domain.d.ts:                run<T>(fn: (...args: any[]) => T, ...args: any[]): T;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/globals.d.ts:declare function setTimeout(callback: (...args: any[]) => void, ms?: number, ...args: any[]): NodeJS.Timeout;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/globals.d.ts:declare function setInterval(callback: (...args: any[]) => void, ms?: number, ...args: any[]): NodeJS.Timeout;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/globals.d.ts:declare function setImmediate(callback: (...args: any[]) => void, ...args: any[]): NodeJS.Immediate;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/globals.d.ts:declare var exports: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/globals.d.ts:    abort(reason?: any): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/globals.d.ts:    static isBuffer(obj: any): obj is Buffer;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/globals.d.ts:        getThis(): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/globals.d.ts:        setImmediate: (callback: (...args: any[]) => void, ...args: any[]) => Immediate;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/globals.d.ts:        setInterval: (callback: (...args: any[]) => void, ms?: number, ...args: any[]) => Timeout;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/globals.d.ts:        setTimeout: (callback: (...args: any[]) => void, ms?: number, ...args: any[]) => Timeout;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/globals.d.ts:        v8debug?: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/globals.d.ts:        (id: string): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/globals.d.ts:        exports: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/tls.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/tls.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/tls.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/tls.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/tls.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/tls.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/tls.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/tls.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/tls.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/tls.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/tls.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/tls.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/tls.d.ts:        context: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/tty.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/tty.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/tty.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/tty.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/tty.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/tty.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/readline.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/readline.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/readline.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/readline.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/readline.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/readline.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/events.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/events.d.ts:        addEventListener(event: string, listener: (...args: any[]) => void, opts?: { once: boolean }): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/events.d.ts:                addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/events.d.ts:                on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/events.d.ts:                once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/events.d.ts:                removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/events.d.ts:                off(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/events.d.ts:                emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/events.d.ts:                prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/events.d.ts:                prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:    const workerData: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        postMessage(value: any, transferList?: ReadonlyArray<TransferListItem>): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        addListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        emit(event: "message", value: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        on(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        once(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        prependListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        prependOnceListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        removeListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        off(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        off(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        argv?: any[] | undefined;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        workerData?: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        postMessage(value: any, transferList?: ReadonlyArray<TransferListItem>): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        addListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        emit(event: "message", value: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        on(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        once(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        prependListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        prependOnceListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        removeListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        off(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:        off(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/worker_threads.d.ts:    function receiveMessageOnPort(port: MessagePort): { message: any } | undefined;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/console.d.ts:            assert(value: any, message?: string, ...optionalParams: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/console.d.ts:            debug(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/console.d.ts:            dir(obj: any, options?: InspectOptions): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/console.d.ts:            dirxml(...data: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/console.d.ts:            error(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/console.d.ts:            group(...label: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/console.d.ts:            groupCollapsed(...label: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/console.d.ts:            info(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/console.d.ts:            log(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/console.d.ts:            table(tabularData: any, properties?: ReadonlyArray<string>): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/console.d.ts:            timeLog(label?: string, ...data: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/console.d.ts:            trace(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/console.d.ts:            warn(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/async_hooks.d.ts:        static bind<Func extends (...args: any[]) => any>(
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/async_hooks.d.ts:        bind<Func extends (...args: any[]) => any>(fn: Func): Func & { asyncResource: AsyncResource };
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/async_hooks.d.ts:            fn: (this: This, ...args: any[]) => Result,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/async_hooks.d.ts:            ...args: any[]
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/async_hooks.d.ts:        run<R>(store: T, callback: (...args: any[]) => R, ...args: any[]): R;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/async_hooks.d.ts:        exit<R>(callback: (...args: any[]) => R, ...args: any[]): R;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/vm.d.ts:        runInContext(contextifiedSandbox: Context, options?: RunningScriptOptions): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/vm.d.ts:        runInNewContext(sandbox?: Context, options?: RunningScriptOptions): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/vm.d.ts:        runInThisContext(options?: RunningScriptOptions): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/vm.d.ts:    function runInContext(code: string, contextifiedSandbox: Context, options?: RunningScriptOptions | string): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/vm.d.ts:    function runInNewContext(code: string, sandbox?: Context, options?: RunningScriptOptions | string): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/vm.d.ts:    function runInThisContext(code: string, options?: RunningScriptOptions | string): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/timers.d.ts:    function setTimeout(callback: (...args: any[]) => void, ms?: number, ...args: any[]): NodeJS.Timeout;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/timers.d.ts:    function setInterval(callback: (...args: any[]) => void, ms?: number, ...args: any[]): NodeJS.Timeout;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/timers.d.ts:    function setImmediate(callback: (...args: any[]) => void, ...args: any[]): NodeJS.Immediate;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http.d.ts:        emit(event: string, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            read(size?: number): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            unshift(chunk: any, encoding?: BufferEncoding): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            push(chunk: any, encoding?: BufferEncoding): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            addListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            emit(event: "data", chunk: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            on(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            once(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            prependListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            prependOnceListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            removeListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:                chunk: any,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:                chunks: Array<{ chunk: any; encoding: BufferEncoding }>,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            _write(chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:                chunks: Array<{ chunk: any; encoding: BufferEncoding }>,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            write(chunk: any, cb?: (error: Error | null | undefined) => void): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            write(chunk: any, encoding: BufferEncoding, cb?: (error: Error | null | undefined) => void): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            end(chunk: any, cb?: () => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            end(chunk: any, encoding: BufferEncoding, cb?: () => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            write?(this: Duplex, chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:                chunks: Array<{ chunk: any; encoding: BufferEncoding }>,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            _write(chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:                chunks: Array<{ chunk: any; encoding: BufferEncoding }>,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            write(chunk: any, encoding?: BufferEncoding, cb?: (error: Error | null | undefined) => void): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            write(chunk: any, cb?: (error: Error | null | undefined) => void): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            end(chunk: any, cb?: () => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            end(chunk: any, encoding?: BufferEncoding, cb?: () => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            addListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            emit(event: "data", chunk: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            on(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            once(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            prependListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            prependOnceListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            removeListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:        type TransformCallback = (error?: Error | null, data?: any) => void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:                chunk: any,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:                chunks: Array<{ chunk: any; encoding: BufferEncoding }>,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            transform?(this: Transform, chunk: any, encoding: BufferEncoding, callback: TransformCallback): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/stream.d.ts:            _transform(chunk: any, encoding: BufferEncoding, callback: TransformCallback): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/inspector.d.ts:            value?: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/inspector.d.ts:            value?: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/inspector.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/inspector.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/inspector.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/inspector.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/inspector.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/inspector.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/v8.d.ts:        writeValue(val: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/v8.d.ts:        readValue(): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/v8.d.ts:    function serialize(value: any): Buffer;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/v8.d.ts:    function deserialize(data: NodeJS.TypedArray): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/perf_hooks.d.ts:        timerify<T extends (...optionalParams: any[]) => any>(fn: T): T;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/url.d.ts:        forEach(callback: (value: string, name: string, searchParams: URLSearchParams) => void, thisArg?: any): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/url.d.ts:            typeof globalThis extends { onmessage: any; URL: infer URL } ? URL
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/url.d.ts:            typeof globalThis extends { onmessage: any; URLSearchParams: infer URLSearchParams } ? URLSearchParams
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        stdio?: any[] | undefined;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        addListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        emit(event: "message", message: any, handle: net.Socket | net.Server): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        on(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        once(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        prependListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        prependOnceListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        fork(env?: any): Worker;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:            listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        emit(event: "message", worker: Worker, message: any, handle: net.Socket | net.Server): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        on(event: "message", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        once(event: "message", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:            listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:            listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:    function fork(env?: any): Worker;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:    function addListener(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:    function emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:    function emit(event: "message", worker: Worker, message: any, handle: net.Socket | net.Server): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:    function on(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:    function once(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:    function removeListener(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:    function prependListener(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:    function prependOnceListener(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/cluster.d.ts:        listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/https.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/https.d.ts:        emit(event: string, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/https.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/https.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/https.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/https.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/assert.d.ts:    function assert(value: any, message?: string | Error): asserts value;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/assert.d.ts:            actual: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/assert.d.ts:            expected: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/assert.d.ts:                actual?: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/assert.d.ts:                expected?: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/assert.d.ts:            calls<Func extends (...args: any[]) => any>(fn?: Func, exact?: number): Func;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/assert.d.ts:        type AssertPredicate = RegExp | (new() => object) | ((thrown: any) => boolean) | object | Error;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/assert.d.ts:            actual: any,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/assert.d.ts:            expected: any,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/assert.d.ts:        function ok(value: any, message?: string | Error): asserts value;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/assert.d.ts:        function equal(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/assert.d.ts:        function notEqual(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/assert.d.ts:        function deepEqual(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/assert.d.ts:        function notDeepEqual(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/assert.d.ts:        function strictEqual<T>(actual: any, expected: T, message?: string | Error): asserts actual is T;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/assert.d.ts:        function notStrictEqual(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/assert.d.ts:        function deepStrictEqual<T>(actual: any, expected: T, message?: string | Error): asserts actual is T;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/assert.d.ts:        function notDeepStrictEqual(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/assert.d.ts:        function ifError(value: any): asserts value is null | undefined;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/assert.d.ts:                (value: any, message?: string | Error): asserts value;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/fs.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/fs.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/fs.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/fs.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/fs.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/fs.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/fs.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/fs.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/fs.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/fs.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/fs.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/fs.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/fs.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/fs.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/fs.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/fs.d.ts:        open: (...args: any[]) => any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/fs.d.ts:        close: (...args: any[]) => any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/fs.d.ts:        read: (...args: any[]) => any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/fs.d.ts:        write: (...args: any[]) => any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/fs.d.ts:        writev?: (...args: any[]) => any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/repl.d.ts:        cb: (err: Error | null, result: any) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/repl.d.ts:    type REPLWriter = (this: REPLServer, obj: any) => string;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/repl.d.ts:        readonly last: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/repl.d.ts:        readonly lastError: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/repl.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/repl.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/repl.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/repl.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/repl.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/repl.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/dgram.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/dgram.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/dgram.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/dgram.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/dgram.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/dgram.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/child_process.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/child_process.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/child_process.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/child_process.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/child_process.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/child_process.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/process.d.ts:            type MessageListener = (message: any, sendHandle: any) => void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/process.d.ts:            type NewListenerListener = (type: string | symbol, listener: (...args: any[]) => void) => void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/process.d.ts:            type RemoveListenerListener = (type: string | symbol, listener: (...args: any[]) => void) => void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/process.d.ts:            type MultipleResolveListener = (type: MultipleResolveType, promise: Promise<any>, value: any) => void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/process.d.ts:                        cflags: any[];
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/process.d.ts:                nextTick(callback: Function, ...args: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/process.d.ts:                    message: any,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/process.d.ts:                    sendHandle?: any,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/process.d.ts:                emit(event: "unhandledRejection", reason: any, promise: Promise<any>): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/process.d.ts:                emit(event: "message", message: any, sendHandle: any): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/process.d.ts:                emit(event: "newListener", eventName: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/process.d.ts:                emit(event: "removeListener", eventName: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/process.d.ts:                on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function format(format?: any, ...param: any[]): string;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function formatWithOptions(inspectOptions: InspectOptions, format?: any, ...param: any[]): string;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function inspect(object: any, showHidden?: boolean, depth?: number | null, color?: boolean): string;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function inspect(object: any, options?: InspectOptions): string;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function isArray(object: any): object is any[];
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function isRegExp(object: any): object is RegExp;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function isDate(object: any): object is Date;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function isError(object: any): object is Error;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function inherits(constructor: any, superConstructor: any): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    type DebugLoggerFunction = (msg: string, ...param: any[]) => void;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function isBoolean(object: any): object is boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function isBuffer(object: any): object is Buffer;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function isFunction(object: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function isNull(object: any): object is null;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function isNullOrUndefined(object: any): object is null | undefined;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function isNumber(object: any): object is number;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function isObject(object: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function isPrimitive(object: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function isString(object: any): object is string;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function isSymbol(object: any): object is symbol;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function isUndefined(object: any): object is undefined;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function isDeepStrictEqual(val1: any, val2: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function promisify<TResult>(fn: (callback: (err: any, result: TResult) => void) => void): () => Promise<TResult>;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function promisify(fn: (callback: (err?: any) => void) => void): () => Promise<void>;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        fn: (arg1: T1, callback: (err: any, result: TResult) => void) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:    function promisify<T1>(fn: (arg1: T1, callback: (err?: any) => void) => void): (arg1: T1) => Promise<void>;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        fn: (arg1: T1, arg2: T2, callback: (err: any, result: TResult) => void) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        fn: (arg1: T1, arg2: T2, callback: (err?: any) => void) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, callback: (err: any, result: TResult) => void) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, callback: (err?: any) => void) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: (err: any, result: TResult) => void) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: (err?: any) => void) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: (err: any, result: TResult) => void) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: (err?: any) => void) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isAnyArrayBuffer(object: any): object is ArrayBufferLike;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isArgumentsObject(object: any): object is IArguments;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isArrayBuffer(object: any): object is ArrayBuffer;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isArrayBufferView(object: any): object is NodeJS.ArrayBufferView;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isAsyncFunction(object: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isBigInt64Array(value: any): value is BigInt64Array;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isBigUint64Array(value: any): value is BigUint64Array;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isBooleanObject(object: any): object is Boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isBoxedPrimitive(object: any): object is String | Number | BigInt | Boolean | Symbol;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isDataView(object: any): object is DataView;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isDate(object: any): object is Date;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isExternal(object: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isFloat32Array(object: any): object is Float32Array;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isFloat64Array(object: any): object is Float64Array;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isGeneratorFunction(object: any): object is GeneratorFunction;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isGeneratorObject(object: any): object is Generator;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isInt8Array(object: any): object is Int8Array;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isInt16Array(object: any): object is Int16Array;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isInt32Array(object: any): object is Int32Array;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isMapIterator(object: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isModuleNamespaceObject(value: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isNativeError(object: any): object is Error;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isNumberObject(object: any): object is Number;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isPromise(object: any): object is Promise<any>;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isProxy(object: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isRegExp(object: any): object is RegExp;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isSetIterator(object: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isSharedArrayBuffer(object: any): object is SharedArrayBuffer;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isStringObject(object: any): object is String;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isSymbolObject(object: any): object is Symbol;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isTypedArray(object: any): object is NodeJS.TypedArray;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isUint8Array(object: any): object is Uint8Array;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isUint8ClampedArray(object: any): object is Uint8ClampedArray;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isUint16Array(object: any): object is Uint16Array;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isUint32Array(object: any): object is Uint32Array;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isWeakMap(object: any): object is WeakMap<any, any>;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/util.d.ts:        function isWeakSet(object: any): object is WeakSet<any>;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/net.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/net.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/net.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/net.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/net.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/net.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/net.d.ts:        listen(handle: any, backlog?: number, listeningListener?: () => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/net.d.ts:        listen(handle: any, listeningListener?: () => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/net.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/net.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/net.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/net.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/net.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/ts4.8/net.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/tls.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/tls.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/tls.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/tls.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/tls.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/tls.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/tls.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/tls.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/tls.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/tls.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/tls.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/tls.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/tls.d.ts:        context: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/tty.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/tty.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/tty.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/tty.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/tty.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/tty.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/readline.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/readline.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/readline.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/readline.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/readline.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/readline.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/events.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/events.d.ts:        addEventListener(event: string, listener: (...args: any[]) => void, opts?: { once: boolean }): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/events.d.ts:                addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/events.d.ts:                on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/events.d.ts:                once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/events.d.ts:                removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/events.d.ts:                off(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/events.d.ts:                emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/events.d.ts:                prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/events.d.ts:                prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:    const workerData: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        postMessage(value: any, transferList?: ReadonlyArray<TransferListItem>): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        addListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        emit(event: "message", value: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        on(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        once(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        prependListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        removeListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        off(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        off(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        argv?: any[] | undefined;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        workerData?: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        postMessage(value: any, transferList?: ReadonlyArray<TransferListItem>): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        addListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        emit(event: "message", value: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        on(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        once(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        prependListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        removeListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        off(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:        off(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/worker_threads.d.ts:    function receiveMessageOnPort(port: MessagePort): { message: any } | undefined;
./node_modules/@fast-csv/parse/node_modules/@types/node/console.d.ts:            assert(value: any, message?: string, ...optionalParams: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/console.d.ts:            debug(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/console.d.ts:            dir(obj: any, options?: InspectOptions): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/console.d.ts:            dirxml(...data: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/console.d.ts:            error(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/console.d.ts:            group(...label: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/console.d.ts:            groupCollapsed(...label: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/console.d.ts:            info(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/console.d.ts:            log(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/console.d.ts:            table(tabularData: any, properties?: ReadonlyArray<string>): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/console.d.ts:            timeLog(label?: string, ...data: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/console.d.ts:            trace(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/console.d.ts:            warn(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/async_hooks.d.ts:        static bind<Func extends (...args: any[]) => any>(
./node_modules/@fast-csv/parse/node_modules/@types/node/async_hooks.d.ts:        bind<Func extends (...args: any[]) => any>(fn: Func): Func & { asyncResource: AsyncResource };
./node_modules/@fast-csv/parse/node_modules/@types/node/async_hooks.d.ts:            fn: (this: This, ...args: any[]) => Result,
./node_modules/@fast-csv/parse/node_modules/@types/node/async_hooks.d.ts:            ...args: any[]
./node_modules/@fast-csv/parse/node_modules/@types/node/async_hooks.d.ts:        run<R>(store: T, callback: (...args: any[]) => R, ...args: any[]): R;
./node_modules/@fast-csv/parse/node_modules/@types/node/async_hooks.d.ts:        exit<R>(callback: (...args: any[]) => R, ...args: any[]): R;
./node_modules/@fast-csv/parse/node_modules/@types/node/vm.d.ts:        runInContext(contextifiedSandbox: Context, options?: RunningScriptOptions): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/vm.d.ts:        runInNewContext(sandbox?: Context, options?: RunningScriptOptions): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/vm.d.ts:        runInThisContext(options?: RunningScriptOptions): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/vm.d.ts:    function runInContext(code: string, contextifiedSandbox: Context, options?: RunningScriptOptions | string): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/vm.d.ts:    function runInNewContext(code: string, sandbox?: Context, options?: RunningScriptOptions | string): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/vm.d.ts:    function runInThisContext(code: string, options?: RunningScriptOptions | string): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/timers.d.ts:    function setTimeout(callback: (...args: any[]) => void, ms?: number, ...args: any[]): NodeJS.Timeout;
./node_modules/@fast-csv/parse/node_modules/@types/node/timers.d.ts:    function setInterval(callback: (...args: any[]) => void, ms?: number, ...args: any[]): NodeJS.Timeout;
./node_modules/@fast-csv/parse/node_modules/@types/node/timers.d.ts:    function setImmediate(callback: (...args: any[]) => void, ...args: any[]): NodeJS.Immediate;
./node_modules/@fast-csv/parse/node_modules/@types/node/http.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http.d.ts:        emit(event: string, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/http.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            read(size?: number): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            unshift(chunk: any, encoding?: BufferEncoding): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            push(chunk: any, encoding?: BufferEncoding): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            addListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            emit(event: "data", chunk: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            on(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            once(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            prependListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            removeListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:                chunk: any,
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:                chunks: Array<{ chunk: any; encoding: BufferEncoding }>,
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            _write(chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:                chunks: Array<{ chunk: any; encoding: BufferEncoding }>,
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            write(chunk: any, cb?: (error: Error | null | undefined) => void): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            write(chunk: any, encoding: BufferEncoding, cb?: (error: Error | null | undefined) => void): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            end(chunk: any, cb?: () => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            end(chunk: any, encoding: BufferEncoding, cb?: () => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            write?(this: Duplex, chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:                chunks: Array<{ chunk: any; encoding: BufferEncoding }>,
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            _write(chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:                chunks: Array<{ chunk: any; encoding: BufferEncoding }>,
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            write(chunk: any, encoding?: BufferEncoding, cb?: (error: Error | null | undefined) => void): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            write(chunk: any, cb?: (error: Error | null | undefined) => void): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            end(chunk: any, cb?: () => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            end(chunk: any, encoding?: BufferEncoding, cb?: () => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            addListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            emit(event: "data", chunk: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            on(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            once(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            prependListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            removeListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:        type TransformCallback = (error?: Error | null, data?: any) => void;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:                chunk: any,
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:                chunks: Array<{ chunk: any; encoding: BufferEncoding }>,
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            transform?(this: Transform, chunk: any, encoding: BufferEncoding, callback: TransformCallback): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/stream.d.ts:            _transform(chunk: any, encoding: BufferEncoding, callback: TransformCallback): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/inspector.d.ts:            value?: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/inspector.d.ts:            value?: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/inspector.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/inspector.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/inspector.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/inspector.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/inspector.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/inspector.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/v8.d.ts:        writeValue(val: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/v8.d.ts:        readValue(): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/v8.d.ts:    function serialize(value: any): Buffer;
./node_modules/@fast-csv/parse/node_modules/@types/node/v8.d.ts:    function deserialize(data: NodeJS.TypedArray): any;
./node_modules/@fast-csv/parse/node_modules/@types/node/perf_hooks.d.ts:        timerify<T extends (...optionalParams: any[]) => any>(fn: T): T;
./node_modules/@fast-csv/parse/node_modules/@types/node/url.d.ts:        forEach(callback: (value: string, name: string, searchParams: URLSearchParams) => void, thisArg?: any): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/url.d.ts:            typeof globalThis extends { onmessage: any; URL: infer URL } ? URL
./node_modules/@fast-csv/parse/node_modules/@types/node/url.d.ts:            typeof globalThis extends { onmessage: any; URLSearchParams: infer URLSearchParams } ? URLSearchParams
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        stdio?: any[] | undefined;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        addListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        emit(event: "message", message: any, handle: net.Socket | net.Server): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        on(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        once(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        prependListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        prependOnceListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        fork(env?: any): Worker;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:            listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        emit(event: "message", worker: Worker, message: any, handle: net.Socket | net.Server): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        on(event: "message", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        once(event: "message", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:            listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:            listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:    function fork(env?: any): Worker;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:    function addListener(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:    function emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:    function emit(event: "message", worker: Worker, message: any, handle: net.Socket | net.Server): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:    function on(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:    function once(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:    function removeListener(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:    function prependListener(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:    function prependOnceListener(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/parse/node_modules/@types/node/cluster.d.ts:        listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/https.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/https.d.ts:        emit(event: string, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/https.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/https.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/https.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/https.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/assert.d.ts:    function assert(value: any, message?: string | Error): asserts value;
./node_modules/@fast-csv/parse/node_modules/@types/node/assert.d.ts:            actual: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/assert.d.ts:            expected: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/assert.d.ts:                actual?: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/assert.d.ts:                expected?: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/assert.d.ts:            calls<Func extends (...args: any[]) => any>(fn?: Func, exact?: number): Func;
./node_modules/@fast-csv/parse/node_modules/@types/node/assert.d.ts:        type AssertPredicate = RegExp | (new() => object) | ((thrown: any) => boolean) | object | Error;
./node_modules/@fast-csv/parse/node_modules/@types/node/assert.d.ts:            actual: any,
./node_modules/@fast-csv/parse/node_modules/@types/node/assert.d.ts:            expected: any,
./node_modules/@fast-csv/parse/node_modules/@types/node/assert.d.ts:        function ok(value: any, message?: string | Error): asserts value;
./node_modules/@fast-csv/parse/node_modules/@types/node/assert.d.ts:        function equal(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/assert.d.ts:        function notEqual(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/assert.d.ts:        function deepEqual(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/assert.d.ts:        function notDeepEqual(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/assert.d.ts:        function strictEqual<T>(actual: any, expected: T, message?: string | Error): asserts actual is T;
./node_modules/@fast-csv/parse/node_modules/@types/node/assert.d.ts:        function notStrictEqual(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/assert.d.ts:        function deepStrictEqual<T>(actual: any, expected: T, message?: string | Error): asserts actual is T;
./node_modules/@fast-csv/parse/node_modules/@types/node/assert.d.ts:        function notDeepStrictEqual(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/assert.d.ts:        function ifError(value: any): asserts value is null | undefined;
./node_modules/@fast-csv/parse/node_modules/@types/node/assert.d.ts:                (value: any, message?: string | Error): asserts value;
./node_modules/@fast-csv/parse/node_modules/@types/node/fs.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/fs.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/fs.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/fs.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/fs.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/fs.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/fs.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/fs.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/fs.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/fs.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/fs.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/fs.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/fs.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/fs.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/fs.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/fs.d.ts:        open: (...args: any[]) => any;
./node_modules/@fast-csv/parse/node_modules/@types/node/fs.d.ts:        close: (...args: any[]) => any;
./node_modules/@fast-csv/parse/node_modules/@types/node/fs.d.ts:        read: (...args: any[]) => any;
./node_modules/@fast-csv/parse/node_modules/@types/node/fs.d.ts:        write: (...args: any[]) => any;
./node_modules/@fast-csv/parse/node_modules/@types/node/fs.d.ts:        writev?: (...args: any[]) => any;
./node_modules/@fast-csv/parse/node_modules/@types/node/repl.d.ts:        cb: (err: Error | null, result: any) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/repl.d.ts:    type REPLWriter = (this: REPLServer, obj: any) => string;
./node_modules/@fast-csv/parse/node_modules/@types/node/repl.d.ts:        readonly last: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/repl.d.ts:        readonly lastError: any;
./node_modules/@fast-csv/parse/node_modules/@types/node/repl.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/repl.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/repl.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/repl.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/repl.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/repl.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/dgram.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/dgram.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/dgram.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/dgram.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/dgram.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/dgram.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/child_process.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/child_process.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/child_process.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/child_process.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/child_process.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/child_process.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/process.d.ts:            type MessageListener = (message: any, sendHandle: any) => void;
./node_modules/@fast-csv/parse/node_modules/@types/node/process.d.ts:            type NewListenerListener = (type: string | symbol, listener: (...args: any[]) => void) => void;
./node_modules/@fast-csv/parse/node_modules/@types/node/process.d.ts:            type RemoveListenerListener = (type: string | symbol, listener: (...args: any[]) => void) => void;
./node_modules/@fast-csv/parse/node_modules/@types/node/process.d.ts:            type MultipleResolveListener = (type: MultipleResolveType, promise: Promise<any>, value: any) => void;
./node_modules/@fast-csv/parse/node_modules/@types/node/process.d.ts:                        cflags: any[];
./node_modules/@fast-csv/parse/node_modules/@types/node/process.d.ts:                nextTick(callback: Function, ...args: any[]): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/process.d.ts:                    message: any,
./node_modules/@fast-csv/parse/node_modules/@types/node/process.d.ts:                    sendHandle?: any,
./node_modules/@fast-csv/parse/node_modules/@types/node/process.d.ts:                emit(event: "unhandledRejection", reason: any, promise: Promise<any>): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/process.d.ts:                emit(event: "message", message: any, sendHandle: any): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/process.d.ts:                emit(event: "newListener", eventName: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/process.d.ts:                emit(event: "removeListener", eventName: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/process.d.ts:                on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function format(format?: any, ...param: any[]): string;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function formatWithOptions(inspectOptions: InspectOptions, format?: any, ...param: any[]): string;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function inspect(object: any, showHidden?: boolean, depth?: number | null, color?: boolean): string;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function inspect(object: any, options?: InspectOptions): string;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function isArray(object: any): object is any[];
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function isRegExp(object: any): object is RegExp;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function isDate(object: any): object is Date;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function isError(object: any): object is Error;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function inherits(constructor: any, superConstructor: any): void;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    type DebugLoggerFunction = (msg: string, ...param: any[]) => void;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function isBoolean(object: any): object is boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function isBuffer(object: any): object is Buffer;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function isFunction(object: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function isNull(object: any): object is null;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function isNullOrUndefined(object: any): object is null | undefined;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function isNumber(object: any): object is number;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function isObject(object: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function isPrimitive(object: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function isString(object: any): object is string;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function isSymbol(object: any): object is symbol;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function isUndefined(object: any): object is undefined;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function isDeepStrictEqual(val1: any, val2: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function promisify<TResult>(fn: (callback: (err: any, result: TResult) => void) => void): () => Promise<TResult>;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function promisify(fn: (callback: (err?: any) => void) => void): () => Promise<void>;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, callback: (err: any, result: TResult) => void) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:    function promisify<T1>(fn: (arg1: T1, callback: (err?: any) => void) => void): (arg1: T1) => Promise<void>;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, callback: (err: any, result: TResult) => void) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, callback: (err?: any) => void) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, callback: (err: any, result: TResult) => void) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, callback: (err?: any) => void) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: (err: any, result: TResult) => void) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: (err?: any) => void) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: (err: any, result: TResult) => void) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: (err?: any) => void) => void,
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isAnyArrayBuffer(object: any): object is ArrayBufferLike;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isArgumentsObject(object: any): object is IArguments;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isArrayBuffer(object: any): object is ArrayBuffer;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isArrayBufferView(object: any): object is NodeJS.ArrayBufferView;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isAsyncFunction(object: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isBigInt64Array(value: any): value is BigInt64Array;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isBigUint64Array(value: any): value is BigUint64Array;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isBooleanObject(object: any): object is Boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isBoxedPrimitive(object: any): object is String | Number | BigInt | Boolean | Symbol;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isDataView(object: any): object is DataView;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isDate(object: any): object is Date;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isExternal(object: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isFloat32Array(object: any): object is Float32Array;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isFloat64Array(object: any): object is Float64Array;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isGeneratorFunction(object: any): object is GeneratorFunction;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isGeneratorObject(object: any): object is Generator;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isInt8Array(object: any): object is Int8Array;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isInt16Array(object: any): object is Int16Array;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isInt32Array(object: any): object is Int32Array;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isMapIterator(object: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isModuleNamespaceObject(value: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isNativeError(object: any): object is Error;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isNumberObject(object: any): object is Number;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isPromise(object: any): object is Promise<any>;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isProxy(object: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isRegExp(object: any): object is RegExp;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isSetIterator(object: any): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isSharedArrayBuffer(object: any): object is SharedArrayBuffer;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isStringObject(object: any): object is String;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isSymbolObject(object: any): object is Symbol;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isTypedArray(object: any): object is NodeJS.TypedArray;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isUint8Array(object: any): object is Uint8Array;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isUint8ClampedArray(object: any): object is Uint8ClampedArray;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isUint16Array(object: any): object is Uint16Array;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isUint32Array(object: any): object is Uint32Array;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isWeakMap(object: any): object is WeakMap<any, any>;
./node_modules/@fast-csv/parse/node_modules/@types/node/util.d.ts:        function isWeakSet(object: any): object is WeakSet<any>;
./node_modules/@fast-csv/parse/node_modules/@types/node/net.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/net.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/net.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/net.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/net.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/net.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/net.d.ts:        listen(handle: any, backlog?: number, listeningListener?: () => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/net.d.ts:        listen(handle: any, listeningListener?: () => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/net.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/net.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/parse/node_modules/@types/node/net.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/net.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/net.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/node_modules/@types/node/net.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/parse/build/src/CsvParserStream.d.ts:    emit(event: string | symbol, ...rest: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/domain.d.ts:                run<T>(fn: (...args: any[]) => T, ...args: any[]): T;
./node_modules/@fast-csv/format/node_modules/@types/node/globals.d.ts:declare function setTimeout(callback: (...args: any[]) => void, ms?: number, ...args: any[]): NodeJS.Timeout;
./node_modules/@fast-csv/format/node_modules/@types/node/globals.d.ts:declare function setInterval(callback: (...args: any[]) => void, ms?: number, ...args: any[]): NodeJS.Timeout;
./node_modules/@fast-csv/format/node_modules/@types/node/globals.d.ts:declare function setImmediate(callback: (...args: any[]) => void, ...args: any[]): NodeJS.Immediate;
./node_modules/@fast-csv/format/node_modules/@types/node/globals.d.ts:declare var exports: any;
./node_modules/@fast-csv/format/node_modules/@types/node/globals.d.ts:    abort(reason?: any): void;
./node_modules/@fast-csv/format/node_modules/@types/node/globals.d.ts:    readonly reason: any;
./node_modules/@fast-csv/format/node_modules/@types/node/globals.d.ts:    abort(reason?: any): AbortSignal;
./node_modules/@fast-csv/format/node_modules/@types/node/globals.d.ts:    static isBuffer(obj: any): obj is Buffer;
./node_modules/@fast-csv/format/node_modules/@types/node/globals.d.ts:        getThis(): any;
./node_modules/@fast-csv/format/node_modules/@types/node/globals.d.ts:        setImmediate: (callback: (...args: any[]) => void, ...args: any[]) => Immediate;
./node_modules/@fast-csv/format/node_modules/@types/node/globals.d.ts:        setInterval: (callback: (...args: any[]) => void, ms?: number, ...args: any[]) => Timeout;
./node_modules/@fast-csv/format/node_modules/@types/node/globals.d.ts:        setTimeout: (callback: (...args: any[]) => void, ms?: number, ...args: any[]) => Timeout;
./node_modules/@fast-csv/format/node_modules/@types/node/globals.d.ts:        v8debug?: any;
./node_modules/@fast-csv/format/node_modules/@types/node/globals.d.ts:        (id: string): any;
./node_modules/@fast-csv/format/node_modules/@types/node/globals.d.ts:        exports: any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/domain.d.ts:                run<T>(fn: (...args: any[]) => T, ...args: any[]): T;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/globals.d.ts:declare function setTimeout(callback: (...args: any[]) => void, ms?: number, ...args: any[]): NodeJS.Timeout;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/globals.d.ts:declare function setInterval(callback: (...args: any[]) => void, ms?: number, ...args: any[]): NodeJS.Timeout;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/globals.d.ts:declare function setImmediate(callback: (...args: any[]) => void, ...args: any[]): NodeJS.Immediate;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/globals.d.ts:declare var exports: any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/globals.d.ts:    abort(reason?: any): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/globals.d.ts:    static isBuffer(obj: any): obj is Buffer;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/globals.d.ts:        getThis(): any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/globals.d.ts:        setImmediate: (callback: (...args: any[]) => void, ...args: any[]) => Immediate;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/globals.d.ts:        setInterval: (callback: (...args: any[]) => void, ms?: number, ...args: any[]) => Timeout;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/globals.d.ts:        setTimeout: (callback: (...args: any[]) => void, ms?: number, ...args: any[]) => Timeout;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/globals.d.ts:        v8debug?: any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/globals.d.ts:        (id: string): any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/globals.d.ts:        exports: any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/tls.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/tls.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/tls.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/tls.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/tls.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/tls.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/tls.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/tls.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/tls.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/tls.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/tls.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/tls.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/tls.d.ts:        context: any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/tty.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/tty.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/tty.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/tty.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/tty.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/tty.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/readline.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/readline.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/readline.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/readline.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/readline.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/readline.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/events.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/events.d.ts:        addEventListener(event: string, listener: (...args: any[]) => void, opts?: { once: boolean }): any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/events.d.ts:                addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/events.d.ts:                on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/events.d.ts:                once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/events.d.ts:                removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/events.d.ts:                off(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/events.d.ts:                emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/events.d.ts:                prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/events.d.ts:                prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:    const workerData: any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        postMessage(value: any, transferList?: ReadonlyArray<TransferListItem>): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        addListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        emit(event: "message", value: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        on(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        once(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        prependListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        prependOnceListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        removeListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        off(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        off(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        argv?: any[] | undefined;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        workerData?: any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        postMessage(value: any, transferList?: ReadonlyArray<TransferListItem>): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        addListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        emit(event: "message", value: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        on(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        once(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        prependListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        prependOnceListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        removeListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        off(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:        off(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/worker_threads.d.ts:    function receiveMessageOnPort(port: MessagePort): { message: any } | undefined;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/console.d.ts:            assert(value: any, message?: string, ...optionalParams: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/console.d.ts:            debug(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/console.d.ts:            dir(obj: any, options?: InspectOptions): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/console.d.ts:            dirxml(...data: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/console.d.ts:            error(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/console.d.ts:            group(...label: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/console.d.ts:            groupCollapsed(...label: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/console.d.ts:            info(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/console.d.ts:            log(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/console.d.ts:            table(tabularData: any, properties?: ReadonlyArray<string>): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/console.d.ts:            timeLog(label?: string, ...data: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/console.d.ts:            trace(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/console.d.ts:            warn(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/async_hooks.d.ts:        static bind<Func extends (...args: any[]) => any>(
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/async_hooks.d.ts:        bind<Func extends (...args: any[]) => any>(fn: Func): Func & { asyncResource: AsyncResource };
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/async_hooks.d.ts:            fn: (this: This, ...args: any[]) => Result,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/async_hooks.d.ts:            ...args: any[]
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/async_hooks.d.ts:        run<R>(store: T, callback: (...args: any[]) => R, ...args: any[]): R;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/async_hooks.d.ts:        exit<R>(callback: (...args: any[]) => R, ...args: any[]): R;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/vm.d.ts:        runInContext(contextifiedSandbox: Context, options?: RunningScriptOptions): any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/vm.d.ts:        runInNewContext(sandbox?: Context, options?: RunningScriptOptions): any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/vm.d.ts:        runInThisContext(options?: RunningScriptOptions): any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/vm.d.ts:    function runInContext(code: string, contextifiedSandbox: Context, options?: RunningScriptOptions | string): any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/vm.d.ts:    function runInNewContext(code: string, sandbox?: Context, options?: RunningScriptOptions | string): any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/vm.d.ts:    function runInThisContext(code: string, options?: RunningScriptOptions | string): any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/timers.d.ts:    function setTimeout(callback: (...args: any[]) => void, ms?: number, ...args: any[]): NodeJS.Timeout;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/timers.d.ts:    function setInterval(callback: (...args: any[]) => void, ms?: number, ...args: any[]): NodeJS.Timeout;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/timers.d.ts:    function setImmediate(callback: (...args: any[]) => void, ...args: any[]): NodeJS.Immediate;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http.d.ts:        emit(event: string, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            read(size?: number): any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            unshift(chunk: any, encoding?: BufferEncoding): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            push(chunk: any, encoding?: BufferEncoding): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            addListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            emit(event: "data", chunk: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            on(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            once(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            prependListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            prependOnceListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            removeListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:                chunk: any,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:                chunks: Array<{ chunk: any; encoding: BufferEncoding }>,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            _write(chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:                chunks: Array<{ chunk: any; encoding: BufferEncoding }>,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            write(chunk: any, cb?: (error: Error | null | undefined) => void): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            write(chunk: any, encoding: BufferEncoding, cb?: (error: Error | null | undefined) => void): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            end(chunk: any, cb?: () => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            end(chunk: any, encoding: BufferEncoding, cb?: () => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            write?(this: Duplex, chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:                chunks: Array<{ chunk: any; encoding: BufferEncoding }>,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            _write(chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:                chunks: Array<{ chunk: any; encoding: BufferEncoding }>,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            write(chunk: any, encoding?: BufferEncoding, cb?: (error: Error | null | undefined) => void): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            write(chunk: any, cb?: (error: Error | null | undefined) => void): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            end(chunk: any, cb?: () => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            end(chunk: any, encoding?: BufferEncoding, cb?: () => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            addListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            emit(event: "data", chunk: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            on(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            once(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            prependListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            prependOnceListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            removeListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:        type TransformCallback = (error?: Error | null, data?: any) => void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:                chunk: any,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:                chunks: Array<{ chunk: any; encoding: BufferEncoding }>,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            transform?(this: Transform, chunk: any, encoding: BufferEncoding, callback: TransformCallback): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/stream.d.ts:            _transform(chunk: any, encoding: BufferEncoding, callback: TransformCallback): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/inspector.d.ts:            value?: any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/inspector.d.ts:            value?: any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/inspector.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/inspector.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/inspector.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/inspector.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/inspector.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/inspector.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/v8.d.ts:        writeValue(val: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/v8.d.ts:        readValue(): any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/v8.d.ts:    function serialize(value: any): Buffer;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/v8.d.ts:    function deserialize(data: NodeJS.TypedArray): any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/perf_hooks.d.ts:        timerify<T extends (...optionalParams: any[]) => any>(fn: T): T;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/url.d.ts:        forEach(callback: (value: string, name: string, searchParams: URLSearchParams) => void, thisArg?: any): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/url.d.ts:            typeof globalThis extends { onmessage: any; URL: infer URL } ? URL
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/url.d.ts:            typeof globalThis extends { onmessage: any; URLSearchParams: infer URLSearchParams } ? URLSearchParams
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        stdio?: any[] | undefined;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        addListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        emit(event: "message", message: any, handle: net.Socket | net.Server): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        on(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        once(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        prependListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        prependOnceListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        fork(env?: any): Worker;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:            listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        emit(event: "message", worker: Worker, message: any, handle: net.Socket | net.Server): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        on(event: "message", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        once(event: "message", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:            listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:            listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:    function fork(env?: any): Worker;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:    function addListener(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:    function emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:    function emit(event: "message", worker: Worker, message: any, handle: net.Socket | net.Server): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:    function on(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:    function once(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:    function removeListener(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:    function prependListener(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:    function prependOnceListener(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/cluster.d.ts:        listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/https.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/https.d.ts:        emit(event: string, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/https.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/https.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/https.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/https.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/assert.d.ts:    function assert(value: any, message?: string | Error): asserts value;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/assert.d.ts:            actual: any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/assert.d.ts:            expected: any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/assert.d.ts:                actual?: any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/assert.d.ts:                expected?: any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/assert.d.ts:            calls<Func extends (...args: any[]) => any>(fn?: Func, exact?: number): Func;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/assert.d.ts:        type AssertPredicate = RegExp | (new() => object) | ((thrown: any) => boolean) | object | Error;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/assert.d.ts:            actual: any,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/assert.d.ts:            expected: any,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/assert.d.ts:        function ok(value: any, message?: string | Error): asserts value;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/assert.d.ts:        function equal(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/assert.d.ts:        function notEqual(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/assert.d.ts:        function deepEqual(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/assert.d.ts:        function notDeepEqual(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/assert.d.ts:        function strictEqual<T>(actual: any, expected: T, message?: string | Error): asserts actual is T;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/assert.d.ts:        function notStrictEqual(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/assert.d.ts:        function deepStrictEqual<T>(actual: any, expected: T, message?: string | Error): asserts actual is T;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/assert.d.ts:        function notDeepStrictEqual(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/assert.d.ts:        function ifError(value: any): asserts value is null | undefined;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/assert.d.ts:                (value: any, message?: string | Error): asserts value;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/fs.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/fs.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/fs.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/fs.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/fs.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/fs.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/fs.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/fs.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/fs.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/fs.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/fs.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/fs.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/fs.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/fs.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/fs.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/fs.d.ts:        open: (...args: any[]) => any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/fs.d.ts:        close: (...args: any[]) => any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/fs.d.ts:        read: (...args: any[]) => any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/fs.d.ts:        write: (...args: any[]) => any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/fs.d.ts:        writev?: (...args: any[]) => any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/repl.d.ts:        cb: (err: Error | null, result: any) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/repl.d.ts:    type REPLWriter = (this: REPLServer, obj: any) => string;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/repl.d.ts:        readonly last: any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/repl.d.ts:        readonly lastError: any;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/repl.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/repl.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/repl.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/repl.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/repl.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/repl.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/dgram.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/dgram.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/dgram.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/dgram.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/dgram.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/dgram.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/child_process.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/child_process.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/child_process.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/child_process.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/child_process.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/child_process.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/process.d.ts:            type MessageListener = (message: any, sendHandle: any) => void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/process.d.ts:            type NewListenerListener = (type: string | symbol, listener: (...args: any[]) => void) => void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/process.d.ts:            type RemoveListenerListener = (type: string | symbol, listener: (...args: any[]) => void) => void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/process.d.ts:            type MultipleResolveListener = (type: MultipleResolveType, promise: Promise<any>, value: any) => void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/process.d.ts:                        cflags: any[];
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/process.d.ts:                nextTick(callback: Function, ...args: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/process.d.ts:                    message: any,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/process.d.ts:                    sendHandle?: any,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/process.d.ts:                emit(event: "unhandledRejection", reason: any, promise: Promise<any>): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/process.d.ts:                emit(event: "message", message: any, sendHandle: any): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/process.d.ts:                emit(event: "newListener", eventName: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/process.d.ts:                emit(event: "removeListener", eventName: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/process.d.ts:                on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function format(format?: any, ...param: any[]): string;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function formatWithOptions(inspectOptions: InspectOptions, format?: any, ...param: any[]): string;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function inspect(object: any, showHidden?: boolean, depth?: number | null, color?: boolean): string;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function inspect(object: any, options?: InspectOptions): string;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function isArray(object: any): object is any[];
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function isRegExp(object: any): object is RegExp;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function isDate(object: any): object is Date;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function isError(object: any): object is Error;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function inherits(constructor: any, superConstructor: any): void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    type DebugLoggerFunction = (msg: string, ...param: any[]) => void;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function isBoolean(object: any): object is boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function isBuffer(object: any): object is Buffer;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function isFunction(object: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function isNull(object: any): object is null;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function isNullOrUndefined(object: any): object is null | undefined;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function isNumber(object: any): object is number;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function isObject(object: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function isPrimitive(object: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function isString(object: any): object is string;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function isSymbol(object: any): object is symbol;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function isUndefined(object: any): object is undefined;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function isDeepStrictEqual(val1: any, val2: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function promisify<TResult>(fn: (callback: (err: any, result: TResult) => void) => void): () => Promise<TResult>;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function promisify(fn: (callback: (err?: any) => void) => void): () => Promise<void>;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        fn: (arg1: T1, callback: (err: any, result: TResult) => void) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:    function promisify<T1>(fn: (arg1: T1, callback: (err?: any) => void) => void): (arg1: T1) => Promise<void>;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        fn: (arg1: T1, arg2: T2, callback: (err: any, result: TResult) => void) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        fn: (arg1: T1, arg2: T2, callback: (err?: any) => void) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, callback: (err: any, result: TResult) => void) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, callback: (err?: any) => void) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: (err: any, result: TResult) => void) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: (err?: any) => void) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: (err: any, result: TResult) => void) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: (err?: any) => void) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isAnyArrayBuffer(object: any): object is ArrayBufferLike;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isArgumentsObject(object: any): object is IArguments;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isArrayBuffer(object: any): object is ArrayBuffer;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isArrayBufferView(object: any): object is NodeJS.ArrayBufferView;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isAsyncFunction(object: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isBigInt64Array(value: any): value is BigInt64Array;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isBigUint64Array(value: any): value is BigUint64Array;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isBooleanObject(object: any): object is Boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isBoxedPrimitive(object: any): object is String | Number | BigInt | Boolean | Symbol;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isDataView(object: any): object is DataView;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isDate(object: any): object is Date;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isExternal(object: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isFloat32Array(object: any): object is Float32Array;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isFloat64Array(object: any): object is Float64Array;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isGeneratorFunction(object: any): object is GeneratorFunction;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isGeneratorObject(object: any): object is Generator;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isInt8Array(object: any): object is Int8Array;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isInt16Array(object: any): object is Int16Array;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isInt32Array(object: any): object is Int32Array;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isMapIterator(object: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isModuleNamespaceObject(value: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isNativeError(object: any): object is Error;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isNumberObject(object: any): object is Number;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isPromise(object: any): object is Promise<any>;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isProxy(object: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isRegExp(object: any): object is RegExp;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isSetIterator(object: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isSharedArrayBuffer(object: any): object is SharedArrayBuffer;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isStringObject(object: any): object is String;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isSymbolObject(object: any): object is Symbol;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isTypedArray(object: any): object is NodeJS.TypedArray;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isUint8Array(object: any): object is Uint8Array;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isUint8ClampedArray(object: any): object is Uint8ClampedArray;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isUint16Array(object: any): object is Uint16Array;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isUint32Array(object: any): object is Uint32Array;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isWeakMap(object: any): object is WeakMap<any, any>;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/util.d.ts:        function isWeakSet(object: any): object is WeakSet<any>;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/net.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/net.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/net.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/net.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/net.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/net.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/net.d.ts:        listen(handle: any, backlog?: number, listeningListener?: () => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/net.d.ts:        listen(handle: any, listeningListener?: () => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/net.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/net.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/net.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/net.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/net.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/ts4.8/net.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/tls.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/tls.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/tls.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/tls.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/tls.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/tls.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/tls.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/tls.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/tls.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/tls.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/tls.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/tls.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/tls.d.ts:        context: any;
./node_modules/@fast-csv/format/node_modules/@types/node/tty.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/tty.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/tty.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/tty.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/tty.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/tty.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/readline.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/readline.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/readline.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/readline.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/readline.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/readline.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/events.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/events.d.ts:        addEventListener(event: string, listener: (...args: any[]) => void, opts?: { once: boolean }): any;
./node_modules/@fast-csv/format/node_modules/@types/node/events.d.ts:                addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/events.d.ts:                on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/events.d.ts:                once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/events.d.ts:                removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/events.d.ts:                off(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/events.d.ts:                emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/events.d.ts:                prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/events.d.ts:                prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:    const workerData: any;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        postMessage(value: any, transferList?: ReadonlyArray<TransferListItem>): void;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        addListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        emit(event: "message", value: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        on(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        once(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        prependListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        removeListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        off(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        off(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        argv?: any[] | undefined;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        workerData?: any;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        postMessage(value: any, transferList?: ReadonlyArray<TransferListItem>): void;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        addListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        emit(event: "message", value: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        on(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        once(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        prependListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        removeListener(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        off(event: "message", listener: (value: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:        off(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/worker_threads.d.ts:    function receiveMessageOnPort(port: MessagePort): { message: any } | undefined;
./node_modules/@fast-csv/format/node_modules/@types/node/console.d.ts:            assert(value: any, message?: string, ...optionalParams: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/console.d.ts:            debug(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/console.d.ts:            dir(obj: any, options?: InspectOptions): void;
./node_modules/@fast-csv/format/node_modules/@types/node/console.d.ts:            dirxml(...data: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/console.d.ts:            error(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/console.d.ts:            group(...label: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/console.d.ts:            groupCollapsed(...label: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/console.d.ts:            info(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/console.d.ts:            log(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/console.d.ts:            table(tabularData: any, properties?: ReadonlyArray<string>): void;
./node_modules/@fast-csv/format/node_modules/@types/node/console.d.ts:            timeLog(label?: string, ...data: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/console.d.ts:            trace(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/console.d.ts:            warn(message?: any, ...optionalParams: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/async_hooks.d.ts:        static bind<Func extends (...args: any[]) => any>(
./node_modules/@fast-csv/format/node_modules/@types/node/async_hooks.d.ts:        bind<Func extends (...args: any[]) => any>(fn: Func): Func & { asyncResource: AsyncResource };
./node_modules/@fast-csv/format/node_modules/@types/node/async_hooks.d.ts:            fn: (this: This, ...args: any[]) => Result,
./node_modules/@fast-csv/format/node_modules/@types/node/async_hooks.d.ts:            ...args: any[]
./node_modules/@fast-csv/format/node_modules/@types/node/async_hooks.d.ts:        run<R>(store: T, callback: (...args: any[]) => R, ...args: any[]): R;
./node_modules/@fast-csv/format/node_modules/@types/node/async_hooks.d.ts:        exit<R>(callback: (...args: any[]) => R, ...args: any[]): R;
./node_modules/@fast-csv/format/node_modules/@types/node/vm.d.ts:        runInContext(contextifiedSandbox: Context, options?: RunningScriptOptions): any;
./node_modules/@fast-csv/format/node_modules/@types/node/vm.d.ts:        runInNewContext(sandbox?: Context, options?: RunningScriptOptions): any;
./node_modules/@fast-csv/format/node_modules/@types/node/vm.d.ts:        runInThisContext(options?: RunningScriptOptions): any;
./node_modules/@fast-csv/format/node_modules/@types/node/vm.d.ts:    function runInContext(code: string, contextifiedSandbox: Context, options?: RunningScriptOptions | string): any;
./node_modules/@fast-csv/format/node_modules/@types/node/vm.d.ts:    function runInNewContext(code: string, sandbox?: Context, options?: RunningScriptOptions | string): any;
./node_modules/@fast-csv/format/node_modules/@types/node/vm.d.ts:    function runInThisContext(code: string, options?: RunningScriptOptions | string): any;
./node_modules/@fast-csv/format/node_modules/@types/node/timers.d.ts:    function setTimeout(callback: (...args: any[]) => void, ms?: number, ...args: any[]): NodeJS.Timeout;
./node_modules/@fast-csv/format/node_modules/@types/node/timers.d.ts:    function setInterval(callback: (...args: any[]) => void, ms?: number, ...args: any[]): NodeJS.Timeout;
./node_modules/@fast-csv/format/node_modules/@types/node/timers.d.ts:    function setImmediate(callback: (...args: any[]) => void, ...args: any[]): NodeJS.Immediate;
./node_modules/@fast-csv/format/node_modules/@types/node/http.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http.d.ts:        emit(event: string, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/http.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            read(size?: number): any;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            unshift(chunk: any, encoding?: BufferEncoding): void;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            push(chunk: any, encoding?: BufferEncoding): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            addListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            emit(event: "data", chunk: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            on(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            once(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            prependListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            removeListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:                chunk: any,
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:                chunks: Array<{ chunk: any; encoding: BufferEncoding }>,
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            _write(chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:                chunks: Array<{ chunk: any; encoding: BufferEncoding }>,
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            write(chunk: any, cb?: (error: Error | null | undefined) => void): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            write(chunk: any, encoding: BufferEncoding, cb?: (error: Error | null | undefined) => void): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            end(chunk: any, cb?: () => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            end(chunk: any, encoding: BufferEncoding, cb?: () => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            write?(this: Duplex, chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:                chunks: Array<{ chunk: any; encoding: BufferEncoding }>,
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            _write(chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:                chunks: Array<{ chunk: any; encoding: BufferEncoding }>,
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            write(chunk: any, encoding?: BufferEncoding, cb?: (error: Error | null | undefined) => void): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            write(chunk: any, cb?: (error: Error | null | undefined) => void): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            end(chunk: any, cb?: () => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            end(chunk: any, encoding?: BufferEncoding, cb?: () => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            addListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            emit(event: "data", chunk: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            on(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            once(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            prependListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            removeListener(event: "data", listener: (chunk: any) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:        type TransformCallback = (error?: Error | null, data?: any) => void;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:                chunk: any,
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:                chunks: Array<{ chunk: any; encoding: BufferEncoding }>,
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            transform?(this: Transform, chunk: any, encoding: BufferEncoding, callback: TransformCallback): void;
./node_modules/@fast-csv/format/node_modules/@types/node/stream.d.ts:            _transform(chunk: any, encoding: BufferEncoding, callback: TransformCallback): void;
./node_modules/@fast-csv/format/node_modules/@types/node/inspector.d.ts:            value?: any;
./node_modules/@fast-csv/format/node_modules/@types/node/inspector.d.ts:            value?: any;
./node_modules/@fast-csv/format/node_modules/@types/node/inspector.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/inspector.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/inspector.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/inspector.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/inspector.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/inspector.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/v8.d.ts:        writeValue(val: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/v8.d.ts:        readValue(): any;
./node_modules/@fast-csv/format/node_modules/@types/node/v8.d.ts:    function serialize(value: any): Buffer;
./node_modules/@fast-csv/format/node_modules/@types/node/v8.d.ts:    function deserialize(data: NodeJS.TypedArray): any;
./node_modules/@fast-csv/format/node_modules/@types/node/perf_hooks.d.ts:        timerify<T extends (...optionalParams: any[]) => any>(fn: T): T;
./node_modules/@fast-csv/format/node_modules/@types/node/url.d.ts:        forEach(callback: (value: string, name: string, searchParams: URLSearchParams) => void, thisArg?: any): void;
./node_modules/@fast-csv/format/node_modules/@types/node/url.d.ts:            typeof globalThis extends { onmessage: any; URL: infer URL } ? URL
./node_modules/@fast-csv/format/node_modules/@types/node/url.d.ts:            typeof globalThis extends { onmessage: any; URLSearchParams: infer URLSearchParams } ? URLSearchParams
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        stdio?: any[] | undefined;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        addListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        emit(event: "message", message: any, handle: net.Socket | net.Server): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        on(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        once(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        prependListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        prependOnceListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        fork(env?: any): Worker;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:            listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        emit(event: "message", worker: Worker, message: any, handle: net.Socket | net.Server): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        on(event: "message", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        once(event: "message", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:            listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:            listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:    function fork(env?: any): Worker;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:    function addListener(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:    function emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:    function emit(event: "message", worker: Worker, message: any, handle: net.Socket | net.Server): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:    function on(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:    function once(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:    function removeListener(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:    function prependListener(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:    function prependOnceListener(event: string, listener: (...args: any[]) => void): Cluster;
./node_modules/@fast-csv/format/node_modules/@types/node/cluster.d.ts:        listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/https.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/https.d.ts:        emit(event: string, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/https.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/https.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/https.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/https.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/assert.d.ts:    function assert(value: any, message?: string | Error): asserts value;
./node_modules/@fast-csv/format/node_modules/@types/node/assert.d.ts:            actual: any;
./node_modules/@fast-csv/format/node_modules/@types/node/assert.d.ts:            expected: any;
./node_modules/@fast-csv/format/node_modules/@types/node/assert.d.ts:                actual?: any;
./node_modules/@fast-csv/format/node_modules/@types/node/assert.d.ts:                expected?: any;
./node_modules/@fast-csv/format/node_modules/@types/node/assert.d.ts:            calls<Func extends (...args: any[]) => any>(fn?: Func, exact?: number): Func;
./node_modules/@fast-csv/format/node_modules/@types/node/assert.d.ts:        type AssertPredicate = RegExp | (new() => object) | ((thrown: any) => boolean) | object | Error;
./node_modules/@fast-csv/format/node_modules/@types/node/assert.d.ts:            actual: any,
./node_modules/@fast-csv/format/node_modules/@types/node/assert.d.ts:            expected: any,
./node_modules/@fast-csv/format/node_modules/@types/node/assert.d.ts:        function ok(value: any, message?: string | Error): asserts value;
./node_modules/@fast-csv/format/node_modules/@types/node/assert.d.ts:        function equal(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/format/node_modules/@types/node/assert.d.ts:        function notEqual(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/format/node_modules/@types/node/assert.d.ts:        function deepEqual(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/format/node_modules/@types/node/assert.d.ts:        function notDeepEqual(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/format/node_modules/@types/node/assert.d.ts:        function strictEqual<T>(actual: any, expected: T, message?: string | Error): asserts actual is T;
./node_modules/@fast-csv/format/node_modules/@types/node/assert.d.ts:        function notStrictEqual(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/format/node_modules/@types/node/assert.d.ts:        function deepStrictEqual<T>(actual: any, expected: T, message?: string | Error): asserts actual is T;
./node_modules/@fast-csv/format/node_modules/@types/node/assert.d.ts:        function notDeepStrictEqual(actual: any, expected: any, message?: string | Error): void;
./node_modules/@fast-csv/format/node_modules/@types/node/assert.d.ts:        function ifError(value: any): asserts value is null | undefined;
./node_modules/@fast-csv/format/node_modules/@types/node/assert.d.ts:                (value: any, message?: string | Error): asserts value;
./node_modules/@fast-csv/format/node_modules/@types/node/fs.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/fs.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/fs.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/fs.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/fs.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/fs.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/fs.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/fs.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/fs.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/fs.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/fs.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/fs.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/fs.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/fs.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/fs.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/fs.d.ts:        open: (...args: any[]) => any;
./node_modules/@fast-csv/format/node_modules/@types/node/fs.d.ts:        close: (...args: any[]) => any;
./node_modules/@fast-csv/format/node_modules/@types/node/fs.d.ts:        read: (...args: any[]) => any;
./node_modules/@fast-csv/format/node_modules/@types/node/fs.d.ts:        write: (...args: any[]) => any;
./node_modules/@fast-csv/format/node_modules/@types/node/fs.d.ts:        writev?: (...args: any[]) => any;
./node_modules/@fast-csv/format/node_modules/@types/node/repl.d.ts:        cb: (err: Error | null, result: any) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/repl.d.ts:    type REPLWriter = (this: REPLServer, obj: any) => string;
./node_modules/@fast-csv/format/node_modules/@types/node/repl.d.ts:        readonly last: any;
./node_modules/@fast-csv/format/node_modules/@types/node/repl.d.ts:        readonly lastError: any;
./node_modules/@fast-csv/format/node_modules/@types/node/repl.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/repl.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/repl.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/repl.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/repl.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/repl.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/dgram.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/dgram.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/dgram.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/dgram.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/dgram.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/dgram.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/child_process.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/child_process.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/child_process.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/child_process.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/child_process.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/child_process.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/process.d.ts:            type MessageListener = (message: any, sendHandle: any) => void;
./node_modules/@fast-csv/format/node_modules/@types/node/process.d.ts:            type NewListenerListener = (type: string | symbol, listener: (...args: any[]) => void) => void;
./node_modules/@fast-csv/format/node_modules/@types/node/process.d.ts:            type RemoveListenerListener = (type: string | symbol, listener: (...args: any[]) => void) => void;
./node_modules/@fast-csv/format/node_modules/@types/node/process.d.ts:            type MultipleResolveListener = (type: MultipleResolveType, promise: Promise<any>, value: any) => void;
./node_modules/@fast-csv/format/node_modules/@types/node/process.d.ts:                        cflags: any[];
./node_modules/@fast-csv/format/node_modules/@types/node/process.d.ts:                nextTick(callback: Function, ...args: any[]): void;
./node_modules/@fast-csv/format/node_modules/@types/node/process.d.ts:                    message: any,
./node_modules/@fast-csv/format/node_modules/@types/node/process.d.ts:                    sendHandle?: any,
./node_modules/@fast-csv/format/node_modules/@types/node/process.d.ts:                emit(event: "unhandledRejection", reason: any, promise: Promise<any>): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/process.d.ts:                emit(event: "message", message: any, sendHandle: any): this;
./node_modules/@fast-csv/format/node_modules/@types/node/process.d.ts:                emit(event: "newListener", eventName: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/process.d.ts:                emit(event: "removeListener", eventName: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/process.d.ts:                on(event: string | symbol, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function format(format?: any, ...param: any[]): string;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function formatWithOptions(inspectOptions: InspectOptions, format?: any, ...param: any[]): string;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function inspect(object: any, showHidden?: boolean, depth?: number | null, color?: boolean): string;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function inspect(object: any, options?: InspectOptions): string;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function isArray(object: any): object is any[];
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function isRegExp(object: any): object is RegExp;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function isDate(object: any): object is Date;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function isError(object: any): object is Error;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function inherits(constructor: any, superConstructor: any): void;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    type DebugLoggerFunction = (msg: string, ...param: any[]) => void;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function isBoolean(object: any): object is boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function isBuffer(object: any): object is Buffer;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function isFunction(object: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function isNull(object: any): object is null;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function isNullOrUndefined(object: any): object is null | undefined;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function isNumber(object: any): object is number;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function isObject(object: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function isPrimitive(object: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function isString(object: any): object is string;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function isSymbol(object: any): object is symbol;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function isUndefined(object: any): object is undefined;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function isDeepStrictEqual(val1: any, val2: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function promisify<TResult>(fn: (callback: (err: any, result: TResult) => void) => void): () => Promise<TResult>;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function promisify(fn: (callback: (err?: any) => void) => void): () => Promise<void>;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, callback: (err: any, result: TResult) => void) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:    function promisify<T1>(fn: (arg1: T1, callback: (err?: any) => void) => void): (arg1: T1) => Promise<void>;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, callback: (err: any, result: TResult) => void) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, callback: (err?: any) => void) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, callback: (err: any, result: TResult) => void) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, callback: (err?: any) => void) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: (err: any, result: TResult) => void) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: (err?: any) => void) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: (err: any, result: TResult) => void) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: (err?: any) => void) => void,
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isAnyArrayBuffer(object: any): object is ArrayBufferLike;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isArgumentsObject(object: any): object is IArguments;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isArrayBuffer(object: any): object is ArrayBuffer;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isArrayBufferView(object: any): object is NodeJS.ArrayBufferView;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isAsyncFunction(object: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isBigInt64Array(value: any): value is BigInt64Array;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isBigUint64Array(value: any): value is BigUint64Array;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isBooleanObject(object: any): object is Boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isBoxedPrimitive(object: any): object is String | Number | BigInt | Boolean | Symbol;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isDataView(object: any): object is DataView;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isDate(object: any): object is Date;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isExternal(object: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isFloat32Array(object: any): object is Float32Array;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isFloat64Array(object: any): object is Float64Array;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isGeneratorFunction(object: any): object is GeneratorFunction;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isGeneratorObject(object: any): object is Generator;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isInt8Array(object: any): object is Int8Array;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isInt16Array(object: any): object is Int16Array;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isInt32Array(object: any): object is Int32Array;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isMapIterator(object: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isModuleNamespaceObject(value: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isNativeError(object: any): object is Error;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isNumberObject(object: any): object is Number;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isPromise(object: any): object is Promise<any>;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isProxy(object: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isRegExp(object: any): object is RegExp;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isSetIterator(object: any): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isSharedArrayBuffer(object: any): object is SharedArrayBuffer;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isStringObject(object: any): object is String;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isSymbolObject(object: any): object is Symbol;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isTypedArray(object: any): object is NodeJS.TypedArray;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isUint8Array(object: any): object is Uint8Array;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isUint8ClampedArray(object: any): object is Uint8ClampedArray;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isUint16Array(object: any): object is Uint16Array;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isUint32Array(object: any): object is Uint32Array;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isWeakMap(object: any): object is WeakMap<any, any>;
./node_modules/@fast-csv/format/node_modules/@types/node/util.d.ts:        function isWeakSet(object: any): object is WeakSet<any>;
./node_modules/@fast-csv/format/node_modules/@types/node/net.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/net.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/net.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/net.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/net.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/net.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/net.d.ts:        listen(handle: any, backlog?: number, listeningListener?: () => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/net.d.ts:        listen(handle: any, listeningListener?: () => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/net.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/net.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./node_modules/@fast-csv/format/node_modules/@types/node/net.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/net.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/net.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/@fast-csv/format/node_modules/@types/node/net.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./node_modules/jest-config/node_modules/deepmerge/index.d.ts:		arrayMerge?(target: any[], source: any[], options?: ArrayMergeOptions): any[];
./node_modules/jest-config/node_modules/deepmerge/index.d.ts:		customMerge?: (key: string, options?: Options) => ((x: any, y: any) => any) | undefined;
./node_modules/jest-config/node_modules/pretty-format/build/index.d.ts:    val: any,
./node_modules/jest-config/node_modules/pretty-format/build/index.d.ts:declare type Test = (arg0: any) => boolean;
./node_modules/react-fast-compare/index.d.ts:    const equal: (a: any, b: any) => boolean;
./node_modules/@puppeteer/browsers/src/launch.ts:type EventHandler = (...args: any[]) => void;
./node_modules/@puppeteer/browsers/src/launch.ts:  exit: (...args: any[]) => {
./node_modules/@puppeteer/browsers/src/launch.ts:  SIGINT: (...args: any[]) => {
./node_modules/@puppeteer/browsers/src/launch.ts:  SIGHUP: (...args: any[]) => {
./node_modules/@puppeteer/browsers/src/launch.ts:  SIGTERM: (...args: any[]) => {
./node_modules/jest-environment-jsdom/node_modules/agent-base/src/index.ts:function isAgent(v: any): v is createAgent.AgentLike {
./node_modules/secure-json-parse/types/index.d.ts:  export type Reviver = (this: any, key: string, value: any) => any
./node_modules/secure-json-parse/types/index.d.ts:  export function safeParse(text: string | Buffer, reviver?: Reviver | null): any
./node_modules/secure-json-parse/types/index.d.ts:  export function scan(obj: { [key: string | number]: any }, options?: ParseOptions): any
./node_modules/secure-json-parse/types/index.d.ts:declare function parse(text: string | Buffer, reviver?: parse.Reviver | null, options?: parse.ParseOptions): any
./node_modules/source-map-js/source-map.d.ts:    eachMapping(callback: (mapping: MappingItem) => void, context?: any, order?: number): void;
./node_modules/buffer/index.d.ts:    toJSON(): { type: 'Buffer', data: any[] };
./node_modules/buffer/index.d.ts:    fill(value: any, offset?: number, end?: number): this;
./node_modules/buffer/index.d.ts:    constructor (array: any[]);
./node_modules/buffer/index.d.ts:    static from(array: any[]): Buffer;
./node_modules/buffer/index.d.ts:    static isBuffer(obj: any): obj is Buffer;
./node_modules/swr/dist/_internal/types.d.ts:    (key: string, value: any, prev: any) => void,
./node_modules/swr/dist/_internal/types.d.ts:    (key: string, callback: (current: any, prev: any) => void) => () => void
./node_modules/swr/dist/_internal/types.d.ts:type BareFetcher<Data = unknown> = (...args: any[]) => FetcherResponse<Data>;
./node_modules/swr/dist/_internal/types.d.ts:        [key: string]: any;
./node_modules/swr/dist/_internal/types.d.ts:type KeyLoader<Args extends Arguments = Arguments> = ((index: number, previousPageData: any | null) => Args) | null;
./node_modules/swr/dist/_internal/types.d.ts:type RevalidateCallback = <K extends RevalidateEvent>(type: K, opts?: any) => RevalidateCallbackReturnType[K];
./node_modules/swr/dist/_internal/index.d.ts:declare const rAF: (f: (...args: any[]) => void) => number | ReturnType<typeof setTimeout>;
./node_modules/swr/dist/_internal/index.d.ts:declare const stableHash: (arg: any) => string;
./node_modules/swr/dist/_internal/index.d.ts:declare const createCacheHelper: <Data = any, T = State<Data, any>>(cache: Cache, key: string | undefined) => readonly [() => T, (info: T) => void, (key: string, callback: (current: any, prev: any) => void) => () => void, () => any];
./node_modules/swr/dist/_internal/index.d.ts:declare const isUndefined: (v: any) => v is undefined;
./node_modules/swr/dist/_internal/index.d.ts:declare const isFunction: <T extends (...args: any[]) => any = (...args: any[]) => any>(v: unknown) => v is T;
./node_modules/swr/dist/_internal/index.d.ts:declare const mergeObjects: (a: any, b?: any) => any;
./node_modules/swr/dist/_internal/index.d.ts:declare const withArgs: <SWRType>(hook: any) => SWRType;
./node_modules/swr/dist/_internal/index.d.ts:type Callback = (...args: any[]) => any;
./node_modules/swr/dist/infinite/index.d.ts:type SWRInfiniteFetcher<Data = any, KeyLoader extends SWRInfiniteKeyLoader = SWRInfiniteKeyLoader> = KeyLoader extends (...args: any[]) => any ? ReturnType<KeyLoader> extends infer T | null | false | undefined ? (args: T) => FetcherResponse<Data> : never : never;
./node_modules/expect/build/index.d.ts:  (this: Context, actual: any, ...expected: Array<any>): ExpectationResult;
./node_modules/@react-stately/utils/dist/types.d.ts:export function useControlledState<T, C = T>(value: Exclude<T, undefined>, defaultValue: Exclude<T, undefined> | undefined, onChange?: (v: C, ...args: any[]) => void): [T, (value: T, ...args: any[]) => void];
./node_modules/@react-stately/utils/dist/types.d.ts:export function useControlledState<T, C = T>(value: Exclude<T, undefined> | undefined, defaultValue: Exclude<T, undefined>, onChange?: (v: C, ...args: any[]) => void): [T, (value: T, ...args: any[]) => void];
./node_modules/@react-stately/utils/src/useControlledState.ts:export function useControlledState<T, C = T>(value: Exclude<T, undefined>, defaultValue: Exclude<T, undefined> | undefined, onChange?: (v: C, ...args: any[]) => void): [T, (value: T, ...args: any[]) => void];
./node_modules/@react-stately/utils/src/useControlledState.ts:export function useControlledState<T, C = T>(value: Exclude<T, undefined> | undefined, defaultValue: Exclude<T, undefined>, onChange?: (v: C, ...args: any[]) => void): [T, (value: T, ...args: any[]) => void];
./node_modules/@react-stately/utils/src/useControlledState.ts:export function useControlledState<T, C = T>(value: T, defaultValue: T, onChange?: (v: C, ...args: any[]) => void): [T, (value: T, ...args: any[]) => void] {
./node_modules/path-scurry/dist/esm/index.d.ts:        [k: string]: any;
./node_modules/path-scurry/dist/esm/index.d.ts:    [k: string]: any;
./node_modules/path-scurry/dist/esm/index.d.ts:        [k: string]: any;
./node_modules/path-scurry/dist/esm/index.d.ts:    [k: string]: any;
./node_modules/path-scurry/dist/commonjs/index.d.ts:        [k: string]: any;
./node_modules/path-scurry/dist/commonjs/index.d.ts:    [k: string]: any;
./node_modules/path-scurry/dist/commonjs/index.d.ts:        [k: string]: any;
./node_modules/path-scurry/dist/commonjs/index.d.ts:    [k: string]: any;
./node_modules/setprototypeof/index.d.ts:declare function setPrototypeOf(o: any, proto: object | null): any;
./tests/performance/run-performance-tests.ts:  performanceMetrics?: any;
./backend/newpennine-api/test/widgets/transaction-report.e2e-spec.ts:      response.body.transactions.forEach((transaction: any) => {
./backend/newpennine-api/dist/auth/strategies/jwt.strategy.d.ts:    validate(...args: any[]): unknown;
./backend/newpennine-api/dist/auth/auth.controller.d.ts:    getProfile(req: any): Promise<import("./dto/auth-response.dto").UserDto>;
./backend/newpennine-api/dist/auth/auth.controller.d.ts:    logout(req: any): Promise<{
./backend/newpennine-api/dist/auth/auth.controller.d.ts:    verifyToken(req: any): Promise<{
./backend/newpennine-api/dist/auth/auth.controller.d.ts:        userId: any;
./backend/newpennine-api/dist/auth/auth.controller.d.ts:        email: any;
./backend/newpennine-api/dist/auth/guards/jwt-auth.guard.d.ts:    handleRequest(err: any, user: any, info: any, context: ExecutionContext): any;
./backend/newpennine-api/dist/inventory/dto/inventory-response.dto.d.ts:    pallet_info?: any;
./backend/newpennine-api/dist/history/dto/history-response.dto.d.ts:    previousState?: any;
./backend/newpennine-api/dist/history/dto/history-response.dto.d.ts:    newState?: any;
./backend/newpennine-api/dist/history/dto/history-response.dto.d.ts:    metadata?: any;
./backend/newpennine-api/dist/history/history.service.d.ts:        previousState: any;
./backend/newpennine-api/dist/history/history.service.d.ts:        newState: any;
./backend/newpennine-api/dist/history/history.controller.d.ts:        previousState?: any;
./backend/newpennine-api/dist/history/history.controller.d.ts:        newState?: any;
./backend/newpennine-api/dist/history/history.controller.d.ts:        metadata?: any;
./backend/newpennine-api/dist/pallets/dto/pallet-response.dto.d.ts:    current_inventory?: any;
./backend/newpennine-api/dist/rpc/dto/rpc-query.dto.d.ts:    params?: any;
./backend/newpennine-api/dist/widgets/cache/widget-cache.service.d.ts:    generateKey(endpoint: string, params?: any): string;
./backend/newpennine-api/node_modules/fast-safe-stringify/index.d.ts:  value: any,
./backend/newpennine-api/node_modules/fast-safe-stringify/index.d.ts:  replacer?: (key: string, value: any) => any,
./backend/newpennine-api/node_modules/fast-safe-stringify/index.d.ts:    value: any,
./backend/newpennine-api/node_modules/fast-safe-stringify/index.d.ts:    replacer?: (key: string, value: any) => any,
./backend/newpennine-api/node_modules/fast-safe-stringify/index.d.ts:    value: any,
./backend/newpennine-api/node_modules/fast-safe-stringify/index.d.ts:    replacer?: (key: string, value: any) => any,
./backend/newpennine-api/node_modules/tapable/tapable.d.ts:	call?: (...args: any[]) => void;
./backend/newpennine-api/node_modules/tapable/tapable.d.ts:	loop?: (...args: any[]) => void;
./backend/newpennine-api/node_modules/tapable/tapable.d.ts:type HookFactory<H> = (key: any, hook?: H) => H;
./backend/newpennine-api/node_modules/tapable/tapable.d.ts:	get(key: any): H | undefined;
./backend/newpennine-api/node_modules/tapable/tapable.d.ts:	for(key: any): H;
./backend/newpennine-api/node_modules/@types/express-serve-static-core/index.d.ts:    (err?: any): void;
./backend/newpennine-api/node_modules/@types/express-serve-static-core/index.d.ts:    err: any,
./backend/newpennine-api/node_modules/@types/express-serve-static-core/index.d.ts:    cookies: any;
./backend/newpennine-api/node_modules/@types/express-serve-static-core/index.d.ts:    route: any;
./backend/newpennine-api/node_modules/@types/express-serve-static-core/index.d.ts:    signedCookies: any;
./backend/newpennine-api/node_modules/@types/express-serve-static-core/index.d.ts:    links(links: any): this;
./backend/newpennine-api/node_modules/@types/express-serve-static-core/index.d.ts:    format(obj: any): this;
./backend/newpennine-api/node_modules/@types/express-serve-static-core/index.d.ts:    set(field: any): this;
./backend/newpennine-api/node_modules/@types/express-serve-static-core/index.d.ts:    header(field: any): this;
./backend/newpennine-api/node_modules/@types/express-serve-static-core/index.d.ts:    cookie(name: string, val: any, options: CookieOptions): this;
./backend/newpennine-api/node_modules/@types/express-serve-static-core/index.d.ts:    cookie(name: string, val: any): this;
./backend/newpennine-api/node_modules/@types/express-serve-static-core/index.d.ts:export type RequestParamHandler = (req: Request, res: Response, next: NextFunction, value: any, name: string) => any;
./backend/newpennine-api/node_modules/@types/express-serve-static-core/index.d.ts:    (req: Request | http.IncomingMessage, res: Response | http.ServerResponse): any;
./backend/newpennine-api/node_modules/@types/express-serve-static-core/index.d.ts:        fn: (path: string, options: object, callback: (e: any, rendered?: string) => void) => void,
./backend/newpennine-api/node_modules/@types/express-serve-static-core/index.d.ts:    set(setting: string, val: any): this;
./backend/newpennine-api/node_modules/@types/express-serve-static-core/index.d.ts:    listen(handle: any, listeningListener?: (error?: Error) => void): http.Server;
./backend/newpennine-api/node_modules/@types/express-serve-static-core/index.d.ts:    settings: any;
./backend/newpennine-api/node_modules/@types/express-serve-static-core/index.d.ts:    resource: any;
./backend/newpennine-api/node_modules/@types/express-serve-static-core/index.d.ts:    map: any;
./backend/newpennine-api/node_modules/@types/express-serve-static-core/index.d.ts:    routes: any;
./backend/newpennine-api/node_modules/@types/express-serve-static-core/index.d.ts:    _router: any;
./backend/newpennine-api/node_modules/@types/validator/index.d.ts:    export function contains(str: string, seed: any, options?: ContainsOptions): boolean;
./backend/newpennine-api/node_modules/@types/validator/index.d.ts:    export function isIn(str: string, values: any[]): boolean;
./backend/newpennine-api/node_modules/@types/validator/index.d.ts:    export function toString(input: any): string;
./backend/newpennine-api/node_modules/@types/supertest/lib/test.d.ts:    expect(status: number, body: any, callback?: CallbackHandler): this;
./backend/newpennine-api/node_modules/@types/babel__template/node_modules/@babel/types/lib/index-legacy.d.ts:export function assertNode(obj: any): void
./backend/newpennine-api/node_modules/@types/babel__template/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T
./backend/newpennine-api/node_modules/@types/babel__template/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent(a: any, b: any): boolean
./backend/newpennine-api/node_modules/@types/babel__template/node_modules/@babel/types/lib/index-legacy.d.ts:export function validate(n: Node, key: string, value: any): void;
./backend/newpennine-api/node_modules/@types/babel__template/node_modules/@babel/types/lib/index.d.ts:declare function assertNode(node?: any): asserts node is Node;
./backend/newpennine-api/node_modules/@types/babel__template/node_modules/@babel/types/lib/index.d.ts:declare function assertNumberLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@types/babel__template/node_modules/@babel/types/lib/index.d.ts:declare function assertRegexLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@types/babel__template/node_modules/@babel/types/lib/index.d.ts:declare function assertRestProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@types/babel__template/node_modules/@babel/types/lib/index.d.ts:declare function assertSpreadProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@types/babel__template/node_modules/@babel/types/lib/index.d.ts:declare function assertModuleDeclaration(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@types/babel__template/node_modules/@babel/types/lib/index.d.ts:declare function getType(val: any): "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function" | "array" | "null";
./backend/newpennine-api/node_modules/@types/babel__template/node_modules/@babel/types/lib/index.d.ts:    oneOf: any[];
./backend/newpennine-api/node_modules/@types/babel__template/node_modules/@babel/types/lib/index.d.ts:}, val: any) => void);
./backend/newpennine-api/node_modules/@types/babel__template/node_modules/@babel/types/lib/index.d.ts:declare function isNode(node: any): node is Node;
./backend/newpennine-api/node_modules/@types/babel__template/node_modules/@babel/types/lib/index.d.ts:declare function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T;
./backend/newpennine-api/node_modules/@types/yargs-parser/index.d.ts:        [argName: string]: any;
./backend/newpennine-api/node_modules/@types/yargs-parser/index.d.ts:        coerce?: { [key: string]: (arg: any) => any } | undefined;
./backend/newpennine-api/node_modules/@types/yargs-parser/index.d.ts:        default?: { [key: string]: any } | undefined;
./backend/newpennine-api/node_modules/@types/jsonwebtoken/index.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:    receive(status: PushStatus, callback: (response?: any) => any): this;
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:    onClose(callback: (payload: any, ref: any, joinRef: any) => void | Promise<void>): number;
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:    onError(callback: (reason?: any) => void | Promise<void>): number;
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:    onMessage(event: string, payload: any, ref: any): any;
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:    on(event: string, callback: (response?: any) => void | Promise<void>): number;
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:    encode: (payload: object, callback: (encoded: any) => void | Promise<void>) => void;
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:    decode: (payload: string, callback: (decoded: any) => void | Promise<void>) => void;
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:    logger: (kind: string, message: string, data: any) => void;
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:    connect(params?: any): void;
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:    log(kind: string, message: string, data: any): void;
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:    send(body: any): void;
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:    close(code?: any, reason?: any): void;
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:        body: any,
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:        ontimeout?: any,
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:        callback?: (response?: any) => void | Promise<void>,
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:        req: any,
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:        body: any,
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:        ontimeout?: any,
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:        callback?: (response?: any) => void | Promise<void>,
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:        req: any,
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:        body: any,
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:        ontimeout?: any,
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:        callback?: (response?: any) => void | Promise<void>,
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:    static serialize(obj: any, parentKey: string): string;
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:    static appendParams(url: string, params: any): string;
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:    list<T = any>(chooser?: (key: string, presence: any) => T): T[];
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:    ): any;
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:    ): any;
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:    static list<T = any>(presences: object, chooser?: (key: string, presence: any) => T): T[];
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:export type PresenceOnJoinCallback = (key?: string, currentPresence?: any, newPresence?: any) => void;
./backend/newpennine-api/node_modules/@types/phoenix/index.d.ts:export type PresenceOnLeaveCallback = (key?: string, currentPresence?: any, newPresence?: any) => void;
./backend/newpennine-api/node_modules/@types/qs/index.d.ts:    type defaultEncoder = (str: any, defaultEncoder?: any, charset?: string) => string;
./backend/newpennine-api/node_modules/@types/qs/index.d.ts:    type defaultDecoder = (str: string, decoder?: any, charset?: string) => string;
./backend/newpennine-api/node_modules/@types/qs/index.d.ts:            | ((str: any, defaultEncoder: defaultEncoder, charset: string, type: "key" | "value") => string)
./backend/newpennine-api/node_modules/@types/qs/index.d.ts:        filter?: Array<string | number> | ((prefix: string, value: any) => any) | undefined;
./backend/newpennine-api/node_modules/@types/qs/index.d.ts:    function stringify(obj: any, options?: IStringifyOptions<BooleanOptional>): string;
./backend/newpennine-api/node_modules/@types/passport-strategy/index.d.ts:    authenticate(req: express.Request, options?: any): void;
./backend/newpennine-api/node_modules/@types/passport-strategy/index.d.ts:    success(user: any, info?: any): void;
./backend/newpennine-api/node_modules/@types/passport-strategy/index.d.ts:    fail(challenge: any, status: number): void;
./backend/newpennine-api/node_modules/@types/superagent/types.d.ts:    ca?: any;
./backend/newpennine-api/node_modules/@types/superagent/types.d.ts:    key?: any;
./backend/newpennine-api/node_modules/@types/superagent/types.d.ts:    pfx?: any;
./backend/newpennine-api/node_modules/@types/superagent/types.d.ts:    cert?: any;
./backend/newpennine-api/node_modules/@types/superagent/types.d.ts:export type CBHandler = (err: any, res: Response) => void;
./backend/newpennine-api/node_modules/@types/superagent/lib/agent-base.d.ts:    use(...args: any[]): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/agent-base.d.ts:    on(...args: any[]): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/agent-base.d.ts:    once(...args: any[]): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/agent-base.d.ts:    set(...args: any[]): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/agent-base.d.ts:    query(...args: any[]): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/agent-base.d.ts:    type(...args: any[]): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/agent-base.d.ts:    accept(...args: any[]): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/agent-base.d.ts:    auth(...args: any[]): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/agent-base.d.ts:    withCredentials(...args: any[]): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/agent-base.d.ts:    sortQuery(...args: any[]): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/agent-base.d.ts:    retry(...args: any[]): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/agent-base.d.ts:    ok(...args: any[]): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/agent-base.d.ts:    redirects(...args: any[]): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/agent-base.d.ts:    timeout(...args: any[]): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/agent-base.d.ts:    buffer(...args: any[]): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/agent-base.d.ts:    serialize(...args: any[]): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/agent-base.d.ts:    parse(...args: any[]): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/agent-base.d.ts:    ca(...args: any[]): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/agent-base.d.ts:    key(...args: any[]): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/agent-base.d.ts:    pfx(...args: any[]): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/agent-base.d.ts:    cert(...args: any[]): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/agent-base.d.ts:    disableTLSCerts(...args: any[]): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/request-base.d.ts:type NodeParser = (res: Response, callback: (err: Error | null, body: any) => void) => void;
./backend/newpennine-api/node_modules/@types/superagent/lib/request-base.d.ts:type Serializer = (obj: any) => string;
./backend/newpennine-api/node_modules/@types/superagent/lib/node/http2wrapper.d.ts:        createUnixConnection(authority: any, options: CreateUnixConnectionOptions): net.Socket | tls.TLSSocket;
./backend/newpennine-api/node_modules/@types/superagent/lib/node/http2wrapper.d.ts:        write(chunk: any, encoding: BufferEncoding): boolean;
./backend/newpennine-api/node_modules/@types/superagent/lib/node/http2wrapper.d.ts:        end(data: any): void;
./backend/newpennine-api/node_modules/@types/superagent/lib/node/http2wrapper.d.ts:        abort(data: any): void;
./backend/newpennine-api/node_modules/@types/superagent/lib/node/response.d.ts:    body: any;
./backend/newpennine-api/node_modules/@types/superagent/lib/node/response.d.ts:    files: any;
./backend/newpennine-api/node_modules/@types/superagent/lib/node/response.d.ts:    xhr: any;
./backend/newpennine-api/node_modules/@types/superagent/lib/node/index.d.ts:        onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,
./backend/newpennine-api/node_modules/@types/superagent/lib/node/index.d.ts:            | ((res: ResponseBase, callback: (err: Error | null, body: any) => void) => void),
./backend/newpennine-api/node_modules/@types/superagent/lib/node/index.d.ts:    serialize(serializer: (obj: any) => string): this;
./backend/newpennine-api/node_modules/@types/superagent/lib/node/index.d.ts:        onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,
./backend/newpennine-api/node_modules/@types/superagent/lib/node/index.d.ts:        serialize: Record<string, (...args: any[]) => string>;
./backend/newpennine-api/node_modules/@types/superagent/lib/node/index.d.ts:        parse: Record<string, (res: Response, cb: (err: any, res: Response) => void) => void>;
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            login(user: User, done: (err: any) => void): void;
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            login(user: User, options: passport.LogInOptions, done: (err: any) => void): void;
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            logIn(user: User, done: (err: any) => void): void;
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            logIn(user: User, options: passport.LogInOptions, done: (err: any) => void): void;
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            logout(options: passport.LogOutOptions, done: (err: any) => void): void;
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            logout(done: (err: any) => void): void;
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            logOut(options: passport.LogOutOptions, done: (err: any) => void): void;
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            logOut(done: (err: any) => void): void;
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:    type DoneCallback = (err: any, user?: Express.User | false | null) => void;
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:        err: any,
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            callback?: AuthenticateCallback | ((...args: any[]) => any),
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            callback?: AuthenticateCallback | ((...args: any[]) => any),
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:        authorize(strategy: string | string[], callback?: AuthorizeCallback | ((...args: any[]) => any)): AuthorizeRet;
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            callback?: AuthorizeCallback | ((...args: any[]) => any),
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:        serializeUser<TID>(fn: (user: Express.User, done: (err: any, id?: TID) => void) => void): void;
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            fn: (req: TR, user: Express.User, done: (err: any, id?: TID) => void) => void,
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            done: (err: any, serializedUser?: number | NonNullable<unknown>) => any,
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            done: (err: any, serializedUser?: number | NonNullable<unknown>) => any,
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:        deserializeUser<TID>(fn: (id: TID, done: (err: any, user?: Express.User | false | null) => void) => void): void;
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            fn: (req: TR, id: TID, done: (err: any, user?: Express.User | false | null) => void) => void,
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            done: (err: any, user?: User | false) => any,
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            done: (err: any, user?: User | false) => any,
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:        transformAuthInfo(fn: (info: any, done: (err: any, info: any) => void) => void): void;
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            done: (err: any, transformedAuthInfo?: InitialInfo | NonNullable<unknown>) => any,
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            done: (err: any, transformedAuthInfo?: InitialInfo | NonNullable<unknown>) => any,
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:        authenticate(this: StrategyCreated<this>, req: express.Request, options?: any): any;
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:        error(err: any): void;
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            options?: any,
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:        ): (...args: any[]) => InitializeRet;
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            options?: any,
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            callback?: (...args: any[]) => any,
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:        ): (...args: any[]) => AuthenticateRet;
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            options?: any,
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:            callback?: (...args: any[]) => any,
./backend/newpennine-api/node_modules/@types/passport/index.d.ts:        ): (...args: any[]) => AuthorizeRet;
./backend/newpennine-api/node_modules/@types/istanbul-lib-report/index.d.ts:    data: any;
./backend/newpennine-api/node_modules/@types/istanbul-lib-report/index.d.ts:    openTag(name: string, attrs?: any): void;
./backend/newpennine-api/node_modules/@types/istanbul-lib-report/index.d.ts:    inlineTag(name: string, attrs?: any, content?: string): void;
./backend/newpennine-api/node_modules/@types/istanbul-lib-report/index.d.ts:    visit(visitor: Visitor, state: any): void;
./backend/newpennine-api/node_modules/@types/istanbul-lib-report/index.d.ts:    visit(visitor: Visitor<ReportNode>, state: any): void;
./backend/newpennine-api/node_modules/@types/istanbul-lib-report/index.d.ts:    onStart(root: N, state: any): void;
./backend/newpennine-api/node_modules/@types/istanbul-lib-report/index.d.ts:    onSummary(root: N, state: any): void;
./backend/newpennine-api/node_modules/@types/istanbul-lib-report/index.d.ts:    onDetail(root: N, state: any): void;
./backend/newpennine-api/node_modules/@types/istanbul-lib-report/index.d.ts:    onSummaryEnd(root: N, state: any): void;
./backend/newpennine-api/node_modules/@types/istanbul-lib-report/index.d.ts:    onEnd(root: N, state: any): void;
./backend/newpennine-api/node_modules/@types/istanbul-lib-report/index.d.ts:    visit(visitor: Partial<Visitor<N>>, state: any): void;
./backend/newpennine-api/node_modules/@types/http-errors/index.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@types/http-errors/index.d.ts:    type UnknownError = Error | string | { [key: string]: any };
./backend/newpennine-api/node_modules/@types/body-parser/index.d.ts:        reviver?(key: string, value: any): any;
./backend/newpennine-api/node_modules/@types/babel__generator/node_modules/@babel/types/lib/index-legacy.d.ts:export function assertNode(obj: any): void
./backend/newpennine-api/node_modules/@types/babel__generator/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T
./backend/newpennine-api/node_modules/@types/babel__generator/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent(a: any, b: any): boolean
./backend/newpennine-api/node_modules/@types/babel__generator/node_modules/@babel/types/lib/index-legacy.d.ts:export function validate(n: Node, key: string, value: any): void;
./backend/newpennine-api/node_modules/@types/babel__generator/node_modules/@babel/types/lib/index.d.ts:declare function assertNode(node?: any): asserts node is Node;
./backend/newpennine-api/node_modules/@types/babel__generator/node_modules/@babel/types/lib/index.d.ts:declare function assertNumberLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@types/babel__generator/node_modules/@babel/types/lib/index.d.ts:declare function assertRegexLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@types/babel__generator/node_modules/@babel/types/lib/index.d.ts:declare function assertRestProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@types/babel__generator/node_modules/@babel/types/lib/index.d.ts:declare function assertSpreadProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@types/babel__generator/node_modules/@babel/types/lib/index.d.ts:declare function assertModuleDeclaration(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@types/babel__generator/node_modules/@babel/types/lib/index.d.ts:declare function getType(val: any): "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function" | "array" | "null";
./backend/newpennine-api/node_modules/@types/babel__generator/node_modules/@babel/types/lib/index.d.ts:    oneOf: any[];
./backend/newpennine-api/node_modules/@types/babel__generator/node_modules/@babel/types/lib/index.d.ts:}, val: any) => void);
./backend/newpennine-api/node_modules/@types/babel__generator/node_modules/@babel/types/lib/index.d.ts:declare function isNode(node: any): node is Node;
./backend/newpennine-api/node_modules/@types/babel__generator/node_modules/@babel/types/lib/index.d.ts:declare function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T;
./backend/newpennine-api/node_modules/@types/babel__traverse/node_modules/@babel/types/lib/index-legacy.d.ts:export function assertNode(obj: any): void
./backend/newpennine-api/node_modules/@types/babel__traverse/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T
./backend/newpennine-api/node_modules/@types/babel__traverse/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent(a: any, b: any): boolean
./backend/newpennine-api/node_modules/@types/babel__traverse/node_modules/@babel/types/lib/index-legacy.d.ts:export function validate(n: Node, key: string, value: any): void;
./backend/newpennine-api/node_modules/@types/babel__traverse/node_modules/@babel/types/lib/index.d.ts:declare function assertNode(node?: any): asserts node is Node;
./backend/newpennine-api/node_modules/@types/babel__traverse/node_modules/@babel/types/lib/index.d.ts:declare function assertNumberLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@types/babel__traverse/node_modules/@babel/types/lib/index.d.ts:declare function assertRegexLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@types/babel__traverse/node_modules/@babel/types/lib/index.d.ts:declare function assertRestProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@types/babel__traverse/node_modules/@babel/types/lib/index.d.ts:declare function assertSpreadProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@types/babel__traverse/node_modules/@babel/types/lib/index.d.ts:declare function assertModuleDeclaration(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@types/babel__traverse/node_modules/@babel/types/lib/index.d.ts:declare function getType(val: any): "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function" | "array" | "null";
./backend/newpennine-api/node_modules/@types/babel__traverse/node_modules/@babel/types/lib/index.d.ts:    oneOf: any[];
./backend/newpennine-api/node_modules/@types/babel__traverse/node_modules/@babel/types/lib/index.d.ts:}, val: any) => void);
./backend/newpennine-api/node_modules/@types/babel__traverse/node_modules/@babel/types/lib/index.d.ts:declare function isNode(node: any): node is Node;
./backend/newpennine-api/node_modules/@types/babel__traverse/node_modules/@babel/types/lib/index.d.ts:declare function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T;
./backend/newpennine-api/node_modules/@types/babel__traverse/index.d.ts:    (parent: Node, opts?: TraverseOptions, scope?: Scope, state?: any, parentPath?: NodePath): void;
./backend/newpennine-api/node_modules/@types/babel__traverse/index.d.ts:        state?: any,
./backend/newpennine-api/node_modules/@types/babel__traverse/index.d.ts:        states?: any[],
./backend/newpennine-api/node_modules/@types/babel__traverse/index.d.ts:            stateKey: any,
./backend/newpennine-api/node_modules/@types/babel__traverse/index.d.ts:    traverse(node: Node | Node[], opts?: TraverseOptions, state?: any): void;
./backend/newpennine-api/node_modules/@types/babel__traverse/index.d.ts:    setData(key: string, val: any): any;
./backend/newpennine-api/node_modules/@types/babel__traverse/index.d.ts:    getData(key: string): any;
./backend/newpennine-api/node_modules/@types/babel__traverse/index.d.ts:    value: any;
./backend/newpennine-api/node_modules/@types/babel__traverse/index.d.ts:    setValue(value: any): void;
./backend/newpennine-api/node_modules/@types/babel__traverse/index.d.ts:    state: any;
./backend/newpennine-api/node_modules/@types/babel__traverse/index.d.ts:    opts: any; // exploded TraverseOptions
./backend/newpennine-api/node_modules/@types/babel__traverse/index.d.ts:    setData(key: string | symbol, val: any): any;
./backend/newpennine-api/node_modules/@types/babel__traverse/index.d.ts:    getData(key: string | symbol, def?: any): any;
./backend/newpennine-api/node_modules/@types/babel__traverse/index.d.ts:    set(key: string, node: any): void;
./backend/newpennine-api/node_modules/@types/babel__traverse/index.d.ts:        value: any;
./backend/newpennine-api/node_modules/@types/babel__traverse/index.d.ts:    equals(key: string, value: any): boolean;
./backend/newpennine-api/node_modules/@types/babel__traverse/index.d.ts:    // equals(key: keyof T, value: any): boolean;
./backend/newpennine-api/node_modules/@types/babel__traverse/index.d.ts:    addHelper(name: string): any;
./backend/newpennine-api/node_modules/@types/babel__traverse/index.d.ts:    addHelper(name: string): any;
./backend/newpennine-api/node_modules/@types/serve-static/index.d.ts:        setHeaders?: ((res: R, path: string, stat: any) => any) | undefined;
./backend/newpennine-api/node_modules/@types/serve-static/index.d.ts:        (request: http.IncomingMessage, response: R, next: (err?: HttpError) => void): any;
./backend/newpennine-api/node_modules/@types/yargs/index.d.ts:            func: (arg: any) => V,
./backend/newpennine-api/node_modules/@types/yargs/index.d.ts:            func: (arg: any) => V,
./backend/newpennine-api/node_modules/@types/yargs/index.d.ts:        coerce<O extends { [key: string]: (arg: any) => any }>(
./backend/newpennine-api/node_modules/@types/yargs/index.d.ts:        default<D extends { [key: string]: any }>(defaults: D, description?: string): Argv<Omit<T, keyof D> & D>;
./backend/newpennine-api/node_modules/@types/yargs/index.d.ts:        onFinishCommand(func: (result: any) => void): Argv<T>;
./backend/newpennine-api/node_modules/@types/yargs/index.d.ts:        visit?: ((commandObject: any, pathToFile?: string, filename?: string) => any) | undefined;
./backend/newpennine-api/node_modules/@types/yargs/index.d.ts:        coerce?: ((arg: any) => any) | undefined;
./backend/newpennine-api/node_modules/@types/yargs/index.d.ts:        default?: any;
./backend/newpennine-api/node_modules/@types/yargs/index.d.ts:        coerce?: ((arg: any) => any) | undefined;
./backend/newpennine-api/node_modules/@types/yargs/index.d.ts:        default?: any;
./backend/newpennine-api/node_modules/@types/yargs/index.d.ts:        O extends ({ coerce: (arg: any) => infer T }) ? IsRequiredOrHasDefault<O> extends true ? T : T | undefined
./backend/newpennine-api/node_modules/@types/yargs/index.d.ts:    type SyncCompletionFunction = (current: string, argv: any) => string[];
./backend/newpennine-api/node_modules/@types/yargs/index.d.ts:        argv: any,
./backend/newpennine-api/node_modules/@types/yargs/index.d.ts:    type PromiseCompletionFunction = (current: string, argv: any) => Promise<string[]>;
./backend/newpennine-api/node_modules/@types/yargs/index.d.ts:        argv: any,
./backend/newpennine-api/node_modules/@types/yargs/index.d.ts:    type BuilderArguments<T extends (...args: any) => R, R = ReturnType<T>> = R extends Argv<infer X>
./backend/newpennine-api/node_modules/@types/eslint/use-at-your-own-risk.d.ts:            configArrayFactory?: any;
./backend/newpennine-api/node_modules/@types/eslint/use-at-your-own-risk.d.ts:            extensions?: any;
./backend/newpennine-api/node_modules/@types/eslint/use-at-your-own-risk.d.ts:    isTargetPath(filePath: string, providedConfig?: any): boolean;
./backend/newpennine-api/node_modules/@types/eslint/use-at-your-own-risk.d.ts:    ): IterableIterator<{ config: any; filePath: string; ignored: boolean }>;
./backend/newpennine-api/node_modules/@types/eslint/index.d.ts:        | { type: "TDZ"; node: any; parent: null }
./backend/newpennine-api/node_modules/@types/eslint/index.d.ts:        options: any[];
./backend/newpennine-api/node_modules/@types/eslint/index.d.ts:        settings: { [name: string]: any };
./backend/newpennine-api/node_modules/@types/eslint/index.d.ts:        settings?: { [name: string]: any } | undefined;
./backend/newpennine-api/node_modules/@types/eslint/index.d.ts:            [key: string]: any;
./backend/newpennine-api/node_modules/@types/eslint/index.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@types/eslint/index.d.ts:            parse(text: string, options?: any): unknown;
./backend/newpennine-api/node_modules/@types/eslint/index.d.ts:            parseForESLint(text: string, options?: any): Omit<ESLintParseResult, "ast" | "scopeManager"> & {
./backend/newpennine-api/node_modules/@types/eslint/index.d.ts:            | { parse(text: string, options?: any): AST.Program }
./backend/newpennine-api/node_modules/@types/eslint/index.d.ts:            | { parseForESLint(text: string, options?: any): ESLintParseResult }
./backend/newpennine-api/node_modules/@types/eslint/index.d.ts:    static describe: ((...args: any) => any) | null;
./backend/newpennine-api/node_modules/@types/eslint/index.d.ts:    static it: ((...args: any) => any) | null;
./backend/newpennine-api/node_modules/@types/eslint/index.d.ts:    static itOnly: ((...args: any) => any) | null;
./backend/newpennine-api/node_modules/@types/eslint/index.d.ts:        options?: any;
./backend/newpennine-api/node_modules/@types/eslint/index.d.ts:        settings?: { [name: string]: any } | undefined;
./backend/newpennine-api/node_modules/@types/eslint/index.d.ts:        data?: any;
./backend/newpennine-api/node_modules/@types/node/compatibility/iterators.d.ts:        : any;
./backend/newpennine-api/node_modules/@types/node/domain.d.ts:        run<T>(fn: (...args: any[]) => T, ...args: any[]): T;
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:type _Request = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").Request;
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:type _Response = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").Response;
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:type _FormData = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").FormData;
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:type _Headers = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").Headers;
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:type _MessageEvent = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").MessageEvent;
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:type _RequestInit = typeof globalThis extends { onmessage: any } ? {}
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:type _ResponseInit = typeof globalThis extends { onmessage: any } ? {}
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:type _WebSocket = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").WebSocket;
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:type _EventSource = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").EventSource;
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:type _Storage = typeof globalThis extends { onabort: any } ? {} : {
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:type _DOMException = typeof globalThis extends { onmessage: any } ? {} : NodeDOMException;
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:        prepareStackTrace(err: Error, stackTraces: NodeJS.CallSite[]): any;
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:    var DOMException: typeof globalThis extends { onmessage: any; DOMException: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:        abort(reason?: any): void;
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:    var AbortController: typeof globalThis extends { onmessage: any; AbortController: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:        readonly reason: any;
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:    var AbortSignal: typeof globalThis extends { onmessage: any; AbortSignal: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:            abort(reason?: any): AbortSignal;
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:    var Storage: typeof globalThis extends { onabort: any; Storage: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:        onmessage: any;
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:        onmessage: any;
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:        onmessage: any;
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:        onmessage: any;
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:        onmessage: any;
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:    var WebSocket: typeof globalThis extends { onmessage: any; WebSocket: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/globals.d.ts:    var EventSource: typeof globalThis extends { onmessage: any; EventSource: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/tls.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/tls.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/tls.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/tls.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/tls.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/tls.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/tls.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/tls.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/tls.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/tls.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/tls.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/tls.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/tls.d.ts:        context: any;
./backend/newpennine-api/node_modules/@types/node/tty.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/tty.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/tty.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/tty.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/tty.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/tty.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/readline.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/readline.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/readline.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/readline.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/readline.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/readline.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/crypto.d.ts:            onmessage: any;
./backend/newpennine-api/node_modules/@types/node/events.d.ts:    type AnyRest = [...args: any[]];
./backend/newpennine-api/node_modules/@types/node/events.d.ts:    type Listener1<K, T> = Listener<K, T, (...args: any[]) => void>;
./backend/newpennine-api/node_modules/@types/node/buffer.d.ts:type _Blob = typeof globalThis extends { onmessage: any; Blob: any } ? {} : import("buffer").Blob;
./backend/newpennine-api/node_modules/@types/node/buffer.d.ts:type _File = typeof globalThis extends { onmessage: any; File: any } ? {} : import("buffer").File;
./backend/newpennine-api/node_modules/@types/node/buffer.d.ts:            isBuffer(obj: any): obj is Buffer;
./backend/newpennine-api/node_modules/@types/node/buffer.d.ts:        var Blob: typeof globalThis extends { onmessage: any; Blob: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/buffer.d.ts:        var File: typeof globalThis extends { onmessage: any; File: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:    const workerData: any;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        postMessage(value: any, transferList?: readonly Transferable[]): void;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        addListener(event: "message", listener: (value: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        emit(event: "message", value: any): boolean;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        on(event: "message", listener: (value: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        once(event: "message", listener: (value: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        prependListener(event: "message", listener: (value: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: "message", listener: (value: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        removeListener(event: "message", listener: (value: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        off(event: "message", listener: (value: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        off(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        argv?: any[] | undefined;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        workerData?: any;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        postMessage(value: any, transferList?: readonly Transferable[]): void;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        postMessageToThread(threadId: number, value: any, timeout?: number): Promise<void>;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:            value: any,
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        addListener(event: "message", listener: (value: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        emit(event: "message", value: any): boolean;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        on(event: "message", listener: (value: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        once(event: "message", listener: (value: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        prependListener(event: "message", listener: (value: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: "message", listener: (value: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        removeListener(event: "message", listener: (value: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        off(event: "message", listener: (value: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:        off(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:            message: any;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:            onmessage: any;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:            onmessage: any;
./backend/newpennine-api/node_modules/@types/node/worker_threads.d.ts:            onmessage: any;
./backend/newpennine-api/node_modules/@types/node/dom-events.d.ts:type __Event = typeof globalThis extends { onmessage: any } ? {} : Event;
./backend/newpennine-api/node_modules/@types/node/dom-events.d.ts:type __CustomEvent<T = any> = typeof globalThis extends { onmessage: any } ? {} : CustomEvent<T>;
./backend/newpennine-api/node_modules/@types/node/dom-events.d.ts:type __EventTarget = typeof globalThis extends { onmessage: any } ? {} : EventTarget;
./backend/newpennine-api/node_modules/@types/node/dom-events.d.ts:    var Event: typeof globalThis extends { onmessage: any; Event: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/dom-events.d.ts:    var CustomEvent: typeof globalThis extends { onmessage: any; CustomEvent: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/dom-events.d.ts:    var EventTarget: typeof globalThis extends { onmessage: any; EventTarget: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/console.d.ts:            assert(value: any, message?: string, ...optionalParams: any[]): void;
./backend/newpennine-api/node_modules/@types/node/console.d.ts:            debug(message?: any, ...optionalParams: any[]): void;
./backend/newpennine-api/node_modules/@types/node/console.d.ts:            dir(obj: any, options?: InspectOptions): void;
./backend/newpennine-api/node_modules/@types/node/console.d.ts:            dirxml(...data: any[]): void;
./backend/newpennine-api/node_modules/@types/node/console.d.ts:            error(message?: any, ...optionalParams: any[]): void;
./backend/newpennine-api/node_modules/@types/node/console.d.ts:            group(...label: any[]): void;
./backend/newpennine-api/node_modules/@types/node/console.d.ts:            groupCollapsed(...label: any[]): void;
./backend/newpennine-api/node_modules/@types/node/console.d.ts:            info(message?: any, ...optionalParams: any[]): void;
./backend/newpennine-api/node_modules/@types/node/console.d.ts:            log(message?: any, ...optionalParams: any[]): void;
./backend/newpennine-api/node_modules/@types/node/console.d.ts:            table(tabularData: any, properties?: readonly string[]): void;
./backend/newpennine-api/node_modules/@types/node/console.d.ts:            timeLog(label?: string, ...data: any[]): void;
./backend/newpennine-api/node_modules/@types/node/console.d.ts:            trace(message?: any, ...optionalParams: any[]): void;
./backend/newpennine-api/node_modules/@types/node/console.d.ts:            warn(message?: any, ...optionalParams: any[]): void;
./backend/newpennine-api/node_modules/@types/node/async_hooks.d.ts:        static bind<Func extends (this: ThisArg, ...args: any[]) => any, ThisArg>(
./backend/newpennine-api/node_modules/@types/node/async_hooks.d.ts:        bind<Func extends (...args: any[]) => any>(fn: Func): Func;
./backend/newpennine-api/node_modules/@types/node/async_hooks.d.ts:            fn: (this: This, ...args: any[]) => Result,
./backend/newpennine-api/node_modules/@types/node/async_hooks.d.ts:            ...args: any[]
./backend/newpennine-api/node_modules/@types/node/async_hooks.d.ts:        static bind<Func extends (...args: any[]) => any>(fn: Func): Func;
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:type _ByteLengthQueuingStrategy = typeof globalThis extends { onmessage: any } ? {}
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:type _CompressionStream = typeof globalThis extends { onmessage: any; ReportingObserver: any } ? {}
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:type _CountQueuingStrategy = typeof globalThis extends { onmessage: any } ? {}
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:type _DecompressionStream = typeof globalThis extends { onmessage: any; ReportingObserver: any } ? {}
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:type _ReadableByteStreamController = typeof globalThis extends { onmessage: any } ? {}
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:type _ReadableStream<R = any> = typeof globalThis extends { onmessage: any } ? {}
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:type _ReadableStreamBYOBReader = typeof globalThis extends { onmessage: any } ? {}
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:type _ReadableStreamBYOBRequest = typeof globalThis extends { onmessage: any } ? {}
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:type _ReadableStreamDefaultController<R = any> = typeof globalThis extends { onmessage: any } ? {}
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:type _ReadableStreamDefaultReader<R = any> = typeof globalThis extends { onmessage: any } ? {}
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:type _TextDecoderStream = typeof globalThis extends { onmessage: any } ? {}
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:type _TextEncoderStream = typeof globalThis extends { onmessage: any } ? {}
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:type _TransformStream<I = any, O = any> = typeof globalThis extends { onmessage: any } ? {}
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:type _TransformStreamDefaultController<O = any> = typeof globalThis extends { onmessage: any } ? {}
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:type _WritableStream<W = any> = typeof globalThis extends { onmessage: any } ? {}
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:type _WritableStreamDefaultController = typeof globalThis extends { onmessage: any } ? {}
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:type _WritableStreamDefaultWriter<W = any> = typeof globalThis extends { onmessage: any } ? {}
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        cancel(reason?: any): Promise<void>;
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        (reason?: any): void | PromiseLike<void>;
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        (controller: WritableStreamDefaultController): any;
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        (reason?: any): void | PromiseLike<void>;
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        (controller: ReadableStreamController<R>): any;
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        (controller: TransformStreamDefaultController<O>): any;
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        (reason: any): void | PromiseLike<void>;
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        (reason: any): void | PromiseLike<void>;
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        cancel(reason?: any): Promise<void>;
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        error(error?: any): void;
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        error(e?: any): void;
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        error(reason?: any): void;
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        abort(reason?: any): Promise<void>;
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        abort(reason?: any): Promise<void>;
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        error(e?: any): void;
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        var ByteLengthQueuingStrategy: typeof globalThis extends { onmessage: any; ByteLengthQueuingStrategy: infer T }
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:            onmessage: any;
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:            ReportingObserver: any;
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:            : typeof globalThis extends { onmessage: any; TransformStream: { prototype: infer T } } ? {
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        var CountQueuingStrategy: typeof globalThis extends { onmessage: any; CountQueuingStrategy: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:            onmessage: any;
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:            ReportingObserver: any;
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:            : typeof globalThis extends { onmessage: any; TransformStream: { prototype: infer T } } ? {
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:            { onmessage: any; ReadableByteStreamController: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        var ReadableStream: typeof globalThis extends { onmessage: any; ReadableStream: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        var ReadableStreamBYOBReader: typeof globalThis extends { onmessage: any; ReadableStreamBYOBReader: infer T }
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        var ReadableStreamBYOBRequest: typeof globalThis extends { onmessage: any; ReadableStreamBYOBRequest: infer T }
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:            { onmessage: any; ReadableStreamDefaultController: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:            { onmessage: any; ReadableStreamDefaultReader: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        var TextDecoderStream: typeof globalThis extends { onmessage: any; TextDecoderStream: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        var TextEncoderStream: typeof globalThis extends { onmessage: any; TextEncoderStream: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        var TransformStream: typeof globalThis extends { onmessage: any; TransformStream: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:            { onmessage: any; TransformStreamDefaultController: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:        var WritableStream: typeof globalThis extends { onmessage: any; WritableStream: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:            { onmessage: any; WritableStreamDefaultController: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/stream/web.d.ts:            { onmessage: any; WritableStreamDefaultWriter: infer T } ? T
./backend/newpennine-api/node_modules/@types/node/vm.d.ts:        runInContext(contextifiedObject: Context, options?: RunningScriptOptions): any;
./backend/newpennine-api/node_modules/@types/node/vm.d.ts:        ): any;
./backend/newpennine-api/node_modules/@types/node/vm.d.ts:        runInThisContext(options?: RunningScriptOptions): any;
./backend/newpennine-api/node_modules/@types/node/vm.d.ts:    function runInContext(code: string, contextifiedObject: Context, options?: RunningCodeOptions | string): any;
./backend/newpennine-api/node_modules/@types/node/vm.d.ts:    ): any;
./backend/newpennine-api/node_modules/@types/node/vm.d.ts:    function runInThisContext(code: string, options?: RunningCodeOptions | string): any;
./backend/newpennine-api/node_modules/@types/node/vm.d.ts:        error: any;
./backend/newpennine-api/node_modules/@types/node/vm.d.ts:        setExport(name: string, value: any): void;
./backend/newpennine-api/node_modules/@types/node/timers.d.ts:                _onImmediate(...args: any[]): void;
./backend/newpennine-api/node_modules/@types/node/timers.d.ts:                _onTimeout(...args: any[]): void;
./backend/newpennine-api/node_modules/@types/node/test.d.ts:        type TestFn = (t: TestContext, done: (result?: any) => void) => void | Promise<void>;
./backend/newpennine-api/node_modules/@types/node/test.d.ts:            addListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/test.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/test.d.ts:            on(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/test.d.ts:            once(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/test.d.ts:            prependListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/test.d.ts:            prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/test.d.ts:            fileSnapshot(value: any, path: string, options?: AssertSnapshotOptions): void;
./backend/newpennine-api/node_modules/@types/node/test.d.ts:            snapshot(value: any, options?: AssertSnapshotOptions): void;
./backend/newpennine-api/node_modules/@types/node/test.d.ts:            [name: string]: (...args: any[]) => void;
./backend/newpennine-api/node_modules/@types/node/test.d.ts:            serializers?: ReadonlyArray<(value: any) => any> | undefined;
./backend/newpennine-api/node_modules/@types/node/test.d.ts:        type HookFn = (c: TestContext | SuiteContext, done: (result?: any) => void) => any;
./backend/newpennine-api/node_modules/@types/node/test.d.ts:        type TestContextHookFn = (t: TestContext, done: (result?: any) => void) => any;
./backend/newpennine-api/node_modules/@types/node/test.d.ts:            defaultExport?: any;
./backend/newpennine-api/node_modules/@types/node/test.d.ts:            fn<F extends Function = (...args: any[]) => undefined>(
./backend/newpennine-api/node_modules/@types/node/test.d.ts:            fn<F extends Function = (...args: any[]) => undefined, Implementation extends Function = F>(
./backend/newpennine-api/node_modules/@types/node/test.d.ts:            ReturnType = F extends (...args: any) => infer T ? T
./backend/newpennine-api/node_modules/@types/node/test.d.ts:                : F extends abstract new(...args: any) => infer T ? T
./backend/newpennine-api/node_modules/@types/node/test.d.ts:            target: F extends abstract new(...args: any) => any ? F : undefined;
./backend/newpennine-api/node_modules/@types/node/test.d.ts:            function register(name: string, fn: (this: TestContext, ...args: any[]) => void): void;
./backend/newpennine-api/node_modules/@types/node/test.d.ts:            function setDefaultSnapshotSerializers(serializers: ReadonlyArray<(value: any) => any>): void;
./backend/newpennine-api/node_modules/@types/node/test.d.ts:    interface ReporterConstructorWrapper<T extends new(...args: any[]) => Transform> {
./backend/newpennine-api/node_modules/@types/node/http.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http.d.ts:        emit(event: string, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/http.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        on(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        once(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/http2.d.ts:        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:    type ComposeFnParam = (source: any) => void;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            read(size?: number): any;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            unshift(chunk: any, encoding?: BufferEncoding): void;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            push(chunk: any, encoding?: BufferEncoding): boolean;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            map(fn: (data: any, options?: Pick<ArrayOptions, "signal">) => any, options?: ArrayOptions): Readable;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => boolean | Promise<boolean>,
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => void | Promise<void>,
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => boolean | Promise<boolean>,
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => data is T,
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => boolean | Promise<boolean>,
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:                fn: (data: any, options?: Pick<ArrayOptions, "signal">) => boolean | Promise<boolean>,
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            flatMap(fn: (data: any, options?: Pick<ArrayOptions, "signal">) => any, options?: ArrayOptions): Readable;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:                fn: (previous: any, data: any, options?: Pick<ArrayOptions, "signal">) => T,
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:                fn: (previous: T, data: any, options?: Pick<ArrayOptions, "signal">) => T,
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            addListener(event: "data", listener: (chunk: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            emit(event: "data", chunk: any): boolean;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            on(event: "data", listener: (chunk: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            once(event: "data", listener: (chunk: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            prependListener(event: "data", listener: (chunk: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: "data", listener: (chunk: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            removeListener(event: "data", listener: (chunk: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:                chunk: any,
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:                    chunk: any;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            _write(chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:                    chunk: any;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            write(chunk: any, callback?: (error: Error | null | undefined) => void): boolean;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            write(chunk: any, encoding: BufferEncoding, callback?: (error: Error | null | undefined) => void): boolean;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            end(chunk: any, cb?: () => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            end(chunk: any, encoding: BufferEncoding, cb?: () => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            addListener(event: "data", listener: (chunk: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            emit(event: "data", chunk: any): boolean;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            on(event: "data", listener: (chunk: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            on(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            once(event: "data", listener: (chunk: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            once(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            prependListener(event: "data", listener: (chunk: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: "data", listener: (chunk: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            removeListener(event: "data", listener: (chunk: any) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:        type TransformCallback = (error?: Error | null, data?: any) => void;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            transform?(this: T, chunk: any, encoding: BufferEncoding, callback: TransformCallback): void;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:            _transform(chunk: any, encoding: BufferEncoding, callback: TransformCallback): void;
./backend/newpennine-api/node_modules/@types/node/stream.d.ts:                source: S extends (...args: any[]) => Iterable<infer ST> | AsyncIterable<infer ST> ? AsyncIterable<ST>
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:            value?: any;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:            value?: any;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        debug(...data: any[]): void;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        error(...data: any[]): void;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        info(...data: any[]): void;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        log(...data: any[]): void;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        warn(...data: any[]): void;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        dir(...data: any[]): void;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        dirxml(...data: any[]): void;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        table(...data: any[]): void;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        trace(...data: any[]): void;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        group(...data: any[]): void;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        groupCollapsed(...data: any[]): void;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        groupEnd(...data: any[]): void;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        clear(...data: any[]): void;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        count(label?: any): void;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        countReset(label?: any): void;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        assert(value?: any, ...data: any[]): void;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        profile(label?: any): void;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        profileEnd(label?: any): void;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        time(label?: any): void;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        timeLog(label?: any): void;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        timeStamp(label?: any): void;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/inspector.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/v8.d.ts:        writeValue(val: any): boolean;
./backend/newpennine-api/node_modules/@types/node/v8.d.ts:        readValue(): any;
./backend/newpennine-api/node_modules/@types/node/v8.d.ts:    function serialize(value: any): Buffer;
./backend/newpennine-api/node_modules/@types/node/v8.d.ts:    function deserialize(buffer: NodeJS.ArrayBufferView): any;
./backend/newpennine-api/node_modules/@types/node/v8.d.ts:    type StartupSnapshotCallbackFn = (args: any) => any;
./backend/newpennine-api/node_modules/@types/node/v8.d.ts:        addSerializeCallback(callback: StartupSnapshotCallbackFn, data?: any): void;
./backend/newpennine-api/node_modules/@types/node/v8.d.ts:        addDeserializeCallback(callback: StartupSnapshotCallbackFn, data?: any): void;
./backend/newpennine-api/node_modules/@types/node/v8.d.ts:        setDeserializeMainFunction(callback: StartupSnapshotCallbackFn, data?: any): void;
./backend/newpennine-api/node_modules/@types/node/perf_hooks.d.ts:        toJSON(): any;
./backend/newpennine-api/node_modules/@types/node/perf_hooks.d.ts:        timerify<T extends (...params: any[]) => any>(fn: T, options?: TimerifyOptions): T;
./backend/newpennine-api/node_modules/@types/node/perf_hooks.d.ts:        toJSON(): any;
./backend/newpennine-api/node_modules/@types/node/perf_hooks.d.ts:        toJSON(): any;
./backend/newpennine-api/node_modules/@types/node/perf_hooks.d.ts:            onmessage: any;
./backend/newpennine-api/node_modules/@types/node/perf_hooks.d.ts:            onmessage: any;
./backend/newpennine-api/node_modules/@types/node/perf_hooks.d.ts:            onmessage: any;
./backend/newpennine-api/node_modules/@types/node/perf_hooks.d.ts:            onmessage: any;
./backend/newpennine-api/node_modules/@types/node/perf_hooks.d.ts:            onmessage: any;
./backend/newpennine-api/node_modules/@types/node/perf_hooks.d.ts:            onmessage: any;
./backend/newpennine-api/node_modules/@types/node/perf_hooks.d.ts:            onmessage: any;
./backend/newpennine-api/node_modules/@types/node/url.d.ts:            onmessage: any;
./backend/newpennine-api/node_modules/@types/node/url.d.ts:            onmessage: any;
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        stdio?: any[] | undefined;
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        addListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        emit(event: "message", message: any, handle: net.Socket | net.Server): boolean;
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        on(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        once(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        prependListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        prependOnceListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        fork(env?: any): Worker;
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:            listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        emit(event: "message", worker: Worker, message: any, handle: net.Socket | net.Server): boolean;
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        on(event: "message", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        once(event: "message", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:            listener: (worker: Worker, message: any, handle?: net.Socket | net.Server) => void,
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/cluster.d.ts:            listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,
./backend/newpennine-api/node_modules/@types/node/https.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/https.d.ts:        emit(event: string, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/https.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/https.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/https.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/https.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/assert.d.ts:            calls<Func extends (...args: any[]) => any>(fn?: Func, exact?: number): Func;
./backend/newpennine-api/node_modules/@types/node/fs.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/fs.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/fs.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/fs.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/fs.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/fs.d.ts:    type CustomEvents = { [Key in string & {} | symbol]: (...args: any[]) => void };
./backend/newpennine-api/node_modules/@types/node/fs.d.ts:        open?: (...args: any[]) => any;
./backend/newpennine-api/node_modules/@types/node/fs.d.ts:        close?: (...args: any[]) => any;
./backend/newpennine-api/node_modules/@types/node/fs.d.ts:        read: (...args: any[]) => any;
./backend/newpennine-api/node_modules/@types/node/fs.d.ts:        write: (...args: any[]) => any;
./backend/newpennine-api/node_modules/@types/node/fs.d.ts:        writev?: (...args: any[]) => any;
./backend/newpennine-api/node_modules/@types/node/repl.d.ts:        cb: (err: Error | null, result: any) => void,
./backend/newpennine-api/node_modules/@types/node/repl.d.ts:    type REPLWriter = (this: REPLServer, obj: any) => string;
./backend/newpennine-api/node_modules/@types/node/repl.d.ts:        readonly last: any;
./backend/newpennine-api/node_modules/@types/node/repl.d.ts:        readonly lastError: any;
./backend/newpennine-api/node_modules/@types/node/repl.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/repl.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/repl.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/repl.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/repl.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/repl.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/dgram.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/dgram.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/dgram.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/dgram.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/dgram.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/dgram.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/child_process.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/child_process.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/child_process.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/child_process.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/child_process.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/child_process.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/module.d.ts:            transferList?: any[] | undefined;
./backend/newpennine-api/node_modules/@types/node/module.d.ts:                exports: any;
./backend/newpennine-api/node_modules/@types/node/module.d.ts:                require(id: string): any;
./backend/newpennine-api/node_modules/@types/node/module.d.ts:                (id: string): any;
./backend/newpennine-api/node_modules/@types/node/process.d.ts:                    readonly cflags: any[];
./backend/newpennine-api/node_modules/@types/node/process.d.ts:                nextTick(callback: Function, ...args: any[]): void;
./backend/newpennine-api/node_modules/@types/node/process.d.ts:                    message: any,
./backend/newpennine-api/node_modules/@types/node/process.d.ts:                    sendHandle?: any,
./backend/newpennine-api/node_modules/@types/node/process.d.ts:                ref(maybeRefable: any): void;
./backend/newpennine-api/node_modules/@types/node/process.d.ts:                unref(maybeRefable: any): void;
./backend/newpennine-api/node_modules/@types/node/process.d.ts:                on(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/process.d.ts:                once(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/util.d.ts:    export function format(format?: any, ...param: any[]): string;
./backend/newpennine-api/node_modules/@types/node/util.d.ts:    export function formatWithOptions(inspectOptions: InspectOptions, format?: any, ...param: any[]): string;
./backend/newpennine-api/node_modules/@types/node/util.d.ts:    export function aborted(signal: AbortSignal, resource: any): Promise<void>;
./backend/newpennine-api/node_modules/@types/node/util.d.ts:    export function inspect(object: any, showHidden?: boolean, depth?: number | null, color?: boolean): string;
./backend/newpennine-api/node_modules/@types/node/util.d.ts:    export function inspect(object: any, options?: InspectOptions): string;
./backend/newpennine-api/node_modules/@types/node/util.d.ts:        fn: (callback: (err: any, result: TResult) => void) => void,
./backend/newpennine-api/node_modules/@types/node/util.d.ts:    export function promisify(fn: (callback: (err?: any) => void) => void): () => Promise<void>;
./backend/newpennine-api/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, callback: (err: any, result: TResult) => void) => void,
./backend/newpennine-api/node_modules/@types/node/util.d.ts:    export function promisify<T1>(fn: (arg1: T1, callback: (err?: any) => void) => void): (arg1: T1) => Promise<void>;
./backend/newpennine-api/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, callback: (err: any, result: TResult) => void) => void,
./backend/newpennine-api/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, callback: (err?: any) => void) => void,
./backend/newpennine-api/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, callback: (err: any, result: TResult) => void) => void,
./backend/newpennine-api/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, callback: (err?: any) => void) => void,
./backend/newpennine-api/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: (err: any, result: TResult) => void) => void,
./backend/newpennine-api/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: (err?: any) => void) => void,
./backend/newpennine-api/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: (err: any, result: TResult) => void) => void,
./backend/newpennine-api/node_modules/@types/node/util.d.ts:        fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: (err?: any) => void) => void,
./backend/newpennine-api/node_modules/@types/node/util.d.ts:            onmessage: any;
./backend/newpennine-api/node_modules/@types/node/util.d.ts:            onmessage: any;
./backend/newpennine-api/node_modules/@types/node/net.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/net.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/net.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/net.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/net.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/net.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/net.d.ts:        listen(handle: any, backlog?: number, listeningListener?: () => void): this;
./backend/newpennine-api/node_modules/@types/node/net.d.ts:        listen(handle: any, listeningListener?: () => void): this;
./backend/newpennine-api/node_modules/@types/node/net.d.ts:        addListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/net.d.ts:        emit(event: string | symbol, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@types/node/net.d.ts:        on(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/net.d.ts:        once(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/net.d.ts:        prependListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/node/net.d.ts:        prependOnceListener(event: string, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/connect/index.d.ts:    type NextFunction = (err?: any) => void;
./backend/newpennine-api/node_modules/@types/connect/index.d.ts:        err: any,
./backend/newpennine-api/node_modules/@types/connect/index.d.ts:        listen(handle: any, listeningListener?: Function): http.Server;
./backend/newpennine-api/node_modules/@types/babel__core/node_modules/@babel/types/lib/index-legacy.d.ts:export function assertNode(obj: any): void
./backend/newpennine-api/node_modules/@types/babel__core/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T
./backend/newpennine-api/node_modules/@types/babel__core/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent(a: any, b: any): boolean
./backend/newpennine-api/node_modules/@types/babel__core/node_modules/@babel/types/lib/index-legacy.d.ts:export function validate(n: Node, key: string, value: any): void;
./backend/newpennine-api/node_modules/@types/babel__core/node_modules/@babel/types/lib/index.d.ts:declare function assertNode(node?: any): asserts node is Node;
./backend/newpennine-api/node_modules/@types/babel__core/node_modules/@babel/types/lib/index.d.ts:declare function assertNumberLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@types/babel__core/node_modules/@babel/types/lib/index.d.ts:declare function assertRegexLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@types/babel__core/node_modules/@babel/types/lib/index.d.ts:declare function assertRestProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@types/babel__core/node_modules/@babel/types/lib/index.d.ts:declare function assertSpreadProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@types/babel__core/node_modules/@babel/types/lib/index.d.ts:declare function assertModuleDeclaration(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@types/babel__core/node_modules/@babel/types/lib/index.d.ts:declare function getType(val: any): "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function" | "array" | "null";
./backend/newpennine-api/node_modules/@types/babel__core/node_modules/@babel/types/lib/index.d.ts:    oneOf: any[];
./backend/newpennine-api/node_modules/@types/babel__core/node_modules/@babel/types/lib/index.d.ts:}, val: any) => void);
./backend/newpennine-api/node_modules/@types/babel__core/node_modules/@babel/types/lib/index.d.ts:declare function isNode(node: any): node is Node;
./backend/newpennine-api/node_modules/@types/babel__core/node_modules/@babel/types/lib/index.d.ts:declare function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T;
./backend/newpennine-api/node_modules/@types/babel__core/index.d.ts:            callback: (path: NodePath, state: any) => void,
./backend/newpennine-api/node_modules/@types/babel__core/index.d.ts:        ) => (path: NodePath, state: any) => void)
./backend/newpennine-api/node_modules/@types/babel__core/index.d.ts:    manipulateOptions?(opts: any, parserOpts: any): void;
./backend/newpennine-api/node_modules/@types/babel__core/index.d.ts:    inherits?: any;
./backend/newpennine-api/node_modules/@types/babel__core/index.d.ts:    get(key: unknown): any;
./backend/newpennine-api/node_modules/@types/babel__core/index.d.ts:    value: object | ((...args: any[]) => any);
./backend/newpennine-api/node_modules/@types/babel__core/index.d.ts:export type PluginTarget = string | object | ((...args: any[]) => any);
./backend/newpennine-api/node_modules/@types/passport-jwt/index.d.ts:    (request: T, rawJwtToken: any, done: (err: any, secretOrKey?: string | Buffer) => void): void;
./backend/newpennine-api/node_modules/@types/passport-jwt/index.d.ts:export type VerifyCallback = (payload: any, done: VerifiedCallback) => void;
./backend/newpennine-api/node_modules/@types/passport-jwt/index.d.ts:export type VerifyCallbackWithRequest<T = any> = (req: T, payload: any, done: VerifiedCallback) => void;
./backend/newpennine-api/node_modules/@types/passport-jwt/index.d.ts:    (error: any, user?: unknown | false, info?: any): void;
./backend/newpennine-api/node_modules/@types/ws/index.d.ts:    ping(data?: any, mask?: boolean, cb?: (err: Error) => void): void;
./backend/newpennine-api/node_modules/@types/ws/index.d.ts:    pong(data?: any, mask?: boolean, cb?: (err: Error) => void): void;
./backend/newpennine-api/node_modules/@types/ws/index.d.ts:    on(event: string | symbol, listener: (this: WebSocket, ...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/ws/index.d.ts:    once(event: string | symbol, listener: (this: WebSocket, ...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/ws/index.d.ts:    off(event: string | symbol, listener: (this: WebSocket, ...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/ws/index.d.ts:    addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/ws/index.d.ts:    removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/ws/index.d.ts:        error: any;
./backend/newpennine-api/node_modules/@types/ws/index.d.ts:        on(event: string | symbol, listener: (this: Server<T>, ...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/ws/index.d.ts:        once(event: string | symbol, listener: (this: Server<T>, ...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/ws/index.d.ts:        off(event: string | symbol, listener: (this: Server<T>, ...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/ws/index.d.ts:        addListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/ws/index.d.ts:        removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@types/json-schema/index.d.ts:    [k: string]: any;
./backend/newpennine-api/node_modules/@types/json-schema/index.d.ts:    value: any,
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    fallback: Array<T extends ReadonlyArray<infer U> ? U : any>;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    function isMockFunction(fn: any): fn is Mock;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    ): ConstructorProperties<Required<T>>[M] extends new(...args: any[]) => any ? SpyInstance<
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    type MockableFunction = (...args: any[]) => any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    type ConstructorReturnType<T> = T extends new(...args: any) => infer C ? C : any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    type MaybeMockedConstructor<T> = T extends new(...args: any[]) => infer R
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    type Constructor = new(...args: any[]) => any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    type Func = (...args: any[]) => any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    type FunctionProperties<T> = { [K in keyof T as T[K] extends (...args: any[]) => any ? K : never]: T[K] };
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        (...args: any[]): any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        fail(error?: string | { message: string }): any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:            fn: (...args: any[]) => any,
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        (strings: TemplateStringsArray, ...placeholders: any[]): (
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:            fn: (arg: any, done: DoneCallback) => any,
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    type EqualityTester = (a: any, b: any) => boolean | undefined;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    type MatcherUtils = import("expect").MatcherUtils & { [other: string]: any };
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        received: any,
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        ...actual: any[]
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        arrayContaining<E = any>(arr: readonly E[]): any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        objectContaining<E = {}>(obj: E): any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        stringMatching(str: string | RegExp): any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        stringContaining(str: string): any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        anything(): any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        any(classType: any): any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        arrayContaining<E = any>(arr: readonly E[]): any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        closeTo(num: number, numDigits?: number): any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        objectContaining<E = {}>(obj: E): any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        stringMatching(str: string | RegExp): any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        stringContaining(str: string): any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        toMatchSnapshot<U extends { [P in keyof T]: any }>(propertyMatchers: Partial<U>, snapshotName?: string): R;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        toMatchInlineSnapshot<U extends { [P in keyof T]: any }>(propertyMatchers: Partial<U>, snapshot?: string): R;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        : ((...b: T) => void) extends (a: any, ...b: infer I) => void ? I
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    type CustomAsymmetricMatcher<TMatcher extends (...args: any[]) => any> = (
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    type CustomJestMatcher<TMatcher extends (...args: any[]) => any, TMatcherReturn> = (
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        new(...args: any[]): any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    type SpiedClass<T extends abstract new(...args: any) => any> = SpyInstance<
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        T extends abstract new(...args: any) => infer C ? C : never
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    type SpiedFunction<T extends (...args: any) => any> = SpyInstance<
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        T extends (this: infer C, ...args: any) => any ? C : never
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    type Spied<T extends (abstract new(...args: any) => any) | ((...args: any) => any)> = T extends abstract new(
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        ...args: any
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        : T extends (...args: any) => any ? SpiedFunction<T>
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    type MockedFunction<T extends (...args: any[]) => any> =
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:            T extends (this: infer C, ...args: any[]) => any ? C : never
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:            T extends new(...args: any[]) => infer C ? C : never
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:            prototype: T extends { prototype: any } ? Mocked<T["prototype"]> : never;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:            [P in keyof T]: T[P] extends (this: infer C, ...args: any[]) => any
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        value: any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:declare function fail(error?: any): never;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    function any(aclass: any): Any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    function objectContaining(sample: any): ObjectContaining;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    function createSpy(name?: string, originalFn?: (...args: any[]) => any): Spy;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    function createSpyObj(baseName: string, methodNames: any[]): any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    function createSpyObj<T>(baseName: string, methodNames: any[]): T;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    function pp(value: any): string;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        new(expectedClass: any): any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        jasmineMatches(other: any): boolean;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        new(sample: readonly any[]): any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        asymmetricMatch(other: any): boolean;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        new(sample: any): any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        jasmineMatches(other: any, mismatchKeys: any[], mismatchValues: any[]): boolean;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        (...params: any[]): any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        mostRecentCall: { args: any[] };
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        argsForCall: any[];
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        returnValue(val: any): Spy;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        returnValues(...values: any[]): Spy;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        callFake(fn: (...args: any[]) => any): Spy;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        argsFor(index: number): any[];
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        allArgs(): any[];
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        object: any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        args: any[];
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        returnValue: any;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        equals(a: any, b: any, customTesters?: CustomEqualityTester[]): boolean;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        contains<T>(haystack: ArrayLike<T> | string, needle: any, customTesters?: CustomEqualityTester[]): boolean;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        buildFailureMessage(matcherName: string, isNot: boolean, actual: any, ...expected: any[]): string;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:    type CustomEqualityTester = (first: any, second: any) => boolean;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        compare<T>(actual: T, expected: T, ...args: any[]): CustomMatcherResult;
./backend/newpennine-api/node_modules/@types/jest/index.d.ts:        compare(actual: any, ...expected: any[]): CustomMatcherResult;
./backend/newpennine-api/node_modules/node-abort-controller/index.d.ts:  reason?: any;
./backend/newpennine-api/node_modules/node-abort-controller/index.d.ts:    listener: (this: AbortSignal, event: any) => any,
./backend/newpennine-api/node_modules/node-abort-controller/index.d.ts:    listener: (this: AbortSignal, event: any) => any,
./backend/newpennine-api/node_modules/node-abort-controller/index.d.ts:  dispatchEvent: (event: any) => boolean;
./backend/newpennine-api/node_modules/node-abort-controller/index.d.ts:  onabort: null | ((this: AbortSignal, event: any) => void);
./backend/newpennine-api/node_modules/node-abort-controller/index.d.ts:  static abort(reason?: any): AbortSignal;
./backend/newpennine-api/node_modules/node-abort-controller/index.d.ts:  abort(reason?: any): void;
./backend/newpennine-api/node_modules/@xtuc/long/index.d.ts:    static isLong(obj: any): obj is Long;
./backend/newpennine-api/node_modules/libphonenumber-js/types.d.ts:  [country in CountryCode]?: any[];
./backend/newpennine-api/node_modules/browserslist/error.d.ts:  constructor(message: any)
./backend/newpennine-api/node_modules/istanbul-lib-source-maps/node_modules/source-map/source-map.d.ts:    eachMapping(callback: (mapping: MappingItem) => void, context?: any, order?: number): void;
./backend/newpennine-api/node_modules/jest-worker/build/index.d.ts:declare type FunctionLike = (...args: any) => unknown;
./backend/newpennine-api/node_modules/tsconfig-paths/lib/filesystem.d.ts:    (packageJsonPath: string): any | undefined;
./backend/newpennine-api/node_modules/tsconfig-paths/lib/filesystem.d.ts:    (err?: Error, content?: any): void;
./backend/newpennine-api/node_modules/tsconfig-paths/lib/filesystem.d.ts:export declare function readJsonFromDiskSync(packageJsonPath: string): any | undefined;
./backend/newpennine-api/node_modules/tsconfig-paths/lib/filesystem.d.ts:export declare function readJsonFromDiskAsync(path: string, callback: (err?: Error, content?: any) => void): void;
./backend/newpennine-api/node_modules/tsconfig-paths/src/filesystem.ts:  (packageJsonPath: string): any | undefined;
./backend/newpennine-api/node_modules/tsconfig-paths/src/filesystem.ts:  (err?: Error, content?: any): void;
./backend/newpennine-api/node_modules/tsconfig-paths/src/filesystem.ts:export function readJsonFromDiskSync(packageJsonPath: string): any | undefined {
./backend/newpennine-api/node_modules/tsconfig-paths/src/filesystem.ts:  callback: (err?: Error, content?: any) => void
./backend/newpennine-api/node_modules/tsconfig-paths/src/register.ts:  Module._resolveFilename = function (request: string, _parent: any): string {
./backend/newpennine-api/node_modules/flatted/types/index.d.ts:export function parse(text: string, reviver?: (this: any, key: string, value: any) => any): any;
./backend/newpennine-api/node_modules/flatted/types/index.d.ts:export function stringify(value: any, replacer?: (string | number)[] | ((this: any, key: string, value: any) => any), space?: string | number | undefined): string;
./backend/newpennine-api/node_modules/flatted/types/index.d.ts:export function toJSON(value: any): any;
./backend/newpennine-api/node_modules/flatted/types/index.d.ts:export function fromJSON(value: any): any;
./backend/newpennine-api/node_modules/@noble/hashes/crypto.d.ts:export declare const crypto: any;
./backend/newpennine-api/node_modules/@noble/hashes/esm/crypto.d.ts:export declare const crypto: any;
./backend/newpennine-api/node_modules/@noble/hashes/esm/utils.d.ts:export declare function aexists(instance: any, checkFinished?: boolean): void;
./backend/newpennine-api/node_modules/@noble/hashes/esm/utils.d.ts:export declare function aoutput(out: any, instance: any): void;
./backend/newpennine-api/node_modules/@noble/hashes/esm/utils.d.ts:    create: any;
./backend/newpennine-api/node_modules/@noble/hashes/esm/cryptoNode.d.ts:export declare const crypto: any;
./backend/newpennine-api/node_modules/@noble/hashes/utils.d.ts:export declare function aexists(instance: any, checkFinished?: boolean): void;
./backend/newpennine-api/node_modules/@noble/hashes/utils.d.ts:export declare function aoutput(out: any, instance: any): void;
./backend/newpennine-api/node_modules/@noble/hashes/utils.d.ts:    create: any;
./backend/newpennine-api/node_modules/@noble/hashes/cryptoNode.d.ts:export declare const crypto: any;
./backend/newpennine-api/node_modules/@noble/hashes/src/cryptoNode.ts:export const crypto: any =
./backend/newpennine-api/node_modules/@noble/hashes/src/utils.ts:export function aexists(instance: any, checkFinished = true): void {
./backend/newpennine-api/node_modules/@noble/hashes/src/utils.ts:export function aoutput(out: any, instance: any): void {
./backend/newpennine-api/node_modules/@noble/hashes/src/utils.ts:declare const TextEncoder: any;
./backend/newpennine-api/node_modules/@noble/hashes/src/utils.ts:declare const TextDecoder: any;
./backend/newpennine-api/node_modules/@noble/hashes/src/utils.ts:  create: any;
./backend/newpennine-api/node_modules/@noble/hashes/src/crypto.ts:export const crypto: any =
./backend/newpennine-api/node_modules/@noble/hashes/src/pbkdf2.ts:  let prfW: any; // Working copy
./backend/newpennine-api/node_modules/@noble/hashes/src/pbkdf2.ts:  let prfW: any; // Working copy
./backend/newpennine-api/node_modules/@noble/hashes/src/argon2.ts:  const merged: any = {
./backend/newpennine-api/node_modules/cacheable-request/dist/index.d.ts:type Func = (...args: any[]) => any;
./backend/newpennine-api/node_modules/cacheable-request/dist/index.d.ts:    runHook: (name: string, ...args: any[]) => Promise<CacheValue>;
./backend/newpennine-api/node_modules/@jest/expect-utils/build/index.d.ts:  object: any,
./backend/newpennine-api/node_modules/@jest/expect-utils/build/index.d.ts:  subset: any,
./backend/newpennine-api/node_modules/@jest/expect-utils/build/index.d.ts:  a: any,
./backend/newpennine-api/node_modules/@jest/expect-utils/build/index.d.ts:  b: any,
./backend/newpennine-api/node_modules/@jest/expect-utils/build/index.d.ts:  a: any,
./backend/newpennine-api/node_modules/@jest/expect-utils/build/index.d.ts:  b: any,
./backend/newpennine-api/node_modules/@jest/expect-utils/build/index.d.ts:export declare const typeEquality: (a: any, b: any) => boolean | undefined;
./backend/newpennine-api/node_modules/type-fest/source/async-return-type.d.ts:type AsyncFunction = (...args: any[]) => Promise<unknown>;
./backend/newpennine-api/node_modules/type-fest/source/set-return-type.d.ts:export type SetReturnType<Fn extends (...args: any[]) => any, TypeToReturn> =
./backend/newpennine-api/node_modules/type-fest/source/readonly-deep.d.ts:export type ReadonlyDeep<T> = T extends Primitive | ((...arguments: any[]) => unknown)
./backend/newpennine-api/node_modules/type-fest/source/partial-deep.d.ts:	: T extends ((...arguments: any[]) => unknown)
./backend/newpennine-api/node_modules/type-fest/source/asyncify.d.ts:export type Asyncify<Fn extends (...args: any[]) => any> = SetReturnType<Fn, Promise<PromiseValue<ReturnType<Fn>>>>;
./backend/newpennine-api/node_modules/commander/typings/index.d.ts:    [key: string]: any; // options as properties
./backend/newpennine-api/node_modules/commander/typings/index.d.ts:    action(fn: (...args: any[]) => void | Promise<void>): Command;
./backend/newpennine-api/node_modules/commander/typings/index.d.ts:    option(flags: string, description?: string, fn?: ((arg1: any, arg2: any) => void) | RegExp, defaultValue?: any): Command;
./backend/newpennine-api/node_modules/commander/typings/index.d.ts:    option(flags: string, description?: string, defaultValue?: any): Command;
./backend/newpennine-api/node_modules/commander/typings/index.d.ts:    requiredOption(flags: string, description?: string, fn?: ((arg1: any, arg2: any) => void) | RegExp, defaultValue?: any): Command;
./backend/newpennine-api/node_modules/commander/typings/index.d.ts:    requiredOption(flags: string, description?: string, defaultValue?: any): Command;
./backend/newpennine-api/node_modules/commander/typings/index.d.ts:    opts(): { [key: string]: any };
./backend/newpennine-api/node_modules/chrome-trace-event/dist/trace-event.d.ts:    [otherData: string]: any;
./backend/newpennine-api/node_modules/chrome-trace-event/dist/trace-event.d.ts:    cat?: any;
./backend/newpennine-api/node_modules/chrome-trace-event/dist/trace-event.d.ts:    args?: any;
./backend/newpennine-api/node_modules/chrome-trace-event/dist/trace-event.d.ts:    [filedName: string]: any;
./backend/newpennine-api/node_modules/fast-json-stable-stringify/index.d.ts:  function stringify(obj: any): string;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/json-schema-traverse/index.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Subscription.d.ts:export declare function isSubscription(value: any): value is Subscription;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/catchError.d.ts:export declare function catchError<T, O extends ObservableInput<any>>(selector: (err: any, caught: Observable<T>) => O): OperatorFunction<T, T | ObservedValueOf<O>>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/share.d.ts:    resetOnError?: boolean | ((error: any) => ObservableInput<any>);
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/every.d.ts:export declare function every<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/partition.d.ts:export declare function partition<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): UnaryFunction<Observable<T>, [Observable<T>, Observable<T>]>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/materialize.d.ts: * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/tap.d.ts:export declare function tap<T>(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): MonoTypeOperatorFunction<T>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/find.d.ts:export declare function createFind<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean, thisArg: any, emit: 'value' | 'index'): (source: Observable<T>, subscriber: Subscriber<any>) => void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/OperatorSubscriber.d.ts:export declare function createOperatorSubscriber<T>(destination: Subscriber<any>, onNext?: (value: T) => void, onComplete?: () => void, onError?: (err: any) => void, onFinalize?: () => void): Subscriber<T>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/OperatorSubscriber.d.ts:    constructor(destination: Subscriber<any>, onNext?: (value: T) => void, onComplete?: () => void, onError?: (err: any) => void, onFinalize?: (() => void) | undefined, shouldUnsubscribe?: (() => boolean) | undefined);
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/joinAllInternals.d.ts:export declare function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R): import("../types").UnaryFunction<Observable<ObservableInput<T>>, unknown>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/findIndex.d.ts:export declare function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/retry.d.ts:    delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/isReadableStreamLike.d.ts:export declare function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/isPromise.d.ts:export declare function isPromise(value: any): value is PromiseLike<any>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popScheduler(args: any[]): SchedulerLike | undefined;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popNumber(args: any[], defaultValue: number): number;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/createErrorClass.d.ts:export declare function createErrorClass<T>(createImpl: (_super: any) => any): T;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/errorContext.d.ts:export declare function captureError(err: any): void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/not.d.ts:export declare function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/isFunction.d.ts:export declare function isFunction(value: any): value is (...args: any[]) => any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/isAsyncIterable.d.ts:export declare function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/throwUnobservableError.d.ts:export declare function createInvalidObservableTypeError(input: any): TypeError;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/lift.d.ts:export declare function hasLift(source: any): source is {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/isObservable.d.ts:export declare function isObservable(obj: any): obj is Observable<unknown>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/applyMixins.d.ts:export declare function applyMixins(derivedCtor: any, baseCtors: any[]): void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/reportUnhandledError.d.ts:export declare function reportUnhandledError(err: any): void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/isScheduler.d.ts:export declare function isScheduler(value: any): value is SchedulerLike;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/isArrayLike.d.ts:export declare const isArrayLike: <T>(x: any) => x is ArrayLike<T>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/createObject.d.ts:export declare function createObject(keys: string[], values: any[]): any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/isIterable.d.ts:export declare function isIterable(input: any): input is Iterable<any>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/isInteropObservable.d.ts:export declare function isInteropObservable(input: any): input is InteropObservable<any>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/isDate.d.ts:export declare function isValidDate(value: any): value is Date;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/UnsubscriptionError.d.ts:    readonly errors: any[];
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/UnsubscriptionError.d.ts:    new (errors: any[]): UnsubscriptionError;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/types.d.ts:    error: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/types.d.ts:    error?: (err: any) => void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/types.d.ts:    error: (err: any) => void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/types.d.ts:    error?: (err: any) => void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/types.d.ts:    error: (err: any) => void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/types.d.ts:export declare type Head<X extends readonly any[]> = ((...args: X) => any) extends (arg: infer U, ...rest: any[]) => any ? U : never;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/types.d.ts:export declare type Tail<X extends readonly any[]> = ((...args: X) => any) extends (arg: any, ...rest: infer U) => any ? U : never;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/config.d.ts:    onUnhandledError: ((err: any) => void) | null;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay?: number): TimerHandle;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay?: number): TimerHandle | undefined;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected _execute(state: T, delay: number): any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/scheduler/QueueAction.d.ts:    execute(state: T, delay: number): any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/scheduler/immediateProvider.d.ts:declare type SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/scheduler/intervalProvider.d.ts:declare type SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/scheduler/AsyncAction.d.ts:    execute(state: T, delay: number): any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/scheduler/AsyncAction.d.ts:    protected _execute(state: T, _delay: number): any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/scheduler/timeoutProvider.d.ts:declare type SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:export declare type observableToBeFn = (marbles: string, values?: any, errorValue?: any) => void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    assertDeepEqual: (actual: any, expected: any) => boolean | void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    constructor(assertDeepEqual: (actual: any, expected: any) => boolean | void);
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    }, error?: any): ColdObservable<T>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    }, error?: any): HotObservable<T>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:        toBe(marbles: string, values?: any, errorValue?: any): void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    static parseMarbles(marbles: string, values?: any, errorValue?: any, materializeInnerObservables?: boolean, runMode?: boolean): TestMessage[];
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Operator.d.ts:    call(subscriber: Subscriber<R>, source: any): TeardownLogic;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Notification.d.ts:    readonly error?: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Notification.d.ts:    constructor(kind: 'E', value: undefined, error: any);
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Notification.d.ts:    do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Notification.d.ts:    do(next: (value: T) => void, error: (err: any) => void): void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Notification.d.ts:    accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Notification.d.ts:    accept(next: (value: T) => void, error: (err: any) => void): void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Notification.d.ts:    static createError(err?: any): Notification<never> & ErrorNotification;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/pairs.d.ts:export declare function pairs(n: number | bigint | boolean | ((...args: any[]) => any) | symbol, scheduler?: SchedulerLike): Observable<[never, never]>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/bindCallback.d.ts:export declare function bindCallback(callbackFunc: (...args: any[]) => void, resultSelector: (...args: any[]) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/bindCallbackInternals.d.ts:export declare function bindCallbackInternals(isNodeStyle: boolean, callbackFunc: any, resultSelector?: any, scheduler?: SchedulerLike): (...args: any[]) => Observable<unknown>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/combineLatest.d.ts:export declare function combineLatestInit(observables: ObservableInput<any>[], scheduler?: SchedulerLike, valueTransform?: (values: any[]) => any): (subscriber: Subscriber<any>) => void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/fromEventPattern.d.ts:export declare function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void): Observable<T>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/fromEventPattern.d.ts:export declare function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare type NodeEventHandler = (...args: any[]) => void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:    on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:    off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<R>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string, resultSelector: (...args: any[]) => R): Observable<R>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<R>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string, resultSelector: (...args: any[]) => R): Observable<R>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<T, R>(target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>, eventName: string, resultSelector: (value: T, ...args: any[]) => R): Observable<R>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts: *   const error: any = new Error(`This is error number ${ ++errorCount }`);
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts:export declare function throwError(error: any): Observable<never>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts:export declare function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/innerFrom.d.ts:export declare function fromInteropObservable<T>(obj: any): Observable<T>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/bindNodeCallback.d.ts:export declare function bindNodeCallback(callbackFunc: (...args: any[]) => void, resultSelector: (...args: any[]) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/bindNodeCallback.d.ts:export declare function bindNodeCallback<A extends readonly unknown[], R extends readonly unknown[]>(callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void, schedulerLike?: SchedulerLike): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Observable.d.ts:    static create: (...args: any[]) => any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Observable.d.ts:    subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Subject.d.ts:    thrownError: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Subject.d.ts:    static create: (...args: any[]) => any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Subject.d.ts:    error(err: any): void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Subject.d.ts:    error(err: any): void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    error(err?: any): void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    protected _error(err: any): void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    constructor(observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null, error?: ((e?: any) => void) | null, complete?: (() => void) | null);
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/ajax/errors.d.ts:    response: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    post<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    put<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    patch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/ajax/types.d.ts:    body?: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/ajax/types.d.ts:    body?: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/ajax/getXHRResponse.d.ts:export declare function getXHRResponse(xhr: XMLHttpRequest): any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/catchError.ts:  selector: (err: any, caught: Observable<T>) => O
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/catchError.ts:  selector: (err: any, caught: Observable<T>) => O
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/groupBy.ts:  elementOrOptions?: ((value: any) => any) | void | BasicGroupByOptions<K, T> | GroupByOptionsWithElement<K, R, T>,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/groupBy.ts:    let element: ((value: any) => any) | void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/groupBy.ts:      element = elementOrOptions as ((value: any) => any);
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/groupBy.ts:    const handleError = (err: any) => notify((consumer) => consumer.error(err));
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/groupBy.ts:      const result: any = new Observable<T>((groupSubscriber) => {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/joinAllInternals.ts:export function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/scanInternals.ts:    let state: any = seed;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/find.ts:  thisArg?: any
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/find.ts:  thisArg: any,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/filter.ts:export function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/windowTime.ts:export function windowTime<T>(windowTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, Observable<T>> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/share.ts:  resetOnError?: boolean | ((error: any) => ObservableInput<any>);
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/tap.ts:  error?: ((error: any) => void) | null,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/tap.ts:  error?: ((e: any) => void) | null,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/materialize.ts: * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/retry.ts:  delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/exhaustMap.ts:      source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b: any, ii: any) => resultSelector(a, b, i, ii)))));
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/map.ts:export function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/findIndex.ts:export function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/findIndex.ts:  thisArg?: any
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/every.ts:  thisArg: any
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/every.ts:  thisArg?: any
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/windowWhen.ts:    const handleError = (err: any) => {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/pluck.ts:    let currentProp: any = x;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/bufferTime.ts:export function bufferTime<T>(bufferTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, T[]> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/timeout.ts:    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/combineLatest.ts:export function combineLatest<T, R>(...args: (ObservableInput<any> | ((...values: any[]) => R))[]): OperatorFunction<T, unknown> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/windowToggle.ts:    const handleError = (err: any) => {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/race.ts:export function race<T>(...args: any[]): OperatorFunction<T, unknown> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:  onError?: (err: any) => void,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:    onError?: (err: any) => void,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:      ? function (this: OperatorSubscriber<T>, err: any) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/concat.ts:export function concat<T, R>(...args: any[]): OperatorFunction<T, R> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/reduce.ts:export function reduce<V, A>(accumulator: (acc: V | A, value: V, index: number) => A, seed?: any): OperatorFunction<V, V | A> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/window.ts:    const errorHandler = (err: any) => {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/mergeMap.ts:    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/partition.ts:  thisArg?: any
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/toArray.ts:const arrReducer = (arr: any[], value: any) => (arr.push(value), arr);
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/withLatestFrom.ts:export function withLatestFrom<T, R>(...inputs: any[]): OperatorFunction<T, R | any[]> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/withLatestFrom.ts:  const project = popResultSelector(inputs) as ((...args: any[]) => R) | undefined;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/distinctUntilChanged.ts:function defaultCompare(a: any, b: any) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/EmptyError.ts:export const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/pipe.ts:    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/reportUnhandledError.ts:export function reportUnhandledError(err: any) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/isFunction.ts:export function isFunction(value: any): value is (...args: any[]) => any {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/isInteropObservable.ts:export function isInteropObservable(input: any): input is InteropObservable<any> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/isPromise.ts:export function isPromise(value: any): value is PromiseLike<any> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/isDate.ts:export function isValidDate(value: any): value is Date {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/isAsyncIterable.ts:export function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/args.ts:export function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/args.ts:export function popScheduler(args: any[]): SchedulerLike | undefined {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/args.ts:export function popNumber(args: any[], defaultValue: number): number {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/isReadableStreamLike.ts:export function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/throwUnobservableError.ts:export function createInvalidObservableTypeError(input: any) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/SequenceError.ts:    function SequenceErrorImpl(this: any, message: string) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/createErrorClass.ts:export function createErrorClass<T>(createImpl: (_super: any) => any): T {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/createErrorClass.ts:  const _super = (instance: any) => {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/not.ts:export function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/isArrayLike.ts:export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:  readonly errors: any[];
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:  new (errors: any[]): UnsubscriptionError;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/isScheduler.ts:export function isScheduler(value: any): value is SchedulerLike {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/errorContext.ts:let context: { errorThrown: boolean; error: any } | null = null;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/errorContext.ts:export function captureError(err: any) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts:    function ObjectUnsubscribedErrorImpl(this: any) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/Immediate.ts:const activeHandles: { [key: number]: any } = {};
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/applyMixins.ts:export function applyMixins(derivedCtor: any, baseCtors: any[]) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/lift.ts:export function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/createObject.ts:export function createObject(keys: string[], values: any[]) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/argsArgArrayOrObject.ts:function isPOJO(obj: any): obj is object {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts:    function ArgumentOutOfRangeErrorImpl(this: any) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/isIterable.ts:export function isIterable(input: any): input is Iterable<any> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/NotFoundError.ts:    function NotFoundErrorImpl(this: any, message: string) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/isObservable.ts:export function isObservable(obj: any): obj is Observable<unknown> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts:type SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:  public execute(state: T, delay: number): any {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:  protected _execute(state: T, _delay: number): any {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:    let errorValue: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts:    let error: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:    let error: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected _execute(state: T, delay: number): any {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts:    let error: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts:    let error: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/QueueAction.ts:  public execute(state: T, delay: number): any {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/intervalProvider.ts:type SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/immediateProvider.ts:type SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  actual?: any[];
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  expected?: any[];
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/testing/TestScheduler.ts:export type observableToBeFn = (marbles: string, values?: any, errorValue?: any) => void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  constructor(public assertDeepEqual: (actual: any, expected: any) => boolean | void) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  createColdObservable<T = string>(marbles: string, values?: { [marble: string]: T }, error?: any): ColdObservable<T> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  createHotObservable<T = string>(marbles: string, values?: { [marble: string]: T }, error?: any): HotObservable<T> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/testing/TestScheduler.ts:      toBe(marbles: string, values?: any, errorValue?: any) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/testing/TestScheduler.ts:    values?: any,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/testing/TestScheduler.ts:    errorValue?: any,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/testing/TestScheduler.ts:        ? (x: any) => x
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/testing/TestScheduler.ts:        : (x: any) => {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/types.ts:  error: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/types.ts:  error?: (err: any) => void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/types.ts:  error: (err: any) => void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/types.ts:  error?: (err: any) => void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/types.ts:  error: (err: any) => void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/types.ts:export type Head<X extends readonly any[]> = ((...args: X) => any) extends (arg: infer U, ...rest: any[]) => any ? U : never;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/types.ts:export type Tail<X extends readonly any[]> = ((...args: X) => any) extends (arg: any, ...rest: infer U) => any ? U : never;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Operator.ts:  call(subscriber: Subscriber<R>, source: any): TeardownLogic;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subscriber.ts:  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subscriber.ts:  error(err?: any): void {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subscriber.ts:  protected _error(err: any): void {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subscriber.ts:function bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subscriber.ts:  error(err: any): void {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subscriber.ts:    error?: ((e?: any) => void) | null,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subscriber.ts:      let context: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subscriber.ts:function handleUnhandledError(error: any) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subscriber.ts:function defaultErrorHandler(err: any) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Observable.ts:  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Observable.ts:  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Observable.ts:    error?: ((error: any) => void) | null,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Observable.ts:        (err: any) => reject(err),
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Observable.ts:function isObserver<T>(value: any): value is Observer<T> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Observable.ts:function isSubscriber<T>(value: any): value is Subscriber<T> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Notification.ts:  constructor(kind: 'E', value: undefined, error: any);
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Notification.ts:  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Notification.ts:  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Notification.ts:  do(next: (value: T) => void, error: (err: any) => void): void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Notification.ts:  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Notification.ts:  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Notification.ts:  accept(next: (value: T) => void, error: (err: any) => void): void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Notification.ts:  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Notification.ts:  static createError(err?: any) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subject.ts:  thrownError: any = null;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subject.ts:  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subject.ts:  error(err: any) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subject.ts:    const observable: any = new Observable<T>();
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subject.ts:  error(err: any) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/NotificationFactories.ts:export function errorNotification(error: any): ErrorNotification {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/NotificationFactories.ts:export function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/connectable.ts:  const result: any = new Observable<T>((subscriber) => {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: any[]) => void,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  resultSelector: (...args: any[]) => any,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:): (...args: any[]) => Observable<any>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: [...any[], (err: any, ...res: any) => void]) => void,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  resultSelector?: ((...args: any[]) => any) | SchedulerLike,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:): (...args: any[]) => Observable<any> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/throwError.ts: *   const error: any = new Error(`This is error number ${ ++errorCount }`);
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(error: any): Observable<never>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  resultSelector?: (...args: any[]) => T
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(handler: Function): any} addHandler A function that takes
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(handler: Function, token?: any): void} [removeHandler] A function that
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(...args: any): T} [project] A function to
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  resultSelector?: (...args: any[]) => T
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:export type NodeEventHandler = (...args: any[]) => void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (...args: any[]) => R
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (...args: any[]) => R
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (value: T, ...args: any[]) => R
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:  target: any,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:  options?: EventListenerOptions | ((...args: any[]) => T),
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector?: (...args: any[]) => T
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:function toCommonHandlerRegistry(target: any, eventName: string) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isEventTarget(target: any): target is HasEventTargetAddRemove<any> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/zip.ts:                  const result: any = buffers.map((buffer) => buffer.shift()!);
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/innerFrom.ts:export function fromInteropObservable<T>(obj: any) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/innerFrom.ts:        (err: any) => subscriber.error(err)
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/forkJoin.ts:export function forkJoin(...args: any[]): Observable<any> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallback.ts:  callbackFunc: (...args: any[]) => void,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallback.ts:  resultSelector: (...args: any[]) => any,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallback.ts:): (...args: any[]) => Observable<any>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallback.ts:  callbackFunc: (...args: [...any[], (...res: any) => void]) => void,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallback.ts:  resultSelector?: ((...args: any[]) => any) | SchedulerLike,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallback.ts:): (...args: any[]) => Observable<unknown> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/combineLatest.ts:export function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/combineLatest.ts:  valueTransform: (values: any[]) => any = identity
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/pairs.ts:  n: number | bigint | boolean | ((...args: any[]) => any) | symbol,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/pairs.ts:export function pairs(obj: any, scheduler?: SchedulerLike) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/dom/WebSocketSubject.ts:  serializer: (value: any) => JSON.stringify(value),
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/dom/fetch.ts:    const handleError = (err: any) => {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  callbackFunc: any,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  resultSelector?: any,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:): (...args: any[]) => Observable<unknown> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:      return function (this: any, ...args: any[]) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:    return function (this: any, ...args: any[]) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  return function (this: any, ...args: any[]): Observable<any> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:            (...results: any[]) => {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/concat.ts:export function concat(...args: any[]): Observable<unknown> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/partition.ts:  predicate: (this: any, value: T, index: number) => boolean,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/partition.ts:  thisArg?: any
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subscription.ts:    let errors: any[] | undefined;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subscription.ts:export function isSubscription(value: any): value is Subscription {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/config.ts:  onUnhandledError: ((err: any) => void) | null;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:  post<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:  put<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:  patch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPost<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPut<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPatch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:      const addProgressEvent = (target: any, type: string, direction: AjaxDirection) => {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:        [LOADSTART, PROGRESS].forEach((type) => xhr.upload.addEventListener(type, (e: any) => progressSubscriber?.next?.(e)));
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function extractContentTypeAndMaybeSerializeBody(body: any, headers: Record<string, string>) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function toStringCheck(obj: any, name: string): boolean {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function isArrayBuffer(body: any): body is ArrayBuffer {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function isFile(body: any): body is File {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function isBlob(body: any): body is Blob {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function isArrayBufferView(body: any): body is ArrayBufferView {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function isFormData(body: any): body is FormData {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function isURLSearchParams(body: any): body is URLSearchParams {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function isReadableStream(body: any): body is ReadableStream {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/errors.ts:  response: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/errors.ts:    function AjaxErrorImpl(this: any, message: string, xhr: XMLHttpRequest, request: AjaxRequest) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/errors.ts:      let response: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/errors.ts:  function AjaxTimeoutErrorImpl(this: any, xhr: XMLHttpRequest, request: AjaxRequest) {
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/getXHRResponse.ts:        const ieXHR: any = xhr;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/getXHRResponse.ts:        const ieXHR: any = xhr;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/types.ts:  body?: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/types.ts:  body?: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/dist/vocabularies/validation/const.d.ts:    allowedValue: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/dist/vocabularies/validation/enum.d.ts:    allowedValues: any[];
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/dist/types/json-schema.d.ts:    [keyword: string]: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/dist/types/index.d.ts:        [K in T]: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/dist/types/index.d.ts:    (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/dist/types/index.d.ts:export type MacroKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaCxt) => AnySchema;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/dist/types/index.d.ts:export type CompileKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaObjCxt) => DataValidateFunction;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/dist/types/index.d.ts:    (schema: any, data: any, parentSchema?: AnySchemaObject, dataCxt?: DataValidationCxt): boolean | Promise<any>;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/dist/types/index.d.ts:    schema: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/dist/core.d.ts:    [prop: string]: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/dist/compile/validate/index.d.ts:    schema: any;
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/lib/vocabularies/validation/const.ts:export type ConstError = ErrorObject<"const", {allowedValue: any}>
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/lib/vocabularies/validation/enum.ts:export type EnumError = ErrorObject<"enum", {allowedValues: any[]}, any[] | {$data: string}>
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/lib/types/json-schema.ts:  [keyword: string]: any
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/lib/types/index.ts:  parentData: {[K in T]: any} // object or array
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/lib/types/index.ts:  (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/lib/types/index.ts:  schema: any,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/lib/types/index.ts:  schema: any,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/lib/types/index.ts:    schema: any,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/lib/types/index.ts:    data: any,
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/lib/types/index.ts:  schema: any // TODO
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/lib/core.ts:  [prop: string]: any
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/lib/core.ts:  cache?: any
./backend/newpennine-api/node_modules/@angular-devkit/core/node_modules/ajv/lib/compile/validate/index.ts:  schema: any // keyword value in the schema
./backend/newpennine-api/node_modules/@angular-devkit/core/src/utils/partially-ordered-set.d.ts:    forEach(callbackfn: (value: T, value2: T, set: PartiallyOrderedSet<T>) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/@angular-devkit/core/src/utils/lang.d.ts:export declare function isPromise(obj: any): obj is Promise<any>;
./backend/newpennine-api/node_modules/@angular-devkit/core/src/utils/literals.d.ts:    (template: TemplateStringsArray, ...substitutions: any[]): R;
./backend/newpennine-api/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function oneLine(strings: TemplateStringsArray, ...values: any[]): string;
./backend/newpennine-api/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function stripIndent(strings: TemplateStringsArray, ...values: any[]): string;
./backend/newpennine-api/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function stripIndents(strings: TemplateStringsArray, ...values: any[]): string;
./backend/newpennine-api/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function trimNewlines(strings: TemplateStringsArray, ...values: any[]): string;
./backend/newpennine-api/node_modules/@angular-devkit/schematics-cli/schematic/files/src/my-other-schematic/index.ts:export default function (options: any): Rule {
./backend/newpennine-api/node_modules/@angular-devkit/schematics-cli/schematic/files/src/my-full-schematic/index.ts:export default function (options: any): Rule {
./backend/newpennine-api/node_modules/@angular-devkit/schematics-cli/schematic/files/src/my-schematic/index.ts:export function mySchematic(options: any): Rule {
./backend/newpennine-api/node_modules/@angular-devkit/schematics-cli/schematic/schema.d.ts:    [property: string]: any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics-cli/blank/schema.d.ts:    [property: string]: any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subscription.d.ts:export declare function isSubscription(value: any): value is Subscription;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/catchError.d.ts:export declare function catchError<T, O extends ObservableInput<any>>(selector: (err: any, caught: Observable<T>) => O): OperatorFunction<T, T | ObservedValueOf<O>>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/share.d.ts:    resetOnError?: boolean | ((error: any) => ObservableInput<any>);
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/every.d.ts:export declare function every<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/partition.d.ts:export declare function partition<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): UnaryFunction<Observable<T>, [Observable<T>, Observable<T>]>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/materialize.d.ts: * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/tap.d.ts:export declare function tap<T>(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): MonoTypeOperatorFunction<T>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/find.d.ts:export declare function createFind<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean, thisArg: any, emit: 'value' | 'index'): (source: Observable<T>, subscriber: Subscriber<any>) => void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/OperatorSubscriber.d.ts:export declare function createOperatorSubscriber<T>(destination: Subscriber<any>, onNext?: (value: T) => void, onComplete?: () => void, onError?: (err: any) => void, onFinalize?: () => void): Subscriber<T>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/OperatorSubscriber.d.ts:    constructor(destination: Subscriber<any>, onNext?: (value: T) => void, onComplete?: () => void, onError?: (err: any) => void, onFinalize?: (() => void) | undefined, shouldUnsubscribe?: (() => boolean) | undefined);
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/joinAllInternals.d.ts:export declare function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R): import("../types").UnaryFunction<Observable<ObservableInput<T>>, unknown>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/findIndex.d.ts:export declare function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/retry.d.ts:    delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isReadableStreamLike.d.ts:export declare function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isPromise.d.ts:export declare function isPromise(value: any): value is PromiseLike<any>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popScheduler(args: any[]): SchedulerLike | undefined;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popNumber(args: any[], defaultValue: number): number;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/createErrorClass.d.ts:export declare function createErrorClass<T>(createImpl: (_super: any) => any): T;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/errorContext.d.ts:export declare function captureError(err: any): void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/not.d.ts:export declare function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isFunction.d.ts:export declare function isFunction(value: any): value is (...args: any[]) => any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isAsyncIterable.d.ts:export declare function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/throwUnobservableError.d.ts:export declare function createInvalidObservableTypeError(input: any): TypeError;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/lift.d.ts:export declare function hasLift(source: any): source is {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isObservable.d.ts:export declare function isObservable(obj: any): obj is Observable<unknown>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/applyMixins.d.ts:export declare function applyMixins(derivedCtor: any, baseCtors: any[]): void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/reportUnhandledError.d.ts:export declare function reportUnhandledError(err: any): void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isScheduler.d.ts:export declare function isScheduler(value: any): value is SchedulerLike;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isArrayLike.d.ts:export declare const isArrayLike: <T>(x: any) => x is ArrayLike<T>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/createObject.d.ts:export declare function createObject(keys: string[], values: any[]): any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isIterable.d.ts:export declare function isIterable(input: any): input is Iterable<any>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isInteropObservable.d.ts:export declare function isInteropObservable(input: any): input is InteropObservable<any>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isDate.d.ts:export declare function isValidDate(value: any): value is Date;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/UnsubscriptionError.d.ts:    readonly errors: any[];
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/UnsubscriptionError.d.ts:    new (errors: any[]): UnsubscriptionError;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:    error: any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:    error?: (err: any) => void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:    error: (err: any) => void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:    error?: (err: any) => void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:    error: (err: any) => void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:export declare type Head<X extends readonly any[]> = ((...args: X) => any) extends (arg: infer U, ...rest: any[]) => any ? U : never;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:export declare type Tail<X extends readonly any[]> = ((...args: X) => any) extends (arg: any, ...rest: infer U) => any ? U : never;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/config.d.ts:    onUnhandledError: ((err: any) => void) | null;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay?: number): TimerHandle;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay?: number): TimerHandle | undefined;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected _execute(state: T, delay: number): any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/QueueAction.d.ts:    execute(state: T, delay: number): any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/immediateProvider.d.ts:declare type SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/intervalProvider.d.ts:declare type SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/AsyncAction.d.ts:    execute(state: T, delay: number): any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/AsyncAction.d.ts:    protected _execute(state: T, _delay: number): any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/timeoutProvider.d.ts:declare type SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:export declare type observableToBeFn = (marbles: string, values?: any, errorValue?: any) => void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    assertDeepEqual: (actual: any, expected: any) => boolean | void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    constructor(assertDeepEqual: (actual: any, expected: any) => boolean | void);
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    }, error?: any): ColdObservable<T>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    }, error?: any): HotObservable<T>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:        toBe(marbles: string, values?: any, errorValue?: any): void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    static parseMarbles(marbles: string, values?: any, errorValue?: any, materializeInnerObservables?: boolean, runMode?: boolean): TestMessage[];
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Operator.d.ts:    call(subscriber: Subscriber<R>, source: any): TeardownLogic;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    readonly error?: any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    constructor(kind: 'E', value: undefined, error: any);
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    do(next: (value: T) => void, error: (err: any) => void): void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    accept(next: (value: T) => void, error: (err: any) => void): void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    static createError(err?: any): Notification<never> & ErrorNotification;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/pairs.d.ts:export declare function pairs(n: number | bigint | boolean | ((...args: any[]) => any) | symbol, scheduler?: SchedulerLike): Observable<[never, never]>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/bindCallback.d.ts:export declare function bindCallback(callbackFunc: (...args: any[]) => void, resultSelector: (...args: any[]) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/bindCallbackInternals.d.ts:export declare function bindCallbackInternals(isNodeStyle: boolean, callbackFunc: any, resultSelector?: any, scheduler?: SchedulerLike): (...args: any[]) => Observable<unknown>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/combineLatest.d.ts:export declare function combineLatestInit(observables: ObservableInput<any>[], scheduler?: SchedulerLike, valueTransform?: (values: any[]) => any): (subscriber: Subscriber<any>) => void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEventPattern.d.ts:export declare function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void): Observable<T>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEventPattern.d.ts:export declare function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare type NodeEventHandler = (...args: any[]) => void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:    on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:    off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<R>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string, resultSelector: (...args: any[]) => R): Observable<R>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<R>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string, resultSelector: (...args: any[]) => R): Observable<R>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<T, R>(target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>, eventName: string, resultSelector: (value: T, ...args: any[]) => R): Observable<R>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts: *   const error: any = new Error(`This is error number ${ ++errorCount }`);
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts:export declare function throwError(error: any): Observable<never>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts:export declare function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/innerFrom.d.ts:export declare function fromInteropObservable<T>(obj: any): Observable<T>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/bindNodeCallback.d.ts:export declare function bindNodeCallback(callbackFunc: (...args: any[]) => void, resultSelector: (...args: any[]) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/bindNodeCallback.d.ts:export declare function bindNodeCallback<A extends readonly unknown[], R extends readonly unknown[]>(callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void, schedulerLike?: SchedulerLike): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Observable.d.ts:    static create: (...args: any[]) => any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Observable.d.ts:    subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subject.d.ts:    thrownError: any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subject.d.ts:    static create: (...args: any[]) => any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subject.d.ts:    error(err: any): void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subject.d.ts:    error(err: any): void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    error(err?: any): void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    protected _error(err: any): void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    constructor(observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null, error?: ((e?: any) => void) | null, complete?: (() => void) | null);
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/ajax/errors.d.ts:    response: any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    post<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    put<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    patch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/ajax/types.d.ts:    body?: any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/ajax/types.d.ts:    body?: any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/ajax/getXHRResponse.d.ts:export declare function getXHRResponse(xhr: XMLHttpRequest): any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/catchError.ts:  selector: (err: any, caught: Observable<T>) => O
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/catchError.ts:  selector: (err: any, caught: Observable<T>) => O
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/groupBy.ts:  elementOrOptions?: ((value: any) => any) | void | BasicGroupByOptions<K, T> | GroupByOptionsWithElement<K, R, T>,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/groupBy.ts:    let element: ((value: any) => any) | void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/groupBy.ts:      element = elementOrOptions as ((value: any) => any);
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/groupBy.ts:    const handleError = (err: any) => notify((consumer) => consumer.error(err));
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/groupBy.ts:      const result: any = new Observable<T>((groupSubscriber) => {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/joinAllInternals.ts:export function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/scanInternals.ts:    let state: any = seed;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/find.ts:  thisArg?: any
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/find.ts:  thisArg: any,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/filter.ts:export function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/windowTime.ts:export function windowTime<T>(windowTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, Observable<T>> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/share.ts:  resetOnError?: boolean | ((error: any) => ObservableInput<any>);
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/tap.ts:  error?: ((error: any) => void) | null,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/tap.ts:  error?: ((e: any) => void) | null,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/materialize.ts: * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/retry.ts:  delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/exhaustMap.ts:      source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b: any, ii: any) => resultSelector(a, b, i, ii)))));
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/map.ts:export function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/findIndex.ts:export function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/findIndex.ts:  thisArg?: any
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/every.ts:  thisArg: any
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/every.ts:  thisArg?: any
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/windowWhen.ts:    const handleError = (err: any) => {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/pluck.ts:    let currentProp: any = x;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/bufferTime.ts:export function bufferTime<T>(bufferTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, T[]> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/timeout.ts:    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/combineLatest.ts:export function combineLatest<T, R>(...args: (ObservableInput<any> | ((...values: any[]) => R))[]): OperatorFunction<T, unknown> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/windowToggle.ts:    const handleError = (err: any) => {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/race.ts:export function race<T>(...args: any[]): OperatorFunction<T, unknown> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:  onError?: (err: any) => void,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:    onError?: (err: any) => void,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:      ? function (this: OperatorSubscriber<T>, err: any) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/concat.ts:export function concat<T, R>(...args: any[]): OperatorFunction<T, R> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/reduce.ts:export function reduce<V, A>(accumulator: (acc: V | A, value: V, index: number) => A, seed?: any): OperatorFunction<V, V | A> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/window.ts:    const errorHandler = (err: any) => {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/mergeMap.ts:    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/partition.ts:  thisArg?: any
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/toArray.ts:const arrReducer = (arr: any[], value: any) => (arr.push(value), arr);
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/withLatestFrom.ts:export function withLatestFrom<T, R>(...inputs: any[]): OperatorFunction<T, R | any[]> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/withLatestFrom.ts:  const project = popResultSelector(inputs) as ((...args: any[]) => R) | undefined;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/distinctUntilChanged.ts:function defaultCompare(a: any, b: any) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/EmptyError.ts:export const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/pipe.ts:    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/reportUnhandledError.ts:export function reportUnhandledError(err: any) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isFunction.ts:export function isFunction(value: any): value is (...args: any[]) => any {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isInteropObservable.ts:export function isInteropObservable(input: any): input is InteropObservable<any> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isPromise.ts:export function isPromise(value: any): value is PromiseLike<any> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isDate.ts:export function isValidDate(value: any): value is Date {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isAsyncIterable.ts:export function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/args.ts:export function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/args.ts:export function popScheduler(args: any[]): SchedulerLike | undefined {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/args.ts:export function popNumber(args: any[], defaultValue: number): number {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isReadableStreamLike.ts:export function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/throwUnobservableError.ts:export function createInvalidObservableTypeError(input: any) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/SequenceError.ts:    function SequenceErrorImpl(this: any, message: string) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/createErrorClass.ts:export function createErrorClass<T>(createImpl: (_super: any) => any): T {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/createErrorClass.ts:  const _super = (instance: any) => {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/not.ts:export function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isArrayLike.ts:export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:  readonly errors: any[];
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:  new (errors: any[]): UnsubscriptionError;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isScheduler.ts:export function isScheduler(value: any): value is SchedulerLike {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/errorContext.ts:let context: { errorThrown: boolean; error: any } | null = null;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/errorContext.ts:export function captureError(err: any) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts:    function ObjectUnsubscribedErrorImpl(this: any) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/Immediate.ts:const activeHandles: { [key: number]: any } = {};
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/applyMixins.ts:export function applyMixins(derivedCtor: any, baseCtors: any[]) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/lift.ts:export function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/createObject.ts:export function createObject(keys: string[], values: any[]) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/argsArgArrayOrObject.ts:function isPOJO(obj: any): obj is object {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts:    function ArgumentOutOfRangeErrorImpl(this: any) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isIterable.ts:export function isIterable(input: any): input is Iterable<any> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/NotFoundError.ts:    function NotFoundErrorImpl(this: any, message: string) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isObservable.ts:export function isObservable(obj: any): obj is Observable<unknown> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts:type SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:  public execute(state: T, delay: number): any {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:  protected _execute(state: T, _delay: number): any {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:    let errorValue: any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts:    let error: any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:    let error: any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected _execute(state: T, delay: number): any {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts:    let error: any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts:    let error: any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/QueueAction.ts:  public execute(state: T, delay: number): any {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/intervalProvider.ts:type SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/immediateProvider.ts:type SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  actual?: any[];
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  expected?: any[];
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:export type observableToBeFn = (marbles: string, values?: any, errorValue?: any) => void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  constructor(public assertDeepEqual: (actual: any, expected: any) => boolean | void) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  createColdObservable<T = string>(marbles: string, values?: { [marble: string]: T }, error?: any): ColdObservable<T> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  createHotObservable<T = string>(marbles: string, values?: { [marble: string]: T }, error?: any): HotObservable<T> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:      toBe(marbles: string, values?: any, errorValue?: any) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:    values?: any,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:    errorValue?: any,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:        ? (x: any) => x
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:        : (x: any) => {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/types.ts:  error: any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/types.ts:  error?: (err: any) => void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/types.ts:  error: (err: any) => void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/types.ts:  error?: (err: any) => void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/types.ts:  error: (err: any) => void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/types.ts:export type Head<X extends readonly any[]> = ((...args: X) => any) extends (arg: infer U, ...rest: any[]) => any ? U : never;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/types.ts:export type Tail<X extends readonly any[]> = ((...args: X) => any) extends (arg: any, ...rest: infer U) => any ? U : never;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Operator.ts:  call(subscriber: Subscriber<R>, source: any): TeardownLogic;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:  error(err?: any): void {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:  protected _error(err: any): void {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:function bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:  error(err: any): void {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:    error?: ((e?: any) => void) | null,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:      let context: any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:function handleUnhandledError(error: any) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:function defaultErrorHandler(err: any) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Observable.ts:  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Observable.ts:  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Observable.ts:    error?: ((error: any) => void) | null,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Observable.ts:        (err: any) => reject(err),
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Observable.ts:function isObserver<T>(value: any): value is Observer<T> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Observable.ts:function isSubscriber<T>(value: any): value is Subscriber<T> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  constructor(kind: 'E', value: undefined, error: any);
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  do(next: (value: T) => void, error: (err: any) => void): void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  accept(next: (value: T) => void, error: (err: any) => void): void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  static createError(err?: any) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subject.ts:  thrownError: any = null;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subject.ts:  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subject.ts:  error(err: any) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subject.ts:    const observable: any = new Observable<T>();
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subject.ts:  error(err: any) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/NotificationFactories.ts:export function errorNotification(error: any): ErrorNotification {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/NotificationFactories.ts:export function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/connectable.ts:  const result: any = new Observable<T>((subscriber) => {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: any[]) => void,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  resultSelector: (...args: any[]) => any,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:): (...args: any[]) => Observable<any>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: [...any[], (err: any, ...res: any) => void]) => void,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  resultSelector?: ((...args: any[]) => any) | SchedulerLike,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:): (...args: any[]) => Observable<any> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/throwError.ts: *   const error: any = new Error(`This is error number ${ ++errorCount }`);
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(error: any): Observable<never>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  resultSelector?: (...args: any[]) => T
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(handler: Function): any} addHandler A function that takes
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(handler: Function, token?: any): void} [removeHandler] A function that
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(...args: any): T} [project] A function to
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  resultSelector?: (...args: any[]) => T
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:export type NodeEventHandler = (...args: any[]) => void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (...args: any[]) => R
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (...args: any[]) => R
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (value: T, ...args: any[]) => R
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  target: any,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  options?: EventListenerOptions | ((...args: any[]) => T),
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector?: (...args: any[]) => T
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:function toCommonHandlerRegistry(target: any, eventName: string) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isEventTarget(target: any): target is HasEventTargetAddRemove<any> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/zip.ts:                  const result: any = buffers.map((buffer) => buffer.shift()!);
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/innerFrom.ts:export function fromInteropObservable<T>(obj: any) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/innerFrom.ts:        (err: any) => subscriber.error(err)
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/forkJoin.ts:export function forkJoin(...args: any[]): Observable<any> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:  callbackFunc: (...args: any[]) => void,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:  resultSelector: (...args: any[]) => any,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:): (...args: any[]) => Observable<any>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:  callbackFunc: (...args: [...any[], (...res: any) => void]) => void,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:  resultSelector?: ((...args: any[]) => any) | SchedulerLike,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:): (...args: any[]) => Observable<unknown> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/combineLatest.ts:export function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/combineLatest.ts:  valueTransform: (values: any[]) => any = identity
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/pairs.ts:  n: number | bigint | boolean | ((...args: any[]) => any) | symbol,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/pairs.ts:export function pairs(obj: any, scheduler?: SchedulerLike) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/dom/WebSocketSubject.ts:  serializer: (value: any) => JSON.stringify(value),
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/dom/fetch.ts:    const handleError = (err: any) => {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  callbackFunc: any,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  resultSelector?: any,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:): (...args: any[]) => Observable<unknown> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:      return function (this: any, ...args: any[]) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:    return function (this: any, ...args: any[]) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  return function (this: any, ...args: any[]): Observable<any> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:            (...results: any[]) => {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/concat.ts:export function concat(...args: any[]): Observable<unknown> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/partition.ts:  predicate: (this: any, value: T, index: number) => boolean,
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/partition.ts:  thisArg?: any
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscription.ts:    let errors: any[] | undefined;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscription.ts:export function isSubscription(value: any): value is Subscription {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/config.ts:  onUnhandledError: ((err: any) => void) | null;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:  post<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:  put<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:  patch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPost<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPut<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPatch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:      const addProgressEvent = (target: any, type: string, direction: AjaxDirection) => {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:        [LOADSTART, PROGRESS].forEach((type) => xhr.upload.addEventListener(type, (e: any) => progressSubscriber?.next?.(e)));
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function extractContentTypeAndMaybeSerializeBody(body: any, headers: Record<string, string>) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function toStringCheck(obj: any, name: string): boolean {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isArrayBuffer(body: any): body is ArrayBuffer {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isFile(body: any): body is File {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isBlob(body: any): body is Blob {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isArrayBufferView(body: any): body is ArrayBufferView {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isFormData(body: any): body is FormData {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isURLSearchParams(body: any): body is URLSearchParams {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isReadableStream(body: any): body is ReadableStream {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/errors.ts:  response: any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/errors.ts:    function AjaxErrorImpl(this: any, message: string, xhr: XMLHttpRequest, request: AjaxRequest) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/errors.ts:      let response: any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/errors.ts:  function AjaxTimeoutErrorImpl(this: any, xhr: XMLHttpRequest, request: AjaxRequest) {
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/getXHRResponse.ts:        const ieXHR: any = xhr;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/getXHRResponse.ts:        const ieXHR: any = xhr;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/types.ts:  body?: any;
./backend/newpennine-api/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/types.ts:  body?: any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:export declare function toUnixTimestamp(time: any): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    ReadStream: new (...args: any[]) => IReadStream;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    WriteStream: new (...args: any[]) => IWriteStream;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:        Node: new (...args: any[]) => Node;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:        Link: new (...args: any[]) => Link;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:        File: new (...args: any[]) => File;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    genRndStr(): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    open(path: PathLike, flags: TFlags, /* ... */ callback: TCallback<number>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    open(path: PathLike, flags: TFlags, mode: TMode, callback: TCallback<number>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    readFile(id: TFileId, callback: TCallback<TDataOut>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    readFile(id: TFileId, options: IReadFileOptions | string, callback: TCallback<TDataOut>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    write(fd: number, buffer: Buffer | Uint8Array, callback: (...args: any[]) => void): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    write(fd: number, buffer: Buffer | Uint8Array, offset: number, callback: (...args: any[]) => void): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    write(fd: number, buffer: Buffer | Uint8Array, offset: number, length: number, callback: (...args: any[]) => void): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    write(fd: number, buffer: Buffer | Uint8Array, offset: number, length: number, position: number, callback: (...args: any[]) => void): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    write(fd: number, str: string, callback: (...args: any[]) => void): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    write(fd: number, str: string, position: number, callback: (...args: any[]) => void): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    write(fd: number, str: string, position: number, encoding: BufferEncoding, callback: (...args: any[]) => void): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    writeFile(id: TFileId, data: TData, callback: TCallback<void>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    writeFile(id: TFileId, data: TData, options: IWriteFileOptions | string, callback: TCallback<void>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    copyFile(src: PathLike, dest: PathLike, callback: TCallback<void>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    copyFile(src: PathLike, dest: PathLike, flags: TFlagsCopy, callback: TCallback<void>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    symlink(target: PathLike, path: PathLike, callback: TCallback<void>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    symlink(target: PathLike, path: PathLike, type: symlink.Type, callback: TCallback<void>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    realpath(path: PathLike, callback: TCallback<TDataOut>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    realpath(path: PathLike, options: IRealpathOptions | string, callback: TCallback<TDataOut>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    access(path: PathLike, callback: TCallback<void>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    access(path: PathLike, mode: number, callback: TCallback<void>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    appendFile(id: TFileId, data: TData, callback: TCallback<void>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    appendFile(id: TFileId, data: TData, options: IAppendFileOptions | string, callback: TCallback<void>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    readdir(path: PathLike, callback: TCallback<TDataOut[] | Dirent[]>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    readdir(path: PathLike, options: IReaddirOptions | string, callback: TCallback<TDataOut[] | Dirent[]>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    readlink(path: PathLike, callback: TCallback<TDataOut>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    readlink(path: PathLike, options: IOptions, callback: TCallback<TDataOut>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    ftruncate(fd: number, callback: TCallback<void>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    ftruncate(fd: number, len: number, callback: TCallback<void>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    truncate(id: TFileId, callback: TCallback<void>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    truncate(id: TFileId, len: number, callback: TCallback<void>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    mkdir(path: PathLike, callback: TCallback<void>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    }), callback: TCallback<void>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    }, callback: TCallback<string>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    mkdir(path: PathLike, mode: TMode | IMkdirOptions, callback: TCallback<string>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    mkdirp(path: PathLike, callback: TCallback<string>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    mkdirp(path: PathLike, mode: TMode, callback: TCallback<string>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    mkdtemp(prefix: string, callback: TCallback<void>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    mkdtemp(prefix: string, options: IOptions, callback: TCallback<void>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    rmdir(path: PathLike, callback: TCallback<void>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    rmdir(path: PathLike, options: IRmdirOptions, callback: TCallback<void>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    timeoutRef?: any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    new (path: PathLike, options: IReadStreamOptions): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    open(): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    close(callback: TCallback<void>): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    new (path: PathLike, options: IWriteStreamOptions): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    open(): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    close(): any;
./backend/newpennine-api/node_modules/memfs/lib/volume.d.ts:    _timer: any;
./backend/newpennine-api/node_modules/memfs/lib/internal/errors.d.ts:    generatedMessage: any;
./backend/newpennine-api/node_modules/memfs/lib/internal/errors.d.ts:    name: any;
./backend/newpennine-api/node_modules/memfs/lib/internal/errors.d.ts:    code: any;
./backend/newpennine-api/node_modules/memfs/lib/internal/errors.d.ts:    actual: any;
./backend/newpennine-api/node_modules/memfs/lib/internal/errors.d.ts:    expected: any;
./backend/newpennine-api/node_modules/memfs/lib/internal/errors.d.ts:    operator: any;
./backend/newpennine-api/node_modules/memfs/lib/internal/errors.d.ts:    constructor(options: any);
./backend/newpennine-api/node_modules/memfs/lib/internal/errors.d.ts:declare function message(key: any, args: any): any;
./backend/newpennine-api/node_modules/memfs/lib/internal/errors.d.ts:declare function E(sym: any, val: any): void;
./backend/newpennine-api/node_modules/memfs/lib/internal/errors.d.ts:    new (key: any, ...args: any[]): {
./backend/newpennine-api/node_modules/memfs/lib/internal/errors.d.ts:        [x: string]: any;
./backend/newpennine-api/node_modules/memfs/lib/internal/errors.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/memfs/lib/internal/errors.d.ts:    new (key: any, ...args: any[]): {
./backend/newpennine-api/node_modules/memfs/lib/internal/errors.d.ts:        [x: string]: any;
./backend/newpennine-api/node_modules/memfs/lib/internal/errors.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/memfs/lib/internal/errors.d.ts:    new (key: any, ...args: any[]): {
./backend/newpennine-api/node_modules/memfs/lib/internal/errors.d.ts:        [x: string]: any;
./backend/newpennine-api/node_modules/memfs/lib/internal/errors.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/memfs/lib/setImmediate.d.ts:type TSetImmediate = (callback: (...args: any[]) => void, args?: any) => void;
./backend/newpennine-api/node_modules/memfs/lib/promises.d.ts:    FileHandle: any;
./backend/newpennine-api/node_modules/memfs/lib/process.d.ts:    nextTick: (callback: (...args: any[]) => void, ...args: any[]) => void;
./backend/newpennine-api/node_modules/memfs/lib/setTimeoutUnref.d.ts:export type TSetTimeout = (callback: (...args: any[]) => void, time?: number, args?: any[]) => any;
./backend/newpennine-api/node_modules/memfs/lib/setTimeoutUnref.d.ts:declare function setTimeoutUnref(callback: any, time?: any, args?: any): object;
./backend/newpennine-api/node_modules/memfs/lib/index.d.ts:    Stats: new (...args: any[]) => Stats;
./backend/newpennine-api/node_modules/memfs/lib/index.d.ts:    Dirent: new (...args: any[]) => Dirent;
./backend/newpennine-api/node_modules/memfs/lib/index.d.ts:    ReadStream: new (...args: any[]) => IReadStream;
./backend/newpennine-api/node_modules/memfs/lib/index.d.ts:    WriteStream: new (...args: any[]) => IWriteStream;
./backend/newpennine-api/node_modules/memfs/lib/index.d.ts:    _toUnixTimestamp: any;
./backend/newpennine-api/node_modules/memfs/lib/volume-localstorage.d.ts:    setItem(key: string, json: any): any;
./backend/newpennine-api/node_modules/memfs/lib/volume-localstorage.d.ts:    getItem(key: string): any;
./backend/newpennine-api/node_modules/memfs/lib/volume-localstorage.d.ts:    removeItem(key: string): any;
./backend/newpennine-api/node_modules/memfs/lib/volume-localstorage.d.ts:    constructor(obj: any);
./backend/newpennine-api/node_modules/memfs/lib/volume-localstorage.d.ts:    setItem(key: string, json: any): void;
./backend/newpennine-api/node_modules/memfs/lib/volume-localstorage.d.ts:    getItem(key: string): any;
./backend/newpennine-api/node_modules/memfs/lib/volume-localstorage.d.ts:export declare function createVolume(namespace: string, LS?: IStore | object): new (...args: any[]) => Volume;
./backend/newpennine-api/node_modules/@eslint/config-array/dist/esm/index.d.ts:    [x: symbol]: (config: any) => any;
./backend/newpennine-api/node_modules/@eslint/config-array/dist/esm/index.d.ts:        schema?: any;
./backend/newpennine-api/node_modules/@eslint/config-array/dist/esm/index.d.ts:    get ignores(): any[];
./backend/newpennine-api/node_modules/@eslint/config-array/dist/esm/index.d.ts:    normalize(context?: any): Promise<ConfigArray>;
./backend/newpennine-api/node_modules/@eslint/config-array/dist/esm/index.d.ts:    normalizeSync(context?: any): ConfigArray;
./backend/newpennine-api/node_modules/@eslint/config-array/dist/esm/index.d.ts:        config?: any;
./backend/newpennine-api/node_modules/@eslint/config-array/dist/esm/index.d.ts:    getConfig(filePath: string): any | undefined;
./backend/newpennine-api/node_modules/@eslint/core/dist/esm/types.d.ts:export type RuleVisitor = Record<string, ((...args: any[]) => void) | undefined>;
./backend/newpennine-api/node_modules/@eslint/core/dist/esm/types.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@eslint/core/dist/esm/types.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@eslint/object-schema/dist/esm/types.d.ts:    merge: BuiltInMergeStrategy | ((target: any, source: any) => any);
./backend/newpennine-api/node_modules/@eslint/object-schema/dist/esm/types.d.ts:    validate: BuiltInValidationStrategy | ((value: any) => void);
./backend/newpennine-api/node_modules/@eslint/object-schema/dist/esm/types.ts:	merge: BuiltInMergeStrategy | ((target: any, source: any) => any);
./backend/newpennine-api/node_modules/@eslint/object-schema/dist/esm/types.ts:	validate: BuiltInValidationStrategy | ((value: any) => void);
./backend/newpennine-api/node_modules/@eslint/object-schema/dist/esm/index.d.ts:    static overwrite(value1: any, value2: any): any;
./backend/newpennine-api/node_modules/@eslint/object-schema/dist/esm/index.d.ts:    static replace(value1: any, value2: any): any;
./backend/newpennine-api/node_modules/@eslint/object-schema/dist/esm/index.d.ts:    static assign(value1: any, value2: any): any;
./backend/newpennine-api/node_modules/@eslint/object-schema/dist/esm/index.d.ts:    merge(...objects: any[]): any;
./backend/newpennine-api/node_modules/@eslint/object-schema/dist/esm/index.d.ts:    validate(object: any): void;
./backend/newpennine-api/node_modules/@eslint/object-schema/dist/esm/index.d.ts:    static array(value: any): void;
./backend/newpennine-api/node_modules/@eslint/object-schema/dist/esm/index.d.ts:    static boolean(value: any): void;
./backend/newpennine-api/node_modules/@eslint/object-schema/dist/esm/index.d.ts:    static number(value: any): void;
./backend/newpennine-api/node_modules/@eslint/object-schema/dist/esm/index.d.ts:    static object(value: any): void;
./backend/newpennine-api/node_modules/@eslint/object-schema/dist/esm/index.d.ts:    static "object?"(value: any): void;
./backend/newpennine-api/node_modules/@eslint/object-schema/dist/esm/index.d.ts:    static string(value: any): void;
./backend/newpennine-api/node_modules/@eslint/object-schema/dist/esm/index.d.ts:    static "string!"(value: any): void;
./backend/newpennine-api/node_modules/@eslint/object-schema/dist/cjs/types.ts:	merge: BuiltInMergeStrategy | ((target: any, source: any) => any);
./backend/newpennine-api/node_modules/@eslint/object-schema/dist/cjs/types.ts:	validate: BuiltInValidationStrategy | ((value: any) => void);
./backend/newpennine-api/node_modules/call-bind-apply-helpers/index.d.ts:  T extends (this: any, ...args: any[]) => any,
./backend/newpennine-api/node_modules/call-bind-apply-helpers/index.d.ts:  const T extends (this: any, ...args: any[]) => any,
./backend/newpennine-api/node_modules/call-bind-apply-helpers/index.d.ts:  const T extends (this: any, ...args: any[]) => any,
./backend/newpennine-api/node_modules/@nestjs/jwt/dist/jwt.providers.d.ts:export declare function createJwtProvider(options: JwtModuleOptions): any[];
./backend/newpennine-api/node_modules/@nestjs/jwt/dist/interfaces/jwt-module-options.interface.d.ts:    useFactory?: (...args: any[]) => Promise<JwtModuleOptions> | JwtModuleOptions;
./backend/newpennine-api/node_modules/@nestjs/jwt/dist/interfaces/jwt-module-options.interface.d.ts:    inject?: any[];
./backend/newpennine-api/node_modules/@nestjs/jwt/node_modules/@types/jsonwebtoken/index.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@nestjs/core/middleware/utils.d.ts:export declare function isMiddlewareClass(middleware: any): middleware is Type<any>;
./backend/newpennine-api/node_modules/@nestjs/core/middleware/middleware-module.d.ts:    registerMiddleware(middlewareContainer: MiddlewareContainer, applicationRef: any): Promise<void>;
./backend/newpennine-api/node_modules/@nestjs/core/middleware/middleware-module.d.ts:    registerMiddlewareConfig(middlewareContainer: MiddlewareContainer, config: MiddlewareConfiguration, moduleKey: string, applicationRef: any): Promise<void>;
./backend/newpennine-api/node_modules/@nestjs/core/middleware/middleware-module.d.ts:    registerRouteMiddleware(middlewareContainer: MiddlewareContainer, routeInfo: RouteInfo, config: MiddlewareConfiguration, moduleKey: string, applicationRef: any): Promise<void>;
./backend/newpennine-api/node_modules/@nestjs/core/inspector/uuid-factory.d.ts:    static get(key?: string): any;
./backend/newpennine-api/node_modules/@nestjs/core/inspector/deterministic-uuid-registry.d.ts:    static get(str: string, inc?: number): any;
./backend/newpennine-api/node_modules/@nestjs/core/inspector/interfaces/serialized-graph-metadata.interface.d.ts:        error?: any;
./backend/newpennine-api/node_modules/@nestjs/core/repl/repl-logger.d.ts:    log(_message: any, context?: string): void;
./backend/newpennine-api/node_modules/@nestjs/core/repl/native-functions/get-relp-fn.d.ts:    action(token: string | symbol | Function | Type<any>): any;
./backend/newpennine-api/node_modules/@nestjs/core/repl/native-functions/resolve-repl-fn.d.ts:    action(token: string | symbol | Function | Type<any>, contextId: any): Promise<any>;
./backend/newpennine-api/node_modules/@nestjs/core/exceptions/base-exception-filter.d.ts:    isExceptionObject(err: any): err is Error;
./backend/newpennine-api/node_modules/@nestjs/core/exceptions/base-exception-filter.d.ts:    isHttpError(err: any): err is {
./backend/newpennine-api/node_modules/@nestjs/core/pipes/pipes-consumer.d.ts:        metatype: any;
./backend/newpennine-api/node_modules/@nestjs/core/pipes/pipes-consumer.d.ts:        type?: any;
./backend/newpennine-api/node_modules/@nestjs/core/pipes/pipes-consumer.d.ts:        data?: any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    protected instance?: any | undefined;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    constructor(instance?: any | undefined);
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    use(...args: any[]): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    get(handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    get(path: any, handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    post(handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    post(path: any, handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    head(handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    head(path: any, handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    delete(handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    delete(path: any, handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    put(handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    put(path: any, handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    patch(handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    patch(path: any, handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    propfind(handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    propfind(path: any, handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    proppatch(handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    proppatch(path: any, handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    mkcol(handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    mkcol(path: any, handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    copy(handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    copy(path: any, handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    move(handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    move(path: any, handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    lock(handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    lock(path: any, handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    unlock(handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    unlock(path: any, handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    all(handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    all(path: any, handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    search(handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    search(path: any, handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    options(handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    options(path: any, handler: RequestHandler): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    listen(port: string | number, callback?: () => void): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    listen(port: string | number, hostname: string, callback?: () => void): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    abstract close(): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    abstract initHttpServer(options: NestApplicationOptions): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    abstract useStaticAssets(...args: any[]): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    abstract setViewEngine(engine: string): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    abstract getRequestHostname(request: any): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    abstract getRequestMethod(request: any): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    abstract getRequestUrl(request: any): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    abstract status(response: any, statusCode: number): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    abstract reply(response: any, body: any, statusCode?: number): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    abstract end(response: any, message?: string): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    abstract render(response: any, view: string, options: any): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    abstract redirect(response: any, statusCode: number, url: string): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    abstract setErrorHandler(handler: Function, prefix?: string): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    abstract setNotFoundHandler(handler: Function, prefix?: string): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    abstract isHeadersSent(response: any): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    abstract getHeader(response: any, name: string): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    abstract setHeader(response: any, name: string, value: string): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    abstract appendHeader(response: any, name: string, value: string): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    abstract registerParserMiddleware(prefix?: string, rawBody?: boolean): any;
./backend/newpennine-api/node_modules/@nestjs/core/adapters/http-adapter.d.ts:    abstract enableCors(options?: any, prefix?: string): any;
./backend/newpennine-api/node_modules/@nestjs/core/scanner.d.ts:    insertModule(moduleDefinition: any, scope: Type<unknown>[]): Promise<{
./backend/newpennine-api/node_modules/@nestjs/core/scanner.d.ts:        metadata: any;
./backend/newpennine-api/node_modules/@nestjs/core/scanner.d.ts:    insertImport(related: any, token: string, context: string): Promise<void>;
./backend/newpennine-api/node_modules/@nestjs/core/errors/messages.d.ts:export declare const INVALID_MODULE_MESSAGE: (parentModule: any, index: number, scope: any[]) => string;
./backend/newpennine-api/node_modules/@nestjs/core/errors/messages.d.ts:export declare const USING_INVALID_CLASS_AS_A_MODULE_MESSAGE: (metatypeUsedAsAModule: Type | ForwardReference, scope: any[]) => string;
./backend/newpennine-api/node_modules/@nestjs/core/errors/messages.d.ts:export declare const UNDEFINED_MODULE_MESSAGE: (parentModule: any, index: number, scope: any[]) => string;
./backend/newpennine-api/node_modules/@nestjs/core/errors/messages.d.ts:export declare const INVALID_CLASS_MESSAGE: (text: TemplateStringsArray, value: any) => string;
./backend/newpennine-api/node_modules/@nestjs/core/errors/exceptions/invalid-class-module.exception.d.ts:    constructor(metatypeUsedAsAModule: any, scope: any[]);
./backend/newpennine-api/node_modules/@nestjs/core/errors/exceptions/undefined-module.exception.d.ts:    constructor(parentModule: any, index: number, scope: any[]);
./backend/newpennine-api/node_modules/@nestjs/core/errors/exceptions/invalid-module.exception.d.ts:    constructor(parentModule: any, index: number, scope: any[]);
./backend/newpennine-api/node_modules/@nestjs/core/errors/exceptions/invalid-class.exception.d.ts:    constructor(value: any);
./backend/newpennine-api/node_modules/@nestjs/core/errors/exceptions-zone.d.ts:    static run(callback: () => void, teardown: ((err: any) => void) | undefined, autoFlushLogs: boolean): void;
./backend/newpennine-api/node_modules/@nestjs/core/errors/exceptions-zone.d.ts:    static asyncRun(callback: () => Promise<void>, teardown: ((err: any) => void) | undefined, autoFlushLogs: boolean): Promise<void>;
./backend/newpennine-api/node_modules/@nestjs/core/nest-application.d.ts:    getHttpServer(): any;
./backend/newpennine-api/node_modules/@nestjs/core/nest-application.d.ts:    enableCors(options?: any): void;
./backend/newpennine-api/node_modules/@nestjs/core/nest-application.d.ts:    useStaticAssets(options: any): this;
./backend/newpennine-api/node_modules/@nestjs/core/nest-application.d.ts:    useStaticAssets(path: string, options?: any): this;
./backend/newpennine-api/node_modules/@nestjs/core/nest-application.d.ts:    setViewEngine(engineOrOptions: any): this;
./backend/newpennine-api/node_modules/@nestjs/core/helpers/external-context-creator.d.ts:    exchangeKeyForValue(type: number, data: ParamData, args: any): any;
./backend/newpennine-api/node_modules/@nestjs/core/helpers/external-context-creator.d.ts:    create<TParamsMetadata extends ParamsMetadata = ParamsMetadata, TContext extends string = ContextType>(instance: Controller, callback: (...args: unknown[]) => unknown, methodName: string, metadataKey?: string, paramsFactory?: ParamsFactory, contextId?: ContextId, inquirerId?: string, options?: ExternalContextOptions, contextType?: TContext): (...args: any[]) => Promise<any>;
./backend/newpennine-api/node_modules/@nestjs/core/helpers/external-context-creator.d.ts:        metatype: any;
./backend/newpennine-api/node_modules/@nestjs/core/helpers/external-context-creator.d.ts:        type: any;
./backend/newpennine-api/node_modules/@nestjs/core/helpers/external-context-creator.d.ts:        data: any;
./backend/newpennine-api/node_modules/@nestjs/core/helpers/external-context-creator.d.ts:    transformToResult(resultOrDeferred: any): Promise<any>;
./backend/newpennine-api/node_modules/@nestjs/core/helpers/external-context-creator.d.ts:    createGuardsFn<TContext extends string = ContextType>(guards: any[], instance: Controller, callback: (...args: any[]) => any, contextType?: TContext): Function | null;
./backend/newpennine-api/node_modules/@nestjs/core/helpers/optional-require.d.ts:export declare function optionalRequire(packageName: string, loaderFn?: Function): any;
./backend/newpennine-api/node_modules/@nestjs/core/helpers/load-adapter.d.ts:export declare function loadAdapter(defaultPlatform: string, transport: string, loaderFn?: Function): any;
./backend/newpennine-api/node_modules/@nestjs/core/helpers/external-proxy.d.ts:    createProxy<TContext extends string = ContextType>(targetCallback: (...args: any[]) => any, exceptionsHandler: ExternalExceptionsHandler, type?: TContext): (...args: any[]) => Promise<any>;
./backend/newpennine-api/node_modules/@nestjs/core/helpers/context-utils.d.ts:    reflectCallbackParamtypes(instance: Controller, methodName: string): any[];
./backend/newpennine-api/node_modules/@nestjs/core/helpers/context-utils.d.ts:    createNullArray(length: number): any[];
./backend/newpennine-api/node_modules/@nestjs/core/helpers/context-utils.d.ts:    mergeParamsMetatypes(paramsProperties: ParamProperties[], paramtypes: any[]): (ParamProperties & {
./backend/newpennine-api/node_modules/@nestjs/core/helpers/context-utils.d.ts:        metatype?: any;
./backend/newpennine-api/node_modules/@nestjs/core/helpers/context-creator.d.ts:    createContext<T extends unknown[] = any, R extends unknown[] = any>(instance: Controller, callback: (...args: any[]) => void, metadataKey: string, contextId?: ContextId, inquirerId?: string): R;
./backend/newpennine-api/node_modules/@nestjs/core/helpers/execution-context-host.d.ts:    constructor(args: any[], constructorRef?: Type<any> | null, handler?: Function | null);
./backend/newpennine-api/node_modules/@nestjs/core/helpers/handler-metadata-storage.d.ts:export type HandlerResponseBasicFn = <TResult, TResponse>(result: TResult, res: TResponse, req?: any) => any;
./backend/newpennine-api/node_modules/@nestjs/core/helpers/handler-metadata-storage.d.ts:    paramtypes: any[];
./backend/newpennine-api/node_modules/@nestjs/core/helpers/handler-metadata-storage.d.ts:    responseHeaders: any[];
./backend/newpennine-api/node_modules/@nestjs/core/helpers/handler-metadata-storage.d.ts:        metatype?: any;
./backend/newpennine-api/node_modules/@nestjs/core/helpers/interfaces/external-handler-metadata.interface.d.ts:    paramtypes: any[];
./backend/newpennine-api/node_modules/@nestjs/core/injector/instance-wrapper.d.ts:    readonly name: any;
./backend/newpennine-api/node_modules/@nestjs/core/injector/instance-wrapper.d.ts:    createPrototype(contextId: ContextId): any;
./backend/newpennine-api/node_modules/@nestjs/core/injector/container.d.ts:    setHttpAdapter(httpAdapter: any): void;
./backend/newpennine-api/node_modules/@nestjs/core/injector/container.d.ts:    addDynamicModules(modules: any[], scope: Type<any>[]): Promise<void>;
./backend/newpennine-api/node_modules/@nestjs/core/injector/container.d.ts:    replace(toReplace: any, options: {
./backend/newpennine-api/node_modules/@nestjs/core/injector/container.d.ts:        scope: any[] | null;
./backend/newpennine-api/node_modules/@nestjs/core/injector/injector.d.ts:    instance?: any;
./backend/newpennine-api/node_modules/@nestjs/core/injector/injector.d.ts:    reflectConstructorParams<T>(type: Type<T>): any[];
./backend/newpennine-api/node_modules/@nestjs/core/injector/injector.d.ts:    reflectOptionalParams<T>(type: Type<T>): any[];
./backend/newpennine-api/node_modules/@nestjs/core/injector/injector.d.ts:    reflectSelfParams<T>(type: Type<T>): any[];
./backend/newpennine-api/node_modules/@nestjs/core/injector/injector.d.ts:    resolveParamToken<T>(wrapper: InstanceWrapper<T>, param: Type<any> | string | symbol | ForwardReference): any;
./backend/newpennine-api/node_modules/@nestjs/core/injector/injector.d.ts:    lookupComponentInImports(moduleRef: Module, name: InjectionToken, wrapper: InstanceWrapper, moduleRegistry?: any[], contextId?: ContextId, inquirer?: InstanceWrapper, keyOrIndex?: symbol | string | number, isTraversing?: boolean): Promise<any>;
./backend/newpennine-api/node_modules/@nestjs/core/injector/injector.d.ts:    instantiateClass<T = any>(instances: any[], wrapper: InstanceWrapper, targetMetatype: InstanceWrapper, contextId?: ContextId, inquirer?: InstanceWrapper): Promise<T>;
./backend/newpennine-api/node_modules/@nestjs/core/injector/module.d.ts:    isCustomClass(provider: any): provider is ClassProvider;
./backend/newpennine-api/node_modules/@nestjs/core/injector/module.d.ts:    isCustomValue(provider: any): provider is ValueProvider;
./backend/newpennine-api/node_modules/@nestjs/core/injector/module.d.ts:    isCustomFactory(provider: any): provider is FactoryProvider;
./backend/newpennine-api/node_modules/@nestjs/core/injector/module.d.ts:    isCustomUseExisting(provider: any): provider is ExistingProvider;
./backend/newpennine-api/node_modules/@nestjs/core/injector/module.d.ts:    isDynamicModule(exported: any): exported is DynamicModule;
./backend/newpennine-api/node_modules/@nestjs/core/injector/module.d.ts:    replace(toReplace: InjectionToken, options: any): void;
./backend/newpennine-api/node_modules/@nestjs/core/router/router-response-controller.d.ts:    transformToResult(resultOrDeferred: any): Promise<any>;
./backend/newpennine-api/node_modules/@nestjs/core/router/sse-stream.d.ts:    _transform(message: MessageEvent, encoding: string, callback: (error?: Error | null, data?: any) => void): void;
./backend/newpennine-api/node_modules/@nestjs/core/router/routes-resolver.d.ts:    mapExternalException(err: any): any;
./backend/newpennine-api/node_modules/@nestjs/core/router/router-execution-context.d.ts:    create(instance: Controller, callback: (...args: any[]) => unknown, methodName: string, moduleKey: string, requestMethod: RequestMethod, contextId?: import("..").ContextId, inquirerId?: string): <TRequest, TResponse>(req: TRequest, res: TResponse, next: Function) => Promise<void>;
./backend/newpennine-api/node_modules/@nestjs/core/router/router-execution-context.d.ts:    getMetadata<TContext extends ContextType = ContextType>(instance: Controller, callback: (...args: any[]) => any, methodName: string, moduleKey: string, requestMethod: RequestMethod, contextType: TContext): HandlerMetadata;
./backend/newpennine-api/node_modules/@nestjs/core/router/router-execution-context.d.ts:    createGuardsFn<TContext extends string = ContextType>(guards: CanActivate[], instance: Controller, callback: (...args: any[]) => any, contextType?: TContext): ((args: any[]) => Promise<void>) | null;
./backend/newpennine-api/node_modules/@nestjs/core/router/router-execution-context.d.ts:        metatype?: any;
./backend/newpennine-api/node_modules/@nestjs/core/router/router-execution-context.d.ts:    })[]): (<TRequest, TResponse>(args: any[], req: TRequest, res: TResponse, next: Function) => Promise<void>) | null;
./backend/newpennine-api/node_modules/@nestjs/core/router/interfaces/resolver.interface.d.ts:    resolve(instance: any, basePath: string): void;
./backend/newpennine-api/node_modules/@nestjs/core/router/interfaces/route-params-factory.interface.d.ts:    exchangeKeyForValue<TRequest extends Record<string, any> = any, TResponse = any, TResult = any>(key: RouteParamtypes | string, data: any, { req, res, next }: {
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/document-builder.d.ts:    addExtension(extensionKey: string, extensionProperties: any, location?: ExtensionLocation): this;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/decorators/api-extension.decorator.d.ts:export declare function ApiExtension(extensionKey: string, extensionProperties: any): MethodDecorator & ClassDecorator;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/plugin/visitors/controller-class.visitor.d.ts:    getStatusCodeIdentifier(factory: ts.NodeFactory, node: ts.MethodDeclaration): any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/plugin/utils/ast-utils.d.ts:export declare function getTypeArguments(type: Type): any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/plugin/utils/ast-utils.d.ts:export declare function getTsDocTagsOfNode(node: Node, typeChecker: TypeChecker): any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/plugin/utils/ast-utils.d.ts:export declare function getTsDocErrorsOfNode(node: Node): any[];
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/plugin/utils/ast-utils.d.ts:export declare function getDecoratorArguments(decorator: Decorator): any[] | ts.NodeArray<ts.Expression>;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/plugin/utils/ast-utils.d.ts:export declare function createLiteralFromAnyValue(factory: ts.NodeFactory, item: unknown): any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/utils/remove-undefined-keys.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/utils/remove-undefined-keys.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/utils/extend-metadata.util.d.ts:export declare function extendMetadata<T extends Record<string, any>[] = any[]>(metadata: T, metakey: string, target: object): any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/utils/sort-object-lexicographically.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/utils/sort-object-lexicographically.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/extra/swagger-shim.d.ts:export declare function refs(): any[];
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/explorers/api-consumes.explorer.d.ts:    consumes: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/explorers/api-use-tags.explorer.d.ts:    tags: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/explorers/api-headers.explorer.d.ts:        parameters: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/explorers/api-parameters.explorer.d.ts:            items: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/explorers/api-parameters.explorer.d.ts:            example?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/explorers/api-parameters.explorer.d.ts:            examples?: any[] | Record<string, any>;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/explorers/api-parameters.explorer.d.ts:            default?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/explorers/api-parameters.explorer.d.ts:            enum?: any[];
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/explorers/api-parameters.explorer.d.ts:        example?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/explorers/api-produces.explorer.d.ts:    produces: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/explorers/api-security.explorer.d.ts:    security: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/response-object-mapper.d.ts:        example?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/response-object-mapper.d.ts:        example?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/response-object-factory.d.ts:        example?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/schema-object-factory.d.ts:                example?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/schema-object-factory.d.ts:                examples?: any[] | Record<string, any>;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/schema-object-factory.d.ts:                default?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/schema-object-factory.d.ts:                enum?: any[];
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/schema-object-factory.d.ts:            example?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/schema-object-factory.d.ts:            examples?: any[] | Record<string, any>;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/schema-object-factory.d.ts:            default?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/schema-object-factory.d.ts:            enum?: any[];
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/schema-object-factory.d.ts:    mapArrayCtorParam(param: ParamWithTypeMetadata): any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/schema-object-factory.d.ts:        required: any[];
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/schema-object-factory.d.ts:    createFromNestedArray(key: string, metadata: SchemaObjectMetadata, schemas: Record<string, SchemaObject>, pendingSchemaRefs: string[]): any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:            items: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:            example?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:            examples?: any[] | Record<string, any>;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:            default?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:            enum?: any[];
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:        example?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:            items: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:            example?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:            examples?: any[] | Record<string, any>;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:            default?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:            enum?: any[];
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:            items: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:            example?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:            examples?: any[] | Record<string, any>;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:            default?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:            enum?: any[];
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:        example?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:            items: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:            example?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:            examples?: any[] | Record<string, any>;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:            default?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:            enum?: any[];
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:        example?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:        examples?: any[] | Record<string, any>;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/services/swagger-types-mapper.d.ts:        default?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/interfaces/open-api-spec.interface.d.ts:    example?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/interfaces/open-api-spec.interface.d.ts:    example?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/interfaces/open-api-spec.interface.d.ts:    value?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/interfaces/open-api-spec.interface.d.ts:    requestBody?: any | string;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/interfaces/open-api-spec.interface.d.ts:    example?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/interfaces/open-api-spec.interface.d.ts:    examples?: any[] | Record<string, any>;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/interfaces/open-api-spec.interface.d.ts:    default?: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/interfaces/open-api-spec.interface.d.ts:    enum?: any[];
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/interfaces/open-api-spec.interface.d.ts:    [extension: `x-${string}`]: any;
./backend/newpennine-api/node_modules/@nestjs/swagger/dist/interfaces/swagger-ui-options.interface.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@nestjs/config/dist/types/config.type.d.ts:export type ConfigType<T extends (...args: any) => any> = T extends (...args: any) => infer ReturnVal ? ReturnVal extends Promise<infer AsyncReturnVal> ? AsyncReturnVal : ReturnVal : any;
./backend/newpennine-api/node_modules/@nestjs/config/dist/utils/get-registration-token.util.d.ts:export declare function getRegistrationToken(config: Record<string, any>): any;
./backend/newpennine-api/node_modules/@nestjs/config/dist/interfaces/config-module-options.interface.d.ts:    validationSchema?: any;
./backend/newpennine-api/node_modules/@nestjs/platform-express/multer/interfaces/files-upload-module.interface.d.ts:    useFactory?: (...args: any[]) => Promise<MulterModuleOptions> | MulterModuleOptions;
./backend/newpennine-api/node_modules/@nestjs/platform-express/multer/interfaces/files-upload-module.interface.d.ts:    inject?: any[];
./backend/newpennine-api/node_modules/@nestjs/platform-express/multer/interfaces/multer-options.interface.d.ts:    storage?: any;
./backend/newpennine-api/node_modules/@nestjs/platform-express/multer/interfaces/multer-options.interface.d.ts:    fileFilter?(req: any, file: {
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    constructor(instance?: any);
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    reply(response: any, body: any, statusCode?: number): any;
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    status(response: any, statusCode: number): any;
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    end(response: any, message?: string): any;
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    render(response: any, view: string, options: any): any;
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    redirect(response: any, statusCode: number, url: string): any;
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    setErrorHandler(handler: Function, prefix?: string): any;
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    setNotFoundHandler(handler: Function, prefix?: string): any;
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    isHeadersSent(response: any): boolean;
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    getHeader(response: any, name: string): any;
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    setHeader(response: any, name: string, value: string): any;
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    appendHeader(response: any, name: string, value: string): any;
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    set(...args: any[]): any;
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    enable(...args: any[]): any;
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    disable(...args: any[]): any;
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    engine(...args: any[]): any;
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    useStaticAssets(path: string, options: ServeStaticOptions): any;
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    setBaseViewsDir(path: string | string[]): any;
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    setViewEngine(engine: string): any;
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    getRequestHostname(request: any): string;
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    getRequestMethod(request: any): string;
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    getRequestUrl(request: any): string;
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    enableCors(options: CorsOptions | CorsOptionsDelegate<any>): any;
./backend/newpennine-api/node_modules/@nestjs/platform-express/adapters/express-adapter.d.ts:    setLocal(key: string, value: any): this;
./backend/newpennine-api/node_modules/@nestjs/platform-express/interfaces/serve-static-options.interface.d.ts:    setHeaders?: (res: any, path: string, stat: any) => any;
./backend/newpennine-api/node_modules/@nestjs/platform-express/interfaces/nest-express-application.interface.d.ts:    set(...args: any[]): this;
./backend/newpennine-api/node_modules/@nestjs/platform-express/interfaces/nest-express-application.interface.d.ts:    engine(...args: any[]): this;
./backend/newpennine-api/node_modules/@nestjs/platform-express/interfaces/nest-express-application.interface.d.ts:    enable(...args: any[]): this;
./backend/newpennine-api/node_modules/@nestjs/platform-express/interfaces/nest-express-application.interface.d.ts:    disable(...args: any[]): this;
./backend/newpennine-api/node_modules/@nestjs/platform-express/interfaces/nest-express-application.interface.d.ts:    setLocal(key: string, value: any): this;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/json-schema-traverse/index.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/schema-utils/declarations/util/memorize.d.ts: * @param fn {(function(): any) | undefined}
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	module: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	array?: any[];
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:				((result: any, callback: (err?: Error) => void) => void)[]
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	constructor(source: Source | (() => Source), cachedData?: any);
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	getCachedData(): any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	(err?: null | WebpackError, result?: null | T): any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	(err: null | Error, result?: T): any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	(err?: null | Error, result?: T): any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	getData(module: Module, runtime: RuntimeSpec, key: string): any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:		args?: any[]
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	amd?: false | { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:					result?: string | boolean | string[] | { [index: string]: any }
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	new (...params: any[]): any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:		newContentResource?: string | boolean | RegExp | ((context?: any) => void),
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	newContentCallback?: (context?: any) => void;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	write: (...args: any[]) => any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	close?: (...args: any[]) => any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	new (...args: any[]): Dependency;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	module: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	get disconnect(): any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	new (...args: any[]): Dependency;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:type DevtoolModuleFilenameTemplate = string | ((context?: any) => string);
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:		buildMeta?: { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	value: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	moduleFilenameTemplate?: string | ((context?: any) => string);
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	moduleFilenameTemplate: string | ((context?: any) => string);
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	preparedInfo: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	exports: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	exports: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:				result?: string | boolean | string[] | { [index: string]: any }
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:type ExternalItemValue = string | boolean | string[] | { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:				result?: string | boolean | string[] | { [index: string]: any }
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	open?: (...args: any[]) => any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	close?: (...args: any[]) => any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	[index: string]: { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	getKeys: (item?: any) => undefined | string[];
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	createGroup: (key: string, children: any[], items: any[]) => object;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	getOptions?: (name: string, items: any[]) => GroupOptions;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	merge: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:		conditional: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	amd?: false | { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	hash?: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	args?: any[];
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:		[index: string]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:		callback: (err?: null | Error, exports?: any) => any
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	readonly data: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	args?: any[];
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	get hasEqualsChunks(): any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	get isUsed(): any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	get errors(): any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	get warnings(): any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	used: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	range: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	getMeta(thing: object): any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	getMetaIfExisting(thing: object): any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	parser?: { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	generator?: { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	resourceResolveData: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	getCurrentLoader(loaderContext?: any, index?: number): null | LoaderItem;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	applyNoParseRule(rule: any, content: string): boolean;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	shouldPreventParsing(noParseRule: any, request: string): boolean;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	static deserialize(context: ObjectDeserializerContext): any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	resourceResolveData?: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	): any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	serialize: (value: any, context: ObjectSerializerContext) => void;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	write: (value?: any) => void;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	writeLazy?: (item?: any) => void;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:		item: any,
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	devtoolFallbackModuleFilenameTemplate?: string | ((context?: any) => string);
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	devtoolModuleFilenameTemplate?: string | ((context?: any) => string);
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	devtoolFallbackModuleFilenameTemplate?: string | ((context?: any) => string);
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	devtoolModuleFilenameTemplate?: string | ((context?: any) => string);
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	[index: string]: { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	additionalAssets?: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	constructor(inspector?: any);
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	session: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	inspector: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	stopProfiling(): Promise<{ profile: any }>;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:				[index: string]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	unsafeCache?: boolean | { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:			[index: string]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	exports: any[];
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:type RuleSetLoaderOptions = string | { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	generator?: { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	options?: string | { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	parser?: { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:						options?: string | { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:								options?: string | { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:				options?: string | { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:					options?: string | { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:							options?: string | { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:			options?: string | { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:			options?: string | { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	(err: null | Error, result?: T): any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	moduleFilenameTemplate: string | ((context?: any) => string);
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	fallbackModuleFilenameTemplate: string | ((context?: any) => string);
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	fallbackModuleFilenameTemplate?: string | ((context?: any) => string);
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	moduleFilenameTemplate?: string | ((context?: any) => string);
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:			[((a?: any, b?: any) => 0 | 1 | -1)[], StatsFactoryContext],
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:			[((a?: any, b?: any) => 0 | 1 | -1)[], StatsFactoryContext],
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:		object?: any,
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	error(...args: any[]): void;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	warn(...args: any[]): void;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	info(...args: any[]): void;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	log(...args: any[]): void;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	debug(...args: any[]): void;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	assert(assertion: any, ...args: any[]): void;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	status(...args: any[]): void;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	group(...args: any[]): void;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	groupCollapsed(...args: any[]): void;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	amd?: false | { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	devServer?: false | { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	(id: string): any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:	fd?: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:			options?: string | { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:			options?: string | { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:					options?: string | { [index: string]: any };
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:			config: any,
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/types.d.ts:			options: { namespace?: string; moduleFilenameTemplate?: any },
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/schemas/plugins/asset/AssetParserOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/schemas/plugins/asset/AssetResourceGeneratorOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/schemas/plugins/asset/AssetInlineGeneratorOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/schemas/plugins/asset/AssetGeneratorOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/schemas/plugins/css/CssGlobalGeneratorOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/schemas/plugins/css/CssGeneratorOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/schemas/plugins/css/CssAutoParserOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/schemas/plugins/css/CssAutoGeneratorOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/schemas/plugins/css/CssModuleGeneratorOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/schemas/plugins/css/CssParserOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/schemas/plugins/css/CssModuleParserOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/schemas/plugins/css/CssGlobalParserOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/schemas/plugins/container/ExternalsType.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/webpack/module.d.ts:declare var __non_webpack_require__: (id: any) => unknown;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv-keywords/dist/definitions/instanceof.d.ts:declare type Constructor = new (...args: any[]) => any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv-keywords/src/definitions/instanceof.ts:type Constructor = new (...args: any[]) => any
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/dist/vocabularies/validation/const.d.ts:    allowedValue: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/dist/vocabularies/validation/enum.d.ts:    allowedValues: any[];
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/dist/types/json-schema.d.ts:    [keyword: string]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/dist/types/index.d.ts:        [K in T]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/dist/types/index.d.ts:    (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/dist/types/index.d.ts:export type MacroKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaCxt) => AnySchema;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/dist/types/index.d.ts:export type CompileKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaObjCxt) => DataValidateFunction;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/dist/types/index.d.ts:    (schema: any, data: any, parentSchema?: AnySchemaObject, dataCxt?: DataValidationCxt): boolean | Promise<any>;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/dist/types/index.d.ts:    schema: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/dist/core.d.ts:    [prop: string]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/dist/compile/validate/index.d.ts:    schema: any;
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/lib/vocabularies/validation/const.ts:export type ConstError = ErrorObject<"const", {allowedValue: any}>
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/lib/vocabularies/validation/enum.ts:export type EnumError = ErrorObject<"enum", {allowedValues: any[]}, any[] | {$data: string}>
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/lib/types/json-schema.ts:  [keyword: string]: any
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/lib/types/index.ts:  parentData: {[K in T]: any} // object or array
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/lib/types/index.ts:  (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/lib/types/index.ts:  schema: any,
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/lib/types/index.ts:  schema: any,
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/lib/types/index.ts:    schema: any,
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/lib/types/index.ts:    data: any,
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/lib/types/index.ts:  schema: any // TODO
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/lib/core.ts:  [prop: string]: any
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/lib/core.ts:  cache?: any
./backend/newpennine-api/node_modules/@nestjs/cli/node_modules/ajv/lib/compile/validate/index.ts:  schema: any // keyword value in the schema
./backend/newpennine-api/node_modules/@nestjs/cli/lib/configuration/configuration.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@nestjs/cli/lib/utils/project-utils.d.ts:export declare function shouldGenerateSpec(configuration: Required<Configuration>, schematic: string, appName: string, specValue: boolean, specPassedAsInput?: boolean): any;
./backend/newpennine-api/node_modules/@nestjs/cli/lib/utils/remaining-flags.d.ts:export declare function getRemainingFlags(cli: CommanderStatic): any[];
./backend/newpennine-api/node_modules/@nestjs/cli/lib/compiler/base-compiler.d.ts:    abstract run(configuration: Required<Configuration>, tsConfigPath: string, appName: string | undefined, extras?: T, onSuccess?: () => void): any;
./backend/newpennine-api/node_modules/@nestjs/cli/lib/compiler/compiler.d.ts:    run(configuration: Required<Configuration>, tsConfigPath: string, appName: string | undefined, _extras: any, onSuccess?: () => void): void;
./backend/newpennine-api/node_modules/@nestjs/cli/commands/command.input.d.ts:    options?: any;
./backend/newpennine-api/node_modules/@nestjs/passport/dist/utils/memoize.util.d.ts:export declare function memoize<T extends (...args: any[]) => any>(fn: T): (...args: Parameters<T>) => ReturnType<T>;
./backend/newpennine-api/node_modules/@nestjs/passport/dist/passport/passport.serializer.d.ts:    abstract serializeUser(user: any, done: Function): any;
./backend/newpennine-api/node_modules/@nestjs/passport/dist/passport/passport.serializer.d.ts:    abstract deserializeUser(payload: any, done: Function): any;
./backend/newpennine-api/node_modules/@nestjs/passport/dist/passport/passport.strategy.d.ts:    abstract validate(...args: any[]): TValidationResult | Promise<TValidationResult>;
./backend/newpennine-api/node_modules/@nestjs/passport/dist/abstract.strategy.d.ts:    abstract validate(...args: any[]): any;
./backend/newpennine-api/node_modules/@nestjs/passport/dist/auth.guard.d.ts:    handleRequest<TUser = any>(err: any, user: any, info: any, context: ExecutionContext, status?: any): TUser;
./backend/newpennine-api/node_modules/@nestjs/passport/dist/auth.guard.d.ts:    getRequest(context: ExecutionContext): any;
./backend/newpennine-api/node_modules/@nestjs/passport/dist/interfaces/type.interface.d.ts:    new (...args: any[]): T;
./backend/newpennine-api/node_modules/@nestjs/passport/dist/interfaces/auth-module.options.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@nestjs/passport/dist/interfaces/auth-module.options.d.ts:    useFactory?: (...args: any[]) => Promise<IAuthModuleOptions> | IAuthModuleOptions;
./backend/newpennine-api/node_modules/@nestjs/passport/dist/interfaces/auth-module.options.d.ts:    inject?: any[];
./backend/newpennine-api/node_modules/@nestjs/testing/testing-injector.d.ts:    resolveComponentInstance<T>(moduleRef: Module, name: any, dependencyContext: InjectorDependencyContext, wrapper: InstanceWrapper<T>, contextId?: import("@nestjs/core").ContextId, inquirer?: InstanceWrapper, keyOrIndex?: string | number): Promise<InstanceWrapper>;
./backend/newpennine-api/node_modules/@nestjs/testing/services/testing-logger.service.d.ts:    error(message: string, ...optionalParams: any[]): void;
./backend/newpennine-api/node_modules/@nestjs/testing/interfaces/override-by-factory-options.interface.d.ts:    factory: (...args: any[]) => any;
./backend/newpennine-api/node_modules/@nestjs/testing/interfaces/override-by-factory-options.interface.d.ts:    inject?: any[];
./backend/newpennine-api/node_modules/@nestjs/testing/interfaces/override-by.interface.d.ts:    useValue: (value: any) => TestingModuleBuilder;
./backend/newpennine-api/node_modules/@nestjs/testing/interfaces/override-by.interface.d.ts:    useClass: (metatype: any) => TestingModuleBuilder;
./backend/newpennine-api/node_modules/@nestjs/common/serializer/class-serializer.interceptor.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@nestjs/common/serializer/class-serializer.interceptor.d.ts:    protected readonly reflector: any;
./backend/newpennine-api/node_modules/@nestjs/common/serializer/class-serializer.interceptor.d.ts:    constructor(reflector: any, defaultOptions?: ClassSerializerInterceptorOptions);
./backend/newpennine-api/node_modules/@nestjs/common/serializer/class-serializer.interceptor.d.ts:    transformToPlain(plainOrClass: any, options: ClassSerializerContextOptions): PlainLiteralObject;
./backend/newpennine-api/node_modules/@nestjs/common/cache/interceptors/cache.interceptor.d.ts:    protected readonly cacheManager: any;
./backend/newpennine-api/node_modules/@nestjs/common/cache/interceptors/cache.interceptor.d.ts:    protected readonly reflector: any;
./backend/newpennine-api/node_modules/@nestjs/common/cache/interceptors/cache.interceptor.d.ts:    constructor(cacheManager: any, reflector: any);
./backend/newpennine-api/node_modules/@nestjs/common/cache/interfaces/cache-manager.interface.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@nestjs/common/cache/interfaces/cache-manager.interface.d.ts:    isCacheableValue?: (value: any) => boolean;
./backend/newpennine-api/node_modules/@nestjs/common/cache/interfaces/cache-module.interface.d.ts:    useFactory?: (...args: any[]) => Promise<CacheModuleOptions<StoreConfig>> | CacheModuleOptions<StoreConfig>;
./backend/newpennine-api/node_modules/@nestjs/common/cache/interfaces/cache-module.interface.d.ts:    inject?: any[];
./backend/newpennine-api/node_modules/@nestjs/common/decorators/core/bind.decorator.d.ts:export declare function Bind(...decorators: any[]): MethodDecorator;
./backend/newpennine-api/node_modules/@nestjs/common/utils/merge-with-values.util.d.ts:export type Constructor<T> = new (...args: any[]) => T;
./backend/newpennine-api/node_modules/@nestjs/common/utils/merge-with-values.util.d.ts:    [param: string]: any;
./backend/newpennine-api/node_modules/@nestjs/common/utils/validate-each.util.d.ts:}, arr: any[], predicate: Function, decorator: string, item: string): boolean;
./backend/newpennine-api/node_modules/@nestjs/common/utils/shared.utils.d.ts:export declare const isUndefined: (obj: any) => obj is undefined;
./backend/newpennine-api/node_modules/@nestjs/common/utils/shared.utils.d.ts:export declare const isObject: (fn: any) => fn is object;
./backend/newpennine-api/node_modules/@nestjs/common/utils/shared.utils.d.ts:export declare const isPlainObject: (fn: any) => fn is object;
./backend/newpennine-api/node_modules/@nestjs/common/utils/shared.utils.d.ts:export declare const isFunction: (val: any) => val is Function;
./backend/newpennine-api/node_modules/@nestjs/common/utils/shared.utils.d.ts:export declare const isString: (val: any) => val is string;
./backend/newpennine-api/node_modules/@nestjs/common/utils/shared.utils.d.ts:export declare const isNumber: (val: any) => val is number;
./backend/newpennine-api/node_modules/@nestjs/common/utils/shared.utils.d.ts:export declare const isConstructor: (val: any) => boolean;
./backend/newpennine-api/node_modules/@nestjs/common/utils/shared.utils.d.ts:export declare const isNil: (val: any) => val is null | undefined;
./backend/newpennine-api/node_modules/@nestjs/common/utils/shared.utils.d.ts:export declare const isEmpty: (array: any) => boolean;
./backend/newpennine-api/node_modules/@nestjs/common/utils/shared.utils.d.ts:export declare const isSymbol: (val: any) => val is symbol;
./backend/newpennine-api/node_modules/@nestjs/common/utils/load-package.util.d.ts:export declare function loadPackage(packageName: string, context: string, loaderFn?: Function): any;
./backend/newpennine-api/node_modules/@nestjs/common/exceptions/gone.exception.d.ts:    constructor(objectOrError?: any, descriptionOrOptions?: string | HttpExceptionOptions);
./backend/newpennine-api/node_modules/@nestjs/common/exceptions/unprocessable-entity.exception.d.ts:    constructor(objectOrError?: any, descriptionOrOptions?: string | HttpExceptionOptions);
./backend/newpennine-api/node_modules/@nestjs/common/exceptions/im-a-teapot.exception.d.ts:    constructor(objectOrError?: any, descriptionOrOptions?: string | HttpExceptionOptions);
./backend/newpennine-api/node_modules/@nestjs/common/exceptions/http-version-not-supported.exception.d.ts:    constructor(objectOrError?: any, descriptionOrOptions?: string | HttpExceptionOptions);
./backend/newpennine-api/node_modules/@nestjs/common/exceptions/unsupported-media-type.exception.d.ts:    constructor(objectOrError?: any, descriptionOrOptions?: string | HttpExceptionOptions);
./backend/newpennine-api/node_modules/@nestjs/common/exceptions/not-implemented.exception.d.ts:    constructor(objectOrError?: any, descriptionOrOptions?: string | HttpExceptionOptions);
./backend/newpennine-api/node_modules/@nestjs/common/exceptions/gateway-timeout.exception.d.ts:    constructor(objectOrError?: any, descriptionOrOptions?: string | HttpExceptionOptions);
./backend/newpennine-api/node_modules/@nestjs/common/exceptions/method-not-allowed.exception.d.ts:    constructor(objectOrError?: any, descriptionOrOptions?: string | HttpExceptionOptions);
./backend/newpennine-api/node_modules/@nestjs/common/exceptions/unauthorized.exception.d.ts:    constructor(objectOrError?: any, descriptionOrOptions?: string | HttpExceptionOptions);
./backend/newpennine-api/node_modules/@nestjs/common/exceptions/request-timeout.exception.d.ts:    constructor(objectOrError?: any, descriptionOrOptions?: string | HttpExceptionOptions);
./backend/newpennine-api/node_modules/@nestjs/common/exceptions/not-found.exception.d.ts:    constructor(objectOrError?: any, descriptionOrOptions?: string | HttpExceptionOptions);
./backend/newpennine-api/node_modules/@nestjs/common/exceptions/service-unavailable.exception.d.ts:    constructor(objectOrError?: any, descriptionOrOptions?: string | HttpExceptionOptions);
./backend/newpennine-api/node_modules/@nestjs/common/exceptions/precondition-failed.exception.d.ts:    constructor(objectOrError?: any, descriptionOrOptions?: string | HttpExceptionOptions);
./backend/newpennine-api/node_modules/@nestjs/common/exceptions/payload-too-large.exception.d.ts:    constructor(objectOrError?: any, descriptionOrOptions?: string | HttpExceptionOptions);
./backend/newpennine-api/node_modules/@nestjs/common/exceptions/misdirected.exception.d.ts:    constructor(objectOrError?: any, descriptionOrOptions?: string | HttpExceptionOptions);
./backend/newpennine-api/node_modules/@nestjs/common/exceptions/forbidden.exception.d.ts:    constructor(objectOrError?: any, descriptionOrOptions?: string | HttpExceptionOptions);
./backend/newpennine-api/node_modules/@nestjs/common/exceptions/bad-request.exception.d.ts:    constructor(objectOrError?: any, descriptionOrOptions?: string | HttpExceptionOptions);
./backend/newpennine-api/node_modules/@nestjs/common/exceptions/conflict.exception.d.ts:    constructor(objectOrError?: any, descriptionOrOptions?: string | HttpExceptionOptions);
./backend/newpennine-api/node_modules/@nestjs/common/exceptions/not-acceptable.exception.d.ts:    constructor(objectOrError?: any, descriptionOrOptions?: string | HttpExceptionOptions);
./backend/newpennine-api/node_modules/@nestjs/common/exceptions/bad-gateway.exception.d.ts:    constructor(objectOrError?: any, descriptionOrOptions?: string | HttpExceptionOptions);
./backend/newpennine-api/node_modules/@nestjs/common/exceptions/internal-server-error.exception.d.ts:    constructor(objectOrError?: any, descriptionOrOptions?: string | HttpExceptionOptions);
./backend/newpennine-api/node_modules/@nestjs/common/pipes/parse-array.pipe.d.ts:    exceptionFactory?: (error: any) => any;
./backend/newpennine-api/node_modules/@nestjs/common/pipes/parse-array.pipe.d.ts:    transform(value: any, metadata: ArgumentMetadata): Promise<any>;
./backend/newpennine-api/node_modules/@nestjs/common/pipes/parse-array.pipe.d.ts:    protected validatePrimitive(originalValue: any, index?: number): any;
./backend/newpennine-api/node_modules/@nestjs/common/pipes/file/parse-file.pipe.d.ts:    transform(value: any): Promise<any>;
./backend/newpennine-api/node_modules/@nestjs/common/pipes/file/parse-file.pipe.d.ts:    protected validate(file: any): Promise<any>;
./backend/newpennine-api/node_modules/@nestjs/common/pipes/file/file-validator.interface.d.ts:    abstract buildErrorMessage(file: any): string;
./backend/newpennine-api/node_modules/@nestjs/common/pipes/validation.pipe.d.ts:    transform(value: any, metadata: ArgumentMetadata): Promise<any>;
./backend/newpennine-api/node_modules/@nestjs/common/pipes/validation.pipe.d.ts:    protected transformPrimitive(value: any, metadata: ArgumentMetadata): any;
./backend/newpennine-api/node_modules/@nestjs/common/pipes/validation.pipe.d.ts:    protected stripProtoKeys(value: any): void;
./backend/newpennine-api/node_modules/@nestjs/common/pipes/parse-uuid.pipe.d.ts:    protected isUUID(str: unknown, version?: string): any;
./backend/newpennine-api/node_modules/@nestjs/common/services/utils/is-log-level.util.d.ts:export declare function isLogLevel(maybeLogLevel: any): maybeLogLevel is LogLevel;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    log(message: any, ...optionalParams: any[]): any;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    error(message: any, ...optionalParams: any[]): any;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    warn(message: any, ...optionalParams: any[]): any;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    debug?(message: any, ...optionalParams: any[]): any;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    verbose?(message: any, ...optionalParams: any[]): any;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    fatal?(message: any, ...optionalParams: any[]): any;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    setLogLevels?(levels: LogLevel[]): any;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    error(message: any, stack?: string, context?: string): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    error(message: any, ...optionalParams: [...any, string?, string?]): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    log(message: any, context?: string): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    log(message: any, ...optionalParams: [...any, string?]): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    warn(message: any, context?: string): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    warn(message: any, ...optionalParams: [...any, string?]): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    debug(message: any, context?: string): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    debug(message: any, ...optionalParams: [...any, string?]): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    verbose(message: any, context?: string): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    verbose(message: any, ...optionalParams: [...any, string?]): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    fatal(message: any, context?: string): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    fatal(message: any, ...optionalParams: [...any, string?]): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    static error(message: any, stackOrContext?: string): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    static error(message: any, context?: string): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    static error(message: any, stack?: string, context?: string): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    static error(message: any, ...optionalParams: [...any, string?, string?]): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    static log(message: any, context?: string): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    static log(message: any, ...optionalParams: [...any, string?]): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    static warn(message: any, context?: string): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    static warn(message: any, ...optionalParams: [...any, string?]): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    static debug(message: any, context?: string): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    static debug(message: any, ...optionalParams: [...any, string?]): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    static verbose(message: any, context?: string): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    static verbose(message: any, ...optionalParams: [...any, string?]): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    static fatal(message: any, context?: string): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    static fatal(message: any, ...optionalParams: [...any, string?]): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/logger.service.d.ts:    static overrideLogger(logger: LoggerService | LogLevel[] | boolean): any;
./backend/newpennine-api/node_modules/@nestjs/common/services/console-logger.service.d.ts:    log(message: any, context?: string): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/console-logger.service.d.ts:    log(message: any, ...optionalParams: [...any, string?]): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/console-logger.service.d.ts:    error(message: any, stackOrContext?: string): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/console-logger.service.d.ts:    error(message: any, stack?: string, context?: string): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/console-logger.service.d.ts:    error(message: any, ...optionalParams: [...any, string?, string?]): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/console-logger.service.d.ts:    warn(message: any, context?: string): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/console-logger.service.d.ts:    warn(message: any, ...optionalParams: [...any, string?]): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/console-logger.service.d.ts:    debug(message: any, context?: string): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/console-logger.service.d.ts:    debug(message: any, ...optionalParams: [...any, string?]): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/console-logger.service.d.ts:    verbose(message: any, context?: string): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/console-logger.service.d.ts:    verbose(message: any, ...optionalParams: [...any, string?]): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/console-logger.service.d.ts:    fatal(message: any, context?: string): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/console-logger.service.d.ts:    fatal(message: any, ...optionalParams: [...any, string?]): void;
./backend/newpennine-api/node_modules/@nestjs/common/services/console-logger.service.d.ts:    protected stringifyMessage(message: unknown, logLevel: LogLevel): any;
./backend/newpennine-api/node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts:    new (): any;
./backend/newpennine-api/node_modules/@nestjs/common/module-utils/interfaces/configurable-module-async-options.interface.d.ts:    useFactory?: (...args: any[]) => Promise<ModuleOptions> | ModuleOptions;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/middleware/nest-middleware.interface.d.ts:    use(req: TRequest, res: TResponse, next: (error?: any) => void): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/nest-application.interface.d.ts:    use(...args: any[]): this;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/nest-application.interface.d.ts:    enableCors(options?: any): void;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/websockets/web-socket-adapter.interface.d.ts:    callback: (...args: any[]) => Observable<any> | Promise<any>;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/websockets/web-socket-adapter.interface.d.ts:    bindClientConnect(server: TServer, callback: Function): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/websockets/web-socket-adapter.interface.d.ts:    bindClientDisconnect?(client: TClient, callback: Function): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/websockets/web-socket-adapter.interface.d.ts:    bindMessageHandlers(client: TClient, handlers: WsMessageHandler[], transform: (data: any) => Observable<any>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/websockets/web-socket-adapter.interface.d.ts:    close(server: TServer): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/exceptions/exception-filter.interface.d.ts:    catch(exception: T, host: ArgumentsHost): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/exceptions/ws-exception-filter.interface.d.ts:     * the in-flight message  catch(exception: T, host: ArgumentsHost): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/exceptions/ws-exception-filter.interface.d.ts:    catch(exception: T, host: ArgumentsHost): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:export type ErrorHandler<TRequest = any, TResponse = any> = (error: any, req: TRequest, res: TResponse, next?: Function) => any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    use(handler: RequestHandler<TRequest, TResponse> | ErrorHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    use(path: string, handler: RequestHandler<TRequest, TResponse> | ErrorHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    useBodyParser?(...args: any[]): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    get(handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    get(path: string, handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    post(handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    post(path: string, handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    head(handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    head(path: string, handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    delete(handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    delete(path: string, handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    put(handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    put(path: string, handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    patch(handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    patch(path: string, handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    propfind?(handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    propfind?(path: string, handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    proppatch?(handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    proppatch?(path: string, handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    mkcol?(handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    mkcol?(path: string, handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    copy?(handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    copy?(path: string, handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    move?(handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    move?(path: string, handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    lock?(handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    lock?(path: string, handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    unlock?(handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    unlock?(path: string, handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    all(path: string, handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    all(handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    options(handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    options(path: string, handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    search?(handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    search?(path: string, handler: RequestHandler<TRequest, TResponse>): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    listen(port: number | string, callback?: () => void): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    listen(port: number | string, hostname: string, callback?: () => void): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    reply(response: any, body: any, statusCode?: number): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    status(response: any, statusCode: number): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    end(response: any, message?: string): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    render(response: any, view: string, options: any): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    redirect(response: any, statusCode: number, url: string): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    isHeadersSent(response: any): boolean;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    setHeader(response: any, name: string, value: string): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    setErrorHandler?(handler: Function, prefix?: string): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    setNotFoundHandler?(handler: Function, prefix?: string): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    useStaticAssets?(...args: any[]): this;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    setViewEngine?(engineOrOptions: any): this;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    registerParserMiddleware(...args: any[]): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    enableCors(options: any): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    getHttpServer(): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts:    close(): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/hooks/on-application-bootstrap.interface.d.ts:    onApplicationBootstrap(): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/hooks/on-init.interface.d.ts:    onModuleInit(): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/hooks/on-application-shutdown.interface.d.ts:    onApplicationShutdown(signal?: string): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/hooks/on-destroy.interface.d.ts:    onModuleDestroy(): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/hooks/before-application-shutdown.interface.d.ts:    beforeApplicationShutdown(signal?: string): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/external/validation-error.interface.d.ts:    value?: any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/external/validation-error.interface.d.ts:        [type: string]: any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/external/class-transform-options.interface.d.ts:    targetMaps?: any[];
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/external/https-options.interface.d.ts:    pfx?: any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/external/https-options.interface.d.ts:    key?: any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/external/https-options.interface.d.ts:    cert?: any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/external/https-options.interface.d.ts:    ca?: any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/external/https-options.interface.d.ts:    crl?: any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/external/https-options.interface.d.ts:    NPNProtocols?: any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/external/https-options.interface.d.ts:    SNICallback?: (servername: string, cb: (err: Error, ctx: any) => any) => any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/modules/provider.interface.d.ts:    useFactory: (...args: any[]) => T | Promise<T>;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/modules/provider.interface.d.ts:    useExisting: any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/modules/nest-module.interface.d.ts:    configure(consumer: MiddlewareConsumer): any;
./backend/newpennine-api/node_modules/@nestjs/common/interfaces/type.interface.d.ts:    new (...args: any[]): T;
./backend/newpennine-api/node_modules/@nestjs/schematics/dist/lib/middleware/files/ts/__name__.middleware.ts:  use(req: any, res: any, next: () => void) {
./backend/newpennine-api/node_modules/@nestjs/schematics/dist/lib/pipe/files/ts/__name__.pipe.ts:  transform(value: any, metadata: ArgumentMetadata) {
./backend/newpennine-api/node_modules/@nestjs/schematics/dist/lib/client-app/angular/files/loaders/express.loader.ts:    app.get(options.renderPath, (req: any, res: any) =>
./backend/newpennine-api/node_modules/@nestjs/schematics/dist/lib/client-app/angular/files/loaders/fastify.loader.ts:    app.get(options.renderPath, (req: any, res: any) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/dist/lib/client-app/angular/files/interfaces/angular-options.interface.ts:    setHeaders?: (res: any, path: string, stat: any) => any;
./backend/newpennine-api/node_modules/@nestjs/schematics/dist/lib/gateway/files/ts/__name__.gateway.ts:  handleMessage(client: any, payload: any): string {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Subscription.d.ts:export declare function isSubscription(value: any): value is Subscription;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/catchError.d.ts:export declare function catchError<T, O extends ObservableInput<any>>(selector: (err: any, caught: Observable<T>) => O): OperatorFunction<T, T | ObservedValueOf<O>>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/share.d.ts:    resetOnError?: boolean | ((error: any) => ObservableInput<any>);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/every.d.ts:export declare function every<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/partition.d.ts:export declare function partition<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): UnaryFunction<Observable<T>, [Observable<T>, Observable<T>]>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/materialize.d.ts: * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/tap.d.ts:export declare function tap<T>(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): MonoTypeOperatorFunction<T>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/find.d.ts:export declare function createFind<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean, thisArg: any, emit: 'value' | 'index'): (source: Observable<T>, subscriber: Subscriber<any>) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/OperatorSubscriber.d.ts:export declare function createOperatorSubscriber<T>(destination: Subscriber<any>, onNext?: (value: T) => void, onComplete?: () => void, onError?: (err: any) => void, onFinalize?: () => void): Subscriber<T>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/OperatorSubscriber.d.ts:    constructor(destination: Subscriber<any>, onNext?: (value: T) => void, onComplete?: () => void, onError?: (err: any) => void, onFinalize?: (() => void) | undefined, shouldUnsubscribe?: (() => boolean) | undefined);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/joinAllInternals.d.ts:export declare function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R): import("../types").UnaryFunction<Observable<ObservableInput<T>>, unknown>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/findIndex.d.ts:export declare function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/operators/retry.d.ts:    delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/isReadableStreamLike.d.ts:export declare function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/isPromise.d.ts:export declare function isPromise(value: any): value is PromiseLike<any>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popScheduler(args: any[]): SchedulerLike | undefined;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popNumber(args: any[], defaultValue: number): number;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/createErrorClass.d.ts:export declare function createErrorClass<T>(createImpl: (_super: any) => any): T;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/errorContext.d.ts:export declare function captureError(err: any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/not.d.ts:export declare function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/isFunction.d.ts:export declare function isFunction(value: any): value is (...args: any[]) => any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/isAsyncIterable.d.ts:export declare function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/throwUnobservableError.d.ts:export declare function createInvalidObservableTypeError(input: any): TypeError;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/lift.d.ts:export declare function hasLift(source: any): source is {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/isObservable.d.ts:export declare function isObservable(obj: any): obj is Observable<unknown>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/applyMixins.d.ts:export declare function applyMixins(derivedCtor: any, baseCtors: any[]): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/reportUnhandledError.d.ts:export declare function reportUnhandledError(err: any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/isScheduler.d.ts:export declare function isScheduler(value: any): value is SchedulerLike;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/isArrayLike.d.ts:export declare const isArrayLike: <T>(x: any) => x is ArrayLike<T>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/createObject.d.ts:export declare function createObject(keys: string[], values: any[]): any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/isIterable.d.ts:export declare function isIterable(input: any): input is Iterable<any>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/isInteropObservable.d.ts:export declare function isInteropObservable(input: any): input is InteropObservable<any>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/isDate.d.ts:export declare function isValidDate(value: any): value is Date;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/UnsubscriptionError.d.ts:    readonly errors: any[];
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/util/UnsubscriptionError.d.ts:    new (errors: any[]): UnsubscriptionError;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/types.d.ts:    error: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/types.d.ts:    error?: (err: any) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/types.d.ts:    error: (err: any) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/types.d.ts:    error?: (err: any) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/types.d.ts:    error: (err: any) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/types.d.ts:export declare type Head<X extends readonly any[]> = ((...args: X) => any) extends (arg: infer U, ...rest: any[]) => any ? U : never;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/types.d.ts:export declare type Tail<X extends readonly any[]> = ((...args: X) => any) extends (arg: any, ...rest: infer U) => any ? U : never;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/config.d.ts:    onUnhandledError: ((err: any) => void) | null;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay?: number): TimerHandle;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay?: number): TimerHandle | undefined;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected _execute(state: T, delay: number): any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/scheduler/QueueAction.d.ts:    execute(state: T, delay: number): any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/scheduler/immediateProvider.d.ts:declare type SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/scheduler/intervalProvider.d.ts:declare type SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/scheduler/AsyncAction.d.ts:    execute(state: T, delay: number): any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/scheduler/AsyncAction.d.ts:    protected _execute(state: T, _delay: number): any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/scheduler/timeoutProvider.d.ts:declare type SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:export declare type observableToBeFn = (marbles: string, values?: any, errorValue?: any) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    assertDeepEqual: (actual: any, expected: any) => boolean | void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    constructor(assertDeepEqual: (actual: any, expected: any) => boolean | void);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    }, error?: any): ColdObservable<T>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    }, error?: any): HotObservable<T>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:        toBe(marbles: string, values?: any, errorValue?: any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    static parseMarbles(marbles: string, values?: any, errorValue?: any, materializeInnerObservables?: boolean, runMode?: boolean): TestMessage[];
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Operator.d.ts:    call(subscriber: Subscriber<R>, source: any): TeardownLogic;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Notification.d.ts:    readonly error?: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Notification.d.ts:    constructor(kind: 'E', value: undefined, error: any);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Notification.d.ts:    do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Notification.d.ts:    do(next: (value: T) => void, error: (err: any) => void): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Notification.d.ts:    accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Notification.d.ts:    accept(next: (value: T) => void, error: (err: any) => void): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Notification.d.ts:    static createError(err?: any): Notification<never> & ErrorNotification;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/pairs.d.ts:export declare function pairs(n: number | bigint | boolean | ((...args: any[]) => any) | symbol, scheduler?: SchedulerLike): Observable<[never, never]>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/bindCallback.d.ts:export declare function bindCallback(callbackFunc: (...args: any[]) => void, resultSelector: (...args: any[]) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/bindCallbackInternals.d.ts:export declare function bindCallbackInternals(isNodeStyle: boolean, callbackFunc: any, resultSelector?: any, scheduler?: SchedulerLike): (...args: any[]) => Observable<unknown>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/combineLatest.d.ts:export declare function combineLatestInit(observables: ObservableInput<any>[], scheduler?: SchedulerLike, valueTransform?: (values: any[]) => any): (subscriber: Subscriber<any>) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/fromEventPattern.d.ts:export declare function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void): Observable<T>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/fromEventPattern.d.ts:export declare function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare type NodeEventHandler = (...args: any[]) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:    on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:    off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<R>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string, resultSelector: (...args: any[]) => R): Observable<R>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<R>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string, resultSelector: (...args: any[]) => R): Observable<R>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<T, R>(target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>, eventName: string, resultSelector: (value: T, ...args: any[]) => R): Observable<R>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts: *   const error: any = new Error(`This is error number ${ ++errorCount }`);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts:export declare function throwError(error: any): Observable<never>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts:export declare function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/innerFrom.d.ts:export declare function fromInteropObservable<T>(obj: any): Observable<T>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/bindNodeCallback.d.ts:export declare function bindNodeCallback(callbackFunc: (...args: any[]) => void, resultSelector: (...args: any[]) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/observable/bindNodeCallback.d.ts:export declare function bindNodeCallback<A extends readonly unknown[], R extends readonly unknown[]>(callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void, schedulerLike?: SchedulerLike): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Observable.d.ts:    static create: (...args: any[]) => any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Observable.d.ts:    subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Subject.d.ts:    thrownError: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Subject.d.ts:    static create: (...args: any[]) => any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Subject.d.ts:    error(err: any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Subject.d.ts:    error(err: any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    error(err?: any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    protected _error(err: any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    constructor(observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null, error?: ((e?: any) => void) | null, complete?: (() => void) | null);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/ajax/errors.d.ts:    response: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    post<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    put<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    patch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/ajax/types.d.ts:    body?: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/ajax/types.d.ts:    body?: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/dist/types/internal/ajax/getXHRResponse.d.ts:export declare function getXHRResponse(xhr: XMLHttpRequest): any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/catchError.ts:  selector: (err: any, caught: Observable<T>) => O
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/catchError.ts:  selector: (err: any, caught: Observable<T>) => O
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/groupBy.ts:  elementOrOptions?: ((value: any) => any) | void | BasicGroupByOptions<K, T> | GroupByOptionsWithElement<K, R, T>,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/groupBy.ts:    let element: ((value: any) => any) | void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/groupBy.ts:      element = elementOrOptions as ((value: any) => any);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/groupBy.ts:    const handleError = (err: any) => notify((consumer) => consumer.error(err));
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/groupBy.ts:      const result: any = new Observable<T>((groupSubscriber) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/joinAllInternals.ts:export function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/scanInternals.ts:    let state: any = seed;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/find.ts:  thisArg?: any
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/find.ts:  thisArg: any,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/filter.ts:export function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/windowTime.ts:export function windowTime<T>(windowTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, Observable<T>> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/share.ts:  resetOnError?: boolean | ((error: any) => ObservableInput<any>);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/tap.ts:  error?: ((error: any) => void) | null,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/tap.ts:  error?: ((e: any) => void) | null,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/materialize.ts: * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/retry.ts:  delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/exhaustMap.ts:      source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b: any, ii: any) => resultSelector(a, b, i, ii)))));
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/map.ts:export function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/findIndex.ts:export function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/findIndex.ts:  thisArg?: any
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/every.ts:  thisArg: any
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/every.ts:  thisArg?: any
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/windowWhen.ts:    const handleError = (err: any) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/pluck.ts:    let currentProp: any = x;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/bufferTime.ts:export function bufferTime<T>(bufferTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, T[]> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/timeout.ts:    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/combineLatest.ts:export function combineLatest<T, R>(...args: (ObservableInput<any> | ((...values: any[]) => R))[]): OperatorFunction<T, unknown> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/windowToggle.ts:    const handleError = (err: any) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/race.ts:export function race<T>(...args: any[]): OperatorFunction<T, unknown> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:  onError?: (err: any) => void,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:    onError?: (err: any) => void,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:      ? function (this: OperatorSubscriber<T>, err: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/concat.ts:export function concat<T, R>(...args: any[]): OperatorFunction<T, R> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/reduce.ts:export function reduce<V, A>(accumulator: (acc: V | A, value: V, index: number) => A, seed?: any): OperatorFunction<V, V | A> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/window.ts:    const errorHandler = (err: any) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/mergeMap.ts:    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/partition.ts:  thisArg?: any
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/toArray.ts:const arrReducer = (arr: any[], value: any) => (arr.push(value), arr);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/withLatestFrom.ts:export function withLatestFrom<T, R>(...inputs: any[]): OperatorFunction<T, R | any[]> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/withLatestFrom.ts:  const project = popResultSelector(inputs) as ((...args: any[]) => R) | undefined;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/operators/distinctUntilChanged.ts:function defaultCompare(a: any, b: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/EmptyError.ts:export const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/pipe.ts:    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/reportUnhandledError.ts:export function reportUnhandledError(err: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/isFunction.ts:export function isFunction(value: any): value is (...args: any[]) => any {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/isInteropObservable.ts:export function isInteropObservable(input: any): input is InteropObservable<any> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/isPromise.ts:export function isPromise(value: any): value is PromiseLike<any> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/isDate.ts:export function isValidDate(value: any): value is Date {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/isAsyncIterable.ts:export function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/args.ts:export function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/args.ts:export function popScheduler(args: any[]): SchedulerLike | undefined {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/args.ts:export function popNumber(args: any[], defaultValue: number): number {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/isReadableStreamLike.ts:export function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/throwUnobservableError.ts:export function createInvalidObservableTypeError(input: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/SequenceError.ts:    function SequenceErrorImpl(this: any, message: string) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/createErrorClass.ts:export function createErrorClass<T>(createImpl: (_super: any) => any): T {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/createErrorClass.ts:  const _super = (instance: any) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/not.ts:export function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/isArrayLike.ts:export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:  readonly errors: any[];
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:  new (errors: any[]): UnsubscriptionError;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/isScheduler.ts:export function isScheduler(value: any): value is SchedulerLike {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/errorContext.ts:let context: { errorThrown: boolean; error: any } | null = null;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/errorContext.ts:export function captureError(err: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts:    function ObjectUnsubscribedErrorImpl(this: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/Immediate.ts:const activeHandles: { [key: number]: any } = {};
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/applyMixins.ts:export function applyMixins(derivedCtor: any, baseCtors: any[]) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/lift.ts:export function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/createObject.ts:export function createObject(keys: string[], values: any[]) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/argsArgArrayOrObject.ts:function isPOJO(obj: any): obj is object {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts:    function ArgumentOutOfRangeErrorImpl(this: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/isIterable.ts:export function isIterable(input: any): input is Iterable<any> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/NotFoundError.ts:    function NotFoundErrorImpl(this: any, message: string) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/util/isObservable.ts:export function isObservable(obj: any): obj is Observable<unknown> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts:type SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:  public execute(state: T, delay: number): any {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:  protected _execute(state: T, _delay: number): any {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:    let errorValue: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts:    let error: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:    let error: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected _execute(state: T, delay: number): any {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts:    let error: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts:    let error: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/QueueAction.ts:  public execute(state: T, delay: number): any {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/intervalProvider.ts:type SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/scheduler/immediateProvider.ts:type SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  actual?: any[];
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  expected?: any[];
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/testing/TestScheduler.ts:export type observableToBeFn = (marbles: string, values?: any, errorValue?: any) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  constructor(public assertDeepEqual: (actual: any, expected: any) => boolean | void) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  createColdObservable<T = string>(marbles: string, values?: { [marble: string]: T }, error?: any): ColdObservable<T> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  createHotObservable<T = string>(marbles: string, values?: { [marble: string]: T }, error?: any): HotObservable<T> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/testing/TestScheduler.ts:      toBe(marbles: string, values?: any, errorValue?: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/testing/TestScheduler.ts:    values?: any,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/testing/TestScheduler.ts:    errorValue?: any,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/testing/TestScheduler.ts:        ? (x: any) => x
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/testing/TestScheduler.ts:        : (x: any) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/types.ts:  error: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/types.ts:  error?: (err: any) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/types.ts:  error: (err: any) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/types.ts:  error?: (err: any) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/types.ts:  error: (err: any) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/types.ts:export type Head<X extends readonly any[]> = ((...args: X) => any) extends (arg: infer U, ...rest: any[]) => any ? U : never;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/types.ts:export type Tail<X extends readonly any[]> = ((...args: X) => any) extends (arg: any, ...rest: infer U) => any ? U : never;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Operator.ts:  call(subscriber: Subscriber<R>, source: any): TeardownLogic;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subscriber.ts:  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subscriber.ts:  error(err?: any): void {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subscriber.ts:  protected _error(err: any): void {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subscriber.ts:function bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subscriber.ts:  error(err: any): void {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subscriber.ts:    error?: ((e?: any) => void) | null,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subscriber.ts:      let context: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subscriber.ts:function handleUnhandledError(error: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subscriber.ts:function defaultErrorHandler(err: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Observable.ts:  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Observable.ts:  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Observable.ts:    error?: ((error: any) => void) | null,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Observable.ts:        (err: any) => reject(err),
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Observable.ts:function isObserver<T>(value: any): value is Observer<T> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Observable.ts:function isSubscriber<T>(value: any): value is Subscriber<T> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Notification.ts:  constructor(kind: 'E', value: undefined, error: any);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Notification.ts:  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Notification.ts:  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Notification.ts:  do(next: (value: T) => void, error: (err: any) => void): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Notification.ts:  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Notification.ts:  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Notification.ts:  accept(next: (value: T) => void, error: (err: any) => void): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Notification.ts:  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Notification.ts:  static createError(err?: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subject.ts:  thrownError: any = null;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subject.ts:  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subject.ts:  error(err: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subject.ts:    const observable: any = new Observable<T>();
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subject.ts:  error(err: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/NotificationFactories.ts:export function errorNotification(error: any): ErrorNotification {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/NotificationFactories.ts:export function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/connectable.ts:  const result: any = new Observable<T>((subscriber) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: any[]) => void,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  resultSelector: (...args: any[]) => any,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:): (...args: any[]) => Observable<any>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: [...any[], (err: any, ...res: any) => void]) => void,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  resultSelector?: ((...args: any[]) => any) | SchedulerLike,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:): (...args: any[]) => Observable<any> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/throwError.ts: *   const error: any = new Error(`This is error number ${ ++errorCount }`);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(error: any): Observable<never>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  resultSelector?: (...args: any[]) => T
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(handler: Function): any} addHandler A function that takes
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(handler: Function, token?: any): void} [removeHandler] A function that
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(...args: any): T} [project] A function to
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  resultSelector?: (...args: any[]) => T
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:export type NodeEventHandler = (...args: any[]) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (...args: any[]) => R
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (...args: any[]) => R
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (value: T, ...args: any[]) => R
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:  target: any,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:  options?: EventListenerOptions | ((...args: any[]) => T),
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector?: (...args: any[]) => T
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:function toCommonHandlerRegistry(target: any, eventName: string) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isEventTarget(target: any): target is HasEventTargetAddRemove<any> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/zip.ts:                  const result: any = buffers.map((buffer) => buffer.shift()!);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/innerFrom.ts:export function fromInteropObservable<T>(obj: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/innerFrom.ts:        (err: any) => subscriber.error(err)
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/forkJoin.ts:export function forkJoin(...args: any[]): Observable<any> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallback.ts:  callbackFunc: (...args: any[]) => void,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallback.ts:  resultSelector: (...args: any[]) => any,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallback.ts:): (...args: any[]) => Observable<any>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallback.ts:  callbackFunc: (...args: [...any[], (...res: any) => void]) => void,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallback.ts:  resultSelector?: ((...args: any[]) => any) | SchedulerLike,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallback.ts:): (...args: any[]) => Observable<unknown> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/combineLatest.ts:export function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/combineLatest.ts:  valueTransform: (values: any[]) => any = identity
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/pairs.ts:  n: number | bigint | boolean | ((...args: any[]) => any) | symbol,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/pairs.ts:export function pairs(obj: any, scheduler?: SchedulerLike) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/dom/WebSocketSubject.ts:  serializer: (value: any) => JSON.stringify(value),
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/dom/fetch.ts:    const handleError = (err: any) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  callbackFunc: any,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  resultSelector?: any,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:): (...args: any[]) => Observable<unknown> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:      return function (this: any, ...args: any[]) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:    return function (this: any, ...args: any[]) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  return function (this: any, ...args: any[]): Observable<any> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:            (...results: any[]) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/concat.ts:export function concat(...args: any[]): Observable<unknown> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/partition.ts:  predicate: (this: any, value: T, index: number) => boolean,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/observable/partition.ts:  thisArg?: any
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subscription.ts:    let errors: any[] | undefined;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/Subscription.ts:export function isSubscription(value: any): value is Subscription {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/config.ts:  onUnhandledError: ((err: any) => void) | null;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:  post<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:  put<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:  patch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPost<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPut<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPatch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:      const addProgressEvent = (target: any, type: string, direction: AjaxDirection) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:        [LOADSTART, PROGRESS].forEach((type) => xhr.upload.addEventListener(type, (e: any) => progressSubscriber?.next?.(e)));
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function extractContentTypeAndMaybeSerializeBody(body: any, headers: Record<string, string>) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function toStringCheck(obj: any, name: string): boolean {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function isArrayBuffer(body: any): body is ArrayBuffer {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function isFile(body: any): body is File {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function isBlob(body: any): body is Blob {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function isArrayBufferView(body: any): body is ArrayBufferView {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function isFormData(body: any): body is FormData {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function isURLSearchParams(body: any): body is URLSearchParams {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/ajax.ts:function isReadableStream(body: any): body is ReadableStream {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/errors.ts:  response: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/errors.ts:    function AjaxErrorImpl(this: any, message: string, xhr: XMLHttpRequest, request: AjaxRequest) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/errors.ts:      let response: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/errors.ts:  function AjaxTimeoutErrorImpl(this: any, xhr: XMLHttpRequest, request: AjaxRequest) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/getXHRResponse.ts:        const ieXHR: any = xhr;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/getXHRResponse.ts:        const ieXHR: any = xhr;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/types.ts:  body?: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/node_modules/rxjs/src/internal/ajax/types.ts:  body?: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/src/utils/partially-ordered-set.d.ts:    forEach(callbackfn: (value: T, value2: T, set: PartiallyOrderedSet<T>) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/src/utils/lang.d.ts:export declare function isPromise(obj: any): obj is Promise<any>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/src/utils/literals.d.ts:    (template: TemplateStringsArray, ...substitutions: any[]): R;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function oneLine(strings: TemplateStringsArray, ...values: any[]): string;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function stripIndent(strings: TemplateStringsArray, ...values: any[]): string;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function stripIndents(strings: TemplateStringsArray, ...values: any[]): string;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/core/src/utils/literals.d.ts:export declare function trimNewlines(strings: TemplateStringsArray, ...values: any[]): string;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subscription.d.ts:export declare function isSubscription(value: any): value is Subscription;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/catchError.d.ts:export declare function catchError<T, O extends ObservableInput<any>>(selector: (err: any, caught: Observable<T>) => O): OperatorFunction<T, T | ObservedValueOf<O>>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/share.d.ts:    resetOnError?: boolean | ((error: any) => ObservableInput<any>);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/every.d.ts:export declare function every<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/partition.d.ts:export declare function partition<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): UnaryFunction<Observable<T>, [Observable<T>, Observable<T>]>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/materialize.d.ts: * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/tap.d.ts:export declare function tap<T>(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): MonoTypeOperatorFunction<T>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/find.d.ts:export declare function createFind<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean, thisArg: any, emit: 'value' | 'index'): (source: Observable<T>, subscriber: Subscriber<any>) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/OperatorSubscriber.d.ts:export declare function createOperatorSubscriber<T>(destination: Subscriber<any>, onNext?: (value: T) => void, onComplete?: () => void, onError?: (err: any) => void, onFinalize?: () => void): Subscriber<T>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/OperatorSubscriber.d.ts:    constructor(destination: Subscriber<any>, onNext?: (value: T) => void, onComplete?: () => void, onError?: (err: any) => void, onFinalize?: (() => void) | undefined, shouldUnsubscribe?: (() => boolean) | undefined);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/joinAllInternals.d.ts:export declare function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R): import("../types").UnaryFunction<Observable<ObservableInput<T>>, unknown>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/findIndex.d.ts:export declare function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/operators/retry.d.ts:    delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isReadableStreamLike.d.ts:export declare function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isPromise.d.ts:export declare function isPromise(value: any): value is PromiseLike<any>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popScheduler(args: any[]): SchedulerLike | undefined;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popNumber(args: any[], defaultValue: number): number;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/createErrorClass.d.ts:export declare function createErrorClass<T>(createImpl: (_super: any) => any): T;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/errorContext.d.ts:export declare function captureError(err: any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/not.d.ts:export declare function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isFunction.d.ts:export declare function isFunction(value: any): value is (...args: any[]) => any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isAsyncIterable.d.ts:export declare function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/throwUnobservableError.d.ts:export declare function createInvalidObservableTypeError(input: any): TypeError;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/lift.d.ts:export declare function hasLift(source: any): source is {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isObservable.d.ts:export declare function isObservable(obj: any): obj is Observable<unknown>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/applyMixins.d.ts:export declare function applyMixins(derivedCtor: any, baseCtors: any[]): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/reportUnhandledError.d.ts:export declare function reportUnhandledError(err: any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isScheduler.d.ts:export declare function isScheduler(value: any): value is SchedulerLike;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isArrayLike.d.ts:export declare const isArrayLike: <T>(x: any) => x is ArrayLike<T>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/createObject.d.ts:export declare function createObject(keys: string[], values: any[]): any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isIterable.d.ts:export declare function isIterable(input: any): input is Iterable<any>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isInteropObservable.d.ts:export declare function isInteropObservable(input: any): input is InteropObservable<any>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/isDate.d.ts:export declare function isValidDate(value: any): value is Date;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/UnsubscriptionError.d.ts:    readonly errors: any[];
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/util/UnsubscriptionError.d.ts:    new (errors: any[]): UnsubscriptionError;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:    error: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:    error?: (err: any) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:    error: (err: any) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:    error?: (err: any) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:    error: (err: any) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:export declare type Head<X extends readonly any[]> = ((...args: X) => any) extends (arg: infer U, ...rest: any[]) => any ? U : never;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/types.d.ts:export declare type Tail<X extends readonly any[]> = ((...args: X) => any) extends (arg: any, ...rest: infer U) => any ? U : never;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/config.d.ts:    onUnhandledError: ((err: any) => void) | null;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay?: number): TimerHandle;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay?: number): TimerHandle | undefined;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected _execute(state: T, delay: number): any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/QueueAction.d.ts:    execute(state: T, delay: number): any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/immediateProvider.d.ts:declare type SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/intervalProvider.d.ts:declare type SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/AsyncAction.d.ts:    execute(state: T, delay: number): any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/AsyncAction.d.ts:    protected _execute(state: T, _delay: number): any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/scheduler/timeoutProvider.d.ts:declare type SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:export declare type observableToBeFn = (marbles: string, values?: any, errorValue?: any) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    assertDeepEqual: (actual: any, expected: any) => boolean | void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    constructor(assertDeepEqual: (actual: any, expected: any) => boolean | void);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    }, error?: any): ColdObservable<T>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    }, error?: any): HotObservable<T>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:        toBe(marbles: string, values?: any, errorValue?: any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    static parseMarbles(marbles: string, values?: any, errorValue?: any, materializeInnerObservables?: boolean, runMode?: boolean): TestMessage[];
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Operator.d.ts:    call(subscriber: Subscriber<R>, source: any): TeardownLogic;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    readonly error?: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    constructor(kind: 'E', value: undefined, error: any);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    do(next: (value: T) => void, error: (err: any) => void): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    accept(next: (value: T) => void, error: (err: any) => void): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Notification.d.ts:    static createError(err?: any): Notification<never> & ErrorNotification;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/pairs.d.ts:export declare function pairs(n: number | bigint | boolean | ((...args: any[]) => any) | symbol, scheduler?: SchedulerLike): Observable<[never, never]>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/bindCallback.d.ts:export declare function bindCallback(callbackFunc: (...args: any[]) => void, resultSelector: (...args: any[]) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/bindCallbackInternals.d.ts:export declare function bindCallbackInternals(isNodeStyle: boolean, callbackFunc: any, resultSelector?: any, scheduler?: SchedulerLike): (...args: any[]) => Observable<unknown>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/combineLatest.d.ts:export declare function combineLatestInit(observables: ObservableInput<any>[], scheduler?: SchedulerLike, valueTransform?: (values: any[]) => any): (subscriber: Subscriber<any>) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEventPattern.d.ts:export declare function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void): Observable<T>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEventPattern.d.ts:export declare function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare type NodeEventHandler = (...args: any[]) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:    on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:    off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<R>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string, resultSelector: (...args: any[]) => R): Observable<R>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<R>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string, resultSelector: (...args: any[]) => R): Observable<R>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<T, R>(target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>, eventName: string, resultSelector: (value: T, ...args: any[]) => R): Observable<R>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts: *   const error: any = new Error(`This is error number ${ ++errorCount }`);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts:export declare function throwError(error: any): Observable<never>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts:export declare function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/innerFrom.d.ts:export declare function fromInteropObservable<T>(obj: any): Observable<T>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/bindNodeCallback.d.ts:export declare function bindNodeCallback(callbackFunc: (...args: any[]) => void, resultSelector: (...args: any[]) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/observable/bindNodeCallback.d.ts:export declare function bindNodeCallback<A extends readonly unknown[], R extends readonly unknown[]>(callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void, schedulerLike?: SchedulerLike): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Observable.d.ts:    static create: (...args: any[]) => any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Observable.d.ts:    subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subject.d.ts:    thrownError: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subject.d.ts:    static create: (...args: any[]) => any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subject.d.ts:    error(err: any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subject.d.ts:    error(err: any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    error(err?: any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    protected _error(err: any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    constructor(observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null, error?: ((e?: any) => void) | null, complete?: (() => void) | null);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/ajax/errors.d.ts:    response: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    post<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    put<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    patch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/ajax/types.d.ts:    body?: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/ajax/types.d.ts:    body?: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/dist/types/internal/ajax/getXHRResponse.d.ts:export declare function getXHRResponse(xhr: XMLHttpRequest): any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/catchError.ts:  selector: (err: any, caught: Observable<T>) => O
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/catchError.ts:  selector: (err: any, caught: Observable<T>) => O
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/groupBy.ts:  elementOrOptions?: ((value: any) => any) | void | BasicGroupByOptions<K, T> | GroupByOptionsWithElement<K, R, T>,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/groupBy.ts:    let element: ((value: any) => any) | void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/groupBy.ts:      element = elementOrOptions as ((value: any) => any);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/groupBy.ts:    const handleError = (err: any) => notify((consumer) => consumer.error(err));
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/groupBy.ts:      const result: any = new Observable<T>((groupSubscriber) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/joinAllInternals.ts:export function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/scanInternals.ts:    let state: any = seed;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/find.ts:  thisArg?: any
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/find.ts:  thisArg: any,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/filter.ts:export function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/windowTime.ts:export function windowTime<T>(windowTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, Observable<T>> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/share.ts:  resetOnError?: boolean | ((error: any) => ObservableInput<any>);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/tap.ts:  error?: ((error: any) => void) | null,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/tap.ts:  error?: ((e: any) => void) | null,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/materialize.ts: * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/retry.ts:  delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/exhaustMap.ts:      source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b: any, ii: any) => resultSelector(a, b, i, ii)))));
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/map.ts:export function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/findIndex.ts:export function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/findIndex.ts:  thisArg?: any
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/every.ts:  thisArg: any
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/every.ts:  thisArg?: any
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/windowWhen.ts:    const handleError = (err: any) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/pluck.ts:    let currentProp: any = x;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/bufferTime.ts:export function bufferTime<T>(bufferTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, T[]> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/timeout.ts:    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/combineLatest.ts:export function combineLatest<T, R>(...args: (ObservableInput<any> | ((...values: any[]) => R))[]): OperatorFunction<T, unknown> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/windowToggle.ts:    const handleError = (err: any) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/race.ts:export function race<T>(...args: any[]): OperatorFunction<T, unknown> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:  onError?: (err: any) => void,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:    onError?: (err: any) => void,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:      ? function (this: OperatorSubscriber<T>, err: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/concat.ts:export function concat<T, R>(...args: any[]): OperatorFunction<T, R> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/reduce.ts:export function reduce<V, A>(accumulator: (acc: V | A, value: V, index: number) => A, seed?: any): OperatorFunction<V, V | A> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/window.ts:    const errorHandler = (err: any) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/mergeMap.ts:    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/partition.ts:  thisArg?: any
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/toArray.ts:const arrReducer = (arr: any[], value: any) => (arr.push(value), arr);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/withLatestFrom.ts:export function withLatestFrom<T, R>(...inputs: any[]): OperatorFunction<T, R | any[]> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/withLatestFrom.ts:  const project = popResultSelector(inputs) as ((...args: any[]) => R) | undefined;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/operators/distinctUntilChanged.ts:function defaultCompare(a: any, b: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/EmptyError.ts:export const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/pipe.ts:    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/reportUnhandledError.ts:export function reportUnhandledError(err: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isFunction.ts:export function isFunction(value: any): value is (...args: any[]) => any {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isInteropObservable.ts:export function isInteropObservable(input: any): input is InteropObservable<any> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isPromise.ts:export function isPromise(value: any): value is PromiseLike<any> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isDate.ts:export function isValidDate(value: any): value is Date {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isAsyncIterable.ts:export function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/args.ts:export function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/args.ts:export function popScheduler(args: any[]): SchedulerLike | undefined {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/args.ts:export function popNumber(args: any[], defaultValue: number): number {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isReadableStreamLike.ts:export function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/throwUnobservableError.ts:export function createInvalidObservableTypeError(input: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/SequenceError.ts:    function SequenceErrorImpl(this: any, message: string) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/createErrorClass.ts:export function createErrorClass<T>(createImpl: (_super: any) => any): T {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/createErrorClass.ts:  const _super = (instance: any) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/not.ts:export function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isArrayLike.ts:export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:  readonly errors: any[];
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:  new (errors: any[]): UnsubscriptionError;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isScheduler.ts:export function isScheduler(value: any): value is SchedulerLike {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/errorContext.ts:let context: { errorThrown: boolean; error: any } | null = null;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/errorContext.ts:export function captureError(err: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts:    function ObjectUnsubscribedErrorImpl(this: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/Immediate.ts:const activeHandles: { [key: number]: any } = {};
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/applyMixins.ts:export function applyMixins(derivedCtor: any, baseCtors: any[]) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/lift.ts:export function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/createObject.ts:export function createObject(keys: string[], values: any[]) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/argsArgArrayOrObject.ts:function isPOJO(obj: any): obj is object {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts:    function ArgumentOutOfRangeErrorImpl(this: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isIterable.ts:export function isIterable(input: any): input is Iterable<any> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/NotFoundError.ts:    function NotFoundErrorImpl(this: any, message: string) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/util/isObservable.ts:export function isObservable(obj: any): obj is Observable<unknown> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts:type SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:  public execute(state: T, delay: number): any {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:  protected _execute(state: T, _delay: number): any {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:    let errorValue: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts:    let error: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:    let error: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected _execute(state: T, delay: number): any {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts:    let error: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts:    let error: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/QueueAction.ts:  public execute(state: T, delay: number): any {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/intervalProvider.ts:type SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/scheduler/immediateProvider.ts:type SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  actual?: any[];
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  expected?: any[];
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:export type observableToBeFn = (marbles: string, values?: any, errorValue?: any) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  constructor(public assertDeepEqual: (actual: any, expected: any) => boolean | void) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  createColdObservable<T = string>(marbles: string, values?: { [marble: string]: T }, error?: any): ColdObservable<T> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  createHotObservable<T = string>(marbles: string, values?: { [marble: string]: T }, error?: any): HotObservable<T> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:      toBe(marbles: string, values?: any, errorValue?: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:    values?: any,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:    errorValue?: any,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:        ? (x: any) => x
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/testing/TestScheduler.ts:        : (x: any) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/types.ts:  error: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/types.ts:  error?: (err: any) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/types.ts:  error: (err: any) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/types.ts:  error?: (err: any) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/types.ts:  error: (err: any) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/types.ts:export type Head<X extends readonly any[]> = ((...args: X) => any) extends (arg: infer U, ...rest: any[]) => any ? U : never;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/types.ts:export type Tail<X extends readonly any[]> = ((...args: X) => any) extends (arg: any, ...rest: infer U) => any ? U : never;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Operator.ts:  call(subscriber: Subscriber<R>, source: any): TeardownLogic;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:  error(err?: any): void {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:  protected _error(err: any): void {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:function bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:  error(err: any): void {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:    error?: ((e?: any) => void) | null,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:      let context: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:function handleUnhandledError(error: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscriber.ts:function defaultErrorHandler(err: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Observable.ts:  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Observable.ts:  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Observable.ts:    error?: ((error: any) => void) | null,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Observable.ts:        (err: any) => reject(err),
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Observable.ts:function isObserver<T>(value: any): value is Observer<T> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Observable.ts:function isSubscriber<T>(value: any): value is Subscriber<T> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  constructor(kind: 'E', value: undefined, error: any);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  do(next: (value: T) => void, error: (err: any) => void): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  accept(next: (value: T) => void, error: (err: any) => void): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Notification.ts:  static createError(err?: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subject.ts:  thrownError: any = null;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subject.ts:  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subject.ts:  error(err: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subject.ts:    const observable: any = new Observable<T>();
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subject.ts:  error(err: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/NotificationFactories.ts:export function errorNotification(error: any): ErrorNotification {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/NotificationFactories.ts:export function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/connectable.ts:  const result: any = new Observable<T>((subscriber) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: any[]) => void,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  resultSelector: (...args: any[]) => any,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:): (...args: any[]) => Observable<any>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: [...any[], (err: any, ...res: any) => void]) => void,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  resultSelector?: ((...args: any[]) => any) | SchedulerLike,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:): (...args: any[]) => Observable<any> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/throwError.ts: *   const error: any = new Error(`This is error number ${ ++errorCount }`);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(error: any): Observable<never>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  resultSelector?: (...args: any[]) => T
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(handler: Function): any} addHandler A function that takes
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(handler: Function, token?: any): void} [removeHandler] A function that
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts: * @param {function(...args: any): T} [project] A function to
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  resultSelector?: (...args: any[]) => T
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:export type NodeEventHandler = (...args: any[]) => void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (...args: any[]) => R
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (...args: any[]) => R
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (value: T, ...args: any[]) => R
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  target: any,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  options?: EventListenerOptions | ((...args: any[]) => T),
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector?: (...args: any[]) => T
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:function toCommonHandlerRegistry(target: any, eventName: string) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isEventTarget(target: any): target is HasEventTargetAddRemove<any> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/zip.ts:                  const result: any = buffers.map((buffer) => buffer.shift()!);
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/innerFrom.ts:export function fromInteropObservable<T>(obj: any) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/innerFrom.ts:        (err: any) => subscriber.error(err)
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/forkJoin.ts:export function forkJoin(...args: any[]): Observable<any> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:  callbackFunc: (...args: any[]) => void,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:  resultSelector: (...args: any[]) => any,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:): (...args: any[]) => Observable<any>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:  callbackFunc: (...args: [...any[], (...res: any) => void]) => void,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:  resultSelector?: ((...args: any[]) => any) | SchedulerLike,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallback.ts:): (...args: any[]) => Observable<unknown> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/combineLatest.ts:export function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/combineLatest.ts:  valueTransform: (values: any[]) => any = identity
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/pairs.ts:  n: number | bigint | boolean | ((...args: any[]) => any) | symbol,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/pairs.ts:export function pairs(obj: any, scheduler?: SchedulerLike) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/dom/WebSocketSubject.ts:  serializer: (value: any) => JSON.stringify(value),
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/dom/fetch.ts:    const handleError = (err: any) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  callbackFunc: any,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  resultSelector?: any,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:): (...args: any[]) => Observable<unknown> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:      return function (this: any, ...args: any[]) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:    return function (this: any, ...args: any[]) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  return function (this: any, ...args: any[]): Observable<any> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:            (...results: any[]) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/concat.ts:export function concat(...args: any[]): Observable<unknown> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/partition.ts:  predicate: (this: any, value: T, index: number) => boolean,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/observable/partition.ts:  thisArg?: any
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscription.ts:    let errors: any[] | undefined;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/Subscription.ts:export function isSubscription(value: any): value is Subscription {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/config.ts:  onUnhandledError: ((err: any) => void) | null;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:  post<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:  put<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:  patch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPost<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPut<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPatch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:      const addProgressEvent = (target: any, type: string, direction: AjaxDirection) => {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:        [LOADSTART, PROGRESS].forEach((type) => xhr.upload.addEventListener(type, (e: any) => progressSubscriber?.next?.(e)));
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function extractContentTypeAndMaybeSerializeBody(body: any, headers: Record<string, string>) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function toStringCheck(obj: any, name: string): boolean {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isArrayBuffer(body: any): body is ArrayBuffer {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isFile(body: any): body is File {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isBlob(body: any): body is Blob {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isArrayBufferView(body: any): body is ArrayBufferView {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isFormData(body: any): body is FormData {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isURLSearchParams(body: any): body is URLSearchParams {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/ajax.ts:function isReadableStream(body: any): body is ReadableStream {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/errors.ts:  response: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/errors.ts:    function AjaxErrorImpl(this: any, message: string, xhr: XMLHttpRequest, request: AjaxRequest) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/errors.ts:      let response: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/errors.ts:  function AjaxTimeoutErrorImpl(this: any, xhr: XMLHttpRequest, request: AjaxRequest) {
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/getXHRResponse.ts:        const ieXHR: any = xhr;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/getXHRResponse.ts:        const ieXHR: any = xhr;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/types.ts:  body?: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/@angular-devkit/schematics/node_modules/rxjs/src/internal/ajax/types.ts:  body?: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/json-schema-traverse/index.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/dist/vocabularies/validation/const.d.ts:    allowedValue: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/dist/vocabularies/validation/enum.d.ts:    allowedValues: any[];
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/dist/types/json-schema.d.ts:    [keyword: string]: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/dist/types/index.d.ts:        [K in T]: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/dist/types/index.d.ts:    (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/dist/types/index.d.ts:export type MacroKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaCxt) => AnySchema;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/dist/types/index.d.ts:export type CompileKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaObjCxt) => DataValidateFunction;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/dist/types/index.d.ts:    (schema: any, data: any, parentSchema?: AnySchemaObject, dataCxt?: DataValidationCxt): boolean | Promise<any>;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/dist/types/index.d.ts:    schema: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/dist/core.d.ts:    [prop: string]: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/dist/compile/validate/index.d.ts:    schema: any;
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/lib/vocabularies/validation/const.ts:export type ConstError = ErrorObject<"const", {allowedValue: any}>
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/lib/vocabularies/validation/enum.ts:export type EnumError = ErrorObject<"enum", {allowedValues: any[]}, any[] | {$data: string}>
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/lib/types/json-schema.ts:  [keyword: string]: any
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/lib/types/index.ts:  parentData: {[K in T]: any} // object or array
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/lib/types/index.ts:  (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/lib/types/index.ts:  schema: any,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/lib/types/index.ts:  schema: any,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/lib/types/index.ts:    schema: any,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/lib/types/index.ts:    data: any,
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/lib/types/index.ts:  schema: any // TODO
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/lib/core.ts:  [prop: string]: any
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/lib/core.ts:  cache?: any
./backend/newpennine-api/node_modules/@nestjs/schematics/node_modules/ajv/lib/compile/validate/index.ts:  schema: any // keyword value in the schema
./backend/newpennine-api/node_modules/prettier/doc.d.ts:    label: any;
./backend/newpennine-api/node_modules/prettier/doc.d.ts:  function label(label: any | undefined, contents: Doc): Doc;
./backend/newpennine-api/node_modules/prettier/index.d.ts:type CallCallback<T, U> = (path: AstPath<T>, index: number, value: any) => U;
./backend/newpennine-api/node_modules/prettier/index.d.ts:  value: any,
./backend/newpennine-api/node_modules/prettier/index.d.ts:  value: any,
./backend/newpennine-api/node_modules/prettier/index.d.ts:      (node: any, name: string | null, number: number | null) => boolean
./backend/newpennine-api/node_modules/prettier/index.d.ts:export type BuiltInParser = (text: string, options?: any) => AST;
./backend/newpennine-api/node_modules/prettier/index.d.ts:    | ((original: any, cloned: any, parent: any) => any)
./backend/newpennine-api/node_modules/prettier/index.d.ts:              commentNode: any,
./backend/newpennine-api/node_modules/prettier/index.d.ts:              commentNode: any,
./backend/newpennine-api/node_modules/prettier/index.d.ts:              commentNode: any,
./backend/newpennine-api/node_modules/prettier/index.d.ts:  function addLeadingComment(node: any, comment: any): void;
./backend/newpennine-api/node_modules/prettier/index.d.ts:  function addDanglingComment(node: any, comment: any, marker: any): void;
./backend/newpennine-api/node_modules/prettier/index.d.ts:  function addTrailingComment(node: any, comment: any): void;
./backend/newpennine-api/node_modules/emittery/index.d.ts:	): <T extends {new (...arguments_: any[]): any}>(klass: T) => T; // eslint-disable-line @typescript-eslint/prefer-function-type
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __assign(t: any, ...sources: any[]): any;
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __rest(t: any, propertyNames: (string | symbol)[]): any;
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __decorate(decorators: Function[], target: any, key?: string | symbol, desc?: any): any;
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __runInitializers(thisArg: unknown, initializers: Function[], value?: any): any;
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __propKey(x: any): string | symbol;
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __metadata(metadataKey: any, metadataValue: any): Function;
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __awaiter(thisArg: any, _arguments: any, P: Function, generator: Function): any;
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __generator(thisArg: any, body: Function): any;
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __exportStar(m: any, o: any): void;
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __values(o: any): any;
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __read(o: any, n?: number): any[];
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __spread(...args: any[][]): any[];
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __spreadArrays(...args: any[][]): any[];
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __spreadArray(to: any[], from: any[], pack?: boolean): any[];
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __await(v: any): any;
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __asyncGenerator(thisArg: any, _arguments: any, generator: Function): any;
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __asyncDelegator(o: any): any;
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __asyncValues(o: any): any;
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __classPrivateFieldGet<T extends new (...args: any[]) => unknown, V>(
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __classPrivateFieldGet<T extends new (...args: any[]) => unknown, V>(
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __classPrivateFieldGet<T extends object, V extends (...args: any[]) => unknown>(
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __classPrivateFieldGet<T extends new (...args: any[]) => unknown, V extends (...args: any[]) => unknown>(
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __classPrivateFieldSet<T extends new (...args: any[]) => unknown, V>(
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __classPrivateFieldSet<T extends new (...args: any[]) => unknown, V>(
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:    state: (new (...args: any[]) => unknown) | { has(o: any): boolean },
./backend/newpennine-api/node_modules/tslib/tslib.d.ts:export declare function __disposeResources(env: { stack: { value?: unknown, dispose?: Function, async: boolean }[]; error: unknown; hasError: boolean; }): any;
./backend/newpennine-api/node_modules/ts-jest/dist/utils/json.d.ts:export declare function parse(input: string): any;
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/required-deep.d.ts:								: E extends (...arguments_: any[]) => unknown
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/partial-on-undefined-deep.d.ts:type PartialOnUndefinedDeepValue<T, Options extends Required<PartialOnUndefinedDeepOptions>> = T extends BuiltIns | ((...arguments_: any[]) => unknown)
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/omit-index-signature.d.ts:	[x: string]: any
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/omit-index-signature.d.ts:	[x: number]: any
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/omit-index-signature.d.ts:	[x: symbol]: any
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/async-return-type.d.ts:type AsyncFunction = (...arguments_: any[]) => PromiseLike<unknown>;
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/set-parameter-type.d.ts:type HandleMessage = (data: Data, message: string, ...arguments: any[]) => void;
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/set-parameter-type.d.ts:export type SetParameterType<Function_ extends (...arguments_: any[]) => unknown, P extends Record<number, unknown>> =
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/find-global-type.d.ts:		? typeof globalThis extends Record<Name, abstract new (...arguments: any[]) => infer T> ? T : never
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/internal/object.d.ts:// Copy `readonly` and `?` from the key `a` of `{readonly a?: any}`
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/internal/object.d.ts:type B = BuildObject<'a', string, {readonly a?: any}>;
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/internal/keys.d.ts:		This check is necessary, because without it, if we don't verify whether the property is a record, an object with a type of `{name: any}` would return `never` due to its potential assignability to a function.
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/internal/keys.d.ts:			: [(...arguments_: any[]) => any] extends [Type[Key]]
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/internal/type.d.ts:export type NonRecursiveType = BuiltIns | Function | (new (...arguments_: any[]) => unknown);
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/internal/type.d.ts:export type HasMultipleCallSignatures<T extends (...arguments_: any[]) => unknown> =
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/set-return-type.d.ts:export type SetReturnType<Function_ extends (...arguments_: any[]) => any, TypeToReturn> =
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/pick-deep.d.ts:	otherConfig: any;
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/jsonify.d.ts:type NotJsonable = ((...arguments_: any[]) => any) | undefined | symbol;
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/readonly-deep.d.ts:	: T extends new (...arguments_: any[]) => unknown
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/readonly-deep.d.ts:		: T extends (...arguments_: any[]) => unknown
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/partial-deep.d.ts:type _PartialDeep<T, Options extends Required<PartialDeepOptions>> = T extends BuiltIns | ((new (...arguments_: any[]) => unknown))
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/partial-deep.d.ts:	(ObjectType extends (...arguments_: any) => unknown
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/is-any.d.ts:const anyObject: any = {a: 1, b: 2};
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/writable-deep.d.ts:	: T extends (...arguments_: any[]) => unknown
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/if-empty-object.d.ts:type ShouldBeBar = IfEmptyObject<{key: any}, 'foo', 'bar'>;
./backend/newpennine-api/node_modules/ts-jest/node_modules/type-fest/source/asyncify.d.ts:export type Asyncify<Function_ extends (...arguments_: any[]) => any> = SetReturnType<Function_, Promise<Awaited<ReturnType<Function_>>>>;
./backend/newpennine-api/node_modules/magic-string/dist/magic-string.cjs.d.ts:		replacement: string | ((substring: string, ...args: any[]) => string),
./backend/newpennine-api/node_modules/magic-string/dist/magic-string.cjs.d.ts:		replacement: string | ((substring: string, ...args: any[]) => string),
./backend/newpennine-api/node_modules/ajv-formats/node_modules/json-schema-traverse/index.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/dist/vocabularies/validation/const.d.ts:    allowedValue: any;
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/dist/vocabularies/validation/enum.d.ts:    allowedValues: any[];
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/dist/types/json-schema.d.ts:    [keyword: string]: any;
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/dist/types/index.d.ts:        [K in T]: any;
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/dist/types/index.d.ts:    (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T;
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/dist/types/index.d.ts:export type MacroKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaCxt) => AnySchema;
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/dist/types/index.d.ts:export type CompileKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaObjCxt) => DataValidateFunction;
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/dist/types/index.d.ts:    (schema: any, data: any, parentSchema?: AnySchemaObject, dataCxt?: DataValidationCxt): boolean | Promise<any>;
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/dist/types/index.d.ts:    schema: any;
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/dist/core.d.ts:    [prop: string]: any;
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/dist/compile/validate/index.d.ts:    schema: any;
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/lib/vocabularies/validation/const.ts:export type ConstError = ErrorObject<"const", {allowedValue: any}>
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/lib/vocabularies/validation/enum.ts:export type EnumError = ErrorObject<"enum", {allowedValues: any[]}, any[] | {$data: string}>
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/lib/types/json-schema.ts:  [keyword: string]: any
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/lib/types/index.ts:  parentData: {[K in T]: any} // object or array
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/lib/types/index.ts:  (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/lib/types/index.ts:  schema: any,
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/lib/types/index.ts:  schema: any,
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/lib/types/index.ts:    schema: any,
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/lib/types/index.ts:    data: any,
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/lib/types/index.ts:  schema: any // TODO
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/lib/core.ts:  [prop: string]: any
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/lib/core.ts:  cache?: any
./backend/newpennine-api/node_modules/ajv-formats/node_modules/ajv/lib/compile/validate/index.ts:  schema: any // keyword value in the schema
./backend/newpennine-api/node_modules/safe-buffer/index.d.ts:    toJSON(): { type: 'Buffer', data: any[] };
./backend/newpennine-api/node_modules/safe-buffer/index.d.ts:    fill(value: any, offset?: number, end?: number): this;
./backend/newpennine-api/node_modules/safe-buffer/index.d.ts:    constructor (array: any[]);
./backend/newpennine-api/node_modules/safe-buffer/index.d.ts:    static from(array: any[]): Buffer;
./backend/newpennine-api/node_modules/safe-buffer/index.d.ts:    static isBuffer(obj: any): obj is Buffer;
./backend/newpennine-api/node_modules/source-map-support/node_modules/source-map/source-map.d.ts:    eachMapping(callback: (mapping: MappingItem) => void, context?: any, order?: number): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2019.object.d.ts:    fromEntries(entries: Iterable<readonly any[]>): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.iterable.d.ts:    initMessageEvent(type: string, bubbles?: boolean, cancelable?: boolean, data?: any, origin?: string, lastEventId?: string, source?: MessageEventSource | null, ports?: Iterable<MessagePort>): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.iterable.d.ts:    getActiveUniforms(program: WebGLProgram, uniformIndices: Iterable<GLuint>, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.reflect.d.ts:    function apply(target: Function, thisArgument: any, argumentsList: ArrayLike<any>): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.reflect.d.ts:        newTarget?: new (...args: any) => any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.reflect.d.ts:    function construct(target: Function, argumentsList: ArrayLike<any>, newTarget?: Function): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.reflect.d.ts:    ): P extends keyof T ? T[P] : any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.reflect.d.ts:    ): TypedPropertyDescriptor<P extends keyof T ? T[P] : any> | undefined;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.reflect.d.ts:        value: P extends keyof T ? T[P] : any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.reflect.d.ts:        receiver?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.reflect.d.ts:    function set(target: object, propertyKey: PropertyKey, value: any, receiver?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2021.intl.d.ts:        fractionalSecond: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.core.d.ts:    find<S extends T>(predicate: (value: T, index: number, obj: T[]) => value is S, thisArg?: any): S | undefined;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.core.d.ts:    find(predicate: (value: T, index: number, obj: T[]) => unknown, thisArg?: any): T | undefined;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.core.d.ts:    findIndex(predicate: (value: T, index: number, obj: T[]) => unknown, thisArg?: any): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.core.d.ts:    from<T, U>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => U, thisArg?: any): U[];
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.core.d.ts:    assign(target: object, ...sources: any[]): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.core.d.ts:    getOwnPropertySymbols(o: any): symbol[];
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.core.d.ts:    is(value1: any, value2: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.core.d.ts:    setPrototypeOf(o: any, proto: object | null): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.core.d.ts:    find<S extends T>(predicate: (value: T, index: number, obj: readonly T[]) => value is S, thisArg?: any): S | undefined;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.core.d.ts:    find(predicate: (value: T, index: number, obj: readonly T[]) => unknown, thisArg?: any): T | undefined;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.core.d.ts:    findIndex(predicate: (value: T, index: number, obj: readonly T[]) => unknown, thisArg?: any): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.core.d.ts:    raw(template: { raw: readonly string[] | ArrayLike<string>; }, ...substitutions: any[]): string;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.proxy.d.ts:    apply?(target: T, thisArg: any, argArray: any[]): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.proxy.d.ts:    construct?(target: T, argArray: any[], newTarget: Function): object;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.proxy.d.ts:    get?(target: T, p: string | symbol, receiver: any): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.proxy.d.ts:    set?(target: T, p: string | symbol, newValue: any, receiver: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.generator.d.ts:    throw(e: any): IteratorResult<T, TReturn>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.generator.d.ts:    new (...args: any[]): Generator;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.generator.d.ts:    (...args: any[]): Generator;
./backend/newpennine-api/node_modules/typescript/lib/lib.esnext.disposable.d.ts:    error: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.esnext.disposable.d.ts:    suppressed: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.esnext.disposable.d.ts:    new (error: any, suppressed: any, message?: string): SuppressedError;
./backend/newpennine-api/node_modules/typescript/lib/lib.esnext.disposable.d.ts:    (error: any, suppressed: any, message?: string): SuppressedError;
./backend/newpennine-api/node_modules/typescript/lib/lib.scripthost.d.ts:    new (s: string): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.scripthost.d.ts:    Echo(s: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.scripthost.d.ts:    ConnectObject(objEventSource: any, strPrefix: string): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.scripthost.d.ts:    CreateObject(strProgID: string, strPrefix?: string): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.scripthost.d.ts:    DisconnectObject(obj: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.scripthost.d.ts:    GetObject(strPathname: string, strProgID?: string, strPrefix?: string): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.scripthost.d.ts:    new <T = any>(collection: { Item(index: any): T; }): Enumerator<T>;
./backend/newpennine-api/node_modules/typescript/lib/lib.scripthost.d.ts:    new <T = any>(collection: any): Enumerator<T>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.promise.d.ts:    new <T>(executor: (resolve: (value: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void): Promise<T>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.promise.d.ts:    reject<T = never>(reason?: any): Promise<T>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts:    [Symbol.hasInstance](value: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts:    [Symbol.replace](string: string, replacer: (substring: string, ...args: any[]) => string): string;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts:    replace(searchValue: { [Symbol.replace](string: string, replacer: (substring: string, ...args: any[]) => string): string; }, replacer: (substring: string, ...args: any[]) => string): string;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2024.promise.d.ts:    reject: (reason?: any) => void;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.iterable.d.ts:    throw?(e?: any): IteratorResult<T, TReturn>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.iterable.d.ts:    from<T, U>(iterable: Iterable<T> | ArrayLike<T>, mapfn: (v: T, k: number) => U, thisArg?: any): U[];
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.iterable.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Int8Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.iterable.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Uint8Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.iterable.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Uint8ClampedArray<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.iterable.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Int16Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.iterable.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Uint16Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.iterable.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Int32Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.iterable.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Uint32Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.iterable.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Float32Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.iterable.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Float64Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.decorators.d.ts:    Class extends abstract new (...args: any) => any = abstract new (...args: any) => any,
./backend/newpennine-api/node_modules/typescript/lib/lib.decorators.d.ts:    Value extends (this: This, ...args: any) => any = (this: This, ...args: any) => any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2021.string.d.ts:    replaceAll(searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2018.asynciterable.d.ts:    throw?(e?: any): Promise<IteratorResult<T, TReturn>>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:declare function eval(x: string): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    value?: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    get?(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    set?(v: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    new (value?: any): Object;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    (): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    (value: any): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    getPrototypeOf(o: any): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    getOwnPropertyDescriptor(o: any, p: PropertyKey): PropertyDescriptor | undefined;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    getOwnPropertyNames(o: any): string[];
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    create(o: object | null): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    create(o: object | null, properties: PropertyDescriptorMap & ThisType<any>): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    isSealed(o: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    isFrozen(o: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    isExtensible(o: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    apply(this: Function, thisArg: any, argArray?: any): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    call(this: Function, thisArg: any, ...argArray: any[]): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    bind(this: Function, thisArg: any, ...argArray: any[]): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    prototype: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    arguments: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    bind<T>(this: T, thisArg: any): T;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    bind<A extends any[], B extends any[], R>(this: new (...args: [...A, ...B]) => R, thisArg: any, ...args: A): new (...args: B) => R;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    [index: number]: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    replace(searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    new (value?: any): String;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    (value?: any): string;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    new (value?: any): Boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    new (value?: any): Number;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    (value?: any): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    toJSON(key?: any): string;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    parse(text: string, reviver?: (this: any, key: string, value: any) => any): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    stringify(value: any, replacer?: (this: any, key: string, value: any) => any, space?: string | number): string;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    stringify(value: any, replacer?: (number | string)[] | null, space?: string | number): string;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    every<S extends T>(predicate: (value: T, index: number, array: readonly T[]) => value is S, thisArg?: any): this is readonly S[];
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    every(predicate: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    some(predicate: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    forEach(callbackfn: (value: T, index: number, array: readonly T[]) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    map<U>(callbackfn: (value: T, index: number, array: readonly T[]) => U, thisArg?: any): U[];
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    filter<S extends T>(predicate: (value: T, index: number, array: readonly T[]) => value is S, thisArg?: any): S[];
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    filter(predicate: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any): T[];
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    every<S extends T>(predicate: (value: T, index: number, array: T[]) => value is S, thisArg?: any): this is S[];
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    every(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    some(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    forEach(callbackfn: (value: T, index: number, array: T[]) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    map<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): U[];
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    filter<S extends T>(predicate: (value: T, index: number, array: T[]) => value is S, thisArg?: any): S[];
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    filter(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): T[];
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    new (arrayLength?: number): any[];
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    (arrayLength?: number): any[];
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    isArray(arg: any): arg is any[];
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    readonly prototype: any[];
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:declare type PromiseConstructorLike = new <T>(executor: (resolve: (value: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void) => PromiseLike<T>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): PromiseLike<TResult1 | TResult2>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    T extends object & { then(onfulfilled: infer F, ...args: infer _): any; } ? // `await` only unwraps object types with a callable `then`. Non-object types are not unwrapped
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:type Parameters<T extends (...args: any) => any> = T extends (...args: infer P) => any ? P : never;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:type ConstructorParameters<T extends abstract new (...args: any) => any> = T extends abstract new (...args: infer P) => any ? P : never;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:type ReturnType<T extends (...args: any) => any> = T extends (...args: any) => infer R ? R : any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:type InstanceType<T extends abstract new (...args: any) => any> = T extends abstract new (...args: any) => infer R ? R : any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    isView(arg: any): arg is ArrayBufferView;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Int8Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Int8Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Int8Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Uint8Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Uint8Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint8Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Uint8ClampedArray<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Uint8ClampedArray<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint8ClampedArray<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Int16Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Int16Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Int16Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Uint16Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Uint16Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint16Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Int32Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Int32Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Int32Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Uint32Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Uint32Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint32Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Float32Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Float32Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Float32Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Float64Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Float64Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es5.d.ts:    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Float64Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.esnext.float16.d.ts:    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.esnext.float16.d.ts:    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Float16Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.esnext.float16.d.ts:    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;
./backend/newpennine-api/node_modules/typescript/lib/lib.esnext.float16.d.ts:    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.esnext.float16.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.esnext.float16.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.esnext.float16.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.esnext.float16.d.ts:    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.esnext.float16.d.ts:    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Float16Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.esnext.float16.d.ts:    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.esnext.float16.d.ts:    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Float16Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.esnext.float16.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Float16Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2020.promise.d.ts:    reason: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    processorOptions?: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    error?: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    data?: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    data?: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    paymentMethodErrors?: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    methodDetails?: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    data?: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    detail?: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    detail?: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    state?: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    reason?: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    abort(reason?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    readonly reason: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    abort(reason?: any): AbortSignal;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: AudioParam, key: string, parent: AudioParamMap) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    returnValue: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    postMessage(message: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: CSSNumericValue, key: number, parent: CSSNumericArray) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: CSSTransformComponent, key: number, parent: CSSTransformValue) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: CSSUnparsedSegment, key: number, parent: CSSUnparsedValue) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: string, key: string, parent: CustomStateSet) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    hasFeature(...args: any[]): true;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: string, key: number, parent: DOMTokenList) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    readonly error: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: number, key: string, parent: EventCounts) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: FontFace, key: FontFace, parent: FontFaceSet) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: FormDataEntryValue, key: string, parent: FormData) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getContext(contextId: string, options?: any): RenderingContext | null;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    [name: string]: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: string, key: string, parent: Headers) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: AbstractRange, key: AbstractRange, parent: Highlight) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: Highlight, key: string, parent: HighlightRegistry) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    readonly state: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    pushState(data: any, unused: string, url?: string | URL | null): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    replaceState(data: any, unused: string, url?: string | URL | null): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    update(value: any): IDBRequest<IDBValidKey>;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    readonly value: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    cmp(first: any, second: any): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    readonly lower: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    readonly upper: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    includes(key: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    bound(lower: any, upper: any, lowerOpen?: boolean, upperOpen?: boolean): IDBKeyRange;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    lowerBound(lower: any, open?: boolean): IDBKeyRange;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    only(value: any): IDBKeyRange;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    upperBound(upper: any, open?: boolean): IDBKeyRange;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    add(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    put(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: MIDIInput, key: string, parent: MIDIInputMap) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: MIDIOutput, key: string, parent: MIDIOutputMap) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: MediaKeyStatus, key: BufferSource, parent: MediaKeyStatusMap) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    initMessageEvent(type: string, bubbles?: boolean, cancelable?: boolean, data?: any, origin?: string, lastEventId?: string, source?: MessageEventSource | null, ports?: MessagePort[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    postMessage(message: any, transfer: Transferable[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    postMessage(message: any, options?: StructuredSerializeOptions): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getState(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: Node, key: number, parent: NodeList) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: TNode, key: number, parent: NodeListOf<TNode>) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    readonly data: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getContext(contextId: "2d", options?: any): OffscreenCanvasRenderingContext2D | null;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getContext(contextId: "bitmaprenderer", options?: any): ImageBitmapRenderingContext | null;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getContext(contextId: "webgl", options?: any): WebGLRenderingContext | null;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getContext(contextId: "webgl2", options?: any): WebGL2RenderingContext | null;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getContext(contextId: OffscreenRenderingContextId, options?: any): OffscreenRenderingContext | null;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    readonly methodDetails: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    readonly details: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    readonly detail: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    readonly detail: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    readonly state: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    readonly reason: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    new(worker: Worker, options?: any, transfer?: any[]): RTCRtpScriptTransform;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: any, key: string, parent: RTCStatsReport) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    error(e?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    cancel(reason?: any): Promise<void>;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    error(e?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    cancel(reason?: any): Promise<void>;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    json(data: any, init?: ResponseInit): Response;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    readonly className: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    postMessage(message: any, transfer: Transferable[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    postMessage(message: any, options?: StructuredSerializeOptions): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    [name: string]: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: CSSStyleValue[], key: string, parent: StylePropertyMapReadOnly) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    error(reason?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: string, key: string, parent: URLSearchParams) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    forEach(callbackfn: (value: string, key: string, parent: ViewTransitionTypeSet) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getActiveUniformBlockParameter(program: WebGLProgram, uniformBlockIndex: GLuint, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getActiveUniforms(program: WebGLProgram, uniformIndices: GLuint[], pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getIndexedParameter(target: GLenum, index: GLuint): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getInternalformatParameter(target: GLenum, internalformat: GLenum, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getQueryParameter(query: WebGLQuery, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getSamplerParameter(sampler: WebGLSampler, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getSyncParameter(sync: WebGLSync, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getBufferParameter(target: GLenum, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getExtension(name: string): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getFramebufferAttachmentParameter(target: GLenum, attachment: GLenum, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getParameter(pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getProgramParameter(program: WebGLProgram, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getRenderbufferParameter(target: GLenum, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getShaderParameter(shader: WebGLShader, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getTexParameter(target: GLenum, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getUniform(program: WebGLProgram, location: WebGLUniformLocation): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getVertexAttrib(index: GLuint, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    opener: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    alert(message?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    postMessage(message: any, targetOrigin: string, transfer?: Transferable[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    postMessage(message: any, options?: WindowPostMessageOptions): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    reportError(e: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    setInterval(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    setTimeout(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    postMessage(message: any, transfer: Transferable[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    postMessage(message: any, options?: StructuredSerializeOptions): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    abort(reason?: any): Promise<void>;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    error(e?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    abort(reason?: any): Promise<void>;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    readonly response: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    getParameter(namespaceURI: string | null, localName: string): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    setParameter(namespaceURI: string | null, localName: string, value: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    assert(condition?: boolean, ...data: any[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    debug(...data: any[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    dir(item?: any, options?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    dirxml(...data: any[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    error(...data: any[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    group(...data: any[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    groupCollapsed(...data: any[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    info(...data: any[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    log(...data: any[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    table(tabularData?: any, properties?: string[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    timeLog(label?: string, ...data: any[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    trace(...data: any[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    warn(...data: any[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:        get(index: number): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:        grow(delta: number, value?: any): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:        set(index: number, value?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:        new(descriptor: TableDescriptor, value?: any): Table;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:        externref: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    new (...params: any[]): HTMLElement;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    (lock: Lock | null): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    (controller: TransformStreamDefaultController<O>): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    (reason?: any): void | PromiseLike<void>;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    (controller: WritableStreamDefaultController): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    (reason?: any): void | PromiseLike<void>;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    (controller: ReadableStreamController<R>): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:    (): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:declare var opener: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:declare function alert(message?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:declare function postMessage(message: any, targetOrigin: string, transfer?: Transferable[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:declare function postMessage(message: any, options?: WindowPostMessageOptions): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:declare function reportError(e: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:declare function setInterval(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.dom.d.ts:declare function setTimeout(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:    findLast<S extends T>(predicate: (value: T, index: number, array: T[]) => value is S, thisArg?: any): S | undefined;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:    findLast(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): T | undefined;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:    findLastIndex(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.es2023.array.d.ts:        thisArg?: any,
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.iterable.d.ts:    initMessageEvent(type: string, bubbles?: boolean, cancelable?: boolean, data?: any, origin?: string, lastEventId?: string, source?: MessageEventSource | null, ports?: Iterable<MessagePort>): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.iterable.d.ts:    getActiveUniforms(program: WebGLProgram, uniformIndices: Iterable<GLuint>, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2020.bigint.d.ts:    every(predicate: (value: bigint, index: number, array: BigInt64Array<TArrayBuffer>) => boolean, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2020.bigint.d.ts:    filter(predicate: (value: bigint, index: number, array: BigInt64Array<TArrayBuffer>) => any, thisArg?: any): BigInt64Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2020.bigint.d.ts:    find(predicate: (value: bigint, index: number, array: BigInt64Array<TArrayBuffer>) => boolean, thisArg?: any): bigint | undefined;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2020.bigint.d.ts:    findIndex(predicate: (value: bigint, index: number, array: BigInt64Array<TArrayBuffer>) => boolean, thisArg?: any): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2020.bigint.d.ts:    forEach(callbackfn: (value: bigint, index: number, array: BigInt64Array<TArrayBuffer>) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2020.bigint.d.ts:    map(callbackfn: (value: bigint, index: number, array: BigInt64Array<TArrayBuffer>) => bigint, thisArg?: any): BigInt64Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2020.bigint.d.ts:    some(predicate: (value: bigint, index: number, array: BigInt64Array<TArrayBuffer>) => boolean, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2020.bigint.d.ts:    from<U>(arrayLike: ArrayLike<U>, mapfn: (v: U, k: number) => bigint, thisArg?: any): BigInt64Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2020.bigint.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => bigint, thisArg?: any): BigInt64Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2020.bigint.d.ts:    every(predicate: (value: bigint, index: number, array: BigUint64Array<TArrayBuffer>) => boolean, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2020.bigint.d.ts:    filter(predicate: (value: bigint, index: number, array: BigUint64Array<TArrayBuffer>) => any, thisArg?: any): BigUint64Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2020.bigint.d.ts:    find(predicate: (value: bigint, index: number, array: BigUint64Array<TArrayBuffer>) => boolean, thisArg?: any): bigint | undefined;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2020.bigint.d.ts:    findIndex(predicate: (value: bigint, index: number, array: BigUint64Array<TArrayBuffer>) => boolean, thisArg?: any): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2020.bigint.d.ts:    forEach(callbackfn: (value: bigint, index: number, array: BigUint64Array<TArrayBuffer>) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2020.bigint.d.ts:    map(callbackfn: (value: bigint, index: number, array: BigUint64Array<TArrayBuffer>) => bigint, thisArg?: any): BigUint64Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2020.bigint.d.ts:    some(predicate: (value: bigint, index: number, array: BigUint64Array<TArrayBuffer>) => boolean, thisArg?: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2020.bigint.d.ts:    from<U>(arrayLike: ArrayLike<U>, mapfn: (v: U, k: number) => bigint, thisArg?: any): BigUint64Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2020.bigint.d.ts:    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => bigint, thisArg?: any): BigUint64Array<ArrayBuffer>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2021.promise.d.ts:    errors: any[];
./backend/newpennine-api/node_modules/typescript/lib/lib.es2017.intl.d.ts:        day: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2017.intl.d.ts:        dayPeriod: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2017.intl.d.ts:        era: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2017.intl.d.ts:        hour: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2017.intl.d.ts:        literal: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2017.intl.d.ts:        minute: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2017.intl.d.ts:        month: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2017.intl.d.ts:        second: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2017.intl.d.ts:        timeZoneName: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2017.intl.d.ts:        weekday: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2017.intl.d.ts:        year: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    error?: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    data?: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    data?: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    detail?: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    detail?: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    reason?: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    abort(reason?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    readonly reason: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    abort(reason?: any): AbortSignal;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    postMessage(message: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    forEach(callbackfn: (value: CSSNumericValue, key: number, parent: CSSNumericArray) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    forEach(callbackfn: (value: CSSTransformComponent, key: number, parent: CSSTransformValue) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    forEach(callbackfn: (value: CSSUnparsedSegment, key: number, parent: CSSUnparsedValue) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    postMessage(message: any, transfer: Transferable[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    postMessage(message: any, options?: StructuredSerializeOptions): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    postMessage(message: any, transfer: Transferable[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    postMessage(message: any, options?: StructuredSerializeOptions): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    readonly error: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    readonly data: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    forEach(callbackfn: (value: FontFace, key: FontFace, parent: FontFaceSet) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    forEach(callbackfn: (value: FormDataEntryValue, key: string, parent: FormData) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    forEach(callbackfn: (value: string, key: string, parent: Headers) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    update(value: any): IDBRequest<IDBValidKey>;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    readonly value: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    cmp(first: any, second: any): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    readonly lower: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    readonly upper: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    includes(key: any): boolean;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    bound(lower: any, upper: any, lowerOpen?: boolean, upperOpen?: boolean): IDBKeyRange;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    lowerBound(lower: any, open?: boolean): IDBKeyRange;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    only(value: any): IDBKeyRange;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    upperBound(upper: any, open?: boolean): IDBKeyRange;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    add(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    put(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    initMessageEvent(type: string, bubbles?: boolean, cancelable?: boolean, data?: any, origin?: string, lastEventId?: string, source?: MessageEventSource | null, ports?: MessagePort[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    postMessage(message: any, transfer: Transferable[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    postMessage(message: any, options?: StructuredSerializeOptions): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    readonly data: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    getContext(contextId: "2d", options?: any): OffscreenCanvasRenderingContext2D | null;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    getContext(contextId: "bitmaprenderer", options?: any): ImageBitmapRenderingContext | null;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    getContext(contextId: "webgl", options?: any): WebGLRenderingContext | null;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    getContext(contextId: "webgl2", options?: any): WebGL2RenderingContext | null;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    getContext(contextId: OffscreenRenderingContextId, options?: any): OffscreenRenderingContext | null;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    readonly detail: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    readonly detail: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    readonly reason: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    json(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    readonly options: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    error(e?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    cancel(reason?: any): Promise<void>;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    error(e?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    cancel(reason?: any): Promise<void>;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    toJSON(): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    json(data: any, init?: ResponseInit): Response;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    postMessage(message: any, transfer: Transferable[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    postMessage(message: any, options?: StructuredSerializeOptions): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    forEach(callbackfn: (value: CSSStyleValue[], key: string, parent: StylePropertyMapReadOnly) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    error(reason?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    forEach(callbackfn: (value: string, key: string, parent: URLSearchParams) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    getActiveUniformBlockParameter(program: WebGLProgram, uniformBlockIndex: GLuint, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    getActiveUniforms(program: WebGLProgram, uniformIndices: GLuint[], pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    getIndexedParameter(target: GLenum, index: GLuint): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    getInternalformatParameter(target: GLenum, internalformat: GLenum, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    getQueryParameter(query: WebGLQuery, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    getSamplerParameter(sampler: WebGLSampler, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    getSyncParameter(sync: WebGLSync, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    getBufferParameter(target: GLenum, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    getExtension(name: string): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    getFramebufferAttachmentParameter(target: GLenum, attachment: GLenum, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    getParameter(pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    getProgramParameter(program: WebGLProgram, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    getRenderbufferParameter(target: GLenum, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    getShaderParameter(shader: WebGLShader, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    getTexParameter(target: GLenum, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    getUniform(program: WebGLProgram, location: WebGLUniformLocation): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    getVertexAttrib(index: GLuint, pname: GLenum): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    reportError(e: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    setInterval(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    setTimeout(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    postMessage(message: any, transfer: Transferable[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    postMessage(message: any, options?: StructuredSerializeOptions): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    abort(reason?: any): Promise<void>;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    error(e?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    abort(reason?: any): Promise<void>;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    readonly response: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    assert(condition?: boolean, ...data: any[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    debug(...data: any[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    dir(item?: any, options?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    dirxml(...data: any[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    error(...data: any[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    group(...data: any[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    groupCollapsed(...data: any[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    info(...data: any[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    log(...data: any[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    table(tabularData?: any, properties?: string[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    timeLog(label?: string, ...data: any[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    trace(...data: any[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    warn(...data: any[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:        get(index: number): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:        grow(delta: number, value?: any): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:        set(index: number, value?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:        new(descriptor: TableDescriptor, value?: any): Table;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:        externref: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    (lock: Lock | null): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    (controller: TransformStreamDefaultController<O>): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    (reason?: any): void | PromiseLike<void>;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    (controller: WritableStreamDefaultController): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    (reason?: any): void | PromiseLike<void>;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:    (controller: ReadableStreamController<R>): any;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:declare function postMessage(message: any, transfer: Transferable[]): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:declare function postMessage(message: any, options?: StructuredSerializeOptions): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:declare function reportError(e: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:declare function setInterval(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.webworker.d.ts:declare function setTimeout(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts:    throw(e: any): Promise<IteratorResult<T, TReturn>>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts:    new (...args: any[]): AsyncGenerator;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts:    (...args: any[]): AsyncGenerator;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2017.object.d.ts:    values(o: {}): any[];
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:                    [K in keyof T]?: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:                arguments?: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:                body?: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:                body?: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:                configuration: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:                payload: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:            data: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:            setTimeout(callback: (...args: any[]) => void, ms: number, ...args: any[]): any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:            clearTimeout(timeoutId: any): void;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:            setImmediate(callback: (...args: any[]) => void, ...args: any[]): any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:            clearImmediate(timeoutId: any): void;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:            __normalizedPathTag: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:            config: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:            onConfigurationChanged?(config: any): void;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        const CommandNames: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        " __sortedArrayBrand": any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        " __sortedArrayBrand": any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        __pathBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _jsdocContainerBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _localsContainerBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _flowContainerBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _declarationBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _autoAccessorBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _objectLiteralBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _functionLikeDeclarationBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _typeNodeBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _expressionBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _unaryExpressionBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _updateExpressionBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _leftHandSideExpressionBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _memberExpressionBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _primaryExpressionBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _literalExpressionBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _optionalChainBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _propertyAccessExpressionLikeQualifiedNameBrand?: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _optionalChainBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _optionalChainBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _optionalChainBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _statementBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _classElementBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _typeElementBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        _jsDocTypeBrand: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        raw?: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        setTimeout?(callback: (...args: any[]) => void, ms: number, ...args: any[]): any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        clearTimeout?(timeoutId: any): void;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:    type ErrorCallback = (message: DiagnosticMessage, length: number, arg0?: any) => void;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        config?: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        config?: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:    function convertToObject(sourceFile: JsonSourceFile, errors: Diagnostic[]): any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:    function parseJsonConfigFileContent(json: any, host: ParseConfigHost, basePath: string, existingOptions?: CompilerOptions, configFileName?: string, resolutionStack?: Path[], extraFileExtensions?: readonly FileExtensionInfo[], extendedConfigCache?: Map<string, ExtendedConfigCacheEntry>, existingWatchOptions?: WatchOptions): ParsedCommandLine;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:    function convertCompilerOptionsFromJson(jsonOptions: any, basePath: string, configFileName?: string): {
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:    function convertTypeAcquisitionFromJson(jsonOptions: any, basePath: string, configFileName?: string): {
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        raw: any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        setTimeout?(callback: (...args: any[]) => void, ms: number, ...args: any[]): any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        clearTimeout?(timeoutId: any): void;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        getLocalizedDiagnosticMessages?(): any;
./backend/newpennine-api/node_modules/typescript/lib/typescript.d.ts:        __bucketKey: any;
./backend/newpennine-api/node_modules/typescript/lib/lib.esnext.array.d.ts:    fromAsync<T, U>(iterableOrArrayLike: AsyncIterable<T> | Iterable<T> | ArrayLike<T>, mapFn: (value: Awaited<T>, index: number) => U, thisArg?: any): Promise<Awaited<U>[]>;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.collection.d.ts:    forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.collection.d.ts:    forEach(callbackfn: (value: V, key: K, map: ReadonlyMap<K, V>) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.collection.d.ts:    forEach(callbackfn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/typescript/lib/lib.es2015.collection.d.ts:    forEach(callbackfn: (value: T, value2: T, set: ReadonlySet<T>) => void, thisArg?: any): void;
./backend/newpennine-api/node_modules/@swc/types/index.d.ts:    global_defs?: any;
./backend/newpennine-api/node_modules/@swc/types/index.d.ts:    pure_getters?: any;
./backend/newpennine-api/node_modules/@swc/types/index.d.ts:    sequences?: any;
./backend/newpennine-api/node_modules/@swc/types/index.d.ts:    top_retain?: any;
./backend/newpennine-api/node_modules/@swc/types/index.d.ts:    toplevel?: any;
./backend/newpennine-api/node_modules/@swc/types/index.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@swc/types/index.d.ts:    targets?: any;
./backend/newpennine-api/node_modules/@swc/core/util.d.ts:export declare function wrapNativeSuper(Class: any): never;
./backend/newpennine-api/node_modules/@swc/cli/node_modules/commander/typings/index.d.ts:  defaultValue?: any;
./backend/newpennine-api/node_modules/@swc/cli/node_modules/commander/typings/index.d.ts:  [key: string]: any;
./backend/newpennine-api/node_modules/@swc/cli/node_modules/commander/typings/index.d.ts:  processedArgs: any[];
./backend/newpennine-api/node_modules/@swc/cli/node_modules/commander/typings/index.d.ts:  action(fn: (...args: any[]) => void | Promise<void>): this;
./backend/newpennine-api/node_modules/@swc/cli/node_modules/commander/typings/index.d.ts:  getOptionValue(key: string): any;
./backend/newpennine-api/node_modules/@swc/cli/node_modules/commander/typings/index.d.ts:  on(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/@swc/cli/node_modules/minimatch/dist/esm/index.d.ts:    debug(..._: any[]): void;
./backend/newpennine-api/node_modules/@swc/cli/node_modules/minimatch/dist/esm/ast.d.ts:    toJSON(): any[];
./backend/newpennine-api/node_modules/@swc/cli/node_modules/minimatch/dist/esm/assert-valid-pattern.d.ts:export declare const assertValidPattern: (pattern: any) => void;
./backend/newpennine-api/node_modules/@swc/cli/node_modules/minimatch/dist/commonjs/index.d.ts:    debug(..._: any[]): void;
./backend/newpennine-api/node_modules/@swc/cli/node_modules/minimatch/dist/commonjs/ast.d.ts:    toJSON(): any[];
./backend/newpennine-api/node_modules/@swc/cli/node_modules/minimatch/dist/commonjs/assert-valid-pattern.d.ts:export declare const assertValidPattern: (pattern: any) => void;
./backend/newpennine-api/node_modules/chokidar/esm/handler.d.ts:    _watchWithNodeFs(path: string, listener: (path: string, newStats?: any) => void | Promise<void>): (() => void) | undefined;
./backend/newpennine-api/node_modules/chokidar/handler.d.ts:    _watchWithNodeFs(path: string, listener: (path: string, newStats?: any) => void | Promise<void>): (() => void) | undefined;
./backend/newpennine-api/node_modules/keyv/src/index.d.ts:		[key: string]: any;
./backend/newpennine-api/node_modules/keyv/src/index.d.ts:		compress(value: any, options?: any): Promise<any>;
./backend/newpennine-api/node_modules/keyv/src/index.d.ts:		decompress(value: any, options?: any): Promise<any>;
./backend/newpennine-api/node_modules/keyv/src/index.d.ts:		serialize(value: any): Promise<any>;
./backend/newpennine-api/node_modules/keyv/src/index.d.ts:		deserialize(value: any): Promise<any>;
./backend/newpennine-api/node_modules/keyv/src/index.d.ts:		set(key: string, value: Value, ttl?: number): any;
./backend/newpennine-api/node_modules/terser-webpack-plugin/types/utils.d.ts: * @param fn {(function(): any) | undefined}
./backend/newpennine-api/node_modules/terser-webpack-plugin/types/index.d.ts:  astNode: any,
./backend/newpennine-api/node_modules/terser-webpack-plugin/types/index.d.ts:type ExtractCommentsFilename = string | ((fileData: any) => string);
./backend/newpennine-api/node_modules/terser-webpack-plugin/types/index.d.ts:  [key: string]: any;
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/json-schema-traverse/index.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/schema-utils/declarations/util/memorize.d.ts: * @param fn {(function(): any) | undefined}
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv-keywords/dist/definitions/instanceof.d.ts:declare type Constructor = new (...args: any[]) => any;
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv-keywords/src/definitions/instanceof.ts:type Constructor = new (...args: any[]) => any
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/dist/vocabularies/validation/const.d.ts:    allowedValue: any;
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/dist/vocabularies/validation/enum.d.ts:    allowedValues: any[];
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/dist/types/json-schema.d.ts:    [keyword: string]: any;
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/dist/types/index.d.ts:        [K in T]: any;
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/dist/types/index.d.ts:    (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T;
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/dist/types/index.d.ts:export type MacroKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaCxt) => AnySchema;
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/dist/types/index.d.ts:export type CompileKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaObjCxt) => DataValidateFunction;
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/dist/types/index.d.ts:    (schema: any, data: any, parentSchema?: AnySchemaObject, dataCxt?: DataValidationCxt): boolean | Promise<any>;
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/dist/types/index.d.ts:    schema: any;
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/dist/core.d.ts:    [prop: string]: any;
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/dist/compile/validate/index.d.ts:    schema: any;
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/lib/vocabularies/validation/const.ts:export type ConstError = ErrorObject<"const", {allowedValue: any}>
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/lib/vocabularies/validation/enum.ts:export type EnumError = ErrorObject<"enum", {allowedValues: any[]}, any[] | {$data: string}>
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/lib/types/json-schema.ts:  [keyword: string]: any
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/lib/types/index.ts:  parentData: {[K in T]: any} // object or array
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/lib/types/index.ts:  (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/lib/types/index.ts:  schema: any,
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/lib/types/index.ts:  schema: any,
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/lib/types/index.ts:    schema: any,
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/lib/types/index.ts:    data: any,
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/lib/types/index.ts:  schema: any // TODO
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/lib/core.ts:  [prop: string]: any
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/lib/core.ts:  cache?: any
./backend/newpennine-api/node_modules/terser-webpack-plugin/node_modules/ajv/lib/compile/validate/index.ts:  schema: any // keyword value in the schema
./backend/newpennine-api/node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch/dist/esm/index.d.ts:    debug(..._: any[]): void;
./backend/newpennine-api/node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch/dist/esm/ast.d.ts:    toJSON(): any[];
./backend/newpennine-api/node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch/dist/esm/assert-valid-pattern.d.ts:export declare const assertValidPattern: (pattern: any) => void;
./backend/newpennine-api/node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch/dist/commonjs/index.d.ts:    debug(..._: any[]): void;
./backend/newpennine-api/node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch/dist/commonjs/ast.d.ts:    toJSON(): any[];
./backend/newpennine-api/node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch/dist/commonjs/assert-valid-pattern.d.ts:export declare const assertValidPattern: (pattern: any) => void;
./backend/newpennine-api/node_modules/@typescript-eslint/utils/dist/ast-utils/eslint-utils/astUtilities.d.ts: * @returns The `{ value: any }` shaped object. The `value` property is the static value. If it couldn't compute the
./backend/newpennine-api/node_modules/@typescript-eslint/utils/dist/ts-eslint/Rule.d.ts:export type LooseRuleCreateFunction = (context: any) => Record<string, Function | undefined>;
./backend/newpennine-api/node_modules/@typescript-eslint/utils/dist/ts-eslint/Processor.d.ts:        postprocess?: (messagesList: any, filename: string) => any;
./backend/newpennine-api/node_modules/jackspeak/dist/esm/index.d.ts:export declare const isConfigOptionOfType: <T extends ConfigType, M extends boolean>(o: any, type: T, multi: M) => o is ConfigOption<T, M>;
./backend/newpennine-api/node_modules/jackspeak/dist/esm/index.d.ts:export declare const isConfigOption: <T extends ConfigType, M extends boolean>(o: any, type: T, multi: M) => o is ConfigOption<T, M>;
./backend/newpennine-api/node_modules/jackspeak/dist/commonjs/index.d.ts:export declare const isConfigOptionOfType: <T extends ConfigType, M extends boolean>(o: any, type: T, multi: M) => o is ConfigOption<T, M>;
./backend/newpennine-api/node_modules/jackspeak/dist/commonjs/index.d.ts:export declare const isConfigOption: <T extends ConfigType, M extends boolean>(o: any, type: T, multi: M) => o is ConfigOption<T, M>;
./backend/newpennine-api/node_modules/ts-node/dist/ts-compiler-types.d.ts:            Node16: any;
./backend/newpennine-api/node_modules/ts-node/dist/repl.d.ts:    evalCode(code: string): any;
./backend/newpennine-api/node_modules/ts-node/dist/repl.d.ts:    nodeEval(code: string, context: any, _filename: string, callback: (err: Error | null, result?: any) => any): void;
./backend/newpennine-api/node_modules/ts-node/dist/index.d.ts:export declare const VERSION: any;
./backend/newpennine-api/node_modules/ts-node/dist/child/child-require.d.ts:declare function onWarning(this: any, warning: Error, ...rest: any[]): any;
./backend/newpennine-api/node_modules/call-bound/index.d.ts:  (typeof globalThis)[T] extends { prototype: any }
./backend/newpennine-api/node_modules/call-bound/index.d.ts:    (str: string, searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string
./backend/newpennine-api/node_modules/call-bound/index.d.ts:  '%Array.prototype.map%': <T, U>(array: readonly T[], callbackfn: (value: T, index: number, array: readonly T[]) => U, thisArg?: any) => U[];
./backend/newpennine-api/node_modules/call-bound/index.d.ts:  '%Array.prototype.filter%': <T>(array: readonly T[], predicate: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any) => T[];
./backend/newpennine-api/node_modules/call-bound/index.d.ts:  '%Function.prototype.apply%': <T, A extends any[], R>(fn: (...args: A) => R, thisArg: any, args: A) => R;
./backend/newpennine-api/node_modules/call-bound/index.d.ts:  '%Function.prototype.call%': <T, A extends any[], R>(fn: (...args: A) => R, thisArg: any, ...args: A) => R;
./backend/newpennine-api/node_modules/call-bound/index.d.ts:  '%Function.prototype.bind%': <T, A extends any[], R>(fn: (...args: A) => R, thisArg: any, ...args: A) => (...remainingArgs: A) => R;
./backend/newpennine-api/node_modules/call-bound/index.d.ts:    <T, R>(promise: Promise<T>, onfulfilled: ((value: T) => R | PromiseLike<R>) | undefined | null, onrejected: (reason: any) => R | PromiseLike<R>): Promise<R>;
./backend/newpennine-api/node_modules/got/dist/source/core/utils/unhandle.d.ts:type Fn = (...args: any[]) => void;
./backend/newpennine-api/node_modules/got/dist/source/core/calculate-retry-delay.d.ts:type Returns<T extends (...args: any) => unknown, V> = (...args: Parameters<T>) => V;
./backend/newpennine-api/node_modules/@colors/colors/index.d.ts:export function setTheme(theme: any): void;
./backend/newpennine-api/node_modules/@colors/colors/safe.d.ts:export function setTheme(theme: any): void;
./backend/newpennine-api/node_modules/@cspotcode/source-map-support/source-map-support.d.ts:    onConflictingLibraryRedirect?: (request: string, parent: any, isMain: boolean, options: any, redirectedRequest: string) => void;
./backend/newpennine-api/node_modules/@cspotcode/source-map-support/source-map-support.d.ts:export function wrapCallSite(frame: any /* StackFrame */): any /* StackFrame */;
./backend/newpennine-api/node_modules/deepmerge/index.d.ts:		arrayMerge?(target: any[], source: any[], options?: ArrayMergeOptions): any[];
./backend/newpennine-api/node_modules/deepmerge/index.d.ts:		customMerge?: (key: string, options?: Options) => ((x: any, y: any) => any) | undefined;
./backend/newpennine-api/node_modules/undici-types/websocket.d.ts:    data?: any,
./backend/newpennine-api/node_modules/undici-types/websocket.d.ts:  error?: any
./backend/newpennine-api/node_modules/undici-types/websocket.d.ts:  readonly error: any
./backend/newpennine-api/node_modules/undici-types/fetch.d.ts:  static json(data: any, init?: ResponseInit): Response
./backend/newpennine-api/node_modules/undici-types/webidl.d.ts:  Stringify (V: any): string
./backend/newpennine-api/node_modules/undici-types/webidl.d.ts:  markAsUncloneable (V: any): void
./backend/newpennine-api/node_modules/undici-types/webidl.d.ts:  [Key: string]: (...args: any[]) => unknown
./backend/newpennine-api/node_modules/undici-types/diagnostics-channel.d.ts:    headers: any;
./backend/newpennine-api/node_modules/undici-types/patch.d.ts: : any
./backend/newpennine-api/node_modules/consola/dist/core.d.ts:    mockFn?: (type: LogType, defaults: InputLogObject) => (...args: any) => void;
./backend/newpennine-api/node_modules/consola/dist/core.d.ts:    args?: any[];
./backend/newpennine-api/node_modules/consola/dist/core.d.ts:    args: any[];
./backend/newpennine-api/node_modules/consola/dist/core.d.ts:    _wrapLogFn(defaults: InputLogObject, isRaw?: boolean): (...args: any[]) => false | undefined;
./backend/newpennine-api/node_modules/consola/dist/core.d.ts:    _logFn(defaults: InputLogObject, args: any[], isRaw?: boolean): false | undefined;
./backend/newpennine-api/node_modules/consola/dist/core.d.ts:    (message: InputLogObject | any, ...args: any[]): void;
./backend/newpennine-api/node_modules/consola/dist/core.d.ts:    raw: (...args: any[]) => void;
./backend/newpennine-api/node_modules/onetime/index.d.ts:	callCount(fn: (...arguments: any[]) => unknown): number;
./backend/newpennine-api/node_modules/class-transformer/types/TransformOperationExecutor.d.ts:    transform(source: Record<string, any> | Record<string, any>[] | any, value: Record<string, any> | Record<string, any>[] | any, targetType: Function | TypeMetadata, arrayType: Function, isMap: boolean, level?: number): any;
./backend/newpennine-api/node_modules/class-transformer/types/utils/get-global.util.d.ts:export declare function getGlobal(): any;
./backend/newpennine-api/node_modules/class-transformer/types/utils/is-promise.util.d.ts:export declare function isPromise<T>(p: any): p is Promise<T>;
./backend/newpennine-api/node_modules/class-transformer/types/interfaces/class-constructor.type.d.ts:    new (...args: any[]): T;
./backend/newpennine-api/node_modules/class-transformer/types/interfaces/metadata/type-metadata.interface.d.ts:    reflectedType: any;
./backend/newpennine-api/node_modules/class-transformer/types/interfaces/metadata/transform-fn-params.interface.d.ts:    value: any;
./backend/newpennine-api/node_modules/class-transformer/types/interfaces/metadata/transform-fn-params.interface.d.ts:    obj: any;
./backend/newpennine-api/node_modules/class-transformer/types/interfaces/type-help-options.interface.d.ts:    newObject: any;
./backend/newpennine-api/node_modules/bs-logger/dist/logger/context.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/bs-logger/dist/logger/index.d.ts:    (message: string, ...args: any[]): void;
./backend/newpennine-api/node_modules/bs-logger/dist/logger/index.d.ts:    (context: LogContext, message: string, ...args: any[]): void;
./backend/newpennine-api/node_modules/bs-logger/dist/logger/index.d.ts:    <F extends (...args: any[]) => any>(func: F): F;
./backend/newpennine-api/node_modules/bs-logger/dist/logger/index.d.ts:    <F extends (...args: any[]) => any>(message: string, func: F): F;
./backend/newpennine-api/node_modules/bs-logger/dist/logger/index.d.ts:    <F extends (...args: any[]) => any>(context: LogContext, message: string, func: F): F;
./backend/newpennine-api/node_modules/bs-logger/dist/logger/index.d.ts:    <F extends (...args: any[]) => any>(level: number, message: string, func: F): F;
./backend/newpennine-api/node_modules/readdirp/esm/index.d.ts:    parents: any[];
./backend/newpennine-api/node_modules/readdirp/index.d.ts:    parents: any[];
./backend/newpennine-api/node_modules/jest-runner/node_modules/source-map/source-map.d.ts:    eachMapping(callback: (mapping: MappingItem) => void, context?: any, order?: number): void;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	module: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	array?: any[];
./backend/newpennine-api/node_modules/webpack/types.d.ts:				((result: any, callback: (err?: Error) => void) => void)[]
./backend/newpennine-api/node_modules/webpack/types.d.ts:	(err?: null | WebpackError, result?: null | T): any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	(err: null | Error, result?: T): any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	(err?: null | Error, result?: T): any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	getData(module: Module, runtime: RuntimeSpec, key: string): any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:		args?: any[]
./backend/newpennine-api/node_modules/webpack/types.d.ts:	amd?: false | { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:					result?: string | boolean | string[] | { [index: string]: any }
./backend/newpennine-api/node_modules/webpack/types.d.ts:	new (...params: any[]): any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:		newContentResource?: string | boolean | RegExp | ((context?: any) => void),
./backend/newpennine-api/node_modules/webpack/types.d.ts:	newContentCallback?: (context?: any) => void;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	write: (...args: any[]) => any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	close?: (...args: any[]) => any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	new (...args: any[]): Dependency;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	module: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	get disconnect(): any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	new (...args: any[]): Dependency;
./backend/newpennine-api/node_modules/webpack/types.d.ts:type DevtoolModuleFilenameTemplate = string | ((context?: any) => string);
./backend/newpennine-api/node_modules/webpack/types.d.ts:		buildMeta?: { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:	value: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	moduleFilenameTemplate?: string | ((context?: any) => string);
./backend/newpennine-api/node_modules/webpack/types.d.ts:	moduleFilenameTemplate: string | ((context?: any) => string);
./backend/newpennine-api/node_modules/webpack/types.d.ts:	preparedInfo: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	exports: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	exports: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:				result?: string | boolean | string[] | { [index: string]: any }
./backend/newpennine-api/node_modules/webpack/types.d.ts:				result?: string | boolean | string[] | { [index: string]: any }
./backend/newpennine-api/node_modules/webpack/types.d.ts:type ExternalItemValue = string | boolean | string[] | { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:				result?: string | boolean | string[] | { [index: string]: any }
./backend/newpennine-api/node_modules/webpack/types.d.ts:	open?: (...args: any[]) => any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	close?: (...args: any[]) => any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	[index: string]: { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:	getKeys: (item?: any) => undefined | string[];
./backend/newpennine-api/node_modules/webpack/types.d.ts:	createGroup: (key: string, children: any[], items: any[]) => object;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	getOptions?: (name: string, items: any[]) => GroupOptions;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	merge: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	amd?: false | { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:	args?: any[];
./backend/newpennine-api/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:		[index: string]: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:		callback: (err?: null | Error, exports?: any) => any
./backend/newpennine-api/node_modules/webpack/types.d.ts:	readonly data: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	args?: any[];
./backend/newpennine-api/node_modules/webpack/types.d.ts:	get hasEqualsChunks(): any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	get isUsed(): any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	get errors(): any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	get warnings(): any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	used: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	range: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	getMeta(thing: object): any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	getMetaIfExisting(thing: object): any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	parser?: { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:	generator?: { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:	): any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	serialize: (value: any, context: ObjectSerializerContext) => void;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	write: (value?: any) => void;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	writeLazy?: (item?: any) => void;
./backend/newpennine-api/node_modules/webpack/types.d.ts:		item: any,
./backend/newpennine-api/node_modules/webpack/types.d.ts:	devtoolFallbackModuleFilenameTemplate?: string | ((context?: any) => string);
./backend/newpennine-api/node_modules/webpack/types.d.ts:	devtoolModuleFilenameTemplate?: string | ((context?: any) => string);
./backend/newpennine-api/node_modules/webpack/types.d.ts:	devtoolFallbackModuleFilenameTemplate?: string | ((context?: any) => string);
./backend/newpennine-api/node_modules/webpack/types.d.ts:	devtoolModuleFilenameTemplate?: string | ((context?: any) => string);
./backend/newpennine-api/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	[index: string]: { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	additionalAssets?: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	stopProfiling(): Promise<{ profile: any }>;
./backend/newpennine-api/node_modules/webpack/types.d.ts:				[index: string]: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	unsafeCache?: boolean | { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:			[index: string]: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:type RuleSetLoaderOptions = string | { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:	generator?: { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:	options?: string | { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:	parser?: { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:						options?: string | { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:				options?: string | { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:					options?: string | { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:			options?: string | { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:			options?: string | { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:					options?: string | { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:			options?: string | { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:	(err: null | Error, result?: T): any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	moduleFilenameTemplate: string | ((context?: any) => string);
./backend/newpennine-api/node_modules/webpack/types.d.ts:	fallbackModuleFilenameTemplate: string | ((context?: any) => string);
./backend/newpennine-api/node_modules/webpack/types.d.ts:	fallbackModuleFilenameTemplate?: string | ((context?: any) => string);
./backend/newpennine-api/node_modules/webpack/types.d.ts:	moduleFilenameTemplate?: string | ((context?: any) => string);
./backend/newpennine-api/node_modules/webpack/types.d.ts:			[((a?: any, b?: any) => 0 | 1 | -1)[], StatsFactoryContext],
./backend/newpennine-api/node_modules/webpack/types.d.ts:			[((a?: any, b?: any) => 0 | 1 | -1)[], StatsFactoryContext],
./backend/newpennine-api/node_modules/webpack/types.d.ts:		object?: any,
./backend/newpennine-api/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	cause: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	static prepareStackTrace(err: Error, stackTraces: NodeJS.CallSite[]): any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	error(...args: any[]): void;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	warn(...args: any[]): void;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	info(...args: any[]): void;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	log(...args: any[]): void;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	debug(...args: any[]): void;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	assert(assertion: any, ...args: any[]): void;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	status(...args: any[]): void;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	group(...args: any[]): void;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	groupCollapsed(...args: any[]): void;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	amd?: false | { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:	devServer?: false | { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:	[index: string]: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	(id: string): any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:	fd?: any;
./backend/newpennine-api/node_modules/webpack/types.d.ts:				moduleFilenameTemplate?: string | ((context?: any) => string);
./backend/newpennine-api/node_modules/webpack/types.d.ts:			result?: string | boolean | string[] | { [index: string]: any }
./backend/newpennine-api/node_modules/webpack/types.d.ts:				options?: string | { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/types.d.ts:						options?: string | { [index: string]: any };
./backend/newpennine-api/node_modules/webpack/node_modules/json-schema-traverse/index.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/webpack/node_modules/schema-utils/declarations/util/memorize.d.ts: * @param fn {(function(): any) | undefined}
./backend/newpennine-api/node_modules/webpack/node_modules/ajv-keywords/dist/definitions/instanceof.d.ts:declare type Constructor = new (...args: any[]) => any;
./backend/newpennine-api/node_modules/webpack/node_modules/ajv-keywords/src/definitions/instanceof.ts:type Constructor = new (...args: any[]) => any
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/dist/vocabularies/validation/const.d.ts:    allowedValue: any;
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/dist/vocabularies/validation/enum.d.ts:    allowedValues: any[];
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/dist/types/json-schema.d.ts:    [keyword: string]: any;
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/dist/types/index.d.ts:    [x: string]: any;
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/dist/types/index.d.ts:        [K in T]: any;
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/dist/types/index.d.ts:    (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T;
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/dist/types/index.d.ts:export type MacroKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaCxt) => AnySchema;
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/dist/types/index.d.ts:export type CompileKeywordFunc = (schema: any, parentSchema: AnySchemaObject, it: SchemaObjCxt) => DataValidateFunction;
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/dist/types/index.d.ts:    (schema: any, data: any, parentSchema?: AnySchemaObject, dataCxt?: DataValidationCxt): boolean | Promise<any>;
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/dist/types/index.d.ts:    schema: any;
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/dist/core.d.ts:    [prop: string]: any;
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/dist/compile/validate/index.d.ts:    schema: any;
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/lib/vocabularies/validation/const.ts:export type ConstError = ErrorObject<"const", {allowedValue: any}>
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/lib/vocabularies/validation/enum.ts:export type EnumError = ErrorObject<"enum", {allowedValues: any[]}, any[] | {$data: string}>
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/lib/types/json-schema.ts:  [keyword: string]: any
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/lib/types/index.ts:  [x: string]: any // TODO
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/lib/types/index.ts:  parentData: {[K in T]: any} // object or array
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/lib/types/index.ts:  (this: Ajv | any, data: any, dataCxt?: DataValidationCxt): data is T
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/lib/types/index.ts:  schema: any,
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/lib/types/index.ts:  schema: any,
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/lib/types/index.ts:    schema: any,
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/lib/types/index.ts:    data: any,
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/lib/types/index.ts:  schema: any // TODO
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/lib/core.ts:  [prop: string]: any
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/lib/core.ts:  cache?: any
./backend/newpennine-api/node_modules/webpack/node_modules/ajv/lib/compile/validate/index.ts:  schema: any // keyword value in the schema
./backend/newpennine-api/node_modules/webpack/schemas/plugins/asset/AssetParserOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/webpack/schemas/plugins/asset/AssetResourceGeneratorOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/webpack/schemas/plugins/asset/AssetInlineGeneratorOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/webpack/schemas/plugins/asset/AssetGeneratorOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/webpack/schemas/plugins/css/CssGlobalGeneratorOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/webpack/schemas/plugins/css/CssGeneratorOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/webpack/schemas/plugins/css/CssAutoParserOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/webpack/schemas/plugins/css/CssAutoGeneratorOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/webpack/schemas/plugins/css/CssModuleGeneratorOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/webpack/schemas/plugins/css/CssParserOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/webpack/schemas/plugins/css/CssModuleParserOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/webpack/schemas/plugins/css/CssGlobalParserOptions.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/webpack/schemas/plugins/container/ExternalsType.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/webpack/schemas/plugins/json/JsonModulesPluginGenerator.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/webpack/schemas/plugins/json/JsonModulesPluginParser.check.d.ts:declare const check: (options: any) => boolean;
./backend/newpennine-api/node_modules/webpack/module.d.ts:declare var __non_webpack_require__: (id: any) => unknown;
./backend/newpennine-api/node_modules/@microsoft/tsdoc/lib/configuration/DocNodeManager.d.ts:export type DocNodeConstructor = new (...args: any[]) => DocNode;
./backend/newpennine-api/node_modules/@sindresorhus/is/dist/index.d.ts:    var asyncGeneratorFunction: (value: unknown) => value is (...args: any[]) => Promise<unknown>;
./backend/newpennine-api/node_modules/@sindresorhus/is/dist/index.d.ts:    var asyncFunction: <T = unknown>(value: unknown) => value is (...args: any[]) => Promise<T>;
./backend/newpennine-api/node_modules/fast-uri/types/index.d.ts:  export function normalize (uri: any, opts?: Options): any
./backend/newpennine-api/node_modules/@sinclair/typebox/typebox.d.ts:    default?: any;
./backend/newpennine-api/node_modules/@sinclair/typebox/typebox.d.ts:    examples?: any;
./backend/newpennine-api/node_modules/@sinclair/typebox/typebox.d.ts:    [prop: string]: any;
./backend/newpennine-api/node_modules/@sinclair/typebox/typebox.d.ts:    static: any;
./backend/newpennine-api/node_modules/@sinclair/typebox/value/convert.d.ts:    function Visit(schema: Types.TSchema, references: Types.TSchema[], value: any): unknown;
./backend/newpennine-api/node_modules/@sinclair/typebox/value/convert.d.ts:    function Convert<T extends Types.TSchema>(schema: T, references: Types.TSchema[], value: any): unknown;
./backend/newpennine-api/node_modules/@sinclair/typebox/value/cast.d.ts:    function Visit(schema: Types.TSchema, references: Types.TSchema[], value: any): any;
./backend/newpennine-api/node_modules/@sinclair/typebox/value/cast.d.ts:    function Cast<T extends Types.TSchema>(schema: T, references: Types.TSchema[], value: any): Types.Static<T>;
./backend/newpennine-api/node_modules/@sinclair/typebox/value/check.d.ts:    function Check<T extends Types.TSchema>(schema: T, references: Types.TSchema[], value: any): boolean;
./backend/newpennine-api/node_modules/@sinclair/typebox/value/pointer.d.ts:    function Set(value: any, pointer: string, update: unknown): void;
./backend/newpennine-api/node_modules/@sinclair/typebox/value/pointer.d.ts:    function Delete(value: any, pointer: string): void;
./backend/newpennine-api/node_modules/@sinclair/typebox/value/pointer.d.ts:    function Has(value: any, pointer: string): boolean;
./backend/newpennine-api/node_modules/@sinclair/typebox/value/pointer.d.ts:    function Get(value: any, pointer: string): any;
./backend/newpennine-api/node_modules/@sinclair/typebox/errors/errors.d.ts:    function Errors<T extends Types.TSchema>(schema: T, references: Types.TSchema[], value: any): ValueErrorIterator;
./backend/newpennine-api/node_modules/ts-loader/dist/config.d.ts:    config?: any;
./backend/newpennine-api/node_modules/ts-loader/dist/instances.d.ts:export declare function getCustomTransformers(loaderOptions: LoaderOptions, program: typescript.Program | undefined, getProgram: (() => typescript.Program | undefined) | undefined): any;
./backend/newpennine-api/node_modules/ts-loader/dist/interfaces.d.ts:    __filePathKeyBrand: any;
./backend/newpennine-api/node_modules/ts-loader/dist/resolver.d.ts:    (context: any, path: string, moduleName: string): string | false;
./backend/newpennine-api/node_modules/resolve.exports/index.d.ts:	[key: string]: any;
./backend/newpennine-api/node_modules/@babel/core/node_modules/@babel/types/lib/index-legacy.d.ts:export function assertNode(obj: any): void
./backend/newpennine-api/node_modules/@babel/core/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T
./backend/newpennine-api/node_modules/@babel/core/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent(a: any, b: any): boolean
./backend/newpennine-api/node_modules/@babel/core/node_modules/@babel/types/lib/index-legacy.d.ts:export function validate(n: Node, key: string, value: any): void;
./backend/newpennine-api/node_modules/@babel/core/node_modules/@babel/types/lib/index.d.ts:declare function assertNode(node?: any): asserts node is Node;
./backend/newpennine-api/node_modules/@babel/core/node_modules/@babel/types/lib/index.d.ts:declare function assertNumberLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/core/node_modules/@babel/types/lib/index.d.ts:declare function assertRegexLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/core/node_modules/@babel/types/lib/index.d.ts:declare function assertRestProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/core/node_modules/@babel/types/lib/index.d.ts:declare function assertSpreadProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/core/node_modules/@babel/types/lib/index.d.ts:declare function assertModuleDeclaration(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/core/node_modules/@babel/types/lib/index.d.ts:declare function getType(val: any): "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function" | "array" | "null";
./backend/newpennine-api/node_modules/@babel/core/node_modules/@babel/types/lib/index.d.ts:    oneOf: any[];
./backend/newpennine-api/node_modules/@babel/core/node_modules/@babel/types/lib/index.d.ts:}, val: any) => void);
./backend/newpennine-api/node_modules/@babel/core/node_modules/@babel/types/lib/index.d.ts:declare function isNode(node: any): node is Node;
./backend/newpennine-api/node_modules/@babel/core/node_modules/@babel/types/lib/index.d.ts:declare function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T;
./backend/newpennine-api/node_modules/@babel/core/src/transform-file-browser.ts:    opts: any,
./backend/newpennine-api/node_modules/@babel/template/node_modules/@babel/types/lib/index-legacy.d.ts:export function assertNode(obj: any): void
./backend/newpennine-api/node_modules/@babel/template/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T
./backend/newpennine-api/node_modules/@babel/template/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent(a: any, b: any): boolean
./backend/newpennine-api/node_modules/@babel/template/node_modules/@babel/types/lib/index-legacy.d.ts:export function validate(n: Node, key: string, value: any): void;
./backend/newpennine-api/node_modules/@babel/template/node_modules/@babel/types/lib/index.d.ts:declare function assertNode(node?: any): asserts node is Node;
./backend/newpennine-api/node_modules/@babel/template/node_modules/@babel/types/lib/index.d.ts:declare function assertNumberLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/template/node_modules/@babel/types/lib/index.d.ts:declare function assertRegexLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/template/node_modules/@babel/types/lib/index.d.ts:declare function assertRestProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/template/node_modules/@babel/types/lib/index.d.ts:declare function assertSpreadProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/template/node_modules/@babel/types/lib/index.d.ts:declare function assertModuleDeclaration(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/template/node_modules/@babel/types/lib/index.d.ts:declare function getType(val: any): "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function" | "array" | "null";
./backend/newpennine-api/node_modules/@babel/template/node_modules/@babel/types/lib/index.d.ts:    oneOf: any[];
./backend/newpennine-api/node_modules/@babel/template/node_modules/@babel/types/lib/index.d.ts:}, val: any) => void);
./backend/newpennine-api/node_modules/@babel/template/node_modules/@babel/types/lib/index.d.ts:declare function isNode(node: any): node is Node;
./backend/newpennine-api/node_modules/@babel/template/node_modules/@babel/types/lib/index.d.ts:declare function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T;
./backend/newpennine-api/node_modules/@babel/parser/typings/babel-parser.d.ts:  [name: string]: any;
./backend/newpennine-api/node_modules/@babel/parser/node_modules/@babel/types/lib/index-legacy.d.ts:export function assertNode(obj: any): void
./backend/newpennine-api/node_modules/@babel/parser/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T
./backend/newpennine-api/node_modules/@babel/parser/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent(a: any, b: any): boolean
./backend/newpennine-api/node_modules/@babel/parser/node_modules/@babel/types/lib/index-legacy.d.ts:export function validate(n: Node, key: string, value: any): void;
./backend/newpennine-api/node_modules/@babel/parser/node_modules/@babel/types/lib/index.d.ts:declare function assertNode(node?: any): asserts node is Node;
./backend/newpennine-api/node_modules/@babel/parser/node_modules/@babel/types/lib/index.d.ts:declare function assertNumberLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/parser/node_modules/@babel/types/lib/index.d.ts:declare function assertRegexLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/parser/node_modules/@babel/types/lib/index.d.ts:declare function assertRestProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/parser/node_modules/@babel/types/lib/index.d.ts:declare function assertSpreadProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/parser/node_modules/@babel/types/lib/index.d.ts:declare function assertModuleDeclaration(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/parser/node_modules/@babel/types/lib/index.d.ts:declare function getType(val: any): "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function" | "array" | "null";
./backend/newpennine-api/node_modules/@babel/parser/node_modules/@babel/types/lib/index.d.ts:    oneOf: any[];
./backend/newpennine-api/node_modules/@babel/parser/node_modules/@babel/types/lib/index.d.ts:}, val: any) => void);
./backend/newpennine-api/node_modules/@babel/parser/node_modules/@babel/types/lib/index.d.ts:declare function isNode(node: any): node is Node;
./backend/newpennine-api/node_modules/@babel/parser/node_modules/@babel/types/lib/index.d.ts:declare function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T;
./backend/newpennine-api/node_modules/@babel/generator/node_modules/@babel/types/lib/index-legacy.d.ts:export function assertNode(obj: any): void
./backend/newpennine-api/node_modules/@babel/generator/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T
./backend/newpennine-api/node_modules/@babel/generator/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent(a: any, b: any): boolean
./backend/newpennine-api/node_modules/@babel/generator/node_modules/@babel/types/lib/index-legacy.d.ts:export function validate(n: Node, key: string, value: any): void;
./backend/newpennine-api/node_modules/@babel/generator/node_modules/@babel/types/lib/index.d.ts:declare function assertNode(node?: any): asserts node is Node;
./backend/newpennine-api/node_modules/@babel/generator/node_modules/@babel/types/lib/index.d.ts:declare function assertNumberLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/generator/node_modules/@babel/types/lib/index.d.ts:declare function assertRegexLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/generator/node_modules/@babel/types/lib/index.d.ts:declare function assertRestProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/generator/node_modules/@babel/types/lib/index.d.ts:declare function assertSpreadProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/generator/node_modules/@babel/types/lib/index.d.ts:declare function assertModuleDeclaration(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/generator/node_modules/@babel/types/lib/index.d.ts:declare function getType(val: any): "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function" | "array" | "null";
./backend/newpennine-api/node_modules/@babel/generator/node_modules/@babel/types/lib/index.d.ts:    oneOf: any[];
./backend/newpennine-api/node_modules/@babel/generator/node_modules/@babel/types/lib/index.d.ts:}, val: any) => void);
./backend/newpennine-api/node_modules/@babel/generator/node_modules/@babel/types/lib/index.d.ts:declare function isNode(node: any): node is Node;
./backend/newpennine-api/node_modules/@babel/generator/node_modules/@babel/types/lib/index.d.ts:declare function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T;
./backend/newpennine-api/node_modules/@babel/traverse/node_modules/@babel/types/lib/index-legacy.d.ts:export function assertNode(obj: any): void
./backend/newpennine-api/node_modules/@babel/traverse/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T
./backend/newpennine-api/node_modules/@babel/traverse/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent(a: any, b: any): boolean
./backend/newpennine-api/node_modules/@babel/traverse/node_modules/@babel/types/lib/index-legacy.d.ts:export function validate(n: Node, key: string, value: any): void;
./backend/newpennine-api/node_modules/@babel/traverse/node_modules/@babel/types/lib/index.d.ts:declare function assertNode(node?: any): asserts node is Node;
./backend/newpennine-api/node_modules/@babel/traverse/node_modules/@babel/types/lib/index.d.ts:declare function assertNumberLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/traverse/node_modules/@babel/types/lib/index.d.ts:declare function assertRegexLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/traverse/node_modules/@babel/types/lib/index.d.ts:declare function assertRestProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/traverse/node_modules/@babel/types/lib/index.d.ts:declare function assertSpreadProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/traverse/node_modules/@babel/types/lib/index.d.ts:declare function assertModuleDeclaration(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/traverse/node_modules/@babel/types/lib/index.d.ts:declare function getType(val: any): "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function" | "array" | "null";
./backend/newpennine-api/node_modules/@babel/traverse/node_modules/@babel/types/lib/index.d.ts:    oneOf: any[];
./backend/newpennine-api/node_modules/@babel/traverse/node_modules/@babel/types/lib/index.d.ts:}, val: any) => void);
./backend/newpennine-api/node_modules/@babel/traverse/node_modules/@babel/types/lib/index.d.ts:declare function isNode(node: any): node is Node;
./backend/newpennine-api/node_modules/@babel/traverse/node_modules/@babel/types/lib/index.d.ts:declare function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T;
./backend/newpennine-api/node_modules/@babel/helper-module-imports/node_modules/@babel/types/lib/index-legacy.d.ts:export function assertNode(obj: any): void
./backend/newpennine-api/node_modules/@babel/helper-module-imports/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T
./backend/newpennine-api/node_modules/@babel/helper-module-imports/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent(a: any, b: any): boolean
./backend/newpennine-api/node_modules/@babel/helper-module-imports/node_modules/@babel/types/lib/index-legacy.d.ts:export function validate(n: Node, key: string, value: any): void;
./backend/newpennine-api/node_modules/@babel/helper-module-imports/node_modules/@babel/types/lib/index.d.ts:declare function assertNode(node?: any): asserts node is Node;
./backend/newpennine-api/node_modules/@babel/helper-module-imports/node_modules/@babel/types/lib/index.d.ts:declare function assertNumberLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/helper-module-imports/node_modules/@babel/types/lib/index.d.ts:declare function assertRegexLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/helper-module-imports/node_modules/@babel/types/lib/index.d.ts:declare function assertRestProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/helper-module-imports/node_modules/@babel/types/lib/index.d.ts:declare function assertSpreadProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/helper-module-imports/node_modules/@babel/types/lib/index.d.ts:declare function assertModuleDeclaration(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/helper-module-imports/node_modules/@babel/types/lib/index.d.ts:declare function getType(val: any): "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function" | "array" | "null";
./backend/newpennine-api/node_modules/@babel/helper-module-imports/node_modules/@babel/types/lib/index.d.ts:    oneOf: any[];
./backend/newpennine-api/node_modules/@babel/helper-module-imports/node_modules/@babel/types/lib/index.d.ts:}, val: any) => void);
./backend/newpennine-api/node_modules/@babel/helper-module-imports/node_modules/@babel/types/lib/index.d.ts:declare function isNode(node: any): node is Node;
./backend/newpennine-api/node_modules/@babel/helper-module-imports/node_modules/@babel/types/lib/index.d.ts:declare function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T;
./backend/newpennine-api/node_modules/@babel/helpers/node_modules/@babel/types/lib/index-legacy.d.ts:export function assertNode(obj: any): void
./backend/newpennine-api/node_modules/@babel/helpers/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T
./backend/newpennine-api/node_modules/@babel/helpers/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent(a: any, b: any): boolean
./backend/newpennine-api/node_modules/@babel/helpers/node_modules/@babel/types/lib/index-legacy.d.ts:export function validate(n: Node, key: string, value: any): void;
./backend/newpennine-api/node_modules/@babel/helpers/node_modules/@babel/types/lib/index.d.ts:declare function assertNode(node?: any): asserts node is Node;
./backend/newpennine-api/node_modules/@babel/helpers/node_modules/@babel/types/lib/index.d.ts:declare function assertNumberLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/helpers/node_modules/@babel/types/lib/index.d.ts:declare function assertRegexLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/helpers/node_modules/@babel/types/lib/index.d.ts:declare function assertRestProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/helpers/node_modules/@babel/types/lib/index.d.ts:declare function assertSpreadProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/helpers/node_modules/@babel/types/lib/index.d.ts:declare function assertModuleDeclaration(node: any, opts: any): void;
./backend/newpennine-api/node_modules/@babel/helpers/node_modules/@babel/types/lib/index.d.ts:declare function getType(val: any): "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function" | "array" | "null";
./backend/newpennine-api/node_modules/@babel/helpers/node_modules/@babel/types/lib/index.d.ts:    oneOf: any[];
./backend/newpennine-api/node_modules/@babel/helpers/node_modules/@babel/types/lib/index.d.ts:}, val: any) => void);
./backend/newpennine-api/node_modules/@babel/helpers/node_modules/@babel/types/lib/index.d.ts:declare function isNode(node: any): node is Node;
./backend/newpennine-api/node_modules/@babel/helpers/node_modules/@babel/types/lib/index.d.ts:declare function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T;
./backend/newpennine-api/node_modules/@humanfs/core/dist/fsx.d.ts:    constructor(type: string, data?: any);
./backend/newpennine-api/node_modules/@humanfs/core/dist/fsx.d.ts:    data: any;
./backend/newpennine-api/node_modules/@humanfs/core/dist/fsx.d.ts:    write(filePath: string, contents: any): Promise<void>;
./backend/newpennine-api/node_modules/@humanfs/core/dist/hfs.d.ts:    constructor(type: string, data?: any);
./backend/newpennine-api/node_modules/@humanfs/core/dist/hfs.d.ts:    data: any;
./backend/newpennine-api/node_modules/iterare/lib/utils.d.ts:export declare function isIterator(candidate: any): candidate is Iterator<any>;
./backend/newpennine-api/node_modules/iterare/lib/utils.d.ts:export declare function isIterable(candidate: any): candidate is Iterable<any>;
./backend/newpennine-api/node_modules/fork-ts-checker-webpack-plugin/lib/typescript/worker/lib/system.d.ts:    setTimeout(callback: (...args: any[]) => void, ms: number, ...args: any[]): any;
./backend/newpennine-api/node_modules/fork-ts-checker-webpack-plugin/lib/typescript/worker/lib/system.d.ts:    clearTimeout(timeoutId: any): void;
./backend/newpennine-api/node_modules/fork-ts-checker-webpack-plugin/lib/typescript/type-script-config-overwrite.d.ts:    compilerOptions?: any;
./backend/newpennine-api/node_modules/fork-ts-checker-webpack-plugin/lib/rpc/expose-rpc.d.ts:export declare function exposeRpc(fn: (...args: any[]) => any): void;
./backend/newpennine-api/node_modules/fork-ts-checker-webpack-plugin/lib/rpc/types.d.ts:type RpcMethod = (...args: any[]) => any;
./backend/newpennine-api/node_modules/fork-ts-checker-webpack-plugin/lib/rpc/wrap-rpc.d.ts:export declare function wrapRpc<T extends (...args: any[]) => any>(childProcess: ChildProcess): RpcRemoteMethod<T>;
./backend/newpennine-api/node_modules/jest-util/build/index.d.ts:export declare function interopRequireDefault(obj: any): any;
./backend/newpennine-api/node_modules/json5/lib/parse.d.ts:    reviver?: ((this: any, key: string, value: any) => any) | null,
./backend/newpennine-api/node_modules/json5/lib/stringify.d.ts:        | ((this: any, key: string, value: any) => any)
./backend/newpennine-api/node_modules/json5/lib/stringify.d.ts:    value: any,
./backend/newpennine-api/node_modules/json5/lib/stringify.d.ts:    replacer?: ((this: any, key: string, value: any) => any) | null,
./backend/newpennine-api/node_modules/json5/lib/stringify.d.ts:    value: any,
./backend/newpennine-api/node_modules/json5/lib/stringify.d.ts:declare function stringify(value: any, options: StringifyOptions): string
./backend/newpennine-api/node_modules/@supabase/functions-js/dist/module/types.d.ts:    error: any;
./backend/newpennine-api/node_modules/@supabase/functions-js/dist/module/types.d.ts:    context: any;
./backend/newpennine-api/node_modules/@supabase/functions-js/dist/module/types.d.ts:    constructor(message: string, name?: string, context?: any);
./backend/newpennine-api/node_modules/@supabase/functions-js/dist/module/types.d.ts:    constructor(context: any);
./backend/newpennine-api/node_modules/@supabase/functions-js/dist/module/types.d.ts:    constructor(context: any);
./backend/newpennine-api/node_modules/@supabase/functions-js/dist/module/types.d.ts:    constructor(context: any);
./backend/newpennine-api/node_modules/@supabase/functions-js/dist/main/types.d.ts:    error: any;
./backend/newpennine-api/node_modules/@supabase/functions-js/dist/main/types.d.ts:    context: any;
./backend/newpennine-api/node_modules/@supabase/functions-js/dist/main/types.d.ts:    constructor(message: string, name?: string, context?: any);
./backend/newpennine-api/node_modules/@supabase/functions-js/dist/main/types.d.ts:    constructor(context: any);
./backend/newpennine-api/node_modules/@supabase/functions-js/dist/main/types.d.ts:    constructor(context: any);
./backend/newpennine-api/node_modules/@supabase/functions-js/dist/main/types.d.ts:    constructor(context: any);
./backend/newpennine-api/node_modules/@supabase/functions-js/src/FunctionsClient.ts:      let body: any
./backend/newpennine-api/node_modules/@supabase/functions-js/src/FunctionsClient.ts:      let data: any
./backend/newpennine-api/node_modules/@supabase/functions-js/src/types.ts:  error: any
./backend/newpennine-api/node_modules/@supabase/functions-js/src/types.ts:  context: any
./backend/newpennine-api/node_modules/@supabase/functions-js/src/types.ts:  constructor(message: string, name = 'FunctionsError', context?: any) {
./backend/newpennine-api/node_modules/@supabase/functions-js/src/types.ts:  constructor(context: any) {
./backend/newpennine-api/node_modules/@supabase/functions-js/src/types.ts:  constructor(context: any) {
./backend/newpennine-api/node_modules/@supabase/functions-js/src/types.ts:  constructor(context: any) {
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/module/GoTrueClient.d.ts:    protected logger: (message: string, ...args: any[]) => void;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/module/lib/errors.d.ts:export declare function isAuthSessionMissingError(error: any): error is AuthSessionMissingError;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/module/lib/errors.d.ts:export declare function isAuthImplicitGrantRedirectError(error: any): error is AuthImplicitGrantRedirectError;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/module/lib/types.d.ts:    debug?: boolean | ((message: string, ...args: any[]) => void);
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/module/lib/types.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/module/lib/types.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/module/lib/types.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/module/lib/types.d.ts:declare type AnyFunction = (...args: any[]) => any;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/module/lib/types.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/module/lib/types.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/module/lib/types.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/module/lib/fetch.d.ts:    xform?: (data: any) => any;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/module/lib/fetch.d.ts:export declare function _sessionResponse(data: any): AuthResponse;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/module/lib/fetch.d.ts:export declare function _sessionResponsePassword(data: any): AuthResponsePassword;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/module/lib/fetch.d.ts:export declare function _userResponse(data: any): UserResponse;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/module/lib/fetch.d.ts:export declare function _ssoResponse(data: any): SSOResponse;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/module/lib/fetch.d.ts:export declare function _generateLinkResponse(data: any): GenerateLinkResponse;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/module/lib/fetch.d.ts:export declare function _noResolveJsonResponse(data: any): Response;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/module/lib/helpers.d.ts:export declare const setItemAsync: (storage: SupportedStorage, key: string, data: any) => Promise<void>;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/module/lib/helpers.d.ts:    readonly reject: (reason?: any) => any;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/module/lib/helpers.d.ts:export declare function retryable<T>(fn: (attempt: number) => Promise<T>, isRetryable: (attempt: number, error: any | null, result?: T) => boolean): Promise<T>;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/main/GoTrueClient.d.ts:    protected logger: (message: string, ...args: any[]) => void;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/main/lib/errors.d.ts:export declare function isAuthSessionMissingError(error: any): error is AuthSessionMissingError;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/main/lib/errors.d.ts:export declare function isAuthImplicitGrantRedirectError(error: any): error is AuthImplicitGrantRedirectError;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/main/lib/types.d.ts:    debug?: boolean | ((message: string, ...args: any[]) => void);
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/main/lib/types.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/main/lib/types.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/main/lib/types.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/main/lib/types.d.ts:declare type AnyFunction = (...args: any[]) => any;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/main/lib/types.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/main/lib/types.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/main/lib/types.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/main/lib/fetch.d.ts:    xform?: (data: any) => any;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/main/lib/fetch.d.ts:export declare function _sessionResponse(data: any): AuthResponse;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/main/lib/fetch.d.ts:export declare function _sessionResponsePassword(data: any): AuthResponsePassword;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/main/lib/fetch.d.ts:export declare function _userResponse(data: any): UserResponse;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/main/lib/fetch.d.ts:export declare function _ssoResponse(data: any): SSOResponse;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/main/lib/fetch.d.ts:export declare function _generateLinkResponse(data: any): GenerateLinkResponse;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/main/lib/fetch.d.ts:export declare function _noResolveJsonResponse(data: any): Response;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/main/lib/helpers.d.ts:export declare const setItemAsync: (storage: SupportedStorage, key: string, data: any) => Promise<void>;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/main/lib/helpers.d.ts:    readonly reject: (reason?: any) => any;
./backend/newpennine-api/node_modules/@supabase/auth-js/dist/main/lib/helpers.d.ts:export declare function retryable<T>(fn: (attempt: number) => Promise<T>, isRetryable: (attempt: number, error: any | null, result?: T) => boolean): Promise<T>;
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/helpers.ts:    } catch (e: any) {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/helpers.ts:  data: any
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/helpers.ts:  public readonly reject!: (reason?: any) => any
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/helpers.ts:  isRetryable: (attempt: number, error: any | null, result?: T) => boolean
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/helpers.ts:        } catch (e: any) {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/helpers.ts:  } catch (e: any) {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/helpers.ts:    get: (target: any, prop: string) => {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/helpers.ts:    set: (_target: any, prop: string) => {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/helpers.ts:    deleteProperty: (_target: any, prop: string) => {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/errors.ts:export function isAuthSessionMissingError(error: any): error is AuthSessionMissingError {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/errors.ts:  error: any
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/types.ts:  debug?: boolean | ((message: string, ...args: any[]) => void)
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/types.ts:    [key: string]: any
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/types.ts:  [key: string]: any
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/types.ts:  [key: string]: any
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/types.ts:type AnyFunction = (...args: any[]) => any
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/types.ts:  [key: string]: any
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/types.ts:  [key: string]: any
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/types.ts:  [key: string]: any
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/locks.ts:              } catch (e: any) {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/locks.ts:    .catch((e: any) => {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/locks.ts:  PROCESS_LOCKS[name] = currentOperation.catch(async (e: any) => {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/fetch.ts:const _getErrorMessage = (err: any): string =>
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/fetch.ts:  let data: any
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/fetch.ts:  } catch (e: any) {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/fetch.ts:      data.weak_password.reasons.reduce((a: boolean, i: any) => a && typeof i === 'string', true)
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/fetch.ts:  const params: { [k: string]: any } = { method, headers: options?.headers || {} }
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/fetch.ts:  xform?: (data: any) => any
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/fetch.ts:  let result: any
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/fetch.ts:  } catch (e: any) {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/fetch.ts:export function _sessionResponse(data: any): AuthResponse {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/fetch.ts:export function _sessionResponsePassword(data: any): AuthResponsePassword {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/fetch.ts:    data.weak_password.reasons.reduce((a: boolean, i: any) => a && typeof i === 'string', true)
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/fetch.ts:export function _userResponse(data: any): UserResponse {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/fetch.ts:export function _ssoResponse(data: any): SSOResponse {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/fetch.ts:export function _generateLinkResponse(data: any): GenerateLinkResponse {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/fetch.ts:export function _noResolveJsonResponse(data: any): Response {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/lib/fetch.ts:function hasSession(data: any): boolean {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/GoTrueAdminApi.ts:      const body: any = { ...rest, ...options }
./backend/newpennine-api/node_modules/@supabase/auth-js/src/GoTrueAdminApi.ts:          xform: (factors: any) => {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/GoTrueClient.ts:  protected logger: (message: string, ...args: any[]) => void = console.log
./backend/newpennine-api/node_modules/@supabase/auth-js/src/GoTrueClient.ts:      } catch (e: any) {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/GoTrueClient.ts:  private _debug(...args: any[]): GoTrueClient {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/GoTrueClient.ts:        let outputToProcess: any
./backend/newpennine-api/node_modules/@supabase/auth-js/src/GoTrueClient.ts:            } catch (e: any) {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/GoTrueClient.ts:              } catch (e: any) {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/GoTrueClient.ts:            get: (target: any, prop: string, receiver: any) => {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/GoTrueClient.ts:      const errors: any[] = []
./backend/newpennine-api/node_modules/@supabase/auth-js/src/GoTrueClient.ts:        } catch (e: any) {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/GoTrueClient.ts:          } catch (e: any) {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/GoTrueClient.ts:    } catch (e: any) {
./backend/newpennine-api/node_modules/@supabase/auth-js/src/GoTrueClient.ts:    jwk = data.keys.find((key: any) => key.kid === kid)
./backend/newpennine-api/node_modules/@supabase/supabase-js/dist/module/SupabaseClient.d.ts:export default class SupabaseClient<Database = any, SchemaName extends string & keyof Database = 'public' extends keyof Database ? 'public' : string & keyof Database, Schema extends GenericSchema = Database[SchemaName] extends GenericSchema ? Database[SchemaName] : any> {
./backend/newpennine-api/node_modules/@supabase/supabase-js/dist/module/SupabaseClient.d.ts:    schema<DynamicSchema extends string & keyof Database>(schema: DynamicSchema): PostgrestClient<Database, DynamicSchema, Database[DynamicSchema] extends GenericSchema ? Database[DynamicSchema] : any>;
./backend/newpennine-api/node_modules/@supabase/supabase-js/dist/module/index.d.ts:export declare const createClient: <Database = any, SchemaName extends string & keyof Database = "public" extends keyof Database ? "public" : string & keyof Database, Schema extends GenericSchema = Database[SchemaName] extends GenericSchema ? Database[SchemaName] : any>(supabaseUrl: string, supabaseKey: string, options?: SupabaseClientOptions<SchemaName> | undefined) => SupabaseClient<Database, SchemaName, Schema>;
./backend/newpennine-api/node_modules/@supabase/supabase-js/dist/main/SupabaseClient.d.ts:export default class SupabaseClient<Database = any, SchemaName extends string & keyof Database = 'public' extends keyof Database ? 'public' : string & keyof Database, Schema extends GenericSchema = Database[SchemaName] extends GenericSchema ? Database[SchemaName] : any> {
./backend/newpennine-api/node_modules/@supabase/supabase-js/dist/main/SupabaseClient.d.ts:    schema<DynamicSchema extends string & keyof Database>(schema: DynamicSchema): PostgrestClient<Database, DynamicSchema, Database[DynamicSchema] extends GenericSchema ? Database[DynamicSchema] : any>;
./backend/newpennine-api/node_modules/@supabase/supabase-js/dist/main/index.d.ts:export declare const createClient: <Database = any, SchemaName extends string & keyof Database = "public" extends keyof Database ? "public" : string & keyof Database, Schema extends GenericSchema = Database[SchemaName] extends GenericSchema ? Database[SchemaName] : any>(supabaseUrl: string, supabaseKey: string, options?: SupabaseClientOptions<SchemaName> | undefined) => SupabaseClient<Database, SchemaName, Schema>;
./backend/newpennine-api/node_modules/@supabase/supabase-js/src/SupabaseClient.ts:    : any
./backend/newpennine-api/node_modules/@supabase/supabase-js/src/SupabaseClient.ts:    Database[DynamicSchema] extends GenericSchema ? Database[DynamicSchema] : any
./backend/newpennine-api/node_modules/@supabase/supabase-js/src/index.ts:    : any
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:                [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:    }>(type: `${REALTIME_LISTEN_TYPES.SYSTEM}`, filter: {}, callback: (payload: any) => void): RealtimeChannel;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        payload?: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimePresence.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimePresence.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimePresence.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimePresence.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimePresence.d.ts:            [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/lib/serializer.d.ts:    decode(rawPayload: ArrayBuffer | string, callback: Function): any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/lib/push.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/lib/push.d.ts:            [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/lib/push.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/lib/push.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/lib/push.d.ts:    trigger(status: string, response: any): void;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeClient.d.ts:    payload: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeClient.d.ts:    error: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeClient.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/module/RealtimeClient.d.ts:    log(kind: string, msg: string, data?: any): void;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:                [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:    }>(type: `${REALTIME_LISTEN_TYPES.SYSTEM}`, filter: {}, callback: (payload: any) => void): RealtimeChannel;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        payload?: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimePresence.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimePresence.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimePresence.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimePresence.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimePresence.d.ts:            [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/lib/serializer.d.ts:    decode(rawPayload: ArrayBuffer | string, callback: Function): any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/lib/push.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/lib/push.d.ts:            [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/lib/push.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/lib/push.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/lib/push.d.ts:    trigger(status: string, response: any): void;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeClient.d.ts:    payload: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeClient.d.ts:    error: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeClient.d.ts:        [key: string]: any;
./backend/newpennine-api/node_modules/@supabase/realtime-js/dist/main/RealtimeClient.d.ts:    log(kind: string, msg: string, data?: any): void;
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/lib/push.ts:    response: { [key: string]: any }
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/lib/push.ts:    public payload: { [key: string]: any } = {},
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/lib/push.ts:  updatePayload(payload: { [key: string]: any }): void {
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/lib/push.ts:    const callback = (payload: any) => {
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/lib/push.ts:  trigger(status: string, response: any) {
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/lib/serializer.ts:    payload: { [key: string]: any }
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimePresence.ts:type Presence<T extends { [key: string]: any } = {}> = {
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimePresence.ts:export type RealtimePresenceState<T extends { [key: string]: any } = {}> = {
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimePresence.ts:export type RealtimePresenceJoinPayload<T extends { [key: string]: any }> = {
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimePresence.ts:export type RealtimePresenceLeavePayload<T extends { [key: string]: any }> = {
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimePresence.ts:      [key: string]: any
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimePresence.ts:  private static cloneDeep(obj: { [key: string]: any }) {
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeClient.ts:  payload: any
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeClient.ts:  error: any
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeClient.ts:  params?: { [key: string]: any }
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeClient.ts:  log(kind: string, msg: string, data?: any) {
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeClient.ts:      this.encode(data, (result: any) => {
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeClient.ts:      this.conn.onmessage = (event: any) => this._onConnMessage(event)
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeClient.ts:      this.conn.onclose = (event: any) => this._onConnClose(event)
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeClient.ts:  private _onConnMessage(rawMessage: { data: any }) {
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeClient.ts:  private _onConnClose(event: any) {
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:export type RealtimePostgresInsertPayload<T extends { [key: string]: any }> =
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:export type RealtimePostgresUpdatePayload<T extends { [key: string]: any }> =
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:export type RealtimePostgresDeletePayload<T extends { [key: string]: any }> =
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:export type RealtimePostgresChangesPayload<T extends { [key: string]: any }> =
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:      filter: { [key: string]: any }
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:    this._on(CHANNEL_EVENTS.reply, {}, (payload: any, ref: string) => {
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:        .receive('error', (error: { [key: string]: any }) => {
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:    T extends { [key: string]: any } = {}
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:    payload: { [key: string]: any },
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:    opts: { [key: string]: any } = {}
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:    opts: { [key: string]: any } = {}
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  on<T extends { [key: string]: any }>(
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  on<T extends { [key: string]: any }>(
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  on<T extends { [key: string]: any }>(
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  on<T extends { [key: string]: any }>(
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  on<T extends { [key: string]: any }>(
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  on<T extends { [key: string]: any }>(
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:      [key: string]: any
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  on<T extends { [key: string]: any }>(
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  on<T extends { [key: string]: any }>(
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:    callback: (payload: any) => void
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:    callback: (payload: any) => void
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:      payload?: any
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:      [key: string]: any
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:    opts: { [key: string]: any } = {}
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:      } catch (error: any) {
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  updateJoinPayload(payload: { [key: string]: any }): void {
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:    options: { [key: string]: any },
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:    payload: { [key: string]: any },
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  _onMessage(_event: string, payload: any, _ref?: string) {
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  _trigger(type: string, payload?: any, ref?: string) {
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  _on(type: string, filter: { [key: string]: any }, callback: Function) {
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  _off(type: string, filter: { [key: string]: any }) {
./backend/newpennine-api/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts:  private _getPayloadRecords(payload: any) {
./backend/newpennine-api/node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.d.ts:            fullPath: any;
./backend/newpennine-api/node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.d.ts:        error: any;
./backend/newpennine-api/node_modules/@supabase/storage-js/dist/main/packages/StorageFileApi.d.ts:            fullPath: any;
./backend/newpennine-api/node_modules/@supabase/storage-js/dist/main/packages/StorageFileApi.d.ts:        error: any;
./backend/newpennine-api/node_modules/@supabase/storage-js/src/lib/fetch.ts:const _getErrorMessage = (err: any): string =>
./backend/newpennine-api/node_modules/@supabase/storage-js/src/lib/fetch.ts:  reject: (reason?: any) => void,
./backend/newpennine-api/node_modules/@supabase/storage-js/src/lib/fetch.ts:  const params: { [k: string]: any } = { method, headers: options?.headers || {} }
./backend/newpennine-api/node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.d.ts:export default class PostgrestClient<Database = any, SchemaName extends string & keyof Database = 'public' extends keyof Database ? 'public' : string & keyof Database, Schema extends GenericSchema = Database[SchemaName] extends GenericSchema ? Database[SchemaName] : any> {
./backend/newpennine-api/node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.d.ts:    schema<DynamicSchema extends string & keyof Database>(schema: DynamicSchema): PostgrestClient<Database, DynamicSchema, Database[DynamicSchema] extends GenericSchema ? Database[DynamicSchema] : any>;
./backend/newpennine-api/node_modules/@supabase/postgrest-js/dist/cjs/select-query-parser/result.d.ts:export declare type GetResult<Schema extends GenericSchema, Row extends Record<string, unknown>, RelationName, Relationships, Query extends string> = IsAny<Schema> extends true ? ParseQuery<Query> extends infer ParsedQuery ? ParsedQuery extends Ast.Node[] ? RelationName extends string ? ProcessNodesWithoutSchema<ParsedQuery> : any : ParsedQuery : any : Relationships extends null ? ParseQuery<Query> extends infer ParsedQuery ? ParsedQuery extends Ast.Node[] ? RPCCallNodes<ParsedQuery, RelationName extends string ? RelationName : 'rpc_call', Row> : ParsedQuery : Row : ParseQuery<Query> extends infer ParsedQuery ? ParsedQuery extends Ast.Node[] ? RelationName extends string ? Relationships extends GenericRelationship[] ? ProcessNodes<Schema, Row, RelationName, Relationships, ParsedQuery> : SelectQueryError<'Invalid Relationships cannot infer result type'> : SelectQueryError<'Invalid RelationName cannot infer result type'> : ParsedQuery : never;
./backend/newpennine-api/node_modules/@supabase/postgrest-js/dist/cjs/select-query-parser/result.d.ts:    [K in GetFieldNodeResultName<Field>]: Field['castType'] extends PostgreSQLTypes ? TypeScriptTypes<Field['castType']> : any;
./backend/newpennine-api/node_modules/@supabase/postgrest-js/dist/cjs/select-query-parser/result.d.ts:    [P in Node['target']['children'][number] as GetFieldNodeResultName<P>]: P['castType'] extends PostgreSQLTypes ? TypeScriptTypes<P['castType']> : any;
./backend/newpennine-api/node_modules/@supabase/postgrest-js/dist/cjs/select-query-parser/result.d.ts:} : any : Node extends Ast.FieldNode ? ProcessFieldNodeWithoutSchema<Node> : any;
./backend/newpennine-api/node_modules/@supabase/postgrest-js/dist/cjs/select-query-parser/result.d.ts:declare type ProcessNodesWithoutSchema<Nodes extends Ast.Node[], Acc extends Record<string, unknown> = {}> = Nodes extends [infer FirstNode, ...infer RestNodes] ? FirstNode extends Ast.Node ? RestNodes extends Ast.Node[] ? ProcessNodeWithoutSchema<FirstNode> extends infer FieldResult ? FieldResult extends Record<string, unknown> ? ProcessNodesWithoutSchema<RestNodes, Acc & FieldResult> : FieldResult : any : any : any : Prettify<Acc>;
./backend/newpennine-api/node_modules/@supabase/postgrest-js/dist/cjs/types.d.ts:declare type NonRecursiveType = BuiltIns | Function | (new (...arguments_: any[]) => unknown);
./backend/newpennine-api/node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.d.ts:    then<TResult1 = ThrowOnError extends true ? PostgrestResponseSuccess<Result> : PostgrestSingleResponse<Result>, TResult2 = never>(onfulfilled?: ((value: ThrowOnError extends true ? PostgrestResponseSuccess<Result> : PostgrestSingleResponse<Result>) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): PromiseLike<TResult1 | TResult2>;
./backend/newpennine-api/node_modules/@supabase/postgrest-js/src/select-query-parser/result.ts:        : any
./backend/newpennine-api/node_modules/@supabase/postgrest-js/src/select-query-parser/result.ts:    : any
./backend/newpennine-api/node_modules/@supabase/postgrest-js/src/select-query-parser/result.ts:          : any
./backend/newpennine-api/node_modules/@supabase/postgrest-js/src/select-query-parser/result.ts:          : any
./backend/newpennine-api/node_modules/@supabase/postgrest-js/src/select-query-parser/result.ts:    : any
./backend/newpennine-api/node_modules/@supabase/postgrest-js/src/select-query-parser/result.ts:  : any
./backend/newpennine-api/node_modules/@supabase/postgrest-js/src/select-query-parser/result.ts:        : any
./backend/newpennine-api/node_modules/@supabase/postgrest-js/src/select-query-parser/result.ts:      : any
./backend/newpennine-api/node_modules/@supabase/postgrest-js/src/select-query-parser/result.ts:    : any
./backend/newpennine-api/node_modules/@supabase/postgrest-js/src/types.ts:type NonRecursiveType = BuiltIns | Function | (new (...arguments_: any[]) => unknown)
./backend/newpennine-api/node_modules/@supabase/postgrest-js/src/PostgrestBuilder.ts:    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
./backend/newpennine-api/node_modules/@supabase/postgrest-js/src/PostgrestClient.ts:    : any
./backend/newpennine-api/node_modules/@supabase/postgrest-js/src/PostgrestClient.ts:    Database[DynamicSchema] extends GenericSchema ? Database[DynamicSchema] : any
./backend/newpennine-api/node_modules/uri-js/dist/esnext/util.d.ts:export declare function typeOf(o: any): string;
./backend/newpennine-api/node_modules/uri-js/dist/esnext/util.d.ts:export declare function toArray(obj: any): Array<any>;
./backend/newpennine-api/node_modules/uri-js/dist/esnext/util.d.ts:export declare function assign(target: object, source: any): any;
./backend/newpennine-api/node_modules/form-data/index.d.ts:  append(key: string, value: any, options?: FormData.AppendOptions | string): void;
./backend/newpennine-api/node_modules/form-data/index.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/jest-snapshot/node_modules/@babel/types/lib/index-legacy.d.ts:export function assertNode(obj: any): void
./backend/newpennine-api/node_modules/jest-snapshot/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T
./backend/newpennine-api/node_modules/jest-snapshot/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent(a: any, b: any): boolean
./backend/newpennine-api/node_modules/jest-snapshot/node_modules/@babel/types/lib/index-legacy.d.ts:export function validate(n: Node, key: string, value: any): void;
./backend/newpennine-api/node_modules/jest-snapshot/node_modules/@babel/types/lib/index.d.ts:declare function assertNode(node?: any): asserts node is Node;
./backend/newpennine-api/node_modules/jest-snapshot/node_modules/@babel/types/lib/index.d.ts:declare function assertNumberLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/jest-snapshot/node_modules/@babel/types/lib/index.d.ts:declare function assertRegexLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/jest-snapshot/node_modules/@babel/types/lib/index.d.ts:declare function assertRestProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/jest-snapshot/node_modules/@babel/types/lib/index.d.ts:declare function assertSpreadProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/jest-snapshot/node_modules/@babel/types/lib/index.d.ts:declare function assertModuleDeclaration(node: any, opts: any): void;
./backend/newpennine-api/node_modules/jest-snapshot/node_modules/@babel/types/lib/index.d.ts:declare function getType(val: any): "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function" | "array" | "null";
./backend/newpennine-api/node_modules/jest-snapshot/node_modules/@babel/types/lib/index.d.ts:    oneOf: any[];
./backend/newpennine-api/node_modules/jest-snapshot/node_modules/@babel/types/lib/index.d.ts:}, val: any) => void);
./backend/newpennine-api/node_modules/jest-snapshot/node_modules/@babel/types/lib/index.d.ts:declare function isNode(node: any): node is Node;
./backend/newpennine-api/node_modules/jest-snapshot/node_modules/@babel/types/lib/index.d.ts:declare function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T;
./backend/newpennine-api/node_modules/class-validator/types/decorator/array/ArrayContains.d.ts:export declare function arrayContains(array: unknown, values: any[]): boolean;
./backend/newpennine-api/node_modules/class-validator/types/decorator/array/ArrayContains.d.ts:export declare function ArrayContains(values: any[], validationOptions?: ValidationOptions): PropertyDecorator;
./backend/newpennine-api/node_modules/class-validator/types/decorator/array/ArrayNotContains.d.ts:export declare function arrayNotContains(array: unknown, values: any[]): boolean;
./backend/newpennine-api/node_modules/class-validator/types/decorator/array/ArrayNotContains.d.ts:export declare function ArrayNotContains(values: any[], validationOptions?: ValidationOptions): PropertyDecorator;
./backend/newpennine-api/node_modules/class-validator/types/decorator/common/ValidateIf.d.ts:export declare function ValidateIf(condition: (object: any, value: any) => boolean, validationOptions?: ValidationOptions): PropertyDecorator;
./backend/newpennine-api/node_modules/class-validator/types/decorator/common/NotEquals.d.ts:export declare function NotEquals(comparison: any, validationOptions?: ValidationOptions): PropertyDecorator;
./backend/newpennine-api/node_modules/class-validator/types/decorator/common/Equals.d.ts:export declare function Equals(comparison: any, validationOptions?: ValidationOptions): PropertyDecorator;
./backend/newpennine-api/node_modules/class-validator/types/decorator/common/Validate.d.ts:export declare function Validate(constraintClass: Function, constraints?: any[], validationOptions?: ValidationOptions): PropertyDecorator;
./backend/newpennine-api/node_modules/class-validator/types/decorator/common/ValidateBy.d.ts:    constraints?: any[];
./backend/newpennine-api/node_modules/class-validator/types/decorator/ValidationOptions.d.ts:    context?: any;
./backend/newpennine-api/node_modules/class-validator/types/decorator/ValidationOptions.d.ts:export declare function isValidationOptions(val: any): val is ValidationOptions;
./backend/newpennine-api/node_modules/class-validator/types/decorator/object/IsInstance.d.ts:export declare function isInstance(object: unknown, targetTypeConstructor: new (...args: any[]) => any): boolean;
./backend/newpennine-api/node_modules/class-validator/types/decorator/object/IsInstance.d.ts:export declare function IsInstance(targetType: new (...args: any[]) => any, validationOptions?: ValidationOptions): PropertyDecorator;
./backend/newpennine-api/node_modules/class-validator/types/decorator/typechecker/IsEnum.d.ts:export declare function isEnum(value: unknown, entity: any): boolean;
./backend/newpennine-api/node_modules/class-validator/types/utils/get-global.util.d.ts:export declare function getGlobal(): any;
./backend/newpennine-api/node_modules/class-validator/types/utils/is-promise.util.d.ts:export declare function isPromise<T = any>(p: any): p is Promise<T>;
./backend/newpennine-api/node_modules/class-validator/types/container.d.ts:    get(someClass: any): any;
./backend/newpennine-api/node_modules/class-validator/types/container.d.ts:    new (...args: any[]): T;
./backend/newpennine-api/node_modules/class-validator/types/register-decorator.d.ts:    constraints?: any[];
./backend/newpennine-api/node_modules/class-validator/types/validation-schema/ValidationSchema.d.ts:            constraints?: any[];
./backend/newpennine-api/node_modules/class-validator/types/validation-schema/ValidationSchema.d.ts:            message?: string | ((value?: any, constraint1?: any, constraint2?: any) => string);
./backend/newpennine-api/node_modules/class-validator/types/validation-schema/ValidationSchema.d.ts:            options?: any;
./backend/newpennine-api/node_modules/class-validator/types/metadata/ValidationMetadata.d.ts:    constraints: any[];
./backend/newpennine-api/node_modules/class-validator/types/metadata/ValidationMetadata.d.ts:    context?: any;
./backend/newpennine-api/node_modules/class-validator/types/metadata/ValidationMetadata.d.ts:    validationTypeOptions: any;
./backend/newpennine-api/node_modules/class-validator/types/metadata/ValidationMetadataArgs.d.ts:    constraints?: any[];
./backend/newpennine-api/node_modules/class-validator/types/metadata/ValidationMetadataArgs.d.ts:    validationTypeOptions?: any;
./backend/newpennine-api/node_modules/class-validator/types/validation/ValidationArguments.d.ts:    value: any;
./backend/newpennine-api/node_modules/class-validator/types/validation/ValidationArguments.d.ts:    constraints: any[];
./backend/newpennine-api/node_modules/class-validator/types/validation/ValidationError.d.ts:    value?: any;
./backend/newpennine-api/node_modules/class-validator/types/validation/ValidationError.d.ts:        [type: string]: any;
./backend/newpennine-api/node_modules/class-validator/types/validation/ValidationExecutor.d.ts:    whitelist(object: any, groupedMetadatas: {
./backend/newpennine-api/node_modules/class-validator/types/validation/ValidatorConstraintInterface.d.ts:    validate(value: any, validationArguments?: ValidationArguments): Promise<boolean> | boolean;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/Subscription.d.ts:export declare function isSubscription(value: any): value is Subscription;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/operators/catchError.d.ts:export declare function catchError<T, O extends ObservableInput<any>>(selector: (err: any, caught: Observable<T>) => O): OperatorFunction<T, T | ObservedValueOf<O>>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/operators/share.d.ts:    resetOnError?: boolean | ((error: any) => ObservableInput<any>);
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/operators/every.d.ts:export declare function every<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/operators/partition.d.ts:export declare function partition<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): UnaryFunction<Observable<T>, [Observable<T>, Observable<T>]>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/operators/materialize.d.ts: * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/operators/tap.d.ts:export declare function tap<T>(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): MonoTypeOperatorFunction<T>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/operators/find.d.ts:export declare function createFind<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean, thisArg: any, emit: 'value' | 'index'): (source: Observable<T>, subscriber: Subscriber<any>) => void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/operators/OperatorSubscriber.d.ts:export declare function createOperatorSubscriber<T>(destination: Subscriber<any>, onNext?: (value: T) => void, onComplete?: () => void, onError?: (err: any) => void, onFinalize?: () => void): Subscriber<T>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/operators/OperatorSubscriber.d.ts:    constructor(destination: Subscriber<any>, onNext?: (value: T) => void, onComplete?: () => void, onError?: (err: any) => void, onFinalize?: (() => void) | undefined, shouldUnsubscribe?: (() => boolean) | undefined);
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/operators/joinAllInternals.d.ts:export declare function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R): import("../types").UnaryFunction<Observable<ObservableInput<T>>, unknown>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/operators/findIndex.d.ts:export declare function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/operators/retry.d.ts:    delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/isReadableStreamLike.d.ts:export declare function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/isPromise.d.ts:export declare function isPromise(value: any): value is PromiseLike<any>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popScheduler(args: any[]): SchedulerLike | undefined;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/args.d.ts:export declare function popNumber(args: any[], defaultValue: number): number;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/createErrorClass.d.ts:export declare function createErrorClass<T>(createImpl: (_super: any) => any): T;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/errorContext.d.ts:export declare function captureError(err: any): void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/not.d.ts:export declare function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/isFunction.d.ts:export declare function isFunction(value: any): value is (...args: any[]) => any;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/isAsyncIterable.d.ts:export declare function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/throwUnobservableError.d.ts:export declare function createInvalidObservableTypeError(input: any): TypeError;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/lift.d.ts:export declare function hasLift(source: any): source is {
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/isObservable.d.ts:export declare function isObservable(obj: any): obj is Observable<unknown>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/applyMixins.d.ts:export declare function applyMixins(derivedCtor: any, baseCtors: any[]): void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/reportUnhandledError.d.ts:export declare function reportUnhandledError(err: any): void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/isScheduler.d.ts:export declare function isScheduler(value: any): value is SchedulerLike;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/isArrayLike.d.ts:export declare const isArrayLike: <T>(x: any) => x is ArrayLike<T>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/createObject.d.ts:export declare function createObject(keys: string[], values: any[]): any;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/isIterable.d.ts:export declare function isIterable(input: any): input is Iterable<any>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/isInteropObservable.d.ts:export declare function isInteropObservable(input: any): input is InteropObservable<any>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/isDate.d.ts:export declare function isValidDate(value: any): value is Date;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/UnsubscriptionError.d.ts:    readonly errors: any[];
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/util/UnsubscriptionError.d.ts:    new (errors: any[]): UnsubscriptionError;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/types.d.ts:    error: any;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/types.d.ts:    error?: (err: any) => void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/types.d.ts:    error: (err: any) => void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/types.d.ts:    error?: (err: any) => void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/types.d.ts:    error: (err: any) => void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/types.d.ts:export declare type Head<X extends readonly any[]> = ((...args: X) => any) extends (arg: infer U, ...rest: any[]) => any ? U : never;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/types.d.ts:export declare type Tail<X extends readonly any[]> = ((...args: X) => any) extends (arg: any, ...rest: infer U) => any ? U : never;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/config.d.ts:    onUnhandledError: ((err: any) => void) | null;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay?: number): TimerHandle;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay?: number): TimerHandle | undefined;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/scheduler/VirtualTimeScheduler.d.ts:    protected _execute(state: T, delay: number): any;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/scheduler/QueueAction.d.ts:    execute(state: T, delay: number): any;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/scheduler/immediateProvider.d.ts:declare type SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/scheduler/intervalProvider.d.ts:declare type SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/scheduler/AsyncAction.d.ts:    execute(state: T, delay: number): any;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/scheduler/AsyncAction.d.ts:    protected _execute(state: T, _delay: number): any;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/scheduler/timeoutProvider.d.ts:declare type SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:export declare type observableToBeFn = (marbles: string, values?: any, errorValue?: any) => void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    assertDeepEqual: (actual: any, expected: any) => boolean | void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    constructor(assertDeepEqual: (actual: any, expected: any) => boolean | void);
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    }, error?: any): ColdObservable<T>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    }, error?: any): HotObservable<T>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:        toBe(marbles: string, values?: any, errorValue?: any): void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/testing/TestScheduler.d.ts:    static parseMarbles(marbles: string, values?: any, errorValue?: any, materializeInnerObservables?: boolean, runMode?: boolean): TestMessage[];
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/Operator.d.ts:    call(subscriber: Subscriber<R>, source: any): TeardownLogic;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/Notification.d.ts:    readonly error?: any;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/Notification.d.ts:    constructor(kind: 'E', value: undefined, error: any);
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/Notification.d.ts:    do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/Notification.d.ts:    do(next: (value: T) => void, error: (err: any) => void): void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/Notification.d.ts:    accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/Notification.d.ts:    accept(next: (value: T) => void, error: (err: any) => void): void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/Notification.d.ts:    static createError(err?: any): Notification<never> & ErrorNotification;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/observable/pairs.d.ts:export declare function pairs(n: number | bigint | boolean | ((...args: any[]) => any) | symbol, scheduler?: SchedulerLike): Observable<[never, never]>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/observable/bindCallback.d.ts:export declare function bindCallback(callbackFunc: (...args: any[]) => void, resultSelector: (...args: any[]) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/observable/bindCallbackInternals.d.ts:export declare function bindCallbackInternals(isNodeStyle: boolean, callbackFunc: any, resultSelector?: any, scheduler?: SchedulerLike): (...args: any[]) => Observable<unknown>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/observable/combineLatest.d.ts:export declare function combineLatestInit(observables: ObservableInput<any>[], scheduler?: SchedulerLike, valueTransform?: (values: any[]) => any): (subscriber: Subscriber<any>) => void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/observable/fromEventPattern.d.ts:export declare function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void): Observable<T>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/observable/fromEventPattern.d.ts:export declare function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare type NodeEventHandler = (...args: any[]) => void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:    on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:    off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<R>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string, resultSelector: (...args: any[]) => R): Observable<R>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<R>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string, resultSelector: (...args: any[]) => R): Observable<R>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/observable/fromEvent.d.ts:export declare function fromEvent<T, R>(target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>, eventName: string, resultSelector: (value: T, ...args: any[]) => R): Observable<R>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts: *   const error: any = new Error(`This is error number ${ ++errorCount }`);
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts:export declare function throwError(error: any): Observable<never>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/observable/throwError.d.ts:export declare function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/observable/innerFrom.d.ts:export declare function fromInteropObservable<T>(obj: any): Observable<T>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/observable/bindNodeCallback.d.ts:export declare function bindNodeCallback(callbackFunc: (...args: any[]) => void, resultSelector: (...args: any[]) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/observable/bindNodeCallback.d.ts:export declare function bindNodeCallback<A extends readonly unknown[], R extends readonly unknown[]>(callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void, schedulerLike?: SchedulerLike): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/Observable.d.ts:    static create: (...args: any[]) => any;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/Observable.d.ts:    subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/Subject.d.ts:    thrownError: any;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/Subject.d.ts:    static create: (...args: any[]) => any;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/Subject.d.ts:    error(err: any): void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/Subject.d.ts:    error(err: any): void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    error(err?: any): void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    protected _error(err: any): void;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/Subscriber.d.ts:    constructor(observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null, error?: ((e?: any) => void) | null, complete?: (() => void) | null);
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/ajax/errors.d.ts:    response: any;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    post<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    put<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/ajax/ajax.d.ts:    patch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/ajax/types.d.ts:    body?: any;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/ajax/types.d.ts:    body?: any;
./backend/newpennine-api/node_modules/rxjs/dist/types/internal/ajax/getXHRResponse.d.ts:export declare function getXHRResponse(xhr: XMLHttpRequest): any;
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/catchError.ts:  selector: (err: any, caught: Observable<T>) => O
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/catchError.ts:  selector: (err: any, caught: Observable<T>) => O
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/groupBy.ts:  elementOrOptions?: ((value: any) => any) | void | BasicGroupByOptions<K, T> | GroupByOptionsWithElement<K, R, T>,
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/groupBy.ts:    let element: ((value: any) => any) | void;
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/groupBy.ts:      element = elementOrOptions as ((value: any) => any);
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/groupBy.ts:    const handleError = (err: any) => notify((consumer) => consumer.error(err));
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/groupBy.ts:      const result: any = new Observable<T>((groupSubscriber) => {
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/joinAllInternals.ts:export function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R) {
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/scanInternals.ts:    let state: any = seed;
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/find.ts:  thisArg?: any
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/find.ts:  thisArg: any,
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/filter.ts:export function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/windowTime.ts:export function windowTime<T>(windowTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, Observable<T>> {
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/share.ts:  resetOnError?: boolean | ((error: any) => ObservableInput<any>);
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/tap.ts:  error?: ((error: any) => void) | null,
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/tap.ts:  error?: ((e: any) => void) | null,
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/materialize.ts: * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/retry.ts:  delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/exhaustMap.ts:      source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b: any, ii: any) => resultSelector(a, b, i, ii)))));
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/map.ts:export function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/findIndex.ts:export function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/findIndex.ts:  thisArg?: any
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/every.ts:  thisArg: any
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/every.ts:  thisArg?: any
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/windowWhen.ts:    const handleError = (err: any) => {
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/pluck.ts:    let currentProp: any = x;
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/bufferTime.ts:export function bufferTime<T>(bufferTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, T[]> {
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/timeout.ts:    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/combineLatest.ts:export function combineLatest<T, R>(...args: (ObservableInput<any> | ((...values: any[]) => R))[]): OperatorFunction<T, unknown> {
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/windowToggle.ts:    const handleError = (err: any) => {
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/race.ts:export function race<T>(...args: any[]): OperatorFunction<T, unknown> {
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:  onError?: (err: any) => void,
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:    onError?: (err: any) => void,
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts:      ? function (this: OperatorSubscriber<T>, err: any) {
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/concat.ts:export function concat<T, R>(...args: any[]): OperatorFunction<T, R> {
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/reduce.ts:export function reduce<V, A>(accumulator: (acc: V | A, value: V, index: number) => A, seed?: any): OperatorFunction<V, V | A> {
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/window.ts:    const errorHandler = (err: any) => {
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/mergeMap.ts:    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/partition.ts:  thisArg?: any
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/toArray.ts:const arrReducer = (arr: any[], value: any) => (arr.push(value), arr);
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/withLatestFrom.ts:export function withLatestFrom<T, R>(...inputs: any[]): OperatorFunction<T, R | any[]> {
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/withLatestFrom.ts:  const project = popResultSelector(inputs) as ((...args: any[]) => R) | undefined;
./backend/newpennine-api/node_modules/rxjs/src/internal/operators/distinctUntilChanged.ts:function defaultCompare(a: any, b: any) {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/EmptyError.ts:    function EmptyErrorImpl(this: any) {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/pipe.ts:    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);
./backend/newpennine-api/node_modules/rxjs/src/internal/util/reportUnhandledError.ts:export function reportUnhandledError(err: any) {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/isFunction.ts:export function isFunction(value: any): value is (...args: any[]) => any {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/isInteropObservable.ts:export function isInteropObservable(input: any): input is InteropObservable<any> {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/isPromise.ts:export function isPromise(value: any): value is PromiseLike<any> {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/isDate.ts:export function isValidDate(value: any): value is Date {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/isAsyncIterable.ts:export function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/args.ts:export function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/args.ts:export function popScheduler(args: any[]): SchedulerLike | undefined {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/args.ts:export function popNumber(args: any[], defaultValue: number): number {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/isReadableStreamLike.ts:export function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/throwUnobservableError.ts:export function createInvalidObservableTypeError(input: any) {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/SequenceError.ts:    function SequenceErrorImpl(this: any, message: string) {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/createErrorClass.ts:export function createErrorClass<T>(createImpl: (_super: any) => any): T {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/createErrorClass.ts:  const _super = (instance: any) => {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/not.ts:export function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/isArrayLike.ts:export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');
./backend/newpennine-api/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:  readonly errors: any[];
./backend/newpennine-api/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:  new (errors: any[]): UnsubscriptionError;
./backend/newpennine-api/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts:    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/isScheduler.ts:export function isScheduler(value: any): value is SchedulerLike {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/errorContext.ts:let context: { errorThrown: boolean; error: any } | null = null;
./backend/newpennine-api/node_modules/rxjs/src/internal/util/errorContext.ts:export function captureError(err: any) {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts:    function ObjectUnsubscribedErrorImpl(this: any) {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/Immediate.ts:const activeHandles: { [key: number]: any } = {};
./backend/newpennine-api/node_modules/rxjs/src/internal/util/applyMixins.ts:export function applyMixins(derivedCtor: any, baseCtors: any[]) {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/lift.ts:export function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/createObject.ts:export function createObject(keys: string[], values: any[]) {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/argsArgArrayOrObject.ts:function isPOJO(obj: any): obj is object {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts:    function ArgumentOutOfRangeErrorImpl(this: any) {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/isIterable.ts:export function isIterable(input: any): input is Iterable<any> {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/NotFoundError.ts:    function NotFoundErrorImpl(this: any, message: string) {
./backend/newpennine-api/node_modules/rxjs/src/internal/util/isObservable.ts:export function isObservable(obj: any): obj is Observable<unknown> {
./backend/newpennine-api/node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts:type SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:  public execute(state: T, delay: number): any {
./backend/newpennine-api/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:  protected _execute(state: T, _delay: number): any {
./backend/newpennine-api/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts:    let errorValue: any;
./backend/newpennine-api/node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts:    let error: any;
./backend/newpennine-api/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:    let error: any;
./backend/newpennine-api/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {
./backend/newpennine-api/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {
./backend/newpennine-api/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts:  protected _execute(state: T, delay: number): any {
./backend/newpennine-api/node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts:    let error: any;
./backend/newpennine-api/node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts:    let error: any;
./backend/newpennine-api/node_modules/rxjs/src/internal/scheduler/QueueAction.ts:  public execute(state: T, delay: number): any {
./backend/newpennine-api/node_modules/rxjs/src/internal/scheduler/intervalProvider.ts:type SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/rxjs/src/internal/scheduler/immediateProvider.ts:type SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;
./backend/newpennine-api/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  actual?: any[];
./backend/newpennine-api/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  expected?: any[];
./backend/newpennine-api/node_modules/rxjs/src/internal/testing/TestScheduler.ts:export type observableToBeFn = (marbles: string, values?: any, errorValue?: any) => void;
./backend/newpennine-api/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  constructor(public assertDeepEqual: (actual: any, expected: any) => boolean | void) {
./backend/newpennine-api/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  createColdObservable<T = string>(marbles: string, values?: { [marble: string]: T }, error?: any): ColdObservable<T> {
./backend/newpennine-api/node_modules/rxjs/src/internal/testing/TestScheduler.ts:  createHotObservable<T = string>(marbles: string, values?: { [marble: string]: T }, error?: any): HotObservable<T> {
./backend/newpennine-api/node_modules/rxjs/src/internal/testing/TestScheduler.ts:      toBe(marbles: string, values?: any, errorValue?: any) {
./backend/newpennine-api/node_modules/rxjs/src/internal/testing/TestScheduler.ts:    values?: any,
./backend/newpennine-api/node_modules/rxjs/src/internal/testing/TestScheduler.ts:    errorValue?: any,
./backend/newpennine-api/node_modules/rxjs/src/internal/testing/TestScheduler.ts:        ? (x: any) => x
./backend/newpennine-api/node_modules/rxjs/src/internal/testing/TestScheduler.ts:        : (x: any) => {
./backend/newpennine-api/node_modules/rxjs/src/internal/types.ts:  error: any;
./backend/newpennine-api/node_modules/rxjs/src/internal/types.ts:  error?: (err: any) => void;
./backend/newpennine-api/node_modules/rxjs/src/internal/types.ts:  error: (err: any) => void;
./backend/newpennine-api/node_modules/rxjs/src/internal/types.ts:  error?: (err: any) => void;
./backend/newpennine-api/node_modules/rxjs/src/internal/types.ts:  error: (err: any) => void;
./backend/newpennine-api/node_modules/rxjs/src/internal/types.ts:export type Head<X extends readonly any[]> = ((...args: X) => any) extends (arg: infer U, ...rest: any[]) => any ? U : never;
./backend/newpennine-api/node_modules/rxjs/src/internal/types.ts:export type Tail<X extends readonly any[]> = ((...args: X) => any) extends (arg: any, ...rest: infer U) => any ? U : never;
./backend/newpennine-api/node_modules/rxjs/src/internal/Operator.ts:  call(subscriber: Subscriber<R>, source: any): TeardownLogic;
./backend/newpennine-api/node_modules/rxjs/src/internal/Subscriber.ts:  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {
./backend/newpennine-api/node_modules/rxjs/src/internal/Subscriber.ts:  error(err?: any): void {
./backend/newpennine-api/node_modules/rxjs/src/internal/Subscriber.ts:  protected _error(err: any): void {
./backend/newpennine-api/node_modules/rxjs/src/internal/Subscriber.ts:function bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {
./backend/newpennine-api/node_modules/rxjs/src/internal/Subscriber.ts:  error(err: any): void {
./backend/newpennine-api/node_modules/rxjs/src/internal/Subscriber.ts:    error?: ((e?: any) => void) | null,
./backend/newpennine-api/node_modules/rxjs/src/internal/Subscriber.ts:      let context: any;
./backend/newpennine-api/node_modules/rxjs/src/internal/Subscriber.ts:function handleUnhandledError(error: any) {
./backend/newpennine-api/node_modules/rxjs/src/internal/Subscriber.ts:function defaultErrorHandler(err: any) {
./backend/newpennine-api/node_modules/rxjs/src/internal/Observable.ts:  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {
./backend/newpennine-api/node_modules/rxjs/src/internal/Observable.ts:  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;
./backend/newpennine-api/node_modules/rxjs/src/internal/Observable.ts:    error?: ((error: any) => void) | null,
./backend/newpennine-api/node_modules/rxjs/src/internal/Observable.ts:        (err: any) => reject(err),
./backend/newpennine-api/node_modules/rxjs/src/internal/Observable.ts:function isObserver<T>(value: any): value is Observer<T> {
./backend/newpennine-api/node_modules/rxjs/src/internal/Observable.ts:function isSubscriber<T>(value: any): value is Subscriber<T> {
./backend/newpennine-api/node_modules/rxjs/src/internal/Notification.ts:  constructor(kind: 'E', value: undefined, error: any);
./backend/newpennine-api/node_modules/rxjs/src/internal/Notification.ts:  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {
./backend/newpennine-api/node_modules/rxjs/src/internal/Notification.ts:  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./backend/newpennine-api/node_modules/rxjs/src/internal/Notification.ts:  do(next: (value: T) => void, error: (err: any) => void): void;
./backend/newpennine-api/node_modules/rxjs/src/internal/Notification.ts:  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {
./backend/newpennine-api/node_modules/rxjs/src/internal/Notification.ts:  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;
./backend/newpennine-api/node_modules/rxjs/src/internal/Notification.ts:  accept(next: (value: T) => void, error: (err: any) => void): void;
./backend/newpennine-api/node_modules/rxjs/src/internal/Notification.ts:  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {
./backend/newpennine-api/node_modules/rxjs/src/internal/Notification.ts:  static createError(err?: any) {
./backend/newpennine-api/node_modules/rxjs/src/internal/Subject.ts:  thrownError: any = null;
./backend/newpennine-api/node_modules/rxjs/src/internal/Subject.ts:  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {
./backend/newpennine-api/node_modules/rxjs/src/internal/Subject.ts:  error(err: any) {
./backend/newpennine-api/node_modules/rxjs/src/internal/Subject.ts:    const observable: any = new Observable<T>();
./backend/newpennine-api/node_modules/rxjs/src/internal/Subject.ts:  error(err: any) {
./backend/newpennine-api/node_modules/rxjs/src/internal/NotificationFactories.ts:export function errorNotification(error: any): ErrorNotification {
./backend/newpennine-api/node_modules/rxjs/src/internal/NotificationFactories.ts:export function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/connectable.ts:  const result: any = new Observable<T>((subscriber) => {
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: any[]) => void,
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  resultSelector: (...args: any[]) => any,
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:): (...args: any[]) => Observable<any>;
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void,
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  callbackFunc: (...args: [...any[], (err: any, ...res: any) => void]) => void,
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:  resultSelector?: ((...args: any[]) => any) | SchedulerLike,
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts:): (...args: any[]) => Observable<any> {
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/throwError.ts: *   const error: any = new Error(`This is error number ${ ++errorCount }`);
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(error: any): Observable<never>;
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/throwError.ts:export function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  resultSelector?: (...args: any[]) => T
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/fromEventPattern.ts:  resultSelector?: (...args: any[]) => T
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/fromEvent.ts:export type NodeEventHandler = (...args: any[]) => void;
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/fromEvent.ts:  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/fromEvent.ts:  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (...args: any[]) => R
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (...args: any[]) => R
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector: (value: T, ...args: any[]) => R
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/fromEvent.ts:  target: any,
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/fromEvent.ts:  options?: EventListenerOptions | ((...args: any[]) => T),
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/fromEvent.ts:  resultSelector?: (...args: any[]) => T
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/fromEvent.ts:      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/fromEvent.ts:      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/fromEvent.ts:    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/fromEvent.ts:function toCommonHandlerRegistry(target: any, eventName: string) {
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/fromEvent.ts:  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/fromEvent.ts:function isEventTarget(target: any): target is HasEventTargetAddRemove<any> {
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/zip.ts:                  const result: any = buffers.map((buffer) => buffer.shift()!);
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/innerFrom.ts:export function fromInteropObservable<T>(obj: any) {
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/innerFrom.ts:        (err: any) => subscriber.error(err)
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/forkJoin.ts:export function forkJoin(...args: any[]): Observable<any> {
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/bindCallback.ts:  callbackFunc: (...args: any[]) => void,
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/bindCallback.ts:  resultSelector: (...args: any[]) => any,
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/bindCallback.ts:): (...args: any[]) => Observable<any>;
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/bindCallback.ts:  callbackFunc: (...args: [...any[], (...res: any) => void]) => void,
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/bindCallback.ts:  resultSelector?: ((...args: any[]) => any) | SchedulerLike,
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/bindCallback.ts:): (...args: any[]) => Observable<unknown> {
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/combineLatest.ts:export function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/combineLatest.ts:  valueTransform: (values: any[]) => any = identity
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/pairs.ts:  n: number | bigint | boolean | ((...args: any[]) => any) | symbol,
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/pairs.ts:export function pairs(obj: any, scheduler?: SchedulerLike) {
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/dom/WebSocketSubject.ts:  serializer: (value: any) => JSON.stringify(value),
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/dom/fetch.ts:    const handleError = (err: any) => {
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  callbackFunc: any,
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  resultSelector?: any,
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:): (...args: any[]) => Observable<unknown> {
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:      return function (this: any, ...args: any[]) {
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:    return function (this: any, ...args: any[]) {
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:  return function (this: any, ...args: any[]): Observable<any> {
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts:            (...results: any[]) => {
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/concat.ts:export function concat(...args: any[]): Observable<unknown> {
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/partition.ts:  predicate: (this: any, value: T, index: number) => boolean,
./backend/newpennine-api/node_modules/rxjs/src/internal/observable/partition.ts:  thisArg?: any
./backend/newpennine-api/node_modules/rxjs/src/internal/Subscription.ts:    let errors: any[] | undefined;
./backend/newpennine-api/node_modules/rxjs/src/internal/Subscription.ts:export function isSubscription(value: any): value is Subscription {
./backend/newpennine-api/node_modules/rxjs/src/internal/config.ts:  onUnhandledError: ((err: any) => void) | null;
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/ajax.ts:  post<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/ajax.ts:  put<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/ajax.ts:  patch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>>;
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPost<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPut<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/ajax.ts:function ajaxPatch<T>(url: string, body?: any, headers?: Record<string, string>): Observable<AjaxResponse<T>> {
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/ajax.ts:      const addProgressEvent = (target: any, type: string, direction: AjaxDirection) => {
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/ajax.ts:        [LOADSTART, PROGRESS].forEach((type) => xhr.upload.addEventListener(type, (e: any) => progressSubscriber?.next?.(e)));
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/ajax.ts:function extractContentTypeAndMaybeSerializeBody(body: any, headers: Record<string, string>) {
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/ajax.ts:function toStringCheck(obj: any, name: string): boolean {
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/ajax.ts:function isArrayBuffer(body: any): body is ArrayBuffer {
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/ajax.ts:function isFile(body: any): body is File {
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/ajax.ts:function isBlob(body: any): body is Blob {
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/ajax.ts:function isArrayBufferView(body: any): body is ArrayBufferView {
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/ajax.ts:function isFormData(body: any): body is FormData {
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/ajax.ts:function isURLSearchParams(body: any): body is URLSearchParams {
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/ajax.ts:function isReadableStream(body: any): body is ReadableStream {
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/errors.ts:  response: any;
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/errors.ts:    function AjaxErrorImpl(this: any, message: string, xhr: XMLHttpRequest, request: AjaxRequest) {
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/errors.ts:      let response: any;
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/errors.ts:  function AjaxTimeoutErrorImpl(this: any, xhr: XMLHttpRequest, request: AjaxRequest) {
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/getXHRResponse.ts:        const ieXHR: any = xhr;
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/getXHRResponse.ts:        const ieXHR: any = xhr;
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/types.ts:  body?: any;
./backend/newpennine-api/node_modules/rxjs/src/internal/ajax/types.ts:  body?: any;
./backend/newpennine-api/node_modules/eslint/lib/types/use-at-your-own-risk.d.ts:		configArrayFactory?: any;
./backend/newpennine-api/node_modules/eslint/lib/types/use-at-your-own-risk.d.ts:		extensions?: any;
./backend/newpennine-api/node_modules/eslint/lib/types/use-at-your-own-risk.d.ts:	isTargetPath(filePath: string, providedConfig?: any): boolean;
./backend/newpennine-api/node_modules/eslint/lib/types/use-at-your-own-risk.d.ts:	): IterableIterator<{ config: any; filePath: string; ignored: boolean }>;
./backend/newpennine-api/node_modules/eslint/lib/types/index.d.ts:		| { type: "TDZ"; node: any; parent: null }
./backend/newpennine-api/node_modules/eslint/lib/types/index.d.ts:			RuleOptions: any[];
./backend/newpennine-api/node_modules/eslint/lib/types/index.d.ts:			RuleOptions: any[];
./backend/newpennine-api/node_modules/eslint/lib/types/index.d.ts:		settings?: { [name: string]: any } | undefined;
./backend/newpennine-api/node_modules/eslint/lib/types/index.d.ts:					[key: string]: any;
./backend/newpennine-api/node_modules/eslint/lib/types/index.d.ts:		[key: string]: any;
./backend/newpennine-api/node_modules/eslint/lib/types/index.d.ts:					parse(text: string, options?: any): unknown;
./backend/newpennine-api/node_modules/eslint/lib/types/index.d.ts:						options?: any,
./backend/newpennine-api/node_modules/eslint/lib/types/index.d.ts:			| { parse(text: string, options?: any): AST.Program }
./backend/newpennine-api/node_modules/eslint/lib/types/index.d.ts:			| { parseForESLint(text: string, options?: any): ESLintParseResult }
./backend/newpennine-api/node_modules/eslint/lib/types/index.d.ts:	static describe: ((...args: any) => any) | null;
./backend/newpennine-api/node_modules/eslint/lib/types/index.d.ts:	static it: ((...args: any) => any) | null;
./backend/newpennine-api/node_modules/eslint/lib/types/index.d.ts:	static itOnly: ((...args: any) => any) | null;
./backend/newpennine-api/node_modules/eslint/lib/types/index.d.ts:		options?: any;
./backend/newpennine-api/node_modules/eslint/lib/types/index.d.ts:		settings?: { [name: string]: any } | undefined;
./backend/newpennine-api/node_modules/eslint/lib/types/index.d.ts:		data?: any;
./backend/newpennine-api/node_modules/glob/dist/esm/walker.d.ts:    walkCB2(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./backend/newpennine-api/node_modules/glob/dist/esm/walker.d.ts:    walkCB2Sync(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./backend/newpennine-api/node_modules/glob/dist/commonjs/walker.d.ts:    walkCB2(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./backend/newpennine-api/node_modules/glob/dist/commonjs/walker.d.ts:    walkCB2Sync(target: Path, patterns: Pattern[], processor: Processor, cb: () => any): any;
./backend/newpennine-api/node_modules/glob/node_modules/minimatch/dist/esm/index.d.ts:    debug(..._: any[]): void;
./backend/newpennine-api/node_modules/glob/node_modules/minimatch/dist/esm/ast.d.ts:    toJSON(): any[];
./backend/newpennine-api/node_modules/glob/node_modules/minimatch/dist/esm/assert-valid-pattern.d.ts:export declare const assertValidPattern: (pattern: any) => void;
./backend/newpennine-api/node_modules/glob/node_modules/minimatch/dist/commonjs/index.d.ts:    debug(..._: any[]): void;
./backend/newpennine-api/node_modules/glob/node_modules/minimatch/dist/commonjs/ast.d.ts:    toJSON(): any[];
./backend/newpennine-api/node_modules/glob/node_modules/minimatch/dist/commonjs/assert-valid-pattern.d.ts:export declare const assertValidPattern: (pattern: any) => void;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/value-to-string.d.ts:declare function valueToString(value: any): string;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/called-in-order.d.ts:declare function calledInOrder(spies: SinonProxy[] | SinonProxy, ...args: any[]): boolean;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/prototypes/function.d.ts:declare const _exports: any;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/prototypes/set.d.ts:declare const _exports: any;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/prototypes/copy-prototype-methods.d.ts:declare function _exports(prototype: any): any;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/prototypes/array.d.ts:declare const _exports: any;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/prototypes/string.d.ts:declare const _exports: any;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/prototypes/object.d.ts:declare const _exports: any;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/prototypes/index.d.ts:export declare const array: any;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/prototypes/index.d.ts:declare const _function: any;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/prototypes/index.d.ts:export declare const map: any;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/prototypes/index.d.ts:export declare const object: any;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/prototypes/index.d.ts:export declare const set: any;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/prototypes/index.d.ts:export declare const string: any;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/prototypes/map.d.ts:declare const _exports: any;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/type-of.d.ts:declare function _exports(value: any): string;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/index.d.ts:export const global: any;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/index.d.ts:export const every: (obj: any, fn: Function) => boolean;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/index.d.ts:    array: any;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/index.d.ts:    function: any;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/index.d.ts:    map: any;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/index.d.ts:    object: any;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/index.d.ts:    set: any;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/index.d.ts:    string: any;
./backend/newpennine-api/node_modules/@sinonjs/commons/types/index.d.ts:export const typeOf: (value: any) => string;
./backend/newpennine-api/node_modules/source-map/source-map.d.ts:    eachMapping(callback: (mapping: MappingItem) => void, context?: any, order?: number): void;
./backend/newpennine-api/node_modules/source-map/source-map.d.ts:    sourceContents: any;
./backend/newpennine-api/node_modules/pretty-format/build/index.d.ts:    val: any,
./backend/newpennine-api/node_modules/pretty-format/build/index.d.ts:declare type Test = (arg0: any) => boolean;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:      ): any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:      skip: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:      only: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:    fdescribe: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:    fit: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:      ): any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:      skip: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:      only: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:        ): any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:        only: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:        skip: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:      ): any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:      skip: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:      only: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:        ): any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:        only: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:        skip: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:    xdescribe: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:    xit: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:    xtest: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:    ): any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:    skip: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:    only: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:  fdescribe: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:  fit: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:    ): any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:    skip: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:    only: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:      ): any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:      only: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:      skip: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:    ): any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:    skip: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:    only: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:      ): any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:      only: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:      skip: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:  xdescribe: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:  xit: any;
./backend/newpennine-api/node_modules/jest-each/build/index.d.ts:  xtest: any;
./backend/newpennine-api/node_modules/jest-mock/build/index.d.ts:  new (...args: any): any;
./backend/newpennine-api/node_modules/jest-mock/build/index.d.ts:export declare type FunctionLike = (...args: any) => any;
./backend/newpennine-api/node_modules/jsonc-parser/lib/esm/main.d.ts:    readonly value?: any;
./backend/newpennine-api/node_modules/jsonc-parser/lib/esm/main.d.ts:    onLiteralValue?: (value: any, offset: number, length: number, startLine: number, startCharacter: number, pathSupplier: () => JSONPath) => void;
./backend/newpennine-api/node_modules/jsonc-parser/lib/esm/main.d.ts:export declare function modify(text: string, path: JSONPath, value: any, options: ModificationOptions): EditResult;
./backend/newpennine-api/node_modules/jsonc-parser/lib/umd/main.d.ts:    readonly value?: any;
./backend/newpennine-api/node_modules/jsonc-parser/lib/umd/main.d.ts:    onLiteralValue?: (value: any, offset: number, length: number, startLine: number, startCharacter: number, pathSupplier: () => JSONPath) => void;
./backend/newpennine-api/node_modules/jsonc-parser/lib/umd/main.d.ts:export declare function modify(text: string, path: JSONPath, value: any, options: ModificationOptions): EditResult;
./backend/newpennine-api/node_modules/make-error/index.d.ts:  new (...args: any[]): T;
./backend/newpennine-api/node_modules/make-error/index.d.ts:    super_: any;
./backend/newpennine-api/node_modules/make-error/index.d.ts:    super_: any;
./backend/newpennine-api/node_modules/babel-plugin-jest-hoist/node_modules/@babel/types/lib/index-legacy.d.ts:export function assertNode(obj: any): void
./backend/newpennine-api/node_modules/babel-plugin-jest-hoist/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T
./backend/newpennine-api/node_modules/babel-plugin-jest-hoist/node_modules/@babel/types/lib/index-legacy.d.ts:export function isNodesEquivalent(a: any, b: any): boolean
./backend/newpennine-api/node_modules/babel-plugin-jest-hoist/node_modules/@babel/types/lib/index-legacy.d.ts:export function validate(n: Node, key: string, value: any): void;
./backend/newpennine-api/node_modules/babel-plugin-jest-hoist/node_modules/@babel/types/lib/index.d.ts:declare function assertNode(node?: any): asserts node is Node;
./backend/newpennine-api/node_modules/babel-plugin-jest-hoist/node_modules/@babel/types/lib/index.d.ts:declare function assertNumberLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/babel-plugin-jest-hoist/node_modules/@babel/types/lib/index.d.ts:declare function assertRegexLiteral(node: any, opts: any): void;
./backend/newpennine-api/node_modules/babel-plugin-jest-hoist/node_modules/@babel/types/lib/index.d.ts:declare function assertRestProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/babel-plugin-jest-hoist/node_modules/@babel/types/lib/index.d.ts:declare function assertSpreadProperty(node: any, opts: any): void;
./backend/newpennine-api/node_modules/babel-plugin-jest-hoist/node_modules/@babel/types/lib/index.d.ts:declare function assertModuleDeclaration(node: any, opts: any): void;
./backend/newpennine-api/node_modules/babel-plugin-jest-hoist/node_modules/@babel/types/lib/index.d.ts:declare function getType(val: any): "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function" | "array" | "null";
./backend/newpennine-api/node_modules/babel-plugin-jest-hoist/node_modules/@babel/types/lib/index.d.ts:    oneOf: any[];
./backend/newpennine-api/node_modules/babel-plugin-jest-hoist/node_modules/@babel/types/lib/index.d.ts:}, val: any) => void);
./backend/newpennine-api/node_modules/babel-plugin-jest-hoist/node_modules/@babel/types/lib/index.d.ts:declare function isNode(node: any): node is Node;
./backend/newpennine-api/node_modules/babel-plugin-jest-hoist/node_modules/@babel/types/lib/index.d.ts:declare function isNodesEquivalent<T extends Partial<Node>>(a: T, b: any): b is T;
./backend/newpennine-api/node_modules/jest-pnp-resolver/index.d.ts:  defaultResolver: (request: string, opts: any) => string,
./backend/newpennine-api/node_modules/minipass/dist/esm/index.d.ts:export declare const isStream: (s: any) => s is NodeJS.WriteStream | NodeJS.ReadStream | Minipass<any, any, any> | (NodeJS.ReadStream & {
./backend/newpennine-api/node_modules/minipass/dist/esm/index.d.ts:    pause(): any;
./backend/newpennine-api/node_modules/minipass/dist/esm/index.d.ts:    resume(): any;
./backend/newpennine-api/node_modules/minipass/dist/esm/index.d.ts:    pipe(...destArgs: any[]): any;
./backend/newpennine-api/node_modules/minipass/dist/esm/index.d.ts:    end(): any;
./backend/newpennine-api/node_modules/minipass/dist/esm/index.d.ts:    write(chunk: any, ...args: any[]): any;
./backend/newpennine-api/node_modules/minipass/dist/esm/index.d.ts:export declare const isReadable: (s: any) => s is Minipass.Readable;
./backend/newpennine-api/node_modules/minipass/dist/esm/index.d.ts:export declare const isWritable: (s: any) => s is Minipass.Readable;
./backend/newpennine-api/node_modules/minipass/dist/esm/index.d.ts:    proxyErrors(_er: any): void;
./backend/newpennine-api/node_modules/minipass/dist/esm/index.d.ts:        end(): any;
./backend/newpennine-api/node_modules/minipass/dist/esm/index.d.ts:        write(chunk: any, ...args: any[]): any;
./backend/newpennine-api/node_modules/minipass/dist/esm/index.d.ts:        pause(): any;
./backend/newpennine-api/node_modules/minipass/dist/esm/index.d.ts:        resume(): any;
./backend/newpennine-api/node_modules/minipass/dist/esm/index.d.ts:        pipe(...destArgs: any[]): any;
./backend/newpennine-api/node_modules/minipass/dist/esm/index.d.ts:    static get isStream(): (s: any) => s is NodeJS.WriteStream | NodeJS.ReadStream | Minipass<any, any, any> | (NodeJS.ReadStream & {
./backend/newpennine-api/node_modules/minipass/dist/esm/index.d.ts:        pause(): any;
./backend/newpennine-api/node_modules/minipass/dist/esm/index.d.ts:        resume(): any;
./backend/newpennine-api/node_modules/minipass/dist/esm/index.d.ts:        pipe(...destArgs: any[]): any;
./backend/newpennine-api/node_modules/minipass/dist/esm/index.d.ts:        end(): any;
./backend/newpennine-api/node_modules/minipass/dist/esm/index.d.ts:        write(chunk: any, ...args: any[]): any;
./backend/newpennine-api/node_modules/minipass/dist/commonjs/index.d.ts:export declare const isStream: (s: any) => s is NodeJS.WriteStream | NodeJS.ReadStream | Minipass<any, any, any> | (NodeJS.ReadStream & {
./backend/newpennine-api/node_modules/minipass/dist/commonjs/index.d.ts:    pause(): any;
./backend/newpennine-api/node_modules/minipass/dist/commonjs/index.d.ts:    resume(): any;
./backend/newpennine-api/node_modules/minipass/dist/commonjs/index.d.ts:    pipe(...destArgs: any[]): any;
./backend/newpennine-api/node_modules/minipass/dist/commonjs/index.d.ts:    end(): any;
./backend/newpennine-api/node_modules/minipass/dist/commonjs/index.d.ts:    write(chunk: any, ...args: any[]): any;
./backend/newpennine-api/node_modules/minipass/dist/commonjs/index.d.ts:export declare const isReadable: (s: any) => s is Minipass.Readable;
./backend/newpennine-api/node_modules/minipass/dist/commonjs/index.d.ts:export declare const isWritable: (s: any) => s is Minipass.Readable;
./backend/newpennine-api/node_modules/minipass/dist/commonjs/index.d.ts:    proxyErrors(_er: any): void;
./backend/newpennine-api/node_modules/minipass/dist/commonjs/index.d.ts:        end(): any;
./backend/newpennine-api/node_modules/minipass/dist/commonjs/index.d.ts:        write(chunk: any, ...args: any[]): any;
./backend/newpennine-api/node_modules/minipass/dist/commonjs/index.d.ts:        pause(): any;
./backend/newpennine-api/node_modules/minipass/dist/commonjs/index.d.ts:        resume(): any;
./backend/newpennine-api/node_modules/minipass/dist/commonjs/index.d.ts:        pipe(...destArgs: any[]): any;
./backend/newpennine-api/node_modules/minipass/dist/commonjs/index.d.ts:    static get isStream(): (s: any) => s is NodeJS.WriteStream | NodeJS.ReadStream | Minipass<any, any, any> | (NodeJS.ReadStream & {
./backend/newpennine-api/node_modules/minipass/dist/commonjs/index.d.ts:        pause(): any;
./backend/newpennine-api/node_modules/minipass/dist/commonjs/index.d.ts:        resume(): any;
./backend/newpennine-api/node_modules/minipass/dist/commonjs/index.d.ts:        pipe(...destArgs: any[]): any;
./backend/newpennine-api/node_modules/minipass/dist/commonjs/index.d.ts:        end(): any;
./backend/newpennine-api/node_modules/minipass/dist/commonjs/index.d.ts:        write(chunk: any, ...args: any[]): any;
./backend/newpennine-api/node_modules/terser/tools/terser.d.ts:    comments?: boolean | 'all' | 'some' | RegExp | ( (node: any, comment: {
./backend/newpennine-api/node_modules/terser/node_modules/commander/typings/index.d.ts:    [key: string]: any;
./backend/newpennine-api/node_modules/terser/node_modules/commander/typings/index.d.ts:     * @param {(...args: any[]) => void} fn
./backend/newpennine-api/node_modules/terser/node_modules/commander/typings/index.d.ts:    action(fn: (...args: any[]) => void): Command;
./backend/newpennine-api/node_modules/terser/node_modules/commander/typings/index.d.ts:     * @param {((arg1: any, arg2: any) => void) | RegExp} [fn] function or default
./backend/newpennine-api/node_modules/terser/node_modules/commander/typings/index.d.ts:    option(flags: string, description?: string, fn?: ((arg1: any, arg2: any) => void) | RegExp, defaultValue?: any): Command;
./backend/newpennine-api/node_modules/terser/node_modules/commander/typings/index.d.ts:    option(flags: string, description?: string, defaultValue?: any): Command;
./backend/newpennine-api/node_modules/terser/node_modules/commander/typings/index.d.ts:     * @returns {{[key: string]: any}}
./backend/newpennine-api/node_modules/terser/node_modules/commander/typings/index.d.ts:    opts(): { [key: string]: any };
./backend/newpennine-api/node_modules/@jridgewell/sourcemap-codec/src/scopes.ts:const EMPTY: any[] = [];
./backend/newpennine-api/node_modules/@jridgewell/trace-mapping/src/trace-mapping.ts:    if (!isString && (map as unknown as { _decodedMemo: any })._decodedMemo) return map as TraceMap;
./backend/newpennine-api/node_modules/@jridgewell/source-map/src/source-map.ts:    context?: any /*, order?: number*/,
./backend/newpennine-api/node_modules/seek-bzip/node_modules/commander/typings/index.d.ts:    [key: string]: any; // options as properties
./backend/newpennine-api/node_modules/seek-bzip/node_modules/commander/typings/index.d.ts:    action(fn: (...args: any[]) => void | Promise<void>): this;
./backend/newpennine-api/node_modules/seek-bzip/node_modules/commander/typings/index.d.ts:    opts(): { [key: string]: any };
./backend/newpennine-api/node_modules/seek-bzip/node_modules/commander/typings/index.d.ts:    on(event: string | symbol, listener: (...args: any[]) => void): this;
./backend/newpennine-api/node_modules/piscina/test/test-resourcelimits.ts:  const limits : any = worker.options.resourceLimits;
./backend/newpennine-api/node_modules/piscina/test/move-test.ts:  const obj : any = {
./backend/newpennine-api/node_modules/piscina/test/move-test.ts:  const obj : any = {
./backend/newpennine-api/node_modules/piscina/dist/types.d.ts:    task: any;
./backend/newpennine-api/node_modules/piscina/dist/types.d.ts:    result: any;
./backend/newpennine-api/node_modules/piscina/dist/common.d.ts:export declare function isMovable(value: any): boolean;
./backend/newpennine-api/node_modules/piscina/dist/task_queue/index.d.ts:export type TaskCallback = (err: Error, result: any) => void;
./backend/newpennine-api/node_modules/piscina/dist/task_queue/index.d.ts:    postMessage: (value: any, transferList: infer T) => any;
./backend/newpennine-api/node_modules/piscina/dist/task_queue/index.d.ts:    task: any;
./backend/newpennine-api/node_modules/piscina/dist/task_queue/index.d.ts:    constructor(task: any, transferList: TransferList, filename: string, name: string, callback: TaskCallback, abortSignal: AbortSignalAny | null, triggerAsyncId: number);
./backend/newpennine-api/node_modules/piscina/dist/task_queue/index.d.ts:    releaseTask(): any;
./backend/newpennine-api/node_modules/piscina/dist/task_queue/index.d.ts:    done(err: Error | null, result?: any): void;
./backend/newpennine-api/node_modules/piscina/dist/index.d.ts:    workerData?: any;
./backend/newpennine-api/node_modules/piscina/dist/index.d.ts:    get waitTime(): any;
./backend/newpennine-api/node_modules/piscina/dist/index.d.ts:    get runTime(): any;
./backend/newpennine-api/node_modules/piscina/dist/index.d.ts:    static get workerData(): any;
./backend/newpennine-api/node_modules/piscina/dist/index.d.ts:export declare const workerData: any;
./backend/newpennine-api/node_modules/piscina/src/common.ts:export function isMovable (value: any): boolean {
./backend/newpennine-api/node_modules/piscina/src/task_queue/index.ts:export type TaskCallback = (err: Error, result: any) => void
./backend/newpennine-api/node_modules/piscina/src/task_queue/index.ts:  postMessage: (value: any, transferList: infer T) => any
./backend/newpennine-api/node_modules/piscina/src/task_queue/index.ts:    task : any;
./backend/newpennine-api/node_modules/piscina/src/task_queue/index.ts:      task : any,
./backend/newpennine-api/node_modules/piscina/src/task_queue/index.ts:    releaseTask () : any {
./backend/newpennine-api/node_modules/piscina/src/task_queue/index.ts:    done (err : Error | null, result? : any) : void {
./backend/newpennine-api/node_modules/piscina/src/types.ts:  task: any
./backend/newpennine-api/node_modules/piscina/src/types.ts:  result: any
./backend/newpennine-api/node_modules/piscina/src/index.ts:  workerData? : any,
./backend/newpennine-api/node_modules/piscina/src/index.ts:    function onEventMessage (message: any) {
./backend/newpennine-api/node_modules/piscina/src/index.ts:    worker.on('message', (message : any) => {
./backend/newpennine-api/node_modules/piscina/src/index.ts:    task : any,
./backend/newpennine-api/node_modules/piscina/src/index.ts:    let resolve : (result : any) => void;
./backend/newpennine-api/node_modules/piscina/src/index.ts:      (err : Error | null, result : any) => {
./backend/newpennine-api/node_modules/piscina/src/index.ts:  runTask (task : T, transferList? : any, filename? : any, signal? : any): Promise<R> {
./backend/newpennine-api/node_modules/piscina/src/index.ts:  get waitTime () : any {
./backend/newpennine-api/node_modules/piscina/src/index.ts:  get runTime () : any {
./backend/newpennine-api/node_modules/piscina/src/index.ts:  static get workerData () : any {
./backend/newpennine-api/node_modules/piscina/src/worker.ts:    let transferList : any[] = [];
./backend/newpennine-api/node_modules/fastq/test/example.ts:function worker(task: any, cb: fastq.done) {
./backend/newpennine-api/node_modules/fastq/test/example.ts:async function asyncWorker(task: any) {
./backend/newpennine-api/node_modules/fastq/index.d.ts:    pause(): any
./backend/newpennine-api/node_modules/fastq/index.d.ts:    resume(): any
./backend/newpennine-api/node_modules/fastq/index.d.ts:    kill(): any
./backend/newpennine-api/node_modules/fastq/index.d.ts:    killAndDrain(): any
./backend/newpennine-api/node_modules/fastq/index.d.ts:    drain(): any
./backend/newpennine-api/node_modules/@bcoe/v8-coverage/gulpfile.ts:const libTasks: any = registerLibTasks(gulp, lib);
./backend/newpennine-api/node_modules/ajv/lib/ajv.d.ts:    validate(schemaKeyRef: object | string | boolean, data: any): boolean | PromiseLike<any>;
./backend/newpennine-api/node_modules/ajv/lib/ajv.d.ts:    log(...args: any[]): any;
./backend/newpennine-api/node_modules/ajv/lib/ajv.d.ts:    warn(...args: any[]): any;
./backend/newpennine-api/node_modules/ajv/lib/ajv.d.ts:    error(...args: any[]): any;
./backend/newpennine-api/node_modules/ajv/lib/ajv.d.ts:      data: any,
./backend/newpennine-api/node_modules/ajv/lib/ajv.d.ts:    compile?: (schema: any, parentSchema: object, it: CompilationContext) => ValidateFunction;
./backend/newpennine-api/node_modules/ajv/lib/ajv.d.ts:    macro?: (schema: any, parentSchema: object, it: CompilationContext) => object | boolean;
./backend/newpennine-api/node_modules/ajv/lib/ajv.d.ts:    inline?: (it: CompilationContext, keyword: string, schema: any, parentSchema: object) => string;
./backend/newpennine-api/node_modules/ajv/lib/ajv.d.ts:    schema: any;
./backend/newpennine-api/node_modules/ajv/lib/ajv.d.ts:      copy(obj: any, target?: any): any;
./backend/newpennine-api/node_modules/ajv/lib/ajv.d.ts:      equal(obj: any, target: any): boolean;
./backend/newpennine-api/node_modules/ajv/lib/ajv.d.ts:      schemaHasRules(schema: object, rules: any): string;
./backend/newpennine-api/node_modules/ajv/lib/ajv.d.ts:      schema: any,
./backend/newpennine-api/node_modules/ajv/lib/ajv.d.ts:      data: any,
./backend/newpennine-api/node_modules/ajv/lib/ajv.d.ts:    schema?: any;
./backend/newpennine-api/node_modules/ajv/lib/ajv.d.ts:    data?: any;
./backend/newpennine-api/node_modules/jest-diff/build/index.d.ts:  a: any,
./backend/newpennine-api/node_modules/jest-diff/build/index.d.ts:  b: any,
./backend/newpennine-api/node_modules/fflate/esm/browser.d.ts:    push(chunk: Uint8Array, final?: boolean): any;
./backend/newpennine-api/node_modules/fflate/lib/index.d.ts:    push(chunk: Uint8Array, final?: boolean): any;
./backend/newpennine-api/node_modules/fast-deep-equal/react.d.ts:declare const equal: (a: any, b: any) => boolean;
./backend/newpennine-api/node_modules/fast-deep-equal/es6/react.d.ts:declare const equal: (a: any, b: any) => boolean;
./backend/newpennine-api/node_modules/fast-deep-equal/es6/index.d.ts:declare const equal: (a: any, b: any) => boolean;
./backend/newpennine-api/node_modules/fast-deep-equal/index.d.ts:    const equal: (a: any, b: any) => boolean;
./backend/newpennine-api/node_modules/reflect-metadata/standalone.d.ts:    function metadata(metadataKey: any, metadataValue: any): {
./backend/newpennine-api/node_modules/reflect-metadata/standalone.d.ts:    function defineMetadata(metadataKey: any, metadataValue: any, target: Object): void;
./backend/newpennine-api/node_modules/reflect-metadata/standalone.d.ts:    function defineMetadata(metadataKey: any, metadataValue: any, target: Object, propertyKey: string | symbol): void;
./backend/newpennine-api/node_modules/reflect-metadata/standalone.d.ts:    function hasMetadata(metadataKey: any, target: Object): boolean;
./backend/newpennine-api/node_modules/reflect-metadata/standalone.d.ts:    function hasMetadata(metadataKey: any, target: Object, propertyKey: string | symbol): boolean;
./backend/newpennine-api/node_modules/reflect-metadata/standalone.d.ts:    function hasOwnMetadata(metadataKey: any, target: Object): boolean;
./backend/newpennine-api/node_modules/reflect-metadata/standalone.d.ts:    function hasOwnMetadata(metadataKey: any, target: Object, propertyKey: string | symbol): boolean;
./backend/newpennine-api/node_modules/reflect-metadata/standalone.d.ts:    function getMetadata(metadataKey: any, target: Object): any;
./backend/newpennine-api/node_modules/reflect-metadata/standalone.d.ts:    function getMetadata(metadataKey: any, target: Object, propertyKey: string | symbol): any;
./backend/newpennine-api/node_modules/reflect-metadata/standalone.d.ts:    function getOwnMetadata(metadataKey: any, target: Object): any;
./backend/newpennine-api/node_modules/reflect-metadata/standalone.d.ts:    function getOwnMetadata(metadataKey: any, target: Object, propertyKey: string | symbol): any;
./backend/newpennine-api/node_modules/reflect-metadata/standalone.d.ts:    function getMetadataKeys(target: Object): any[];
./backend/newpennine-api/node_modules/reflect-metadata/standalone.d.ts:    function getMetadataKeys(target: Object, propertyKey: string | symbol): any[];
./backend/newpennine-api/node_modules/reflect-metadata/standalone.d.ts:    function getOwnMetadataKeys(target: Object): any[];
./backend/newpennine-api/node_modules/reflect-metadata/standalone.d.ts:    function getOwnMetadataKeys(target: Object, propertyKey: string | symbol): any[];
./backend/newpennine-api/node_modules/reflect-metadata/standalone.d.ts:    function deleteMetadata(metadataKey: any, target: Object): boolean;
./backend/newpennine-api/node_modules/reflect-metadata/standalone.d.ts:    function deleteMetadata(metadataKey: any, target: Object, propertyKey: string | symbol): boolean;
./backend/newpennine-api/node_modules/reflect-metadata/no-conflict.d.ts:export declare function metadata(metadataKey: any, metadataValue: any): {
./backend/newpennine-api/node_modules/reflect-metadata/no-conflict.d.ts:export declare function defineMetadata(metadataKey: any, metadataValue: any, target: Object): void;
./backend/newpennine-api/node_modules/reflect-metadata/no-conflict.d.ts:export declare function defineMetadata(metadataKey: any, metadataValue: any, target: Object, propertyKey: string | symbol): void;
./backend/newpennine-api/node_modules/reflect-metadata/no-conflict.d.ts:export declare function hasMetadata(metadataKey: any, target: Object): boolean;
./backend/newpennine-api/node_modules/reflect-metadata/no-conflict.d.ts:export declare function hasMetadata(metadataKey: any, target: Object, propertyKey: string | symbol): boolean;
./backend/newpennine-api/node_modules/reflect-metadata/no-conflict.d.ts:export declare function hasOwnMetadata(metadataKey: any, target: Object): boolean;
./backend/newpennine-api/node_modules/reflect-metadata/no-conflict.d.ts:export declare function hasOwnMetadata(metadataKey: any, target: Object, propertyKey: string | symbol): boolean;
./backend/newpennine-api/node_modules/reflect-metadata/no-conflict.d.ts:export declare function getMetadata(metadataKey: any, target: Object): any;
./backend/newpennine-api/node_modules/reflect-metadata/no-conflict.d.ts:export declare function getMetadata(metadataKey: any, target: Object, propertyKey: string | symbol): any;
./backend/newpennine-api/node_modules/reflect-metadata/no-conflict.d.ts:export declare function getOwnMetadata(metadataKey: any, target: Object): any;
./backend/newpennine-api/node_modules/reflect-metadata/no-conflict.d.ts:export declare function getOwnMetadata(metadataKey: any, target: Object, propertyKey: string | symbol): any;
./backend/newpennine-api/node_modules/reflect-metadata/no-conflict.d.ts:export declare function getMetadataKeys(target: Object): any[];
./backend/newpennine-api/node_modules/reflect-metadata/no-conflict.d.ts:export declare function getMetadataKeys(target: Object, propertyKey: string | symbol): any[];
./backend/newpennine-api/node_modules/reflect-metadata/no-conflict.d.ts:export declare function getOwnMetadataKeys(target: Object): any[];
./backend/newpennine-api/node_modules/reflect-metadata/no-conflict.d.ts:export declare function getOwnMetadataKeys(target: Object, propertyKey: string | symbol): any[];
./backend/newpennine-api/node_modules/reflect-metadata/no-conflict.d.ts:export declare function deleteMetadata(metadataKey: any, target: Object): boolean;
./backend/newpennine-api/node_modules/reflect-metadata/no-conflict.d.ts:export declare function deleteMetadata(metadataKey: any, target: Object, propertyKey: string | symbol): boolean;
./backend/newpennine-api/node_modules/reflect-metadata/index.d.ts:        function metadata(metadataKey: any, metadataValue: any): {
./backend/newpennine-api/node_modules/reflect-metadata/index.d.ts:        function defineMetadata(metadataKey: any, metadataValue: any, target: Object): void;
./backend/newpennine-api/node_modules/reflect-metadata/index.d.ts:        function defineMetadata(metadataKey: any, metadataValue: any, target: Object, propertyKey: string | symbol): void;
./backend/newpennine-api/node_modules/reflect-metadata/index.d.ts:        function hasMetadata(metadataKey: any, target: Object): boolean;
./backend/newpennine-api/node_modules/reflect-metadata/index.d.ts:        function hasMetadata(metadataKey: any, target: Object, propertyKey: string | symbol): boolean;
./backend/newpennine-api/node_modules/reflect-metadata/index.d.ts:        function hasOwnMetadata(metadataKey: any, target: Object): boolean;
./backend/newpennine-api/node_modules/reflect-metadata/index.d.ts:        function hasOwnMetadata(metadataKey: any, target: Object, propertyKey: string | symbol): boolean;
./backend/newpennine-api/node_modules/reflect-metadata/index.d.ts:        function getMetadata(metadataKey: any, target: Object): any;
./backend/newpennine-api/node_modules/reflect-metadata/index.d.ts:        function getMetadata(metadataKey: any, target: Object, propertyKey: string | symbol): any;
./backend/newpennine-api/node_modules/reflect-metadata/index.d.ts:        function getOwnMetadata(metadataKey: any, target: Object): any;
./backend/newpennine-api/node_modules/reflect-metadata/index.d.ts:        function getOwnMetadata(metadataKey: any, target: Object, propertyKey: string | symbol): any;
./backend/newpennine-api/node_modules/reflect-metadata/index.d.ts:        function getMetadataKeys(target: Object): any[];
./backend/newpennine-api/node_modules/reflect-metadata/index.d.ts:        function getMetadataKeys(target: Object, propertyKey: string | symbol): any[];
./backend/newpennine-api/node_modules/reflect-metadata/index.d.ts:        function getOwnMetadataKeys(target: Object): any[];
./backend/newpennine-api/node_modules/reflect-metadata/index.d.ts:        function getOwnMetadataKeys(target: Object, propertyKey: string | symbol): any[];
./backend/newpennine-api/node_modules/reflect-metadata/index.d.ts:        function deleteMetadata(metadataKey: any, target: Object): boolean;
./backend/newpennine-api/node_modules/reflect-metadata/index.d.ts:        function deleteMetadata(metadataKey: any, target: Object, propertyKey: string | symbol): boolean;
./backend/newpennine-api/node_modules/buffer/index.d.ts:    toJSON(): { type: 'Buffer', data: any[] };
./backend/newpennine-api/node_modules/buffer/index.d.ts:    fill(value: any, offset?: number, end?: number): this;
./backend/newpennine-api/node_modules/buffer/index.d.ts:    constructor (array: any[]);
./backend/newpennine-api/node_modules/buffer/index.d.ts:    static from(array: any[]): Buffer;
./backend/newpennine-api/node_modules/buffer/index.d.ts:    static isBuffer(obj: any): obj is Buffer;
./backend/newpennine-api/node_modules/expect/build/index.d.ts:  (this: Context, actual: any, ...expected: Array<any>): ExpectationResult;
./backend/newpennine-api/node_modules/path-scurry/dist/esm/index.d.ts:        [k: string]: any;
./backend/newpennine-api/node_modules/path-scurry/dist/esm/index.d.ts:    [k: string]: any;
./backend/newpennine-api/node_modules/path-scurry/dist/esm/index.d.ts:        [k: string]: any;
./backend/newpennine-api/node_modules/path-scurry/dist/esm/index.d.ts:    [k: string]: any;
./backend/newpennine-api/node_modules/path-scurry/dist/commonjs/index.d.ts:        [k: string]: any;
./backend/newpennine-api/node_modules/path-scurry/dist/commonjs/index.d.ts:    [k: string]: any;
./backend/newpennine-api/node_modules/path-scurry/dist/commonjs/index.d.ts:        [k: string]: any;
./backend/newpennine-api/node_modules/path-scurry/dist/commonjs/index.d.ts:    [k: string]: any;
./backend/newpennine-api/node_modules/path-scurry/node_modules/lru-cache/dist/esm/index.d.ts:        isBackgroundFetch: (p: any) => p is BackgroundFetch<V>;
./backend/newpennine-api/node_modules/path-scurry/node_modules/lru-cache/dist/esm/index.d.ts:        backgroundFetch: (k: K, index: number | undefined, options: LRUCache.FetchOptions<K, V, FC>, context: any) => BackgroundFetch<V>;
./backend/newpennine-api/node_modules/path-scurry/node_modules/lru-cache/dist/esm/index.d.ts:    forEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./backend/newpennine-api/node_modules/path-scurry/node_modules/lru-cache/dist/esm/index.d.ts:    rforEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./backend/newpennine-api/node_modules/path-scurry/node_modules/lru-cache/dist/commonjs/index.d.ts:        isBackgroundFetch: (p: any) => p is BackgroundFetch<V>;
./backend/newpennine-api/node_modules/path-scurry/node_modules/lru-cache/dist/commonjs/index.d.ts:        backgroundFetch: (k: K, index: number | undefined, options: LRUCache.FetchOptions<K, V, FC>, context: any) => BackgroundFetch<V>;
./backend/newpennine-api/node_modules/path-scurry/node_modules/lru-cache/dist/commonjs/index.d.ts:    forEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./backend/newpennine-api/node_modules/path-scurry/node_modules/lru-cache/dist/commonjs/index.d.ts:    rforEach(fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any, thisp?: any): void;
./backend/newpennine-api/node_modules/setprototypeof/index.d.ts:declare function setPrototypeOf(o: any, proto: object | null): any;
./backend/newpennine-api/src/types/class-transformer.d.ts:    newObject: any;
./backend/newpennine-api/src/types/class-transformer.d.ts:    object: any;
./backend/newpennine-api/src/types/class-transformer.d.ts:    type: any;
./backend/newpennine-api/src/types/class-transformer.d.ts:  export function TransformInstanceToPlain(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-transformer.d.ts:  export function TransformPlainToInstance(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-transformer.d.ts:  export function TransformInstanceToInstance(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-transformer.d.ts:    transform(object: any, cls: any, options?: ClassTransformOptions): any;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsString(validationOptions?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsNotEmpty(validationOptions?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsOptional(validationOptions?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsInt(validationOptions?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function Min(min: number, validationOptions?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function Max(max: number, validationOptions?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsArray(validationOptions?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsDateString(validationOptions?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:    validationOptions?: any,
./backend/newpennine-api/src/types/class-validator.d.ts:    options?: any,
./backend/newpennine-api/src/types/class-validator.d.ts:    validationOptions?: any,
./backend/newpennine-api/src/types/class-validator.d.ts:    validationOptions?: any,
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsEnum(entity: any, options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsNumberString(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:    validationOptions?: any,
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsBoolean(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsNumber(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsObject(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsDate(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsDefined(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function ArrayMinSize(min: number, options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function ArrayMaxSize(max: number, options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function ArrayUnique(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function ArrayNotEmpty(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsUUID(version?: any, options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsUrl(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsJSON(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsIP(version?: any, options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsPort(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsAlpha(locale?: any, options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:    locale?: any,
./backend/newpennine-api/src/types/class-validator.d.ts:    options?: any,
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsAscii(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsBase64(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:    options?: any,
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsCreditCard(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsCurrency(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsFQDN(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsFullWidth(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsHalfWidth(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsVariableWidth(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsHexColor(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsHexadecimal(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsISBN(version?: any, options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsISIN(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsISO8601(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsJWT(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsLowercase(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsUppercase(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsMobilePhone(locale?: any, options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsMongoId(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsMultibyte(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsSurrogatePair(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:    options?: any,
./backend/newpennine-api/src/types/class-validator.d.ts:  export function MaxLength(max: number, options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function Contains(seed: string, options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function NotContains(seed: string, options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsEmpty(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function Equals(comparison: any, options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function NotEquals(comparison: any, options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:    options?: any,
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsDivisibleBy(num: number, options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsPositive(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsNegative(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function MinDate(date: Date, options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function MaxDate(date: Date, options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsLatLong(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsLatitude(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsLongitude(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsMilitaryTime(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsHash(algorithm: string, options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsISSN(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsBooleanString(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsBase32(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsBIC(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsBtcAddress(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsDataURI(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsEAN(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsEthereumAddress(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsHSL(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsIBAN(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:    locale?: any,
./backend/newpennine-api/src/types/class-validator.d.ts:    options?: any,
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsISRC(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsLocale(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsMagnetURI(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsMimeType(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsOctal(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:    countryCode?: any,
./backend/newpennine-api/src/types/class-validator.d.ts:    options?: any,
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsPostalCode(locale?: any, options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsRFC3339(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsRgbColor(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsSemVer(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsStrongPassword(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsTimeZone(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsBase58(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsPhoneNumber(region?: any, options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsISO31661Alpha2(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsISO31661Alpha3(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsDecimal(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsMacAddress(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:    options?: any,
./backend/newpennine-api/src/types/class-validator.d.ts:    options?: any,
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsNotEmptyObject(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsInstance(targetType: any, options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function Allow(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function IsDefined(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:    constraintClass: any,
./backend/newpennine-api/src/types/class-validator.d.ts:    validationOptions?: any,
./backend/newpennine-api/src/types/class-validator.d.ts:    condition: any,
./backend/newpennine-api/src/types/class-validator.d.ts:    validationOptions?: any,
./backend/newpennine-api/src/types/class-validator.d.ts:  export function ValidateNested(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function ValidatePromise(options?: any): PropertyDecorator;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function validate(object: any, options?: any): Promise<any[]>;
./backend/newpennine-api/src/types/class-validator.d.ts:    object: any,
./backend/newpennine-api/src/types/class-validator.d.ts:    options?: any,
./backend/newpennine-api/src/types/class-validator.d.ts:  export function validateOrReject(object: any, options?: any): Promise<void>;
./backend/newpennine-api/src/types/class-validator.d.ts:  export function registerSchema(schema: any): void;
./backend/newpennine-api/src/types/class-validator.d.ts:    target?: any;
./backend/newpennine-api/src/types/class-validator.d.ts:    value?: any;
./backend/newpennine-api/src/types/class-validator.d.ts:    constraints?: any;
./backend/newpennine-api/src/types/class-validator.d.ts:    contexts?: any;
./backend/newpennine-api/src/analysis/analysis.service.ts:  private processOrderStats(orders: Record<string, unknown>[]): any {
./backend/newpennine-api/src/analysis/analysis.service.ts:    currentStats: any,
./backend/newpennine-api/src/analysis/analysis.service.ts:    previousStats: any,
./backend/newpennine-api/src/analysis/analysis.service.ts:  private calculateSummaryStats(data: ChartDataPointDto[]): any {
./backend/newpennine-api/src/auth/auth.controller.ts:  async getProfile(@Request() req: any) {
./backend/newpennine-api/src/auth/auth.controller.ts:  async logout(@Request() req: any) {
./backend/newpennine-api/src/auth/auth.controller.ts:  async verifyToken(@Request() req: any) {
./backend/newpennine-api/src/auth/auth.service.ts:  private async mapAuthUserToDto(authUser: any): Promise<UserDto> {
./backend/newpennine-api/src/auth/auth.service.ts:  private mapDbUserToDto(dbUser: any): UserDto {
./backend/newpennine-api/src/auth/guards/jwt-auth.guard.ts:  handleRequest(err: any, user: any, info: any, context: ExecutionContext) {
./backend/newpennine-api/src/transfers/transfers.service.ts:      const applyFilters = (query: any) => {
./backend/newpennine-api/src/inventory/dto/inventory-response.dto.ts:  pallet_info?: any;
./backend/newpennine-api/src/history/dto/history-response.dto.ts:  previousState?: any;
./backend/newpennine-api/src/history/dto/history-response.dto.ts:  newState?: any;
./backend/newpennine-api/src/history/dto/history-response.dto.ts:  metadata?: any;
./backend/newpennine-api/src/history/history.service.ts:      previousState: any;
./backend/newpennine-api/src/history/history.service.ts:      newState: any;
./backend/newpennine-api/src/history/history.controller.ts:      previousState?: any;
./backend/newpennine-api/src/history/history.controller.ts:      newState?: any;
./backend/newpennine-api/src/history/history.controller.ts:      metadata?: any;
./backend/newpennine-api/src/pallets/dto/pallet-response.dto.ts:  current_inventory?: any;
./backend/newpennine-api/src/rpc/dto/rpc-query.dto.ts:  params?: any;
./backend/newpennine-api/src/rpc/rpc.service.ts:  private calculateSummary(historyData: Record<string, unknown>[]): any {
./backend/newpennine-api/src/widgets/cache/widget-cache.service.ts:  generateKey(endpoint: string, params?: any): string {
./.next/types/app/access/page.ts:  metadata?: any
./.next/types/app/access/page.ts:  viewport?: any
./.next/types/app/access/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/access/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/print-label/page.ts:  metadata?: any
./.next/types/app/print-label/page.ts:  viewport?: any
./.next/types/app/print-label/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/print-label/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/print-label/html-preview/page.ts:  metadata?: any
./.next/types/app/print-label/html-preview/page.ts:  viewport?: any
./.next/types/app/print-label/html-preview/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/print-label/html-preview/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/print-label/html-preview/layout.ts:  metadata?: any
./.next/types/app/print-label/html-preview/layout.ts:  viewport?: any
./.next/types/app/print-label/html-preview/layout.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/print-label/html-preview/layout.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/print-label/layout.ts:  metadata?: any
./.next/types/app/print-label/layout.ts:  viewport?: any
./.next/types/app/print-label/layout.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/print-label/layout.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/print-label/pdf-review/page.ts:  metadata?: any
./.next/types/app/print-label/pdf-review/page.ts:  viewport?: any
./.next/types/app/print-label/pdf-review/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/print-label/pdf-review/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/stock-transfer/page.ts:  metadata?: any
./.next/types/app/stock-transfer/page.ts:  viewport?: any
./.next/types/app/stock-transfer/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/stock-transfer/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/admin/error-handling-demo/page.ts:  metadata?: any
./.next/types/app/admin/error-handling-demo/page.ts:  viewport?: any
./.next/types/app/admin/error-handling-demo/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/admin/error-handling-demo/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/admin/product-update-demo/page.ts:  metadata?: any
./.next/types/app/admin/product-update-demo/page.ts:  viewport?: any
./.next/types/app/admin/product-update-demo/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/admin/product-update-demo/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/admin/[theme]/page.ts:  metadata?: any
./.next/types/app/admin/[theme]/page.ts:  viewport?: any
./.next/types/app/admin/[theme]/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/admin/[theme]/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/admin/page.ts:  metadata?: any
./.next/types/app/admin/page.ts:  viewport?: any
./.next/types/app/admin/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/admin/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/admin/stock-count/page.ts:  metadata?: any
./.next/types/app/admin/stock-count/page.ts:  viewport?: any
./.next/types/app/admin/stock-count/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/admin/stock-count/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/admin/layout.ts:  metadata?: any
./.next/types/app/admin/layout.ts:  viewport?: any
./.next/types/app/admin/layout.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/admin/layout.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/admin/tech-debt-monitoring/page.ts:  metadata?: any
./.next/types/app/admin/tech-debt-monitoring/page.ts:  viewport?: any
./.next/types/app/admin/tech-debt-monitoring/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/admin/tech-debt-monitoring/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/admin/monitoring/page.ts:  metadata?: any
./.next/types/app/admin/monitoring/page.ts:  viewport?: any
./.next/types/app/admin/monitoring/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/admin/monitoring/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/main-login/change/page.ts:  metadata?: any
./.next/types/app/main-login/change/page.ts:  viewport?: any
./.next/types/app/main-login/change/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/main-login/change/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/main-login/reset/page.ts:  metadata?: any
./.next/types/app/main-login/reset/page.ts:  viewport?: any
./.next/types/app/main-login/reset/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/main-login/reset/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/main-login/register/page.ts:  metadata?: any
./.next/types/app/main-login/register/page.ts:  viewport?: any
./.next/types/app/main-login/register/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/main-login/register/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/main-login/page.ts:  metadata?: any
./.next/types/app/main-login/page.ts:  viewport?: any
./.next/types/app/main-login/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/main-login/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/camera-debug/page.ts:  metadata?: any
./.next/types/app/camera-debug/page.ts:  viewport?: any
./.next/types/app/camera-debug/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/camera-debug/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/order-loading/page.ts:  metadata?: any
./.next/types/app/order-loading/page.ts:  viewport?: any
./.next/types/app/order-loading/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/order-loading/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/test-performance/page.ts:  metadata?: any
./.next/types/app/test-performance/page.ts:  viewport?: any
./.next/types/app/test-performance/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/test-performance/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/page.ts:  metadata?: any
./.next/types/app/page.ts:  viewport?: any
./.next/types/app/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/new-password/page.ts:  metadata?: any
./.next/types/app/new-password/page.ts:  viewport?: any
./.next/types/app/new-password/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/new-password/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/v1/metrics/database/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/v1/metrics/database/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/v1/metrics/business/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/v1/metrics/business/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/v1/metrics/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/v1/metrics/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/v1/cache/metrics/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/v1/cache/metrics/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/v1/health/deep/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/v1/health/deep/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/v1/health/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/v1/health/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/v1/alerts/config/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/v1/alerts/config/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/v1/alerts/history/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/v1/alerts/history/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/v1/alerts/rules/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/v1/alerts/rules/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/v1/alerts/rules/[id]/test/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/v1/alerts/rules/[id]/test/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/v1/alerts/rules/[id]/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/v1/alerts/rules/[id]/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/v1/alerts/notifications/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/v1/alerts/notifications/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/check-file-exists/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/check-file-exists/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/clear-cache/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/clear-cache/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/analyze-order-pdf-assistant/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/analyze-order-pdf-assistant/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/tables/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/tables/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/anomaly-detection/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/anomaly-detection/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/convert-pdf-to-png/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/convert-pdf-to-png/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/print-label-updates/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/print-label-updates/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/health/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/health/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/admin/dashboard/combined-stats/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/admin/dashboard/combined-stats/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/admin/dashboard/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/admin/dashboard/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/admin/dashboard/test-mode-config/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/admin/dashboard/test-mode-config/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/admin/monitoring/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/admin/monitoring/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/upload-pdf/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/upload-pdf/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/auto-reprint-label-v2/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/auto-reprint-label-v2/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/cleanup-pallet-buffer/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/cleanup-pallet-buffer/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/analyze-order-pdf-new/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/analyze-order-pdf-new/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/aco-order-updates/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/aco-order-updates/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/v2/health/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/v2/health/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/print-label-pdf/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/print-label-pdf/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/ask-database/clear-cache/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/ask-database/clear-cache/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/ask-database/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/ask-database/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/pdf-to-images/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/pdf-to-images/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/print-label-html/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/print-label-html/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/inventory/stock-levels/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/inventory/stock-levels/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/upload-file/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/upload-file/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/stock-count/batch-process/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/stock-count/batch-process/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/stock-count/validate/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/stock-count/validate/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/stock-count/scan/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/stock-count/scan/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/stock-count/process/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/stock-count/process/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/monitoring/tech-debt/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/monitoring/tech-debt/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/warehouse/summary/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/warehouse/summary/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/warehouse/recent/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/warehouse/recent/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/avatars/[filename]/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/avatars/[filename]/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/analytics/trends/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/analytics/trends/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/analytics/overview/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/analytics/overview/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/analytics/data-access/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/analytics/data-access/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/reports/transaction/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/reports/transaction/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/reports/stock-take/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/reports/stock-take/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/reports/void-pallet/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/reports/void-pallet/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/reports/aco-order/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/reports/aco-order/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/reports/order-loading/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/reports/order-loading/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/reports/export-all/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/reports/export-all/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/reports/grn/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/reports/grn/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/api/send-order-email/route.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/api/send-order-email/route.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/print-grnlabel/page.ts:  metadata?: any
./.next/types/app/print-grnlabel/page.ts:  viewport?: any
./.next/types/app/print-grnlabel/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/print-grnlabel/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/print-grnlabel/layout.ts:  metadata?: any
./.next/types/app/print-grnlabel/layout.ts:  viewport?: any
./.next/types/app/print-grnlabel/layout.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/print-grnlabel/layout.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/productUpdate/page.ts:  metadata?: any
./.next/types/app/productUpdate/page.ts:  viewport?: any
./.next/types/app/productUpdate/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/productUpdate/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/change-password/page.ts:  metadata?: any
./.next/types/app/change-password/page.ts:  viewport?: any
./.next/types/app/change-password/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/change-password/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./.next/types/app/test-timeline/page.ts:  metadata?: any
./.next/types/app/test-timeline/page.ts:  viewport?: any
./.next/types/app/test-timeline/page.ts:  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
./.next/types/app/test-timeline/page.ts:type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never
./supabase/functions/send-aco-completion-email/index.ts:    let emailData: any
./stories/mocks/unifiedWidgetsMocks.ts:export const createUnifiedMockHook = (mockReturn: any) => {
./stories/mocks/unifiedWidgetsMocks.ts:  return (Story: any, context: any) => {
./stories/UnifiedTableWidget.stories.tsx:  const generateData = (count: number, template: any) => {
./stories/components/UnifiedStatsWidgetMockWrapper.tsx:  data: DatabaseRecord[] | null | { default: any };
./stories/components/UnifiedChartWidgetMockWrapper.tsx:  const renderChart = (chartType: string, chartData: any) => {
./stories/components/UnifiedChartWidgetMockWrapper.tsx:                {data.map((entry: any, index: number) => (
./scripts/check-order-status.ts:        } catch (e: any) {
./scripts/check-order-status.ts:      console.log(`  訂單號: ${orders.map((o: any) => o.order_ref).join(', ')}`);
./scripts/fix-data-mapping-types.ts:      pattern: /\.map\(\(([^:]+): any\) => /g,
./scripts/fix-data-mapping-types.ts:      pattern: /\.filter\(\(([^:]+): any\) => /g,
./scripts/fix-data-mapping-types.ts:      pattern: /\.reduce\(\(([^,]+), ([^:]+): any\) => /g,
./scripts/fix-data-mapping-types.ts:      pattern: /\.forEach\(\(([^:]+): any\) => /g,
./scripts/fix-data-mapping-types.ts:      pattern: /\.find\(\(([^:]+): any\) => /g,
./scripts/fix-data-mapping-types.ts:      pattern: /\.some\(\(([^:]+): any\) => /g,
./scripts/fix-data-mapping-types.ts:      pattern: /\.every\(\(([^:]+): any\) => /g,
./scripts/fix-remaining-typescript-errors.ts:      '.filter(($1: any) => '
./scripts/fix-remaining-typescript-errors.ts:      '.map(($1: any) => '
./scripts/test-phase-1-2.ts:  details?: any;
./scripts/test-phase-1-2.ts:      return Array.from(document.querySelectorAll('button')).map((btn: any) => btn.textContent?.trim());
./scripts/test-phase-1-2.ts:    const passedTests = testResults.filter((r: any) => r.status === 'passed').length;
./scripts/fix-unknown-errors.ts:        const newContent = updatedContent.replace(pattern.pattern, (match: string, ...args: any[]) => {
./scripts/fix-unknown-errors.ts:            return (pattern.replacement as (match: string, ...args: any[]) => string)(match, ...args);
./scripts/fix-specific-types.ts:      /\.sort\(\(a: any, b: any\) => b\.stock_level - a\.stock_level\)/g,
./scripts/capture-layout-baseline.ts:  ${Object.keys(snapshots).map((theme: any) => `
./scripts/fix-final-typescript-errors.ts:      '.filter((u: any) => '
./scripts/replace-any-with-types.ts:        pattern: /: any\[\]/g,
./scripts/replace-any-with-types.ts:        pattern: /: any\s*=/g,
./scripts/replace-any-with-types.ts:        pattern: /\.reduce\(\(acc: any, item: DatabaseRecord\) => /g,
./scripts/list-tables.ts:    tableInfo.filter((t: any) => t.name.startsWith('record_')).forEach(table => {
./scripts/list-tables.ts:    tableInfo.filter((t: any) => t.name.startsWith('data_')).forEach(table => {
./scripts/list-tables.ts:    tableInfo.filter((t: any) => !t.name.startsWith('record_') && !t.name.startsWith('data_')).forEach(table => {
./scripts/list-tables.ts:    const existingTables = tableInfo.filter((t: any) => t.exists);
./scripts/fix-critical-any-types.ts:        pattern: /\.map\(\(product: any\) => /g,
./scripts/fix-critical-any-types.ts:        pattern: /\.map\(\(order: any\) => /g,
./scripts/fix-critical-any-types.ts:        pattern: /\.map\(\(entry: any\) => /g,
./scripts/fix-critical-any-types.ts:        pattern: /\.map\(\(line: any\) => /g,
./scripts/fix-critical-any-types.ts:        pattern: /\.map\(\(l: any\) => /g,
./scripts/fix-critical-any-types.ts:        pattern: /\.map\(\(col: any\) => /g,
./scripts/fix-critical-any-types.ts:        pattern: /\.map\(\(stat: any\) => /g,
./scripts/fix-critical-any-types.ts:        pattern: /\.map\(\(r: any\) => /g,
./scripts/fix-critical-any-types.ts:        pattern: /\.map\(\(i: any\) => /g,
./scripts/fix-critical-any-types.ts:        pattern: /\.map\(\(p: any\) => /g,
./scripts/fix-critical-any-types.ts:        pattern: /\.map\(\(n: any\) => /g,
./scripts/fix-critical-any-types.ts:        pattern: /\.map\(\(s: any\) => /g,
./scripts/fix-critical-any-types.ts:        pattern: /\.map\(\(t: any\) => /g,
./scripts/fix-critical-any-types.ts:        pattern: /\.map\(\(d: any\) => /g,
./scripts/fix-critical-any-types.ts:        pattern: /\.filter\(\(col: any\) => /g,
./scripts/fix-critical-any-types.ts:        pattern: /\.filter\(\(order: any\) => /g,
./scripts/fix-critical-any-types.ts:        pattern: /\.filter\(\(r: any\) => /g,
./scripts/fix-critical-any-types.ts:        pattern: /\.filter\(\(s: any\) => /g,
./scripts/fix-critical-any-types.ts:        pattern: /\.filter\(\(d: any\) => /g,
./scripts/fix-critical-any-types.ts:        pattern: /\.filter\(\(p: any\) => /g,
./scripts/fix-critical-any-types.ts:        pattern: /\.reduce\(\(acc: any, item: DatabaseRecord\) => /g,
./scripts/fix-critical-any-types.ts:        pattern: /\.reduce\(\(total, entry: any\) => /g,
./scripts/fix-critical-any-types.ts:        pattern: /: any\[\]/g,
./scripts/fix-critical-any-types.ts:        pattern: /data\?: any\[\]/g,
./scripts/fix-critical-any-types.ts:        pattern: /mockRPCCall = \(supabase: any, result: DatabaseRecord, error: DatabaseRecord = null\) => /g,
./lib/hardware/services/__tests__/printer-service.test.ts:  let mockIframe: any;
./lib/printing/services/__tests__/unified-printing-service.test.ts:  let mockHAL: any; // TODO: Fix mock HAL type
./lib/printing/services/__tests__/unified-printing-service.test.ts:  let mockHistoryService: any; // TODO: Fix PrintHistoryService mock type
./lib/printing/services/__tests__/unified-printing-service.test.ts:  let mockTemplateService: any; // TODO: Fix PrintTemplateService mock type
./lib/utils/__tests__/exceljs-migration-helper.test.ts:  let mockWorkbook: any;
./lib/utils/__tests__/exceljs-migration-helper.test.ts:  let mockWorksheet: any;
./lib/utils/__tests__/exceljs-migration-helper.test.ts:  let mockRow: any;
./lib/utils/__tests__/exceljs-migration-helper.test.ts:  let mockCell: any;
./lib/utils/__tests__/exceljs-migration-helper.test.ts:  let mockColumn: any;
./lib/utils/__tests__/getUserIdClient.test.ts:  let mockSupabase: any;
./lib/utils/__tests__/getUserId.test.ts:  let mockSupabase: any;
./lib/inventory/__tests__/services.test.ts:  let mockSupabase: any;
./lib/inventory/__tests__/services.test.ts:  let mockSupabase: any;
./lib/inventory/__tests__/services.test.ts:  let mockSupabase: any;
./lib/api/print/PrintLabelAPI.ts:    const jobs: PrintJob[] = (data || []).map((row: any) => ({
./jest-dom.d.ts:      toHaveAttribute(attr: string, value?: any): R;
./e2e/nestjs-api-v112-validation.spec.ts:    data.tests.forEach((test: any) => {
./e2e/admin-themes-remaining-test.spec.ts:        const errorHandler = (msg: any) => {
./e2e/admin-themes-remaining-test.spec.ts:async function detectThemeSpecificFeatures(page: any, theme: string, features: string[]) {
./e2e/admin-themes-remaining-test.spec.ts:async function performDeepThemeTest(page: any, theme: string) {
./e2e/utils/test-data.ts:  networkIdle: async (page: any, timeout = 5000) => {
./e2e/utils/test-data.ts:  imagesLoaded: async (page: any) => {
./e2e/utils/test-data.ts:  animationComplete: async (page: any, selector: string) => {
./e2e/admin-themes-comprehensive-test.spec.ts:        const errorHandler = (msg: any) => {
./e2e/simple-api-routing-test.spec.ts:      (window as any).recordAPIDecision = (decision: any) => {
./e2e/a11y/utils/a11y-helpers.ts:    results: any,
./e2e/a11y/utils/a11y-helpers.ts:      passedRules: results.passes.map((pass: any) => pass.id),
./e2e/a11y/utils/a11y-helpers.ts:      failedRules: results.violations.map((violation: any) => ({
./e2e/a11y/utils/a11y-helpers.ts:        nodes: violation.nodes.map((node: any) => ({
./e2e/a11y/utils/a11y-helpers.ts:  private calculateWCAGCompliance(results: any): A11yTestResult['wcagCompliance'] {
./e2e/a11y/utils/a11y-helpers.ts:      perceivable: violations.filter((v: any) => WCAG_RULES.PERCEIVABLE.includes(v.id)).length,
./e2e/a11y/utils/a11y-helpers.ts:      operable: violations.filter((v: any) => WCAG_RULES.OPERABLE.includes(v.id)).length,
./e2e/a11y/utils/a11y-helpers.ts:      understandable: violations.filter((v: any) => WCAG_RULES.UNDERSTANDABLE.includes(v.id))
./e2e/a11y/utils/a11y-helpers.ts:      robust: violations.filter((v: any) => WCAG_RULES.ROBUST.includes(v.id)).length,
./e2e/basic-performance.spec.ts:  private async generateMarkdownReport(report: any): Promise<void> {
./e2e/simplified-performance.spec.ts:  private async generateMarkdownReport(report: any): Promise<void> {
./e2e/widgets/nestjs-widgets-api-v122.spec.ts:      data.products.forEach((product: any) => {
./e2e/widgets/nestjs-widgets-api-v122.spec.ts:      data.transactions.forEach((transaction: any) => {
./vitest.setup.ts:  default: (fn: any) => fn(),
