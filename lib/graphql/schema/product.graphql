# Product GraphQL Schema
# 產品相關類型定義

type Product {
  # 基本資料 (from data_code)
  code: ID!
  description: String!
  chinesedescription: String
  colour: String
  type: String
  standardQty: Int
  unit: String
  weightPerPiece: Float
  volumePerPiece: Float

  # 關聯數據
  inventory: InventorySummary
  pallets(
    filter: PalletFilterInput
    pagination: PaginationInput
    sort: SortInput
  ): PalletConnection!

  # 統計數據
  statistics: ProductStatistics

  # 元數據
  createdAt: DateTime!
  updatedAt: DateTime!
  isActive: Boolean!
}

# 產品統計
type ProductStatistics {
  totalQuantity: Int!
  totalPallets: Int!
  totalLocations: Int!
  averageStockLevel: Float!
  stockTurnoverRate: Float
  lastMovementDate: DateTime
}

# 產品連接類型（分頁）
type ProductConnection {
  edges: [ProductEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type ProductEdge {
  cursor: String!
  node: Product!
}

# 供應商類型 (from data_supplier)
type Supplier {
  id: ID!
  code: String!
  name: String!
  contact: String
  email: String
  phone: String
  address: String

  # 關聯數據
  products: [Product!]
  grns(filter: GRNFilterInput, pagination: PaginationInput): GRNConnection!

  # 統計
  statistics: SupplierStatistics

  # 元數據
  createdAt: DateTime!
  updatedAt: DateTime!
  isActive: Boolean!
}

type SupplierStatistics {
  totalProducts: Int!
  totalGRNs: Int!
  averageLeadTime: Float
  qualityScore: Float
  onTimeDeliveryRate: Float
}

# 產品規格類型
type ProductSpecification {
  id: ID!
  productCode: String!
  product: Product!

  # 規格詳情
  specifications: JSON!
  images: [String!]
  documents: [String!]

  # 版本控制
  version: Int!
  effectiveDate: DateTime!
  createdBy: User!
  approvedBy: User

  # 元數據
  createdAt: DateTime!
  updatedAt: DateTime!
}

# 過濾輸入
input ProductFilterInput {
  code: String
  description: String
  type: String
  colour: String
  isActive: Boolean
  hasInventory: Boolean
  minQuantity: Int
  maxQuantity: Int
}

input SupplierFilterInput {
  code: String
  name: String
  isActive: Boolean
}

# 查詢
extend type Query {
  # 產品查詢
  product(code: ID!): Product
  products(
    filter: ProductFilterInput
    pagination: PaginationInput
    sort: SortInput
  ): ProductConnection!

  # 產品搜索
  searchProducts(query: String!, limit: Int = 10): [Product!]!

  # 產品統計
  productStatistics(productCode: ID!, dateRange: DateRangeInput): ProductStatistics!

  # 供應商查詢
  supplier(id: ID!): Supplier
  suppliers(filter: SupplierFilterInput, pagination: PaginationInput): [Supplier!]!

  # 產品規格
  productSpecification(productCode: String!, version: Int): ProductSpecification
}

# 變更
extend type Mutation {
  # 產品管理
  createProduct(input: CreateProductInput!): Product!
  updateProduct(code: ID!, input: UpdateProductInput!): Product!
  deactivateProduct(code: ID!): Product!

  # 供應商管理
  createSupplier(input: CreateSupplierInput!): Supplier!
  updateSupplier(id: ID!, input: UpdateSupplierInput!): Supplier!
  deactivateSupplier(id: ID!): Supplier!

  # 產品規格
  uploadProductSpecification(
    productCode: String!
    specifications: JSON!
    images: [String!]
  ): ProductSpecification!
}

# 輸入類型
input CreateProductInput {
  code: String!
  description: String!
  chinesedescription: String
  colour: String
  type: String
  standardQty: Int
  unit: String
  weightPerPiece: Float
  volumePerPiece: Float
}

input UpdateProductInput {
  description: String
  chinesedescription: String
  colour: String
  type: String
  standardQty: Int
  unit: String
  weightPerPiece: Float
  volumePerPiece: Float
}

input CreateSupplierInput {
  code: String!
  name: String!
  contact: String
  email: String
  phone: String
  address: String
}

input UpdateSupplierInput {
  name: String
  contact: String
  email: String
  phone: String
  address: String
}
