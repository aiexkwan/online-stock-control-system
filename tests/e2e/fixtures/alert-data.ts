export const mockAlertData = {
  alerts: [
    {
      id: 'alert-1',
      type: 'SYSTEM_ALERT',
      severity: 'CRITICAL',
      status: 'ACTIVE',
      title: 'Database Connection Failed',
      message: 'Unable to connect to primary database. Failover in progress.',
      source: 'DATABASE_MONITOR',
      createdAt: new Date().toISOString(),
      acknowledgedAt: null,
      acknowledgedBy: null,
      resolvedAt: null,
      resolvedBy: null,
      affectedEntities: [
        {
          entityType: 'DATABASE',
          entityId: 'db-primary',
          entityName: 'Primary Database',
          impact: 'All write operations are affected',
        },
      ],
      actions: [
        {
          id: 'action-1',
          type: 'RESTART_SERVICE',
          label: 'Restart Database',
          confirmRequired: true,
          icon: 'restart',
        },
      ],
      tags: ['critical', 'database', 'infrastructure'],
    },
    {
      id: 'alert-2',
      type: 'INVENTORY_ALERT',
      severity: 'WARNING',
      status: 'ACTIVE',
      title: 'Low Stock Alert',
      message: 'Product SKU-12345 is running low. Only 10 units remaining.',
      source: 'INVENTORY_MONITOR',
      createdAt: new Date(Date.now() - 3600000).toISOString(),
      acknowledgedAt: null,
      acknowledgedBy: null,
      resolvedAt: null,
      resolvedBy: null,
      affectedEntities: [
        {
          entityType: 'PRODUCT',
          entityId: 'SKU-12345',
          entityName: 'Widget Pro Max',
          impact: 'May affect order fulfillment',
        },
      ],
      actions: [
        {
          id: 'action-2',
          type: 'CREATE_PO',
          label: 'Create Purchase Order',
          confirmRequired: false,
          icon: 'document',
        },
      ],
      tags: ['inventory', 'low-stock'],
    },
    {
      id: 'alert-3',
      type: 'ORDER_ALERT',
      severity: 'ERROR',
      status: 'ACKNOWLEDGED',
      title: 'Order Processing Failed',
      message: 'Order #ORD-2024-001 failed during payment processing.',
      source: 'ORDER_PROCESSOR',
      createdAt: new Date(Date.now() - 7200000).toISOString(),
      acknowledgedAt: new Date(Date.now() - 3600000).toISOString(),
      acknowledgedBy: 'admin@example.com',
      resolvedAt: null,
      resolvedBy: null,
      affectedEntities: [
        {
          entityType: 'ORDER',
          entityId: 'ORD-2024-001',
          entityName: 'Customer Order #001',
          impact: 'Order cannot be fulfilled',
        },
      ],
      actions: [
        {
          id: 'action-3',
          type: 'RETRY_PAYMENT',
          label: 'Retry Payment',
          confirmRequired: true,
          icon: 'credit-card',
        },
      ],
      tags: ['order', 'payment', 'error'],
    },
    {
      id: 'alert-4',
      type: 'PERFORMANCE_ALERT',
      severity: 'INFO',
      status: 'RESOLVED',
      title: 'API Response Time Improved',
      message: 'API response time has returned to normal levels.',
      source: 'PERFORMANCE_MONITOR',
      createdAt: new Date(Date.now() - 14400000).toISOString(),
      acknowledgedAt: new Date(Date.now() - 10800000).toISOString(),
      acknowledgedBy: 'admin@example.com',
      resolvedAt: new Date(Date.now() - 7200000).toISOString(),
      resolvedBy: 'system',
      affectedEntities: [],
      actions: [],
      tags: ['performance', 'api', 'resolved'],
    },
  ],
  summary: {
    totalActive: 2,
    totalToday: 4,
    bySeverity: [
      { severity: 'CRITICAL', count: 1, percentage: 25 },
      { severity: 'ERROR', count: 1, percentage: 25 },
      { severity: 'WARNING', count: 1, percentage: 25 },
      { severity: 'INFO', count: 1, percentage: 25 },
    ],
    byType: [
      { type: 'SYSTEM_ALERT', count: 1, percentage: 25 },
      { type: 'INVENTORY_ALERT', count: 1, percentage: 25 },
      { type: 'ORDER_ALERT', count: 1, percentage: 25 },
      { type: 'PERFORMANCE_ALERT', count: 1, percentage: 25 },
    ],
    byStatus: [
      { status: 'ACTIVE', count: 2, percentage: 50 },
      { status: 'ACKNOWLEDGED', count: 1, percentage: 25 },
      { status: 'RESOLVED', count: 1, percentage: 25 },
    ],
    recentCount: 1,
    criticalCount: 1,
  },
  statistics: {
    averageResolutionTime: 180, // minutes
    averageAcknowledgeTime: 60, // minutes
    acknowledgeRate: 0.75,
    resolutionRate: 0.25,
    recurringAlerts: 2,
    trendsData: [
      { timestamp: new Date(Date.now() - 86400000).toISOString(), count: 5, severity: 'INFO' },
      { timestamp: new Date(Date.now() - 72000000).toISOString(), count: 3, severity: 'WARNING' },
      { timestamp: new Date(Date.now() - 57600000).toISOString(), count: 2, severity: 'ERROR' },
      { timestamp: new Date(Date.now() - 43200000).toISOString(), count: 1, severity: 'CRITICAL' },
      { timestamp: new Date(Date.now() - 28800000).toISOString(), count: 4, severity: 'WARNING' },
      { timestamp: new Date(Date.now() - 14400000).toISOString(), count: 2, severity: 'INFO' },
      { timestamp: new Date().toISOString(), count: 4, severity: 'MIXED' },
    ],
    performanceMetrics: {
      mttr: 180, // Mean Time To Resolution
      mtta: 60, // Mean Time To Acknowledge
      alertVolume: 25,
      falsePositiveRate: 0.1,
    },
  },
  pagination: {
    hasNextPage: false,
    hasPreviousPage: false,
    totalCount: 4,
    totalPages: 1,
    currentPage: 1,
  },
};
