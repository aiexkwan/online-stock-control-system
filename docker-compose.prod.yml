version: '3.8'

services:
  # Blue Environment
  newpennine-blue:
    build:
      context: .
      dockerfile: Dockerfile.prod
      args:
        NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
        SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
        NEXT_PUBLIC_SITE_URL: ${NEXT_PUBLIC_SITE_URL}
        NEXT_PUBLIC_ENVIRONMENT: ${NEXT_PUBLIC_ENVIRONMENT}
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    container_name: newpennine-blue
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - NEXT_PUBLIC_SITE_URL=${NEXT_PUBLIC_SITE_URL}
      - NEXT_PUBLIC_ENVIRONMENT=${NEXT_PUBLIC_ENVIRONMENT}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - DEPLOYMENT_COLOR=blue
    networks:
      - newpennine-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "deployment.color=blue"
      - "deployment.version=${DEPLOYMENT_VERSION:-latest}"
      - "deployment.timestamp=${DEPLOYMENT_TIMESTAMP:-$(date +%s)}"

  # Green Environment
  newpennine-green:
    build:
      context: .
      dockerfile: Dockerfile.prod
      args:
        NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
        SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
        NEXT_PUBLIC_SITE_URL: ${NEXT_PUBLIC_SITE_URL}
        NEXT_PUBLIC_ENVIRONMENT: ${NEXT_PUBLIC_ENVIRONMENT}
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    container_name: newpennine-green
    restart: unless-stopped
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - NEXT_PUBLIC_SITE_URL=${NEXT_PUBLIC_SITE_URL}
      - NEXT_PUBLIC_ENVIRONMENT=${NEXT_PUBLIC_ENVIRONMENT}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - DEPLOYMENT_COLOR=green
    networks:
      - newpennine-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "deployment.color=green"
      - "deployment.version=${DEPLOYMENT_VERSION:-latest}"
      - "deployment.timestamp=${DEPLOYMENT_TIMESTAMP:-$(date +%s)}"

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    container_name: newpennine-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./deployment/nginx/ssl:/etc/nginx/ssl:ro
      - ./deployment/nginx/logs:/var/log/nginx
    networks:
      - newpennine-network
    depends_on:
      - newpennine-blue
      - newpennine-green
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "service.type=load-balancer"

  # Redis for session management and caching
  redis:
    image: redis:7-alpine
    container_name: newpennine-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./deployment/redis/redis.conf:/etc/redis/redis.conf:ro
    command: redis-server /etc/redis/redis.conf
    networks:
      - newpennine-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "service.type=cache"

  # Monitoring and Metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: newpennine-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./deployment/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - newpennine-network
    labels:
      - "service.type=monitoring"

  # Health Check Service
  health-checker:
    build:
      context: ./deployment/health-checker
      dockerfile: Dockerfile
    container_name: newpennine-health-checker
    restart: unless-stopped
    environment:
      - BLUE_URL=http://newpennine-blue:3000
      - GREEN_URL=http://newpennine-green:3000
      - NGINX_URL=http://nginx:80
      - CHECK_INTERVAL=30
      - HEALTH_ENDPOINT=/api/v1/health
    networks:
      - newpennine-network
    depends_on:
      - newpennine-blue
      - newpennine-green
      - nginx
    labels:
      - "service.type=health-checker"

networks:
  newpennine-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local