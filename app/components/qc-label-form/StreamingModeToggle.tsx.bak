'use client';

import React from 'react';
import { BoltIcon, CloudArrowDownIcon } from '@heroicons/react/24/outline';

interface StreamingModeToggleProps {
  enabled: boolean;
  onToggle: (enabled: boolean) => void;
  disabled?: boolean;
  className?: string;
}

export const StreamingModeToggle: React.FC<StreamingModeToggleProps> = React.memo(
  ({ enabled, onToggle, disabled = false, className = '' }) => {
    return (
      <div className={`flex items-center gap-3 ${className}`}>
        <label className='relative inline-flex cursor-pointer items-center'>
          <input
            type='checkbox'
            checked={enabled}
            onChange={e => onToggle(e.target.checked)}
            disabled={disabled}
            className='peer sr-only'
          />
          <div className="peer h-6 w-11 rounded-full bg-gray-600 after:absolute after:left-[2px] after:top-[2px] after:h-5 after:w-5 after:rounded-full after:bg-white after:transition-all after:content-[''] peer-checked:bg-blue-600 peer-checked:after:translate-x-full peer-checked:after:border-white peer-focus:outline-none"></div>
        </label>
        <div className='flex items-center gap-2'>
          {enabled ? (
            <>
              <BoltIcon className='h-4 w-4 text-blue-400' />
              <span className='text-sm text-gray-300'>Streaming Mode</span>
            </>
          ) : (
            <>
              <CloudArrowDownIcon className='h-4 w-4 text-gray-400' />
              <span className='text-sm text-gray-400'>Batch Mode</span>
            </>
          )}
        </div>
        {enabled && <div className='ml-2 text-xs text-gray-500'>(Faster for multiple labels)</div>}
      </div>
    );
  }
);

StreamingModeToggle.displayName = 'StreamingModeToggle';
