# GraphQL Code Generator Configuration
overwrite: true

# Supabase GraphQL schema endpoint
schema:
  # 使用本地 schema 文件避免每次都查詢
  - lib/graphql/schema.json
  # 或者直接從 endpoint 獲取
  # - ${NEXT_PUBLIC_SUPABASE_URL}/graphql/v1:
  #     headers:
  #       apikey: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}

# 掃描所有 GraphQL 查詢文件
documents:
  - "lib/graphql/**/*.ts"
  - "app/**/*.{ts,tsx}"
  - "!app/**/*.test.{ts,tsx}"
  - "!app/**/*.stories.{ts,tsx}"
  - "!**/*.generated.{ts,tsx}"

generates:
  # 生成 TypeScript 類型定義
  lib/graphql/generated/types.ts:
    plugins:
      - typescript
      - typescript-operations
    config:
      # 配置 Supabase 的 scalar 類型映射
      scalars:
        UUID: string
        Datetime: string
        Date: string
        Time: string
        JSON: any
        BigInt: number
        BigFloat: number
        Cursor: string
        Opaque: any
      # 其他配置選項
      enumsAsTypes: true
      skipTypename: true
      avoidOptionals: false
      maybeValue: T | null
      namingConvention:
        typeNames: pascal-case#pascalCase
        enumValues: upper-case#upperCase
      
  # 生成 GraphQL schema 文件（用於離線開發）
  lib/graphql/schema.graphql:
    plugins:
      - schema-ast

# 鉤子配置
# hooks:
#   afterAllFileWrite:
#     - npx prettier --write