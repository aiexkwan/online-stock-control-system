============================================================
GraphQL Schema Validation Report
Generated: 2025-07-03T08:44:13.059Z
Schema Version: 1.2.0
============================================================

SUMMARY:
✅ Valid: YES
❌ Errors: 0
⚠️  Warnings: 42
💡 Suggestions: 4

WARNINGS:
⚠️ [PAGINATION] query.getLowStockProducts
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.getPendingOrders
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.getActiveTransfers
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.edges
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.pallets
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.movements
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.movements
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.grnRecords
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.inventoryRecords
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.grnRecords
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.movements
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.orderDetails
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.scans
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.edges
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.edges
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.edges
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.edges
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.edges
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.edges
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.edges
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.lowStockProducts
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.pendingOrders
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.recentMovements
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.stockLevels
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.activeStocktakeSessions
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.bulkCreatePallets
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.edges
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.edges
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.edges
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.edges
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [PAGINATION] query.edges
   List query should use Connection pattern for pagination
   💡 Suggestion: Consider changing return type to a Connection

⚠️ [ERROR_HANDLING] mutation.createProduct(input
   Mutation should return a result union type for proper error handling
   💡 Suggestion: Consider using a Result union type

⚠️ [ERROR_HANDLING] mutation.updateProduct(id
   Mutation should return a result union type for proper error handling
   💡 Suggestion: Consider using a Result union type

⚠️ [ERROR_HANDLING] mutation.deleteProduct(id
   Mutation should return a result union type for proper error handling
   💡 Suggestion: Consider using a Result union type

⚠️ [ERROR_HANDLING] mutation.createPallet(input
   Mutation should return a result union type for proper error handling
   💡 Suggestion: Consider using a Result union type

⚠️ [ERROR_HANDLING] mutation.updatePallet(id
   Mutation should return a result union type for proper error handling
   💡 Suggestion: Consider using a Result union type

⚠️ [ERROR_HANDLING] mutation.voidPallet(id
   Mutation should return a result union type for proper error handling
   💡 Suggestion: Consider using a Result union type

⚠️ [ERROR_HANDLING] mutation.adjustInventory(input
   Mutation should return a result union type for proper error handling
   💡 Suggestion: Consider using a Result union type

⚠️ [ERROR_HANDLING] mutation.transferStock(input
   Mutation should return a result union type for proper error handling
   💡 Suggestion: Consider using a Result union type

⚠️ [ERROR_HANDLING] mutation.processStocktake(input
   Mutation should return a result union type for proper error handling
   💡 Suggestion: Consider using a Result union type

⚠️ [ERROR_HANDLING] mutation.generateGrnLabel(input
   Mutation should return a result union type for proper error handling
   💡 Suggestion: Consider using a Result union type

⚠️ [PERFORMANCE] field.movements
   Field 'movements' may be expensive to resolve
   💡 Suggestion: Consider making this field optional or implementing lazy loading

SUGGESTIONS:
💡 Consider implementing query complexity analysis
💡 Add rate limiting for mutations and subscriptions
💡 Implement field-level caching for frequently accessed data
💡 Use DataLoader pattern to prevent N+1 queries

============================================================