{
  "summary": {
    "totalOccurrences": 809,
    "highPriority": 207,
    "mediumPriority": 260,
    "lowPriority": 342
  },
  "phases": [
    {
      "phase": 1,
      "name": "Error Handling 類型修復",
      "items": [],
      "estimatedTime": "2-3 小時"
    },
    {
      "phase": 2,
      "name": "Data Mapping 類型修復",
      "items": [
        {
          "file": "app/actions/reportActions.ts",
          "line": 76,
          "column": 33,
          "context": ".map((item: { order_ref: any }) => item.order_ref)",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/actions/dashboardActions.ts",
          "line": 104,
          "column": 67,
          "context": "const chartData: StockDistributionData[] = sortedData.map((item: any, index: number) => ({",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/anomaly-detection/route.ts",
          "line": 109,
          "column": 41,
          "context": "const formattedData = data.map((row: any) => row.result || row);",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/anomaly-detection/route.ts",
          "line": 179,
          "column": 41,
          "context": "const formattedData = data.map((row: any) => row.result || row);",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/anomaly-detection/route.ts",
          "line": 238,
          "column": 41,
          "context": "const formattedData = data.map((row: any) => row.result || row);",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/anomaly-detection/route.ts",
          "line": 239,
          "column": 56,
          "context": "const criticalOrders = formattedData.filter((order: any) => order.days_overdue > 14).length;",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/analyze-order-pdf-new/route.ts",
          "line": 242,
          "column": 18,
          "context": ".map((line: any) => line.trim())",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/analyze-order-pdf-new/route.ts",
          "line": 276,
          "column": 19,
          "context": ".map((l: any) => l.trim())",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/analyze-order-pdf-new/route.ts",
          "line": 277,
          "column": 22,
          "context": ".filter((l: any) => l && !l.match(/^(Tel:|Email:|Date:|Account|Customer)/i));",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/analyze-order-pdf-new/route.ts",
          "line": 524,
          "column": 62,
          "context": "const insertData = cachedResult.orderData.map((order: any) => ({",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/analyze-order-pdf-new/route.ts",
          "line": 621,
          "column": 58,
          "context": "orderData: cachedResult.orderData.map((order: any) => ({",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/analyze-order-pdf-new/route.ts",
          "line": 910,
          "column": 47,
          "context": "const insertData = orderData.map((order: any) => {",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/analyze-order-pdf-new/route.ts",
          "line": 1027,
          "column": 43,
          "context": "orderData: orderData.map((order: any) => ({",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/analyze-order-pdf-new/route.ts",
          "line": 1071,
          "column": 56,
          "context": "const acoInsertData = acoRecords.map((record: any) => ({",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/analyze-order-pdf-assistant/route.ts",
          "line": 117,
          "column": 54,
          "context": "const orderRecords = orderData.products.map((product: any) => {",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/analyze-order-pdf-assistant/route.ts",
          "line": 190,
          "column": 50,
          "context": "const acoProducts = orderData.products.filter((p: any) => ACO_PRODUCT_CODES.includes(p.product_code));",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/analyze-order-pdf-assistant/route.ts",
          "line": 193,
          "column": 47,
          "context": "const acoRecords = acoProducts.map((product: any) => ({",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/analyze-order-pdf-assistant/route.ts",
          "line": 315,
          "column": 48,
          "context": "orderData: orderData.products.map((product: any) => ({",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/analyze-order-pdf-assistant/route.ts",
          "line": 384,
          "column": 78,
          "context": "const cachedExtractedData = cachedResult.orderData.products.map((product: any) => ({",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/analyze-order-pdf-assistant/route.ts",
          "line": 495,
          "column": 57,
          "context": "const extractedData = orderData.products.map((product: any) => ({",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/admin/utils/performanceTestBatchQuery.ts",
          "line": 60,
          "column": 58,
          "context": "const networkBytes = newEntries.reduce((total, entry: any) => {",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/admin/utils/performanceTestBatchQuery.ts",
          "line": 125,
          "column": 56,
          "context": "const networkBytes = newEntries.reduce((total, entry: any) => {",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/components/reports/generators/ExcelGeneratorNew.ts",
          "line": 162,
          "column": 40,
          "context": "worksheet.columns = columns.map((col: any) => ({",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/components/reports/generators/CsvGenerator.ts",
          "line": 63,
          "column": 20,
          "context": ".filter((col: any) => !col.exportOnly) // 排除僅導出列",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/components/reports/generators/CsvGenerator.ts",
          "line": 64,
          "column": 17,
          "context": ".map((col: any) => this.escapeCSV(col.label));",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/components/reports/generators/CsvGenerator.ts",
          "line": 70,
          "column": 22,
          "context": ".filter((col: any) => !col.exportOnly)",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/components/reports/generators/CsvGenerator.ts",
          "line": 71,
          "column": 19,
          "context": ".map((col: any) => {",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/components/reports/dataSources/GrnDataSource.ts",
          "line": 35,
          "column": 36,
          "context": "const grouped = data.reduce((acc: any, item: any) => {",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/components/reports/dataSources/GrnDataSource.ts",
          "line": 35,
          "column": 47,
          "context": "const grouped = data.reduce((acc: any, item: any) => {",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/v1/metrics/route.ts",
          "line": 25,
          "column": 54,
          "context": "const versionDistribution = versionStats.map((stat: any) => ({",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/reports/transaction/route.ts",
          "line": 56,
          "column": 43,
          "context": "const transfers = data.map((transaction: any) => ({",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/reports/transaction/route.ts",
          "line": 70,
          "column": 29,
          "context": "const dates = data.map((t: any) => new Date(t.tran_date)).filter((d: any) => !isNaN(d.getTime()));",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/reports/transaction/route.ts",
          "line": 70,
          "column": 71,
          "context": "const dates = data.map((t: any) => new Date(t.tran_date)).filter((d: any) => !isNaN(d.getTime()));",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/reports/transaction/route.ts",
          "line": 72,
          "column": 56,
          "context": "dates.length > 0 ? format(Math.min(...dates.map((d: any) => d.getTime())), 'yyyy-MM-dd') : '';",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/reports/transaction/route.ts",
          "line": 74,
          "column": 56,
          "context": "dates.length > 0 ? format(Math.max(...dates.map((d: any) => d.getTime())), 'yyyy-MM-dd') : '';",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/reports/order-loading/route.ts",
          "line": 47,
          "column": 28,
          "context": "body: records.map((r: any) => [",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/inventory/stock-levels/route.ts",
          "line": 65,
          "column": 47,
          "context": "const items = (products || []).map((product: any) => ({",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/inventory/stock-levels/route.ts",
          "line": 77,
          "column": 47,
          "context": "const uniqueProducts = new Set(items.map((i: any) => i.productCode));",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/admin/hooks/server/prefetch.server.ts",
          "line": 51,
          "column": 38,
          "context": "const records = data.map((item: any) => ({",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/admin/hooks/server/prefetch.server.ts",
          "line": 55,
          "column": 65,
          "context": "const totalQuantity = records.reduce((sum: number, record: any) => sum + record.quantity, 0);",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/admin/hooks/server/prefetch.server.ts",
          "line": 140,
          "column": 46,
          "context": "const records = data.map((item: any) => ({",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/admin/hooks/server/prefetch.server.ts",
          "line": 144,
          "column": 73,
          "context": "const totalQuantity = records.reduce((sum: number, record: any) => sum + record.quantity, 0);",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/v1/metrics/database/route.ts",
          "line": 152,
          "column": 51,
          "context": "const slowQueriesCount = queryResults.filter((r: any) => r.duration > 1000).length;",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/v1/metrics/business/route.ts",
          "line": 128,
          "column": 64,
          "context": "const totalProducts = topProducts?.reduce((sum: number, item: any) => sum + item.count, 0) || 0;",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/v1/metrics/business/route.ts",
          "line": 270,
          "column": 65,
          "context": "const totalOrders = ordersByStatus?.reduce((sum: number, item: any) => sum + item.count, 0) || 0;",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/v1/health/deep/route.ts",
          "line": 111,
          "column": 42,
          "context": "const successCount = results.filter((r: any) => (r as { status: string }).status === 'fulfilled').length;",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/v1/health/deep/route.ts",
          "line": 270,
          "column": 46,
          "context": "const healthyServices = services.filter((s: any) => (s as { status: string }).status === 'healthy').length;",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/v1/health/deep/route.ts",
          "line": 271,
          "column": 47,
          "context": "const degradedServices = services.filter((s: any) => (s as { status: string }).status === 'degraded').length;",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/v1/health/deep/route.ts",
          "line": 272,
          "column": 48,
          "context": "const unhealthyServices = services.filter((s: any) => (s as { status: string }).status === 'unhealthy').length;",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        },
        {
          "file": "app/api/v1/alerts/rules/route.ts",
          "line": 168,
          "column": 51,
          "context": "notifications: validated.notifications.map((n: any) => ({",
          "category": "data-mapping",
          "config": {
            "priority": "high",
            "refactorType": "data-mapping",
            "suggestedType": "Record<string, unknown> | T[]",
            "complexity": "medium"
          }
        }
      ],
      "estimatedTime": "4-6 小時"
    },
    {
      "phase": 3,
      "name": "API Response 類型修復",
      "items": [
        {
          "file": "app/order-loading/page.tsx",
          "line": 434,
          "column": 42,
          "context": "const handleSearchSelect = async (result: any) => {",
          "category": "api-response",
          "config": {
            "priority": "medium",
            "refactorType": "api-response",
            "suggestedType": "ApiResponse<T> | unknown",
            "complexity": "medium"
          }
        },
        {
          "file": "app/void-pallet/hooks/useVoidPallet.tsx",
          "line": 256,
          "column": 31,
          "context": "(voidReason: string, result: any, palletInfo: PalletInfo): boolean => {",
          "category": "api-response",
          "config": {
            "priority": "medium",
            "refactorType": "api-response",
            "suggestedType": "ApiResponse<T> | unknown",
            "complexity": "medium"
          }
        },
        {
          "file": "app/stock-transfer/components/PalletSearchSection.tsx",
          "line": 8,
          "column": 25,
          "context": "onSearchSelect: (result: any) => void;",
          "category": "api-response",
          "config": {
            "priority": "medium",
            "refactorType": "api-response",
            "suggestedType": "ApiResponse<T> | unknown",
            "complexity": "medium"
          }
        },
        {
          "file": "app/order-loading/components/MobileOrderLoading.tsx",
          "line": 44,
          "column": 25,
          "context": "onSearchSelect: (result: any) => void;",
          "category": "api-response",
          "config": {
            "priority": "medium",
            "refactorType": "api-response",
            "suggestedType": "ApiResponse<T> | unknown",
            "complexity": "medium"
          }
        },
        {
          "file": "app/order-loading/components/BatchLoadPanel.tsx",
          "line": 38,
          "column": 34,
          "context": "const handleAddToBatch = (result: any) => {",
          "category": "api-response",
          "config": {
            "priority": "medium",
            "refactorType": "api-response",
            "suggestedType": "ApiResponse<T> | unknown",
            "complexity": "medium"
          }
        },
        {
          "file": "app/components/admin/UniversalChatbot/EnhancedChatInterface.tsx",
          "line": 23,
          "column": 11,
          "context": "data?: any[];",
          "category": "api-response",
          "config": {
            "priority": "medium",
            "refactorType": "api-response",
            "suggestedType": "ApiResponse<T> | unknown",
            "complexity": "medium"
          }
        },
        {
          "file": "app/components/admin/UniversalChatbot/ChatInterface.tsx",
          "line": 23,
          "column": 11,
          "context": "data?: any[];",
          "category": "api-response",
          "config": {
            "priority": "medium",
            "refactorType": "api-response",
            "suggestedType": "ApiResponse<T> | unknown",
            "complexity": "medium"
          }
        },
        {
          "file": "lib/inventory/__tests__/test-helpers.ts",
          "line": 115,
          "column": 36,
          "context": "export const mockRPCCall = (supabase: any, result: any, error: any = null) => {",
          "category": "api-response",
          "config": {
            "priority": "medium",
            "refactorType": "api-response",
            "suggestedType": "ApiResponse<T> | unknown",
            "complexity": "medium"
          }
        },
        {
          "file": "lib/inventory/__tests__/test-helpers.ts",
          "line": 115,
          "column": 49,
          "context": "export const mockRPCCall = (supabase: any, result: any, error: any = null) => {",
          "category": "api-response",
          "config": {
            "priority": "medium",
            "refactorType": "api-response",
            "suggestedType": "ApiResponse<T> | unknown",
            "complexity": "medium"
          }
        },
        {
          "file": "lib/inventory/__tests__/test-helpers.ts",
          "line": 115,
          "column": 61,
          "context": "export const mockRPCCall = (supabase: any, result: any, error: any = null) => {",
          "category": "api-response",
          "config": {
            "priority": "medium",
            "refactorType": "api-response",
            "suggestedType": "ApiResponse<T> | unknown",
            "complexity": "medium"
          }
        },
        {
          "file": "e2e/ab-testing/api-switching-test.spec.ts",
          "line": 76,
          "column": 44,
          "context": "private async measureResponseTime(response: any): Promise<number> {",
          "category": "api-response",
          "config": {
            "priority": "medium",
            "refactorType": "api-response",
            "suggestedType": "ApiResponse<T> | unknown",
            "complexity": "medium"
          }
        }
      ],
      "estimatedTime": "6-8 小時"
    }
  ]
}
